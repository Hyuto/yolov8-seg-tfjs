var aR=Object.defineProperty;var lR=(t,e,n)=>e in t?aR(t,e,{enumerable:!0,configurable:!0,writable:!0,value:n}):t[e]=n;var hl=(t,e,n)=>(lR(t,typeof e!="symbol"?e+"":e,n),n);function uR(t,e){for(var n=0;n<e.length;n++){const s=e[n];if(typeof s!="string"&&!Array.isArray(s)){for(const r in s)if(r!=="default"&&!(r in t)){const o=Object.getOwnPropertyDescriptor(s,r);o&&Object.defineProperty(t,r,o.get?o:{enumerable:!0,get:()=>s[r]})}}}return Object.freeze(Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}))}(function(){const e=document.createElement("link").relList;if(e&&e.supports&&e.supports("modulepreload"))return;for(const r of document.querySelectorAll('link[rel="modulepreload"]'))s(r);new MutationObserver(r=>{for(const o of r)if(o.type==="childList")for(const i of o.addedNodes)i.tagName==="LINK"&&i.rel==="modulepreload"&&s(i)}).observe(document,{childList:!0,subtree:!0});function n(r){const o={};return r.integrity&&(o.integrity=r.integrity),r.referrerpolicy&&(o.referrerPolicy=r.referrerpolicy),r.crossorigin==="use-credentials"?o.credentials="include":r.crossorigin==="anonymous"?o.credentials="omit":o.credentials="same-origin",o}function s(r){if(r.ep)return;r.ep=!0;const o=n(r);fetch(r.href,o)}})();var Ei=typeof globalThis<"u"?globalThis:typeof window<"u"?window:typeof global<"u"?global:typeof self<"u"?self:{};function cR(t){return t&&t.__esModule&&Object.prototype.hasOwnProperty.call(t,"default")?t.default:t}function hR(t){var e=t.default;if(typeof e=="function"){var n=function(){return e.apply(this,arguments)};n.prototype=e.prototype}else n={};return Object.defineProperty(n,"__esModule",{value:!0}),Object.keys(t).forEach(function(s){var r=Object.getOwnPropertyDescriptor(t,s);Object.defineProperty(n,s,r.get?r:{enumerable:!0,get:function(){return t[s]}})}),n}var ps={exports:{}},_e={};/**
 * @license React
 * react.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var ku=Symbol.for("react.element"),dR=Symbol.for("react.portal"),pR=Symbol.for("react.fragment"),fR=Symbol.for("react.strict_mode"),mR=Symbol.for("react.profiler"),gR=Symbol.for("react.provider"),yR=Symbol.for("react.context"),xR=Symbol.for("react.forward_ref"),bR=Symbol.for("react.suspense"),wR=Symbol.for("react.memo"),vR=Symbol.for("react.lazy"),Kb=Symbol.iterator;function kR(t){return t===null||typeof t!="object"?null:(t=Kb&&t[Kb]||t["@@iterator"],typeof t=="function"?t:null)}var Vk={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}},Wk=Object.assign,Uk={};function Ga(t,e,n){this.props=t,this.context=e,this.refs=Uk,this.updater=n||Vk}Ga.prototype.isReactComponent={};Ga.prototype.setState=function(t,e){if(typeof t!="object"&&typeof t!="function"&&t!=null)throw Error("setState(...): takes an object of state variables to update or a function which returns an object of state variables.");this.updater.enqueueSetState(this,t,e,"setState")};Ga.prototype.forceUpdate=function(t){this.updater.enqueueForceUpdate(this,t,"forceUpdate")};function Gk(){}Gk.prototype=Ga.prototype;function Uy(t,e,n){this.props=t,this.context=e,this.refs=Uk,this.updater=n||Vk}var Gy=Uy.prototype=new Gk;Gy.constructor=Uy;Wk(Gy,Ga.prototype);Gy.isPureReactComponent=!0;var qb=Array.isArray,Hk=Object.prototype.hasOwnProperty,Hy={current:null},jk={key:!0,ref:!0,__self:!0,__source:!0};function Kk(t,e,n){var s,r={},o=null,i=null;if(e!=null)for(s in e.ref!==void 0&&(i=e.ref),e.key!==void 0&&(o=""+e.key),e)Hk.call(e,s)&&!jk.hasOwnProperty(s)&&(r[s]=e[s]);var a=arguments.length-2;if(a===1)r.children=n;else if(1<a){for(var l=Array(a),u=0;u<a;u++)l[u]=arguments[u+2];r.children=l}if(t&&t.defaultProps)for(s in a=t.defaultProps,a)r[s]===void 0&&(r[s]=a[s]);return{$$typeof:ku,type:t,key:o,ref:i,props:r,_owner:Hy.current}}function SR(t,e){return{$$typeof:ku,type:t.type,key:e,ref:t.ref,props:t.props,_owner:t._owner}}function jy(t){return typeof t=="object"&&t!==null&&t.$$typeof===ku}function CR(t){var e={"=":"=0",":":"=2"};return"$"+t.replace(/[=:]/g,function(n){return e[n]})}var Xb=/\/+/g;function om(t,e){return typeof t=="object"&&t!==null&&t.key!=null?CR(""+t.key):e.toString(36)}function Ah(t,e,n,s,r){var o=typeof t;(o==="undefined"||o==="boolean")&&(t=null);var i=!1;if(t===null)i=!0;else switch(o){case"string":case"number":i=!0;break;case"object":switch(t.$$typeof){case ku:case dR:i=!0}}if(i)return i=t,r=r(i),t=s===""?"."+om(i,0):s,qb(r)?(n="",t!=null&&(n=t.replace(Xb,"$&/")+"/"),Ah(r,e,n,"",function(u){return u})):r!=null&&(jy(r)&&(r=SR(r,n+(!r.key||i&&i.key===r.key?"":(""+r.key).replace(Xb,"$&/")+"/")+t)),e.push(r)),1;if(i=0,s=s===""?".":s+":",qb(t))for(var a=0;a<t.length;a++){o=t[a];var l=s+om(o,a);i+=Ah(o,e,n,l,r)}else if(l=kR(t),typeof l=="function")for(t=l.call(t),a=0;!(o=t.next()).done;)o=o.value,l=s+om(o,a++),i+=Ah(o,e,n,l,r);else if(o==="object")throw e=String(t),Error("Objects are not valid as a React child (found: "+(e==="[object Object]"?"object with keys {"+Object.keys(t).join(", ")+"}":e)+"). If you meant to render a collection of children, use an array instead.");return i}function th(t,e,n){if(t==null)return t;var s=[],r=0;return Ah(t,s,"","",function(o){return e.call(n,o,r++)}),s}function NR(t){if(t._status===-1){var e=t._result;e=e(),e.then(function(n){(t._status===0||t._status===-1)&&(t._status=1,t._result=n)},function(n){(t._status===0||t._status===-1)&&(t._status=2,t._result=n)}),t._status===-1&&(t._status=0,t._result=e)}if(t._status===1)return t._result.default;throw t._result}var Sn={current:null},_h={transition:null},$R={ReactCurrentDispatcher:Sn,ReactCurrentBatchConfig:_h,ReactCurrentOwner:Hy};_e.Children={map:th,forEach:function(t,e,n){th(t,function(){e.apply(this,arguments)},n)},count:function(t){var e=0;return th(t,function(){e++}),e},toArray:function(t){return th(t,function(e){return e})||[]},only:function(t){if(!jy(t))throw Error("React.Children.only expected to receive a single React element child.");return t}};_e.Component=Ga;_e.Fragment=pR;_e.Profiler=mR;_e.PureComponent=Uy;_e.StrictMode=fR;_e.Suspense=bR;_e.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=$R;_e.cloneElement=function(t,e,n){if(t==null)throw Error("React.cloneElement(...): The argument must be a React element, but you passed "+t+".");var s=Wk({},t.props),r=t.key,o=t.ref,i=t._owner;if(e!=null){if(e.ref!==void 0&&(o=e.ref,i=Hy.current),e.key!==void 0&&(r=""+e.key),t.type&&t.type.defaultProps)var a=t.type.defaultProps;for(l in e)Hk.call(e,l)&&!jk.hasOwnProperty(l)&&(s[l]=e[l]===void 0&&a!==void 0?a[l]:e[l])}var l=arguments.length-2;if(l===1)s.children=n;else if(1<l){a=Array(l);for(var u=0;u<l;u++)a[u]=arguments[u+2];s.children=a}return{$$typeof:ku,type:t.type,key:r,ref:o,props:s,_owner:i}};_e.createContext=function(t){return t={$$typeof:yR,_currentValue:t,_currentValue2:t,_threadCount:0,Provider:null,Consumer:null,_defaultValue:null,_globalName:null},t.Provider={$$typeof:gR,_context:t},t.Consumer=t};_e.createElement=Kk;_e.createFactory=function(t){var e=Kk.bind(null,t);return e.type=t,e};_e.createRef=function(){return{current:null}};_e.forwardRef=function(t){return{$$typeof:xR,render:t}};_e.isValidElement=jy;_e.lazy=function(t){return{$$typeof:vR,_payload:{_status:-1,_result:t},_init:NR}};_e.memo=function(t,e){return{$$typeof:wR,type:t,compare:e===void 0?null:e}};_e.startTransition=function(t){var e=_h.transition;_h.transition={};try{t()}finally{_h.transition=e}};_e.unstable_act=function(){throw Error("act(...) is not supported in production builds of React.")};_e.useCallback=function(t,e){return Sn.current.useCallback(t,e)};_e.useContext=function(t){return Sn.current.useContext(t)};_e.useDebugValue=function(){};_e.useDeferredValue=function(t){return Sn.current.useDeferredValue(t)};_e.useEffect=function(t,e){return Sn.current.useEffect(t,e)};_e.useId=function(){return Sn.current.useId()};_e.useImperativeHandle=function(t,e,n){return Sn.current.useImperativeHandle(t,e,n)};_e.useInsertionEffect=function(t,e){return Sn.current.useInsertionEffect(t,e)};_e.useLayoutEffect=function(t,e){return Sn.current.useLayoutEffect(t,e)};_e.useMemo=function(t,e){return Sn.current.useMemo(t,e)};_e.useReducer=function(t,e,n){return Sn.current.useReducer(t,e,n)};_e.useRef=function(t){return Sn.current.useRef(t)};_e.useState=function(t){return Sn.current.useState(t)};_e.useSyncExternalStore=function(t,e,n){return Sn.current.useSyncExternalStore(t,e,n)};_e.useTransition=function(){return Sn.current.useTransition()};_e.version="18.2.0";(function(t){t.exports=_e})(ps);const IR=cR(ps.exports);var qk={exports:{}},ns={},Xk={exports:{}},Yk={};/**
 * @license React
 * scheduler.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */(function(t){function e(_,z){var j=_.length;_.push(z);e:for(;0<j;){var X=j-1>>>1,Y=_[X];if(0<r(Y,z))_[X]=z,_[j]=Y,j=X;else break e}}function n(_){return _.length===0?null:_[0]}function s(_){if(_.length===0)return null;var z=_[0],j=_.pop();if(j!==z){_[0]=j;e:for(var X=0,Y=_.length,J=Y>>>1;X<J;){var ne=2*(X+1)-1,te=_[ne],re=ne+1,de=_[re];if(0>r(te,j))re<Y&&0>r(de,te)?(_[X]=de,_[re]=j,X=re):(_[X]=te,_[ne]=j,X=ne);else if(re<Y&&0>r(de,j))_[X]=de,_[re]=j,X=re;else break e}}return z}function r(_,z){var j=_.sortIndex-z.sortIndex;return j!==0?j:_.id-z.id}if(typeof performance=="object"&&typeof performance.now=="function"){var o=performance;t.unstable_now=function(){return o.now()}}else{var i=Date,a=i.now();t.unstable_now=function(){return i.now()-a}}var l=[],u=[],c=1,h=null,d=3,p=!1,f=!1,m=!1,y=typeof setTimeout=="function"?setTimeout:null,g=typeof clearTimeout=="function"?clearTimeout:null,x=typeof setImmediate<"u"?setImmediate:null;typeof navigator<"u"&&navigator.scheduling!==void 0&&navigator.scheduling.isInputPending!==void 0&&navigator.scheduling.isInputPending.bind(navigator.scheduling);function b(_){for(var z=n(u);z!==null;){if(z.callback===null)s(u);else if(z.startTime<=_)s(u),z.sortIndex=z.expirationTime,e(l,z);else break;z=n(u)}}function w(_){if(m=!1,b(_),!f)if(n(l)!==null)f=!0,G(k);else{var z=n(u);z!==null&&q(w,z.startTime-_)}}function k(_,z){f=!1,m&&(m=!1,g($),$=-1),p=!0;var j=d;try{for(b(z),h=n(l);h!==null&&(!(h.expirationTime>z)||_&&!F());){var X=h.callback;if(typeof X=="function"){h.callback=null,d=h.priorityLevel;var Y=X(h.expirationTime<=z);z=t.unstable_now(),typeof Y=="function"?h.callback=Y:h===n(l)&&s(l),b(z)}else s(l);h=n(l)}if(h!==null)var J=!0;else{var ne=n(u);ne!==null&&q(w,ne.startTime-z),J=!1}return J}finally{h=null,d=j,p=!1}}var S=!1,N=null,$=-1,T=5,E=-1;function F(){return!(t.unstable_now()-E<T)}function M(){if(N!==null){var _=t.unstable_now();E=_;var z=!0;try{z=N(!0,_)}finally{z?B():(S=!1,N=null)}}else S=!1}var B;if(typeof x=="function")B=function(){x(M)};else if(typeof MessageChannel<"u"){var V=new MessageChannel,W=V.port2;V.port1.onmessage=M,B=function(){W.postMessage(null)}}else B=function(){y(M,0)};function G(_){N=_,S||(S=!0,B())}function q(_,z){$=y(function(){_(t.unstable_now())},z)}t.unstable_IdlePriority=5,t.unstable_ImmediatePriority=1,t.unstable_LowPriority=4,t.unstable_NormalPriority=3,t.unstable_Profiling=null,t.unstable_UserBlockingPriority=2,t.unstable_cancelCallback=function(_){_.callback=null},t.unstable_continueExecution=function(){f||p||(f=!0,G(k))},t.unstable_forceFrameRate=function(_){0>_||125<_?console.error("forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported"):T=0<_?Math.floor(1e3/_):5},t.unstable_getCurrentPriorityLevel=function(){return d},t.unstable_getFirstCallbackNode=function(){return n(l)},t.unstable_next=function(_){switch(d){case 1:case 2:case 3:var z=3;break;default:z=d}var j=d;d=z;try{return _()}finally{d=j}},t.unstable_pauseExecution=function(){},t.unstable_requestPaint=function(){},t.unstable_runWithPriority=function(_,z){switch(_){case 1:case 2:case 3:case 4:case 5:break;default:_=3}var j=d;d=_;try{return z()}finally{d=j}},t.unstable_scheduleCallback=function(_,z,j){var X=t.unstable_now();switch(typeof j=="object"&&j!==null?(j=j.delay,j=typeof j=="number"&&0<j?X+j:X):j=X,_){case 1:var Y=-1;break;case 2:Y=250;break;case 5:Y=1073741823;break;case 4:Y=1e4;break;default:Y=5e3}return Y=j+Y,_={id:c++,callback:z,priorityLevel:_,startTime:j,expirationTime:Y,sortIndex:-1},j>X?(_.sortIndex=j,e(u,_),n(l)===null&&_===n(u)&&(m?(g($),$=-1):m=!0,q(w,j-X))):(_.sortIndex=Y,e(l,_),f||p||(f=!0,G(k))),_},t.unstable_shouldYield=F,t.unstable_wrapCallback=function(_){var z=d;return function(){var j=d;d=z;try{return _.apply(this,arguments)}finally{d=j}}}})(Yk);(function(t){t.exports=Yk})(Xk);/**
 * @license React
 * react-dom.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var Qk=ps.exports,Yn=Xk.exports;function ee(t){for(var e="https://reactjs.org/docs/error-decoder.html?invariant="+t,n=1;n<arguments.length;n++)e+="&args[]="+encodeURIComponent(arguments[n]);return"Minified React error #"+t+"; visit "+e+" for the full message or use the non-minified dev environment for full errors and additional helpful warnings."}var Zk=new Set,Hl={};function Di(t,e){ka(t,e),ka(t+"Capture",e)}function ka(t,e){for(Hl[t]=e,t=0;t<e.length;t++)Zk.add(e[t])}var Or=!(typeof window>"u"||typeof window.document>"u"||typeof window.document.createElement>"u"),Ym=Object.prototype.hasOwnProperty,TR=/^[:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$/,Yb={},Qb={};function ER(t){return Ym.call(Qb,t)?!0:Ym.call(Yb,t)?!1:TR.test(t)?Qb[t]=!0:(Yb[t]=!0,!1)}function DR(t,e,n,s){if(n!==null&&n.type===0)return!1;switch(typeof e){case"function":case"symbol":return!0;case"boolean":return s?!1:n!==null?!n.acceptsBooleans:(t=t.toLowerCase().slice(0,5),t!=="data-"&&t!=="aria-");default:return!1}}function RR(t,e,n,s){if(e===null||typeof e>"u"||DR(t,e,n,s))return!0;if(s)return!1;if(n!==null)switch(n.type){case 3:return!e;case 4:return e===!1;case 5:return isNaN(e);case 6:return isNaN(e)||1>e}return!1}function Cn(t,e,n,s,r,o,i){this.acceptsBooleans=e===2||e===3||e===4,this.attributeName=s,this.attributeNamespace=r,this.mustUseProperty=n,this.propertyName=t,this.type=e,this.sanitizeURL=o,this.removeEmptyString=i}var Zt={};"children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style".split(" ").forEach(function(t){Zt[t]=new Cn(t,0,!1,t,null,!1,!1)});[["acceptCharset","accept-charset"],["className","class"],["htmlFor","for"],["httpEquiv","http-equiv"]].forEach(function(t){var e=t[0];Zt[e]=new Cn(e,1,!1,t[1],null,!1,!1)});["contentEditable","draggable","spellCheck","value"].forEach(function(t){Zt[t]=new Cn(t,2,!1,t.toLowerCase(),null,!1,!1)});["autoReverse","externalResourcesRequired","focusable","preserveAlpha"].forEach(function(t){Zt[t]=new Cn(t,2,!1,t,null,!1,!1)});"allowFullScreen async autoFocus autoPlay controls default defer disabled disablePictureInPicture disableRemotePlayback formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope".split(" ").forEach(function(t){Zt[t]=new Cn(t,3,!1,t.toLowerCase(),null,!1,!1)});["checked","multiple","muted","selected"].forEach(function(t){Zt[t]=new Cn(t,3,!0,t,null,!1,!1)});["capture","download"].forEach(function(t){Zt[t]=new Cn(t,4,!1,t,null,!1,!1)});["cols","rows","size","span"].forEach(function(t){Zt[t]=new Cn(t,6,!1,t,null,!1,!1)});["rowSpan","start"].forEach(function(t){Zt[t]=new Cn(t,5,!1,t.toLowerCase(),null,!1,!1)});var Ky=/[\-:]([a-z])/g;function qy(t){return t[1].toUpperCase()}"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height".split(" ").forEach(function(t){var e=t.replace(Ky,qy);Zt[e]=new Cn(e,1,!1,t,null,!1,!1)});"xlink:actuate xlink:arcrole xlink:role xlink:show xlink:title xlink:type".split(" ").forEach(function(t){var e=t.replace(Ky,qy);Zt[e]=new Cn(e,1,!1,t,"http://www.w3.org/1999/xlink",!1,!1)});["xml:base","xml:lang","xml:space"].forEach(function(t){var e=t.replace(Ky,qy);Zt[e]=new Cn(e,1,!1,t,"http://www.w3.org/XML/1998/namespace",!1,!1)});["tabIndex","crossOrigin"].forEach(function(t){Zt[t]=new Cn(t,1,!1,t.toLowerCase(),null,!1,!1)});Zt.xlinkHref=new Cn("xlinkHref",1,!1,"xlink:href","http://www.w3.org/1999/xlink",!0,!1);["src","href","action","formAction"].forEach(function(t){Zt[t]=new Cn(t,1,!1,t.toLowerCase(),null,!0,!0)});function Xy(t,e,n,s){var r=Zt.hasOwnProperty(e)?Zt[e]:null;(r!==null?r.type!==0:s||!(2<e.length)||e[0]!=="o"&&e[0]!=="O"||e[1]!=="n"&&e[1]!=="N")&&(RR(e,n,r,s)&&(n=null),s||r===null?ER(e)&&(n===null?t.removeAttribute(e):t.setAttribute(e,""+n)):r.mustUseProperty?t[r.propertyName]=n===null?r.type===3?!1:"":n:(e=r.attributeName,s=r.attributeNamespace,n===null?t.removeAttribute(e):(r=r.type,n=r===3||r===4&&n===!0?"":""+n,s?t.setAttributeNS(s,e,n):t.setAttribute(e,n))))}var Br=Qk.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED,nh=Symbol.for("react.element"),Xi=Symbol.for("react.portal"),Yi=Symbol.for("react.fragment"),Yy=Symbol.for("react.strict_mode"),Qm=Symbol.for("react.profiler"),Jk=Symbol.for("react.provider"),eS=Symbol.for("react.context"),Qy=Symbol.for("react.forward_ref"),Zm=Symbol.for("react.suspense"),Jm=Symbol.for("react.suspense_list"),Zy=Symbol.for("react.memo"),Qr=Symbol.for("react.lazy"),tS=Symbol.for("react.offscreen"),Zb=Symbol.iterator;function dl(t){return t===null||typeof t!="object"?null:(t=Zb&&t[Zb]||t["@@iterator"],typeof t=="function"?t:null)}var mt=Object.assign,im;function Cl(t){if(im===void 0)try{throw Error()}catch(n){var e=n.stack.trim().match(/\n( *(at )?)/);im=e&&e[1]||""}return`
`+im+t}var am=!1;function lm(t,e){if(!t||am)return"";am=!0;var n=Error.prepareStackTrace;Error.prepareStackTrace=void 0;try{if(e)if(e=function(){throw Error()},Object.defineProperty(e.prototype,"props",{set:function(){throw Error()}}),typeof Reflect=="object"&&Reflect.construct){try{Reflect.construct(e,[])}catch(u){var s=u}Reflect.construct(t,[],e)}else{try{e.call()}catch(u){s=u}t.call(e.prototype)}else{try{throw Error()}catch(u){s=u}t()}}catch(u){if(u&&s&&typeof u.stack=="string"){for(var r=u.stack.split(`
`),o=s.stack.split(`
`),i=r.length-1,a=o.length-1;1<=i&&0<=a&&r[i]!==o[a];)a--;for(;1<=i&&0<=a;i--,a--)if(r[i]!==o[a]){if(i!==1||a!==1)do if(i--,a--,0>a||r[i]!==o[a]){var l=`
`+r[i].replace(" at new "," at ");return t.displayName&&l.includes("<anonymous>")&&(l=l.replace("<anonymous>",t.displayName)),l}while(1<=i&&0<=a);break}}}finally{am=!1,Error.prepareStackTrace=n}return(t=t?t.displayName||t.name:"")?Cl(t):""}function AR(t){switch(t.tag){case 5:return Cl(t.type);case 16:return Cl("Lazy");case 13:return Cl("Suspense");case 19:return Cl("SuspenseList");case 0:case 2:case 15:return t=lm(t.type,!1),t;case 11:return t=lm(t.type.render,!1),t;case 1:return t=lm(t.type,!0),t;default:return""}}function eg(t){if(t==null)return null;if(typeof t=="function")return t.displayName||t.name||null;if(typeof t=="string")return t;switch(t){case Yi:return"Fragment";case Xi:return"Portal";case Qm:return"Profiler";case Yy:return"StrictMode";case Zm:return"Suspense";case Jm:return"SuspenseList"}if(typeof t=="object")switch(t.$$typeof){case eS:return(t.displayName||"Context")+".Consumer";case Jk:return(t._context.displayName||"Context")+".Provider";case Qy:var e=t.render;return t=t.displayName,t||(t=e.displayName||e.name||"",t=t!==""?"ForwardRef("+t+")":"ForwardRef"),t;case Zy:return e=t.displayName||null,e!==null?e:eg(t.type)||"Memo";case Qr:e=t._payload,t=t._init;try{return eg(t(e))}catch{}}return null}function _R(t){var e=t.type;switch(t.tag){case 24:return"Cache";case 9:return(e.displayName||"Context")+".Consumer";case 10:return(e._context.displayName||"Context")+".Provider";case 18:return"DehydratedFragment";case 11:return t=e.render,t=t.displayName||t.name||"",e.displayName||(t!==""?"ForwardRef("+t+")":"ForwardRef");case 7:return"Fragment";case 5:return e;case 4:return"Portal";case 3:return"Root";case 6:return"Text";case 16:return eg(e);case 8:return e===Yy?"StrictMode":"Mode";case 22:return"Offscreen";case 12:return"Profiler";case 21:return"Scope";case 13:return"Suspense";case 19:return"SuspenseList";case 25:return"TracingMarker";case 1:case 0:case 17:case 2:case 14:case 15:if(typeof e=="function")return e.displayName||e.name||null;if(typeof e=="string")return e}return null}function wo(t){switch(typeof t){case"boolean":case"number":case"string":case"undefined":return t;case"object":return t;default:return""}}function nS(t){var e=t.type;return(t=t.nodeName)&&t.toLowerCase()==="input"&&(e==="checkbox"||e==="radio")}function OR(t){var e=nS(t)?"checked":"value",n=Object.getOwnPropertyDescriptor(t.constructor.prototype,e),s=""+t[e];if(!t.hasOwnProperty(e)&&typeof n<"u"&&typeof n.get=="function"&&typeof n.set=="function"){var r=n.get,o=n.set;return Object.defineProperty(t,e,{configurable:!0,get:function(){return r.call(this)},set:function(i){s=""+i,o.call(this,i)}}),Object.defineProperty(t,e,{enumerable:n.enumerable}),{getValue:function(){return s},setValue:function(i){s=""+i},stopTracking:function(){t._valueTracker=null,delete t[e]}}}}function sh(t){t._valueTracker||(t._valueTracker=OR(t))}function sS(t){if(!t)return!1;var e=t._valueTracker;if(!e)return!0;var n=e.getValue(),s="";return t&&(s=nS(t)?t.checked?"true":"false":t.value),t=s,t!==n?(e.setValue(t),!0):!1}function qh(t){if(t=t||(typeof document<"u"?document:void 0),typeof t>"u")return null;try{return t.activeElement||t.body}catch{return t.body}}function tg(t,e){var n=e.checked;return mt({},e,{defaultChecked:void 0,defaultValue:void 0,value:void 0,checked:n!=null?n:t._wrapperState.initialChecked})}function Jb(t,e){var n=e.defaultValue==null?"":e.defaultValue,s=e.checked!=null?e.checked:e.defaultChecked;n=wo(e.value!=null?e.value:n),t._wrapperState={initialChecked:s,initialValue:n,controlled:e.type==="checkbox"||e.type==="radio"?e.checked!=null:e.value!=null}}function rS(t,e){e=e.checked,e!=null&&Xy(t,"checked",e,!1)}function ng(t,e){rS(t,e);var n=wo(e.value),s=e.type;if(n!=null)s==="number"?(n===0&&t.value===""||t.value!=n)&&(t.value=""+n):t.value!==""+n&&(t.value=""+n);else if(s==="submit"||s==="reset"){t.removeAttribute("value");return}e.hasOwnProperty("value")?sg(t,e.type,n):e.hasOwnProperty("defaultValue")&&sg(t,e.type,wo(e.defaultValue)),e.checked==null&&e.defaultChecked!=null&&(t.defaultChecked=!!e.defaultChecked)}function ew(t,e,n){if(e.hasOwnProperty("value")||e.hasOwnProperty("defaultValue")){var s=e.type;if(!(s!=="submit"&&s!=="reset"||e.value!==void 0&&e.value!==null))return;e=""+t._wrapperState.initialValue,n||e===t.value||(t.value=e),t.defaultValue=e}n=t.name,n!==""&&(t.name=""),t.defaultChecked=!!t._wrapperState.initialChecked,n!==""&&(t.name=n)}function sg(t,e,n){(e!=="number"||qh(t.ownerDocument)!==t)&&(n==null?t.defaultValue=""+t._wrapperState.initialValue:t.defaultValue!==""+n&&(t.defaultValue=""+n))}var Nl=Array.isArray;function ua(t,e,n,s){if(t=t.options,e){e={};for(var r=0;r<n.length;r++)e["$"+n[r]]=!0;for(n=0;n<t.length;n++)r=e.hasOwnProperty("$"+t[n].value),t[n].selected!==r&&(t[n].selected=r),r&&s&&(t[n].defaultSelected=!0)}else{for(n=""+wo(n),e=null,r=0;r<t.length;r++){if(t[r].value===n){t[r].selected=!0,s&&(t[r].defaultSelected=!0);return}e!==null||t[r].disabled||(e=t[r])}e!==null&&(e.selected=!0)}}function rg(t,e){if(e.dangerouslySetInnerHTML!=null)throw Error(ee(91));return mt({},e,{value:void 0,defaultValue:void 0,children:""+t._wrapperState.initialValue})}function tw(t,e){var n=e.value;if(n==null){if(n=e.children,e=e.defaultValue,n!=null){if(e!=null)throw Error(ee(92));if(Nl(n)){if(1<n.length)throw Error(ee(93));n=n[0]}e=n}e==null&&(e=""),n=e}t._wrapperState={initialValue:wo(n)}}function oS(t,e){var n=wo(e.value),s=wo(e.defaultValue);n!=null&&(n=""+n,n!==t.value&&(t.value=n),e.defaultValue==null&&t.defaultValue!==n&&(t.defaultValue=n)),s!=null&&(t.defaultValue=""+s)}function nw(t){var e=t.textContent;e===t._wrapperState.initialValue&&e!==""&&e!==null&&(t.value=e)}function iS(t){switch(t){case"svg":return"http://www.w3.org/2000/svg";case"math":return"http://www.w3.org/1998/Math/MathML";default:return"http://www.w3.org/1999/xhtml"}}function og(t,e){return t==null||t==="http://www.w3.org/1999/xhtml"?iS(e):t==="http://www.w3.org/2000/svg"&&e==="foreignObject"?"http://www.w3.org/1999/xhtml":t}var rh,aS=function(t){return typeof MSApp<"u"&&MSApp.execUnsafeLocalFunction?function(e,n,s,r){MSApp.execUnsafeLocalFunction(function(){return t(e,n,s,r)})}:t}(function(t,e){if(t.namespaceURI!=="http://www.w3.org/2000/svg"||"innerHTML"in t)t.innerHTML=e;else{for(rh=rh||document.createElement("div"),rh.innerHTML="<svg>"+e.valueOf().toString()+"</svg>",e=rh.firstChild;t.firstChild;)t.removeChild(t.firstChild);for(;e.firstChild;)t.appendChild(e.firstChild)}});function jl(t,e){if(e){var n=t.firstChild;if(n&&n===t.lastChild&&n.nodeType===3){n.nodeValue=e;return}}t.textContent=e}var Ol={animationIterationCount:!0,aspectRatio:!0,borderImageOutset:!0,borderImageSlice:!0,borderImageWidth:!0,boxFlex:!0,boxFlexGroup:!0,boxOrdinalGroup:!0,columnCount:!0,columns:!0,flex:!0,flexGrow:!0,flexPositive:!0,flexShrink:!0,flexNegative:!0,flexOrder:!0,gridArea:!0,gridRow:!0,gridRowEnd:!0,gridRowSpan:!0,gridRowStart:!0,gridColumn:!0,gridColumnEnd:!0,gridColumnSpan:!0,gridColumnStart:!0,fontWeight:!0,lineClamp:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,tabSize:!0,widows:!0,zIndex:!0,zoom:!0,fillOpacity:!0,floodOpacity:!0,stopOpacity:!0,strokeDasharray:!0,strokeDashoffset:!0,strokeMiterlimit:!0,strokeOpacity:!0,strokeWidth:!0},FR=["Webkit","ms","Moz","O"];Object.keys(Ol).forEach(function(t){FR.forEach(function(e){e=e+t.charAt(0).toUpperCase()+t.substring(1),Ol[e]=Ol[t]})});function lS(t,e,n){return e==null||typeof e=="boolean"||e===""?"":n||typeof e!="number"||e===0||Ol.hasOwnProperty(t)&&Ol[t]?(""+e).trim():e+"px"}function uS(t,e){t=t.style;for(var n in e)if(e.hasOwnProperty(n)){var s=n.indexOf("--")===0,r=lS(n,e[n],s);n==="float"&&(n="cssFloat"),s?t.setProperty(n,r):t[n]=r}}var LR=mt({menuitem:!0},{area:!0,base:!0,br:!0,col:!0,embed:!0,hr:!0,img:!0,input:!0,keygen:!0,link:!0,meta:!0,param:!0,source:!0,track:!0,wbr:!0});function ig(t,e){if(e){if(LR[t]&&(e.children!=null||e.dangerouslySetInnerHTML!=null))throw Error(ee(137,t));if(e.dangerouslySetInnerHTML!=null){if(e.children!=null)throw Error(ee(60));if(typeof e.dangerouslySetInnerHTML!="object"||!("__html"in e.dangerouslySetInnerHTML))throw Error(ee(61))}if(e.style!=null&&typeof e.style!="object")throw Error(ee(62))}}function ag(t,e){if(t.indexOf("-")===-1)return typeof e.is=="string";switch(t){case"annotation-xml":case"color-profile":case"font-face":case"font-face-src":case"font-face-uri":case"font-face-format":case"font-face-name":case"missing-glyph":return!1;default:return!0}}var lg=null;function Jy(t){return t=t.target||t.srcElement||window,t.correspondingUseElement&&(t=t.correspondingUseElement),t.nodeType===3?t.parentNode:t}var ug=null,ca=null,ha=null;function sw(t){if(t=Nu(t)){if(typeof ug!="function")throw Error(ee(280));var e=t.stateNode;e&&(e=Jd(e),ug(t.stateNode,t.type,e))}}function cS(t){ca?ha?ha.push(t):ha=[t]:ca=t}function hS(){if(ca){var t=ca,e=ha;if(ha=ca=null,sw(t),e)for(t=0;t<e.length;t++)sw(e[t])}}function dS(t,e){return t(e)}function pS(){}var um=!1;function fS(t,e,n){if(um)return t(e,n);um=!0;try{return dS(t,e,n)}finally{um=!1,(ca!==null||ha!==null)&&(pS(),hS())}}function Kl(t,e){var n=t.stateNode;if(n===null)return null;var s=Jd(n);if(s===null)return null;n=s[e];e:switch(e){case"onClick":case"onClickCapture":case"onDoubleClick":case"onDoubleClickCapture":case"onMouseDown":case"onMouseDownCapture":case"onMouseMove":case"onMouseMoveCapture":case"onMouseUp":case"onMouseUpCapture":case"onMouseEnter":(s=!s.disabled)||(t=t.type,s=!(t==="button"||t==="input"||t==="select"||t==="textarea")),t=!s;break e;default:t=!1}if(t)return null;if(n&&typeof n!="function")throw Error(ee(231,e,typeof n));return n}var cg=!1;if(Or)try{var pl={};Object.defineProperty(pl,"passive",{get:function(){cg=!0}}),window.addEventListener("test",pl,pl),window.removeEventListener("test",pl,pl)}catch{cg=!1}function PR(t,e,n,s,r,o,i,a,l){var u=Array.prototype.slice.call(arguments,3);try{e.apply(n,u)}catch(c){this.onError(c)}}var Fl=!1,Xh=null,Yh=!1,hg=null,zR={onError:function(t){Fl=!0,Xh=t}};function MR(t,e,n,s,r,o,i,a,l){Fl=!1,Xh=null,PR.apply(zR,arguments)}function BR(t,e,n,s,r,o,i,a,l){if(MR.apply(this,arguments),Fl){if(Fl){var u=Xh;Fl=!1,Xh=null}else throw Error(ee(198));Yh||(Yh=!0,hg=u)}}function Ri(t){var e=t,n=t;if(t.alternate)for(;e.return;)e=e.return;else{t=e;do e=t,(e.flags&4098)!==0&&(n=e.return),t=e.return;while(t)}return e.tag===3?n:null}function mS(t){if(t.tag===13){var e=t.memoizedState;if(e===null&&(t=t.alternate,t!==null&&(e=t.memoizedState)),e!==null)return e.dehydrated}return null}function rw(t){if(Ri(t)!==t)throw Error(ee(188))}function VR(t){var e=t.alternate;if(!e){if(e=Ri(t),e===null)throw Error(ee(188));return e!==t?null:t}for(var n=t,s=e;;){var r=n.return;if(r===null)break;var o=r.alternate;if(o===null){if(s=r.return,s!==null){n=s;continue}break}if(r.child===o.child){for(o=r.child;o;){if(o===n)return rw(r),t;if(o===s)return rw(r),e;o=o.sibling}throw Error(ee(188))}if(n.return!==s.return)n=r,s=o;else{for(var i=!1,a=r.child;a;){if(a===n){i=!0,n=r,s=o;break}if(a===s){i=!0,s=r,n=o;break}a=a.sibling}if(!i){for(a=o.child;a;){if(a===n){i=!0,n=o,s=r;break}if(a===s){i=!0,s=o,n=r;break}a=a.sibling}if(!i)throw Error(ee(189))}}if(n.alternate!==s)throw Error(ee(190))}if(n.tag!==3)throw Error(ee(188));return n.stateNode.current===n?t:e}function gS(t){return t=VR(t),t!==null?yS(t):null}function yS(t){if(t.tag===5||t.tag===6)return t;for(t=t.child;t!==null;){var e=yS(t);if(e!==null)return e;t=t.sibling}return null}var xS=Yn.unstable_scheduleCallback,ow=Yn.unstable_cancelCallback,WR=Yn.unstable_shouldYield,UR=Yn.unstable_requestPaint,vt=Yn.unstable_now,GR=Yn.unstable_getCurrentPriorityLevel,e0=Yn.unstable_ImmediatePriority,bS=Yn.unstable_UserBlockingPriority,Qh=Yn.unstable_NormalPriority,HR=Yn.unstable_LowPriority,wS=Yn.unstable_IdlePriority,Xd=null,hr=null;function jR(t){if(hr&&typeof hr.onCommitFiberRoot=="function")try{hr.onCommitFiberRoot(Xd,t,void 0,(t.current.flags&128)===128)}catch{}}var Gs=Math.clz32?Math.clz32:XR,KR=Math.log,qR=Math.LN2;function XR(t){return t>>>=0,t===0?32:31-(KR(t)/qR|0)|0}var oh=64,ih=4194304;function $l(t){switch(t&-t){case 1:return 1;case 2:return 2;case 4:return 4;case 8:return 8;case 16:return 16;case 32:return 32;case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:return t&4194240;case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:return t&130023424;case 134217728:return 134217728;case 268435456:return 268435456;case 536870912:return 536870912;case 1073741824:return 1073741824;default:return t}}function Zh(t,e){var n=t.pendingLanes;if(n===0)return 0;var s=0,r=t.suspendedLanes,o=t.pingedLanes,i=n&268435455;if(i!==0){var a=i&~r;a!==0?s=$l(a):(o&=i,o!==0&&(s=$l(o)))}else i=n&~r,i!==0?s=$l(i):o!==0&&(s=$l(o));if(s===0)return 0;if(e!==0&&e!==s&&(e&r)===0&&(r=s&-s,o=e&-e,r>=o||r===16&&(o&4194240)!==0))return e;if((s&4)!==0&&(s|=n&16),e=t.entangledLanes,e!==0)for(t=t.entanglements,e&=s;0<e;)n=31-Gs(e),r=1<<n,s|=t[n],e&=~r;return s}function YR(t,e){switch(t){case 1:case 2:case 4:return e+250;case 8:case 16:case 32:case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:return e+5e3;case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:return-1;case 134217728:case 268435456:case 536870912:case 1073741824:return-1;default:return-1}}function QR(t,e){for(var n=t.suspendedLanes,s=t.pingedLanes,r=t.expirationTimes,o=t.pendingLanes;0<o;){var i=31-Gs(o),a=1<<i,l=r[i];l===-1?((a&n)===0||(a&s)!==0)&&(r[i]=YR(a,e)):l<=e&&(t.expiredLanes|=a),o&=~a}}function dg(t){return t=t.pendingLanes&-1073741825,t!==0?t:t&1073741824?1073741824:0}function vS(){var t=oh;return oh<<=1,(oh&4194240)===0&&(oh=64),t}function cm(t){for(var e=[],n=0;31>n;n++)e.push(t);return e}function Su(t,e,n){t.pendingLanes|=e,e!==536870912&&(t.suspendedLanes=0,t.pingedLanes=0),t=t.eventTimes,e=31-Gs(e),t[e]=n}function ZR(t,e){var n=t.pendingLanes&~e;t.pendingLanes=e,t.suspendedLanes=0,t.pingedLanes=0,t.expiredLanes&=e,t.mutableReadLanes&=e,t.entangledLanes&=e,e=t.entanglements;var s=t.eventTimes;for(t=t.expirationTimes;0<n;){var r=31-Gs(n),o=1<<r;e[r]=0,s[r]=-1,t[r]=-1,n&=~o}}function t0(t,e){var n=t.entangledLanes|=e;for(t=t.entanglements;n;){var s=31-Gs(n),r=1<<s;r&e|t[s]&e&&(t[s]|=e),n&=~r}}var Be=0;function kS(t){return t&=-t,1<t?4<t?(t&268435455)!==0?16:536870912:4:1}var SS,n0,CS,NS,$S,pg=!1,ah=[],ao=null,lo=null,uo=null,ql=new Map,Xl=new Map,eo=[],JR="mousedown mouseup touchcancel touchend touchstart auxclick dblclick pointercancel pointerdown pointerup dragend dragstart drop compositionend compositionstart keydown keypress keyup input textInput copy cut paste click change contextmenu reset submit".split(" ");function iw(t,e){switch(t){case"focusin":case"focusout":ao=null;break;case"dragenter":case"dragleave":lo=null;break;case"mouseover":case"mouseout":uo=null;break;case"pointerover":case"pointerout":ql.delete(e.pointerId);break;case"gotpointercapture":case"lostpointercapture":Xl.delete(e.pointerId)}}function fl(t,e,n,s,r,o){return t===null||t.nativeEvent!==o?(t={blockedOn:e,domEventName:n,eventSystemFlags:s,nativeEvent:o,targetContainers:[r]},e!==null&&(e=Nu(e),e!==null&&n0(e)),t):(t.eventSystemFlags|=s,e=t.targetContainers,r!==null&&e.indexOf(r)===-1&&e.push(r),t)}function eA(t,e,n,s,r){switch(e){case"focusin":return ao=fl(ao,t,e,n,s,r),!0;case"dragenter":return lo=fl(lo,t,e,n,s,r),!0;case"mouseover":return uo=fl(uo,t,e,n,s,r),!0;case"pointerover":var o=r.pointerId;return ql.set(o,fl(ql.get(o)||null,t,e,n,s,r)),!0;case"gotpointercapture":return o=r.pointerId,Xl.set(o,fl(Xl.get(o)||null,t,e,n,s,r)),!0}return!1}function IS(t){var e=si(t.target);if(e!==null){var n=Ri(e);if(n!==null){if(e=n.tag,e===13){if(e=mS(n),e!==null){t.blockedOn=e,$S(t.priority,function(){CS(n)});return}}else if(e===3&&n.stateNode.current.memoizedState.isDehydrated){t.blockedOn=n.tag===3?n.stateNode.containerInfo:null;return}}}t.blockedOn=null}function Oh(t){if(t.blockedOn!==null)return!1;for(var e=t.targetContainers;0<e.length;){var n=fg(t.domEventName,t.eventSystemFlags,e[0],t.nativeEvent);if(n===null){n=t.nativeEvent;var s=new n.constructor(n.type,n);lg=s,n.target.dispatchEvent(s),lg=null}else return e=Nu(n),e!==null&&n0(e),t.blockedOn=n,!1;e.shift()}return!0}function aw(t,e,n){Oh(t)&&n.delete(e)}function tA(){pg=!1,ao!==null&&Oh(ao)&&(ao=null),lo!==null&&Oh(lo)&&(lo=null),uo!==null&&Oh(uo)&&(uo=null),ql.forEach(aw),Xl.forEach(aw)}function ml(t,e){t.blockedOn===e&&(t.blockedOn=null,pg||(pg=!0,Yn.unstable_scheduleCallback(Yn.unstable_NormalPriority,tA)))}function Yl(t){function e(r){return ml(r,t)}if(0<ah.length){ml(ah[0],t);for(var n=1;n<ah.length;n++){var s=ah[n];s.blockedOn===t&&(s.blockedOn=null)}}for(ao!==null&&ml(ao,t),lo!==null&&ml(lo,t),uo!==null&&ml(uo,t),ql.forEach(e),Xl.forEach(e),n=0;n<eo.length;n++)s=eo[n],s.blockedOn===t&&(s.blockedOn=null);for(;0<eo.length&&(n=eo[0],n.blockedOn===null);)IS(n),n.blockedOn===null&&eo.shift()}var da=Br.ReactCurrentBatchConfig,Jh=!0;function nA(t,e,n,s){var r=Be,o=da.transition;da.transition=null;try{Be=1,s0(t,e,n,s)}finally{Be=r,da.transition=o}}function sA(t,e,n,s){var r=Be,o=da.transition;da.transition=null;try{Be=4,s0(t,e,n,s)}finally{Be=r,da.transition=o}}function s0(t,e,n,s){if(Jh){var r=fg(t,e,n,s);if(r===null)wm(t,e,s,ed,n),iw(t,s);else if(eA(r,t,e,n,s))s.stopPropagation();else if(iw(t,s),e&4&&-1<JR.indexOf(t)){for(;r!==null;){var o=Nu(r);if(o!==null&&SS(o),o=fg(t,e,n,s),o===null&&wm(t,e,s,ed,n),o===r)break;r=o}r!==null&&s.stopPropagation()}else wm(t,e,s,null,n)}}var ed=null;function fg(t,e,n,s){if(ed=null,t=Jy(s),t=si(t),t!==null)if(e=Ri(t),e===null)t=null;else if(n=e.tag,n===13){if(t=mS(e),t!==null)return t;t=null}else if(n===3){if(e.stateNode.current.memoizedState.isDehydrated)return e.tag===3?e.stateNode.containerInfo:null;t=null}else e!==t&&(t=null);return ed=t,null}function TS(t){switch(t){case"cancel":case"click":case"close":case"contextmenu":case"copy":case"cut":case"auxclick":case"dblclick":case"dragend":case"dragstart":case"drop":case"focusin":case"focusout":case"input":case"invalid":case"keydown":case"keypress":case"keyup":case"mousedown":case"mouseup":case"paste":case"pause":case"play":case"pointercancel":case"pointerdown":case"pointerup":case"ratechange":case"reset":case"resize":case"seeked":case"submit":case"touchcancel":case"touchend":case"touchstart":case"volumechange":case"change":case"selectionchange":case"textInput":case"compositionstart":case"compositionend":case"compositionupdate":case"beforeblur":case"afterblur":case"beforeinput":case"blur":case"fullscreenchange":case"focus":case"hashchange":case"popstate":case"select":case"selectstart":return 1;case"drag":case"dragenter":case"dragexit":case"dragleave":case"dragover":case"mousemove":case"mouseout":case"mouseover":case"pointermove":case"pointerout":case"pointerover":case"scroll":case"toggle":case"touchmove":case"wheel":case"mouseenter":case"mouseleave":case"pointerenter":case"pointerleave":return 4;case"message":switch(GR()){case e0:return 1;case bS:return 4;case Qh:case HR:return 16;case wS:return 536870912;default:return 16}default:return 16}}var no=null,r0=null,Fh=null;function ES(){if(Fh)return Fh;var t,e=r0,n=e.length,s,r="value"in no?no.value:no.textContent,o=r.length;for(t=0;t<n&&e[t]===r[t];t++);var i=n-t;for(s=1;s<=i&&e[n-s]===r[o-s];s++);return Fh=r.slice(t,1<s?1-s:void 0)}function Lh(t){var e=t.keyCode;return"charCode"in t?(t=t.charCode,t===0&&e===13&&(t=13)):t=e,t===10&&(t=13),32<=t||t===13?t:0}function lh(){return!0}function lw(){return!1}function ss(t){function e(n,s,r,o,i){this._reactName=n,this._targetInst=r,this.type=s,this.nativeEvent=o,this.target=i,this.currentTarget=null;for(var a in t)t.hasOwnProperty(a)&&(n=t[a],this[a]=n?n(o):o[a]);return this.isDefaultPrevented=(o.defaultPrevented!=null?o.defaultPrevented:o.returnValue===!1)?lh:lw,this.isPropagationStopped=lw,this}return mt(e.prototype,{preventDefault:function(){this.defaultPrevented=!0;var n=this.nativeEvent;n&&(n.preventDefault?n.preventDefault():typeof n.returnValue!="unknown"&&(n.returnValue=!1),this.isDefaultPrevented=lh)},stopPropagation:function(){var n=this.nativeEvent;n&&(n.stopPropagation?n.stopPropagation():typeof n.cancelBubble!="unknown"&&(n.cancelBubble=!0),this.isPropagationStopped=lh)},persist:function(){},isPersistent:lh}),e}var Ha={eventPhase:0,bubbles:0,cancelable:0,timeStamp:function(t){return t.timeStamp||Date.now()},defaultPrevented:0,isTrusted:0},o0=ss(Ha),Cu=mt({},Ha,{view:0,detail:0}),rA=ss(Cu),hm,dm,gl,Yd=mt({},Cu,{screenX:0,screenY:0,clientX:0,clientY:0,pageX:0,pageY:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,getModifierState:i0,button:0,buttons:0,relatedTarget:function(t){return t.relatedTarget===void 0?t.fromElement===t.srcElement?t.toElement:t.fromElement:t.relatedTarget},movementX:function(t){return"movementX"in t?t.movementX:(t!==gl&&(gl&&t.type==="mousemove"?(hm=t.screenX-gl.screenX,dm=t.screenY-gl.screenY):dm=hm=0,gl=t),hm)},movementY:function(t){return"movementY"in t?t.movementY:dm}}),uw=ss(Yd),oA=mt({},Yd,{dataTransfer:0}),iA=ss(oA),aA=mt({},Cu,{relatedTarget:0}),pm=ss(aA),lA=mt({},Ha,{animationName:0,elapsedTime:0,pseudoElement:0}),uA=ss(lA),cA=mt({},Ha,{clipboardData:function(t){return"clipboardData"in t?t.clipboardData:window.clipboardData}}),hA=ss(cA),dA=mt({},Ha,{data:0}),cw=ss(dA),pA={Esc:"Escape",Spacebar:" ",Left:"ArrowLeft",Up:"ArrowUp",Right:"ArrowRight",Down:"ArrowDown",Del:"Delete",Win:"OS",Menu:"ContextMenu",Apps:"ContextMenu",Scroll:"ScrollLock",MozPrintableKey:"Unidentified"},fA={8:"Backspace",9:"Tab",12:"Clear",13:"Enter",16:"Shift",17:"Control",18:"Alt",19:"Pause",20:"CapsLock",27:"Escape",32:" ",33:"PageUp",34:"PageDown",35:"End",36:"Home",37:"ArrowLeft",38:"ArrowUp",39:"ArrowRight",40:"ArrowDown",45:"Insert",46:"Delete",112:"F1",113:"F2",114:"F3",115:"F4",116:"F5",117:"F6",118:"F7",119:"F8",120:"F9",121:"F10",122:"F11",123:"F12",144:"NumLock",145:"ScrollLock",224:"Meta"},mA={Alt:"altKey",Control:"ctrlKey",Meta:"metaKey",Shift:"shiftKey"};function gA(t){var e=this.nativeEvent;return e.getModifierState?e.getModifierState(t):(t=mA[t])?!!e[t]:!1}function i0(){return gA}var yA=mt({},Cu,{key:function(t){if(t.key){var e=pA[t.key]||t.key;if(e!=="Unidentified")return e}return t.type==="keypress"?(t=Lh(t),t===13?"Enter":String.fromCharCode(t)):t.type==="keydown"||t.type==="keyup"?fA[t.keyCode]||"Unidentified":""},code:0,location:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,repeat:0,locale:0,getModifierState:i0,charCode:function(t){return t.type==="keypress"?Lh(t):0},keyCode:function(t){return t.type==="keydown"||t.type==="keyup"?t.keyCode:0},which:function(t){return t.type==="keypress"?Lh(t):t.type==="keydown"||t.type==="keyup"?t.keyCode:0}}),xA=ss(yA),bA=mt({},Yd,{pointerId:0,width:0,height:0,pressure:0,tangentialPressure:0,tiltX:0,tiltY:0,twist:0,pointerType:0,isPrimary:0}),hw=ss(bA),wA=mt({},Cu,{touches:0,targetTouches:0,changedTouches:0,altKey:0,metaKey:0,ctrlKey:0,shiftKey:0,getModifierState:i0}),vA=ss(wA),kA=mt({},Ha,{propertyName:0,elapsedTime:0,pseudoElement:0}),SA=ss(kA),CA=mt({},Yd,{deltaX:function(t){return"deltaX"in t?t.deltaX:"wheelDeltaX"in t?-t.wheelDeltaX:0},deltaY:function(t){return"deltaY"in t?t.deltaY:"wheelDeltaY"in t?-t.wheelDeltaY:"wheelDelta"in t?-t.wheelDelta:0},deltaZ:0,deltaMode:0}),NA=ss(CA),$A=[9,13,27,32],a0=Or&&"CompositionEvent"in window,Ll=null;Or&&"documentMode"in document&&(Ll=document.documentMode);var IA=Or&&"TextEvent"in window&&!Ll,DS=Or&&(!a0||Ll&&8<Ll&&11>=Ll),dw=String.fromCharCode(32),pw=!1;function RS(t,e){switch(t){case"keyup":return $A.indexOf(e.keyCode)!==-1;case"keydown":return e.keyCode!==229;case"keypress":case"mousedown":case"focusout":return!0;default:return!1}}function AS(t){return t=t.detail,typeof t=="object"&&"data"in t?t.data:null}var Qi=!1;function TA(t,e){switch(t){case"compositionend":return AS(e);case"keypress":return e.which!==32?null:(pw=!0,dw);case"textInput":return t=e.data,t===dw&&pw?null:t;default:return null}}function EA(t,e){if(Qi)return t==="compositionend"||!a0&&RS(t,e)?(t=ES(),Fh=r0=no=null,Qi=!1,t):null;switch(t){case"paste":return null;case"keypress":if(!(e.ctrlKey||e.altKey||e.metaKey)||e.ctrlKey&&e.altKey){if(e.char&&1<e.char.length)return e.char;if(e.which)return String.fromCharCode(e.which)}return null;case"compositionend":return DS&&e.locale!=="ko"?null:e.data;default:return null}}var DA={color:!0,date:!0,datetime:!0,"datetime-local":!0,email:!0,month:!0,number:!0,password:!0,range:!0,search:!0,tel:!0,text:!0,time:!0,url:!0,week:!0};function fw(t){var e=t&&t.nodeName&&t.nodeName.toLowerCase();return e==="input"?!!DA[t.type]:e==="textarea"}function _S(t,e,n,s){cS(s),e=td(e,"onChange"),0<e.length&&(n=new o0("onChange","change",null,n,s),t.push({event:n,listeners:e}))}var Pl=null,Ql=null;function RA(t){GS(t,0)}function Qd(t){var e=ea(t);if(sS(e))return t}function AA(t,e){if(t==="change")return e}var OS=!1;if(Or){var fm;if(Or){var mm="oninput"in document;if(!mm){var mw=document.createElement("div");mw.setAttribute("oninput","return;"),mm=typeof mw.oninput=="function"}fm=mm}else fm=!1;OS=fm&&(!document.documentMode||9<document.documentMode)}function gw(){Pl&&(Pl.detachEvent("onpropertychange",FS),Ql=Pl=null)}function FS(t){if(t.propertyName==="value"&&Qd(Ql)){var e=[];_S(e,Ql,t,Jy(t)),fS(RA,e)}}function _A(t,e,n){t==="focusin"?(gw(),Pl=e,Ql=n,Pl.attachEvent("onpropertychange",FS)):t==="focusout"&&gw()}function OA(t){if(t==="selectionchange"||t==="keyup"||t==="keydown")return Qd(Ql)}function FA(t,e){if(t==="click")return Qd(e)}function LA(t,e){if(t==="input"||t==="change")return Qd(e)}function PA(t,e){return t===e&&(t!==0||1/t===1/e)||t!==t&&e!==e}var qs=typeof Object.is=="function"?Object.is:PA;function Zl(t,e){if(qs(t,e))return!0;if(typeof t!="object"||t===null||typeof e!="object"||e===null)return!1;var n=Object.keys(t),s=Object.keys(e);if(n.length!==s.length)return!1;for(s=0;s<n.length;s++){var r=n[s];if(!Ym.call(e,r)||!qs(t[r],e[r]))return!1}return!0}function yw(t){for(;t&&t.firstChild;)t=t.firstChild;return t}function xw(t,e){var n=yw(t);t=0;for(var s;n;){if(n.nodeType===3){if(s=t+n.textContent.length,t<=e&&s>=e)return{node:n,offset:e-t};t=s}e:{for(;n;){if(n.nextSibling){n=n.nextSibling;break e}n=n.parentNode}n=void 0}n=yw(n)}}function LS(t,e){return t&&e?t===e?!0:t&&t.nodeType===3?!1:e&&e.nodeType===3?LS(t,e.parentNode):"contains"in t?t.contains(e):t.compareDocumentPosition?!!(t.compareDocumentPosition(e)&16):!1:!1}function PS(){for(var t=window,e=qh();e instanceof t.HTMLIFrameElement;){try{var n=typeof e.contentWindow.location.href=="string"}catch{n=!1}if(n)t=e.contentWindow;else break;e=qh(t.document)}return e}function l0(t){var e=t&&t.nodeName&&t.nodeName.toLowerCase();return e&&(e==="input"&&(t.type==="text"||t.type==="search"||t.type==="tel"||t.type==="url"||t.type==="password")||e==="textarea"||t.contentEditable==="true")}function zA(t){var e=PS(),n=t.focusedElem,s=t.selectionRange;if(e!==n&&n&&n.ownerDocument&&LS(n.ownerDocument.documentElement,n)){if(s!==null&&l0(n)){if(e=s.start,t=s.end,t===void 0&&(t=e),"selectionStart"in n)n.selectionStart=e,n.selectionEnd=Math.min(t,n.value.length);else if(t=(e=n.ownerDocument||document)&&e.defaultView||window,t.getSelection){t=t.getSelection();var r=n.textContent.length,o=Math.min(s.start,r);s=s.end===void 0?o:Math.min(s.end,r),!t.extend&&o>s&&(r=s,s=o,o=r),r=xw(n,o);var i=xw(n,s);r&&i&&(t.rangeCount!==1||t.anchorNode!==r.node||t.anchorOffset!==r.offset||t.focusNode!==i.node||t.focusOffset!==i.offset)&&(e=e.createRange(),e.setStart(r.node,r.offset),t.removeAllRanges(),o>s?(t.addRange(e),t.extend(i.node,i.offset)):(e.setEnd(i.node,i.offset),t.addRange(e)))}}for(e=[],t=n;t=t.parentNode;)t.nodeType===1&&e.push({element:t,left:t.scrollLeft,top:t.scrollTop});for(typeof n.focus=="function"&&n.focus(),n=0;n<e.length;n++)t=e[n],t.element.scrollLeft=t.left,t.element.scrollTop=t.top}}var MA=Or&&"documentMode"in document&&11>=document.documentMode,Zi=null,mg=null,zl=null,gg=!1;function bw(t,e,n){var s=n.window===n?n.document:n.nodeType===9?n:n.ownerDocument;gg||Zi==null||Zi!==qh(s)||(s=Zi,"selectionStart"in s&&l0(s)?s={start:s.selectionStart,end:s.selectionEnd}:(s=(s.ownerDocument&&s.ownerDocument.defaultView||window).getSelection(),s={anchorNode:s.anchorNode,anchorOffset:s.anchorOffset,focusNode:s.focusNode,focusOffset:s.focusOffset}),zl&&Zl(zl,s)||(zl=s,s=td(mg,"onSelect"),0<s.length&&(e=new o0("onSelect","select",null,e,n),t.push({event:e,listeners:s}),e.target=Zi)))}function uh(t,e){var n={};return n[t.toLowerCase()]=e.toLowerCase(),n["Webkit"+t]="webkit"+e,n["Moz"+t]="moz"+e,n}var Ji={animationend:uh("Animation","AnimationEnd"),animationiteration:uh("Animation","AnimationIteration"),animationstart:uh("Animation","AnimationStart"),transitionend:uh("Transition","TransitionEnd")},gm={},zS={};Or&&(zS=document.createElement("div").style,"AnimationEvent"in window||(delete Ji.animationend.animation,delete Ji.animationiteration.animation,delete Ji.animationstart.animation),"TransitionEvent"in window||delete Ji.transitionend.transition);function Zd(t){if(gm[t])return gm[t];if(!Ji[t])return t;var e=Ji[t],n;for(n in e)if(e.hasOwnProperty(n)&&n in zS)return gm[t]=e[n];return t}var MS=Zd("animationend"),BS=Zd("animationiteration"),VS=Zd("animationstart"),WS=Zd("transitionend"),US=new Map,ww="abort auxClick cancel canPlay canPlayThrough click close contextMenu copy cut drag dragEnd dragEnter dragExit dragLeave dragOver dragStart drop durationChange emptied encrypted ended error gotPointerCapture input invalid keyDown keyPress keyUp load loadedData loadedMetadata loadStart lostPointerCapture mouseDown mouseMove mouseOut mouseOver mouseUp paste pause play playing pointerCancel pointerDown pointerMove pointerOut pointerOver pointerUp progress rateChange reset resize seeked seeking stalled submit suspend timeUpdate touchCancel touchEnd touchStart volumeChange scroll toggle touchMove waiting wheel".split(" ");function Ao(t,e){US.set(t,e),Di(e,[t])}for(var ym=0;ym<ww.length;ym++){var xm=ww[ym],BA=xm.toLowerCase(),VA=xm[0].toUpperCase()+xm.slice(1);Ao(BA,"on"+VA)}Ao(MS,"onAnimationEnd");Ao(BS,"onAnimationIteration");Ao(VS,"onAnimationStart");Ao("dblclick","onDoubleClick");Ao("focusin","onFocus");Ao("focusout","onBlur");Ao(WS,"onTransitionEnd");ka("onMouseEnter",["mouseout","mouseover"]);ka("onMouseLeave",["mouseout","mouseover"]);ka("onPointerEnter",["pointerout","pointerover"]);ka("onPointerLeave",["pointerout","pointerover"]);Di("onChange","change click focusin focusout input keydown keyup selectionchange".split(" "));Di("onSelect","focusout contextmenu dragend focusin keydown keyup mousedown mouseup selectionchange".split(" "));Di("onBeforeInput",["compositionend","keypress","textInput","paste"]);Di("onCompositionEnd","compositionend focusout keydown keypress keyup mousedown".split(" "));Di("onCompositionStart","compositionstart focusout keydown keypress keyup mousedown".split(" "));Di("onCompositionUpdate","compositionupdate focusout keydown keypress keyup mousedown".split(" "));var Il="abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange resize seeked seeking stalled suspend timeupdate volumechange waiting".split(" "),WA=new Set("cancel close invalid load scroll toggle".split(" ").concat(Il));function vw(t,e,n){var s=t.type||"unknown-event";t.currentTarget=n,BR(s,e,void 0,t),t.currentTarget=null}function GS(t,e){e=(e&4)!==0;for(var n=0;n<t.length;n++){var s=t[n],r=s.event;s=s.listeners;e:{var o=void 0;if(e)for(var i=s.length-1;0<=i;i--){var a=s[i],l=a.instance,u=a.currentTarget;if(a=a.listener,l!==o&&r.isPropagationStopped())break e;vw(r,a,u),o=l}else for(i=0;i<s.length;i++){if(a=s[i],l=a.instance,u=a.currentTarget,a=a.listener,l!==o&&r.isPropagationStopped())break e;vw(r,a,u),o=l}}}if(Yh)throw t=hg,Yh=!1,hg=null,t}function Je(t,e){var n=e[vg];n===void 0&&(n=e[vg]=new Set);var s=t+"__bubble";n.has(s)||(HS(e,t,2,!1),n.add(s))}function bm(t,e,n){var s=0;e&&(s|=4),HS(n,t,s,e)}var ch="_reactListening"+Math.random().toString(36).slice(2);function Jl(t){if(!t[ch]){t[ch]=!0,Zk.forEach(function(n){n!=="selectionchange"&&(WA.has(n)||bm(n,!1,t),bm(n,!0,t))});var e=t.nodeType===9?t:t.ownerDocument;e===null||e[ch]||(e[ch]=!0,bm("selectionchange",!1,e))}}function HS(t,e,n,s){switch(TS(e)){case 1:var r=nA;break;case 4:r=sA;break;default:r=s0}n=r.bind(null,e,n,t),r=void 0,!cg||e!=="touchstart"&&e!=="touchmove"&&e!=="wheel"||(r=!0),s?r!==void 0?t.addEventListener(e,n,{capture:!0,passive:r}):t.addEventListener(e,n,!0):r!==void 0?t.addEventListener(e,n,{passive:r}):t.addEventListener(e,n,!1)}function wm(t,e,n,s,r){var o=s;if((e&1)===0&&(e&2)===0&&s!==null)e:for(;;){if(s===null)return;var i=s.tag;if(i===3||i===4){var a=s.stateNode.containerInfo;if(a===r||a.nodeType===8&&a.parentNode===r)break;if(i===4)for(i=s.return;i!==null;){var l=i.tag;if((l===3||l===4)&&(l=i.stateNode.containerInfo,l===r||l.nodeType===8&&l.parentNode===r))return;i=i.return}for(;a!==null;){if(i=si(a),i===null)return;if(l=i.tag,l===5||l===6){s=o=i;continue e}a=a.parentNode}}s=s.return}fS(function(){var u=o,c=Jy(n),h=[];e:{var d=US.get(t);if(d!==void 0){var p=o0,f=t;switch(t){case"keypress":if(Lh(n)===0)break e;case"keydown":case"keyup":p=xA;break;case"focusin":f="focus",p=pm;break;case"focusout":f="blur",p=pm;break;case"beforeblur":case"afterblur":p=pm;break;case"click":if(n.button===2)break e;case"auxclick":case"dblclick":case"mousedown":case"mousemove":case"mouseup":case"mouseout":case"mouseover":case"contextmenu":p=uw;break;case"drag":case"dragend":case"dragenter":case"dragexit":case"dragleave":case"dragover":case"dragstart":case"drop":p=iA;break;case"touchcancel":case"touchend":case"touchmove":case"touchstart":p=vA;break;case MS:case BS:case VS:p=uA;break;case WS:p=SA;break;case"scroll":p=rA;break;case"wheel":p=NA;break;case"copy":case"cut":case"paste":p=hA;break;case"gotpointercapture":case"lostpointercapture":case"pointercancel":case"pointerdown":case"pointermove":case"pointerout":case"pointerover":case"pointerup":p=hw}var m=(e&4)!==0,y=!m&&t==="scroll",g=m?d!==null?d+"Capture":null:d;m=[];for(var x=u,b;x!==null;){b=x;var w=b.stateNode;if(b.tag===5&&w!==null&&(b=w,g!==null&&(w=Kl(x,g),w!=null&&m.push(eu(x,w,b)))),y)break;x=x.return}0<m.length&&(d=new p(d,f,null,n,c),h.push({event:d,listeners:m}))}}if((e&7)===0){e:{if(d=t==="mouseover"||t==="pointerover",p=t==="mouseout"||t==="pointerout",d&&n!==lg&&(f=n.relatedTarget||n.fromElement)&&(si(f)||f[Fr]))break e;if((p||d)&&(d=c.window===c?c:(d=c.ownerDocument)?d.defaultView||d.parentWindow:window,p?(f=n.relatedTarget||n.toElement,p=u,f=f?si(f):null,f!==null&&(y=Ri(f),f!==y||f.tag!==5&&f.tag!==6)&&(f=null)):(p=null,f=u),p!==f)){if(m=uw,w="onMouseLeave",g="onMouseEnter",x="mouse",(t==="pointerout"||t==="pointerover")&&(m=hw,w="onPointerLeave",g="onPointerEnter",x="pointer"),y=p==null?d:ea(p),b=f==null?d:ea(f),d=new m(w,x+"leave",p,n,c),d.target=y,d.relatedTarget=b,w=null,si(c)===u&&(m=new m(g,x+"enter",f,n,c),m.target=b,m.relatedTarget=y,w=m),y=w,p&&f)t:{for(m=p,g=f,x=0,b=m;b;b=Wi(b))x++;for(b=0,w=g;w;w=Wi(w))b++;for(;0<x-b;)m=Wi(m),x--;for(;0<b-x;)g=Wi(g),b--;for(;x--;){if(m===g||g!==null&&m===g.alternate)break t;m=Wi(m),g=Wi(g)}m=null}else m=null;p!==null&&kw(h,d,p,m,!1),f!==null&&y!==null&&kw(h,y,f,m,!0)}}e:{if(d=u?ea(u):window,p=d.nodeName&&d.nodeName.toLowerCase(),p==="select"||p==="input"&&d.type==="file")var k=AA;else if(fw(d))if(OS)k=LA;else{k=OA;var S=_A}else(p=d.nodeName)&&p.toLowerCase()==="input"&&(d.type==="checkbox"||d.type==="radio")&&(k=FA);if(k&&(k=k(t,u))){_S(h,k,n,c);break e}S&&S(t,d,u),t==="focusout"&&(S=d._wrapperState)&&S.controlled&&d.type==="number"&&sg(d,"number",d.value)}switch(S=u?ea(u):window,t){case"focusin":(fw(S)||S.contentEditable==="true")&&(Zi=S,mg=u,zl=null);break;case"focusout":zl=mg=Zi=null;break;case"mousedown":gg=!0;break;case"contextmenu":case"mouseup":case"dragend":gg=!1,bw(h,n,c);break;case"selectionchange":if(MA)break;case"keydown":case"keyup":bw(h,n,c)}var N;if(a0)e:{switch(t){case"compositionstart":var $="onCompositionStart";break e;case"compositionend":$="onCompositionEnd";break e;case"compositionupdate":$="onCompositionUpdate";break e}$=void 0}else Qi?RS(t,n)&&($="onCompositionEnd"):t==="keydown"&&n.keyCode===229&&($="onCompositionStart");$&&(DS&&n.locale!=="ko"&&(Qi||$!=="onCompositionStart"?$==="onCompositionEnd"&&Qi&&(N=ES()):(no=c,r0="value"in no?no.value:no.textContent,Qi=!0)),S=td(u,$),0<S.length&&($=new cw($,t,null,n,c),h.push({event:$,listeners:S}),N?$.data=N:(N=AS(n),N!==null&&($.data=N)))),(N=IA?TA(t,n):EA(t,n))&&(u=td(u,"onBeforeInput"),0<u.length&&(c=new cw("onBeforeInput","beforeinput",null,n,c),h.push({event:c,listeners:u}),c.data=N))}GS(h,e)})}function eu(t,e,n){return{instance:t,listener:e,currentTarget:n}}function td(t,e){for(var n=e+"Capture",s=[];t!==null;){var r=t,o=r.stateNode;r.tag===5&&o!==null&&(r=o,o=Kl(t,n),o!=null&&s.unshift(eu(t,o,r)),o=Kl(t,e),o!=null&&s.push(eu(t,o,r))),t=t.return}return s}function Wi(t){if(t===null)return null;do t=t.return;while(t&&t.tag!==5);return t||null}function kw(t,e,n,s,r){for(var o=e._reactName,i=[];n!==null&&n!==s;){var a=n,l=a.alternate,u=a.stateNode;if(l!==null&&l===s)break;a.tag===5&&u!==null&&(a=u,r?(l=Kl(n,o),l!=null&&i.unshift(eu(n,l,a))):r||(l=Kl(n,o),l!=null&&i.push(eu(n,l,a)))),n=n.return}i.length!==0&&t.push({event:e,listeners:i})}var UA=/\r\n?/g,GA=/\u0000|\uFFFD/g;function Sw(t){return(typeof t=="string"?t:""+t).replace(UA,`
`).replace(GA,"")}function hh(t,e,n){if(e=Sw(e),Sw(t)!==e&&n)throw Error(ee(425))}function nd(){}var yg=null,xg=null;function bg(t,e){return t==="textarea"||t==="noscript"||typeof e.children=="string"||typeof e.children=="number"||typeof e.dangerouslySetInnerHTML=="object"&&e.dangerouslySetInnerHTML!==null&&e.dangerouslySetInnerHTML.__html!=null}var wg=typeof setTimeout=="function"?setTimeout:void 0,HA=typeof clearTimeout=="function"?clearTimeout:void 0,Cw=typeof Promise=="function"?Promise:void 0,jA=typeof queueMicrotask=="function"?queueMicrotask:typeof Cw<"u"?function(t){return Cw.resolve(null).then(t).catch(KA)}:wg;function KA(t){setTimeout(function(){throw t})}function vm(t,e){var n=e,s=0;do{var r=n.nextSibling;if(t.removeChild(n),r&&r.nodeType===8)if(n=r.data,n==="/$"){if(s===0){t.removeChild(r),Yl(e);return}s--}else n!=="$"&&n!=="$?"&&n!=="$!"||s++;n=r}while(n);Yl(e)}function co(t){for(;t!=null;t=t.nextSibling){var e=t.nodeType;if(e===1||e===3)break;if(e===8){if(e=t.data,e==="$"||e==="$!"||e==="$?")break;if(e==="/$")return null}}return t}function Nw(t){t=t.previousSibling;for(var e=0;t;){if(t.nodeType===8){var n=t.data;if(n==="$"||n==="$!"||n==="$?"){if(e===0)return t;e--}else n==="/$"&&e++}t=t.previousSibling}return null}var ja=Math.random().toString(36).slice(2),lr="__reactFiber$"+ja,tu="__reactProps$"+ja,Fr="__reactContainer$"+ja,vg="__reactEvents$"+ja,qA="__reactListeners$"+ja,XA="__reactHandles$"+ja;function si(t){var e=t[lr];if(e)return e;for(var n=t.parentNode;n;){if(e=n[Fr]||n[lr]){if(n=e.alternate,e.child!==null||n!==null&&n.child!==null)for(t=Nw(t);t!==null;){if(n=t[lr])return n;t=Nw(t)}return e}t=n,n=t.parentNode}return null}function Nu(t){return t=t[lr]||t[Fr],!t||t.tag!==5&&t.tag!==6&&t.tag!==13&&t.tag!==3?null:t}function ea(t){if(t.tag===5||t.tag===6)return t.stateNode;throw Error(ee(33))}function Jd(t){return t[tu]||null}var kg=[],ta=-1;function _o(t){return{current:t}}function tt(t){0>ta||(t.current=kg[ta],kg[ta]=null,ta--)}function Xe(t,e){ta++,kg[ta]=t.current,t.current=e}var vo={},un=_o(vo),_n=_o(!1),di=vo;function Sa(t,e){var n=t.type.contextTypes;if(!n)return vo;var s=t.stateNode;if(s&&s.__reactInternalMemoizedUnmaskedChildContext===e)return s.__reactInternalMemoizedMaskedChildContext;var r={},o;for(o in n)r[o]=e[o];return s&&(t=t.stateNode,t.__reactInternalMemoizedUnmaskedChildContext=e,t.__reactInternalMemoizedMaskedChildContext=r),r}function On(t){return t=t.childContextTypes,t!=null}function sd(){tt(_n),tt(un)}function $w(t,e,n){if(un.current!==vo)throw Error(ee(168));Xe(un,e),Xe(_n,n)}function jS(t,e,n){var s=t.stateNode;if(e=e.childContextTypes,typeof s.getChildContext!="function")return n;s=s.getChildContext();for(var r in s)if(!(r in e))throw Error(ee(108,_R(t)||"Unknown",r));return mt({},n,s)}function rd(t){return t=(t=t.stateNode)&&t.__reactInternalMemoizedMergedChildContext||vo,di=un.current,Xe(un,t),Xe(_n,_n.current),!0}function Iw(t,e,n){var s=t.stateNode;if(!s)throw Error(ee(169));n?(t=jS(t,e,di),s.__reactInternalMemoizedMergedChildContext=t,tt(_n),tt(un),Xe(un,t)):tt(_n),Xe(_n,n)}var Cr=null,ep=!1,km=!1;function KS(t){Cr===null?Cr=[t]:Cr.push(t)}function YA(t){ep=!0,KS(t)}function Oo(){if(!km&&Cr!==null){km=!0;var t=0,e=Be;try{var n=Cr;for(Be=1;t<n.length;t++){var s=n[t];do s=s(!0);while(s!==null)}Cr=null,ep=!1}catch(r){throw Cr!==null&&(Cr=Cr.slice(t+1)),xS(e0,Oo),r}finally{Be=e,km=!1}}return null}var na=[],sa=0,od=null,id=0,fs=[],ms=0,pi=null,Er=1,Dr="";function Qo(t,e){na[sa++]=id,na[sa++]=od,od=t,id=e}function qS(t,e,n){fs[ms++]=Er,fs[ms++]=Dr,fs[ms++]=pi,pi=t;var s=Er;t=Dr;var r=32-Gs(s)-1;s&=~(1<<r),n+=1;var o=32-Gs(e)+r;if(30<o){var i=r-r%5;o=(s&(1<<i)-1).toString(32),s>>=i,r-=i,Er=1<<32-Gs(e)+r|n<<r|s,Dr=o+t}else Er=1<<o|n<<r|s,Dr=t}function u0(t){t.return!==null&&(Qo(t,1),qS(t,1,0))}function c0(t){for(;t===od;)od=na[--sa],na[sa]=null,id=na[--sa],na[sa]=null;for(;t===pi;)pi=fs[--ms],fs[ms]=null,Dr=fs[--ms],fs[ms]=null,Er=fs[--ms],fs[ms]=null}var Xn=null,Kn=null,at=!1,Bs=null;function XS(t,e){var n=ys(5,null,null,0);n.elementType="DELETED",n.stateNode=e,n.return=t,e=t.deletions,e===null?(t.deletions=[n],t.flags|=16):e.push(n)}function Tw(t,e){switch(t.tag){case 5:var n=t.type;return e=e.nodeType!==1||n.toLowerCase()!==e.nodeName.toLowerCase()?null:e,e!==null?(t.stateNode=e,Xn=t,Kn=co(e.firstChild),!0):!1;case 6:return e=t.pendingProps===""||e.nodeType!==3?null:e,e!==null?(t.stateNode=e,Xn=t,Kn=null,!0):!1;case 13:return e=e.nodeType!==8?null:e,e!==null?(n=pi!==null?{id:Er,overflow:Dr}:null,t.memoizedState={dehydrated:e,treeContext:n,retryLane:1073741824},n=ys(18,null,null,0),n.stateNode=e,n.return=t,t.child=n,Xn=t,Kn=null,!0):!1;default:return!1}}function Sg(t){return(t.mode&1)!==0&&(t.flags&128)===0}function Cg(t){if(at){var e=Kn;if(e){var n=e;if(!Tw(t,e)){if(Sg(t))throw Error(ee(418));e=co(n.nextSibling);var s=Xn;e&&Tw(t,e)?XS(s,n):(t.flags=t.flags&-4097|2,at=!1,Xn=t)}}else{if(Sg(t))throw Error(ee(418));t.flags=t.flags&-4097|2,at=!1,Xn=t}}}function Ew(t){for(t=t.return;t!==null&&t.tag!==5&&t.tag!==3&&t.tag!==13;)t=t.return;Xn=t}function dh(t){if(t!==Xn)return!1;if(!at)return Ew(t),at=!0,!1;var e;if((e=t.tag!==3)&&!(e=t.tag!==5)&&(e=t.type,e=e!=="head"&&e!=="body"&&!bg(t.type,t.memoizedProps)),e&&(e=Kn)){if(Sg(t))throw YS(),Error(ee(418));for(;e;)XS(t,e),e=co(e.nextSibling)}if(Ew(t),t.tag===13){if(t=t.memoizedState,t=t!==null?t.dehydrated:null,!t)throw Error(ee(317));e:{for(t=t.nextSibling,e=0;t;){if(t.nodeType===8){var n=t.data;if(n==="/$"){if(e===0){Kn=co(t.nextSibling);break e}e--}else n!=="$"&&n!=="$!"&&n!=="$?"||e++}t=t.nextSibling}Kn=null}}else Kn=Xn?co(t.stateNode.nextSibling):null;return!0}function YS(){for(var t=Kn;t;)t=co(t.nextSibling)}function Ca(){Kn=Xn=null,at=!1}function h0(t){Bs===null?Bs=[t]:Bs.push(t)}var QA=Br.ReactCurrentBatchConfig;function zs(t,e){if(t&&t.defaultProps){e=mt({},e),t=t.defaultProps;for(var n in t)e[n]===void 0&&(e[n]=t[n]);return e}return e}var ad=_o(null),ld=null,ra=null,d0=null;function p0(){d0=ra=ld=null}function f0(t){var e=ad.current;tt(ad),t._currentValue=e}function Ng(t,e,n){for(;t!==null;){var s=t.alternate;if((t.childLanes&e)!==e?(t.childLanes|=e,s!==null&&(s.childLanes|=e)):s!==null&&(s.childLanes&e)!==e&&(s.childLanes|=e),t===n)break;t=t.return}}function pa(t,e){ld=t,d0=ra=null,t=t.dependencies,t!==null&&t.firstContext!==null&&((t.lanes&e)!==0&&(Dn=!0),t.firstContext=null)}function Is(t){var e=t._currentValue;if(d0!==t)if(t={context:t,memoizedValue:e,next:null},ra===null){if(ld===null)throw Error(ee(308));ra=t,ld.dependencies={lanes:0,firstContext:t}}else ra=ra.next=t;return e}var ri=null;function m0(t){ri===null?ri=[t]:ri.push(t)}function QS(t,e,n,s){var r=e.interleaved;return r===null?(n.next=n,m0(e)):(n.next=r.next,r.next=n),e.interleaved=n,Lr(t,s)}function Lr(t,e){t.lanes|=e;var n=t.alternate;for(n!==null&&(n.lanes|=e),n=t,t=t.return;t!==null;)t.childLanes|=e,n=t.alternate,n!==null&&(n.childLanes|=e),n=t,t=t.return;return n.tag===3?n.stateNode:null}var Zr=!1;function g0(t){t.updateQueue={baseState:t.memoizedState,firstBaseUpdate:null,lastBaseUpdate:null,shared:{pending:null,interleaved:null,lanes:0},effects:null}}function ZS(t,e){t=t.updateQueue,e.updateQueue===t&&(e.updateQueue={baseState:t.baseState,firstBaseUpdate:t.firstBaseUpdate,lastBaseUpdate:t.lastBaseUpdate,shared:t.shared,effects:t.effects})}function Rr(t,e){return{eventTime:t,lane:e,tag:0,payload:null,callback:null,next:null}}function ho(t,e,n){var s=t.updateQueue;if(s===null)return null;if(s=s.shared,(Fe&2)!==0){var r=s.pending;return r===null?e.next=e:(e.next=r.next,r.next=e),s.pending=e,Lr(t,n)}return r=s.interleaved,r===null?(e.next=e,m0(s)):(e.next=r.next,r.next=e),s.interleaved=e,Lr(t,n)}function Ph(t,e,n){if(e=e.updateQueue,e!==null&&(e=e.shared,(n&4194240)!==0)){var s=e.lanes;s&=t.pendingLanes,n|=s,e.lanes=n,t0(t,n)}}function Dw(t,e){var n=t.updateQueue,s=t.alternate;if(s!==null&&(s=s.updateQueue,n===s)){var r=null,o=null;if(n=n.firstBaseUpdate,n!==null){do{var i={eventTime:n.eventTime,lane:n.lane,tag:n.tag,payload:n.payload,callback:n.callback,next:null};o===null?r=o=i:o=o.next=i,n=n.next}while(n!==null);o===null?r=o=e:o=o.next=e}else r=o=e;n={baseState:s.baseState,firstBaseUpdate:r,lastBaseUpdate:o,shared:s.shared,effects:s.effects},t.updateQueue=n;return}t=n.lastBaseUpdate,t===null?n.firstBaseUpdate=e:t.next=e,n.lastBaseUpdate=e}function ud(t,e,n,s){var r=t.updateQueue;Zr=!1;var o=r.firstBaseUpdate,i=r.lastBaseUpdate,a=r.shared.pending;if(a!==null){r.shared.pending=null;var l=a,u=l.next;l.next=null,i===null?o=u:i.next=u,i=l;var c=t.alternate;c!==null&&(c=c.updateQueue,a=c.lastBaseUpdate,a!==i&&(a===null?c.firstBaseUpdate=u:a.next=u,c.lastBaseUpdate=l))}if(o!==null){var h=r.baseState;i=0,c=u=l=null,a=o;do{var d=a.lane,p=a.eventTime;if((s&d)===d){c!==null&&(c=c.next={eventTime:p,lane:0,tag:a.tag,payload:a.payload,callback:a.callback,next:null});e:{var f=t,m=a;switch(d=e,p=n,m.tag){case 1:if(f=m.payload,typeof f=="function"){h=f.call(p,h,d);break e}h=f;break e;case 3:f.flags=f.flags&-65537|128;case 0:if(f=m.payload,d=typeof f=="function"?f.call(p,h,d):f,d==null)break e;h=mt({},h,d);break e;case 2:Zr=!0}}a.callback!==null&&a.lane!==0&&(t.flags|=64,d=r.effects,d===null?r.effects=[a]:d.push(a))}else p={eventTime:p,lane:d,tag:a.tag,payload:a.payload,callback:a.callback,next:null},c===null?(u=c=p,l=h):c=c.next=p,i|=d;if(a=a.next,a===null){if(a=r.shared.pending,a===null)break;d=a,a=d.next,d.next=null,r.lastBaseUpdate=d,r.shared.pending=null}}while(1);if(c===null&&(l=h),r.baseState=l,r.firstBaseUpdate=u,r.lastBaseUpdate=c,e=r.shared.interleaved,e!==null){r=e;do i|=r.lane,r=r.next;while(r!==e)}else o===null&&(r.shared.lanes=0);mi|=i,t.lanes=i,t.memoizedState=h}}function Rw(t,e,n){if(t=e.effects,e.effects=null,t!==null)for(e=0;e<t.length;e++){var s=t[e],r=s.callback;if(r!==null){if(s.callback=null,s=n,typeof r!="function")throw Error(ee(191,r));r.call(s)}}}var JS=new Qk.Component().refs;function $g(t,e,n,s){e=t.memoizedState,n=n(s,e),n=n==null?e:mt({},e,n),t.memoizedState=n,t.lanes===0&&(t.updateQueue.baseState=n)}var tp={isMounted:function(t){return(t=t._reactInternals)?Ri(t)===t:!1},enqueueSetState:function(t,e,n){t=t._reactInternals;var s=wn(),r=fo(t),o=Rr(s,r);o.payload=e,n!=null&&(o.callback=n),e=ho(t,o,r),e!==null&&(Hs(e,t,r,s),Ph(e,t,r))},enqueueReplaceState:function(t,e,n){t=t._reactInternals;var s=wn(),r=fo(t),o=Rr(s,r);o.tag=1,o.payload=e,n!=null&&(o.callback=n),e=ho(t,o,r),e!==null&&(Hs(e,t,r,s),Ph(e,t,r))},enqueueForceUpdate:function(t,e){t=t._reactInternals;var n=wn(),s=fo(t),r=Rr(n,s);r.tag=2,e!=null&&(r.callback=e),e=ho(t,r,s),e!==null&&(Hs(e,t,s,n),Ph(e,t,s))}};function Aw(t,e,n,s,r,o,i){return t=t.stateNode,typeof t.shouldComponentUpdate=="function"?t.shouldComponentUpdate(s,o,i):e.prototype&&e.prototype.isPureReactComponent?!Zl(n,s)||!Zl(r,o):!0}function eC(t,e,n){var s=!1,r=vo,o=e.contextType;return typeof o=="object"&&o!==null?o=Is(o):(r=On(e)?di:un.current,s=e.contextTypes,o=(s=s!=null)?Sa(t,r):vo),e=new e(n,o),t.memoizedState=e.state!==null&&e.state!==void 0?e.state:null,e.updater=tp,t.stateNode=e,e._reactInternals=t,s&&(t=t.stateNode,t.__reactInternalMemoizedUnmaskedChildContext=r,t.__reactInternalMemoizedMaskedChildContext=o),e}function _w(t,e,n,s){t=e.state,typeof e.componentWillReceiveProps=="function"&&e.componentWillReceiveProps(n,s),typeof e.UNSAFE_componentWillReceiveProps=="function"&&e.UNSAFE_componentWillReceiveProps(n,s),e.state!==t&&tp.enqueueReplaceState(e,e.state,null)}function Ig(t,e,n,s){var r=t.stateNode;r.props=n,r.state=t.memoizedState,r.refs=JS,g0(t);var o=e.contextType;typeof o=="object"&&o!==null?r.context=Is(o):(o=On(e)?di:un.current,r.context=Sa(t,o)),r.state=t.memoizedState,o=e.getDerivedStateFromProps,typeof o=="function"&&($g(t,e,o,n),r.state=t.memoizedState),typeof e.getDerivedStateFromProps=="function"||typeof r.getSnapshotBeforeUpdate=="function"||typeof r.UNSAFE_componentWillMount!="function"&&typeof r.componentWillMount!="function"||(e=r.state,typeof r.componentWillMount=="function"&&r.componentWillMount(),typeof r.UNSAFE_componentWillMount=="function"&&r.UNSAFE_componentWillMount(),e!==r.state&&tp.enqueueReplaceState(r,r.state,null),ud(t,n,r,s),r.state=t.memoizedState),typeof r.componentDidMount=="function"&&(t.flags|=4194308)}function yl(t,e,n){if(t=n.ref,t!==null&&typeof t!="function"&&typeof t!="object"){if(n._owner){if(n=n._owner,n){if(n.tag!==1)throw Error(ee(309));var s=n.stateNode}if(!s)throw Error(ee(147,t));var r=s,o=""+t;return e!==null&&e.ref!==null&&typeof e.ref=="function"&&e.ref._stringRef===o?e.ref:(e=function(i){var a=r.refs;a===JS&&(a=r.refs={}),i===null?delete a[o]:a[o]=i},e._stringRef=o,e)}if(typeof t!="string")throw Error(ee(284));if(!n._owner)throw Error(ee(290,t))}return t}function ph(t,e){throw t=Object.prototype.toString.call(e),Error(ee(31,t==="[object Object]"?"object with keys {"+Object.keys(e).join(", ")+"}":t))}function Ow(t){var e=t._init;return e(t._payload)}function tC(t){function e(g,x){if(t){var b=g.deletions;b===null?(g.deletions=[x],g.flags|=16):b.push(x)}}function n(g,x){if(!t)return null;for(;x!==null;)e(g,x),x=x.sibling;return null}function s(g,x){for(g=new Map;x!==null;)x.key!==null?g.set(x.key,x):g.set(x.index,x),x=x.sibling;return g}function r(g,x){return g=mo(g,x),g.index=0,g.sibling=null,g}function o(g,x,b){return g.index=b,t?(b=g.alternate,b!==null?(b=b.index,b<x?(g.flags|=2,x):b):(g.flags|=2,x)):(g.flags|=1048576,x)}function i(g){return t&&g.alternate===null&&(g.flags|=2),g}function a(g,x,b,w){return x===null||x.tag!==6?(x=Em(b,g.mode,w),x.return=g,x):(x=r(x,b),x.return=g,x)}function l(g,x,b,w){var k=b.type;return k===Yi?c(g,x,b.props.children,w,b.key):x!==null&&(x.elementType===k||typeof k=="object"&&k!==null&&k.$$typeof===Qr&&Ow(k)===x.type)?(w=r(x,b.props),w.ref=yl(g,x,b),w.return=g,w):(w=Uh(b.type,b.key,b.props,null,g.mode,w),w.ref=yl(g,x,b),w.return=g,w)}function u(g,x,b,w){return x===null||x.tag!==4||x.stateNode.containerInfo!==b.containerInfo||x.stateNode.implementation!==b.implementation?(x=Dm(b,g.mode,w),x.return=g,x):(x=r(x,b.children||[]),x.return=g,x)}function c(g,x,b,w,k){return x===null||x.tag!==7?(x=ui(b,g.mode,w,k),x.return=g,x):(x=r(x,b),x.return=g,x)}function h(g,x,b){if(typeof x=="string"&&x!==""||typeof x=="number")return x=Em(""+x,g.mode,b),x.return=g,x;if(typeof x=="object"&&x!==null){switch(x.$$typeof){case nh:return b=Uh(x.type,x.key,x.props,null,g.mode,b),b.ref=yl(g,null,x),b.return=g,b;case Xi:return x=Dm(x,g.mode,b),x.return=g,x;case Qr:var w=x._init;return h(g,w(x._payload),b)}if(Nl(x)||dl(x))return x=ui(x,g.mode,b,null),x.return=g,x;ph(g,x)}return null}function d(g,x,b,w){var k=x!==null?x.key:null;if(typeof b=="string"&&b!==""||typeof b=="number")return k!==null?null:a(g,x,""+b,w);if(typeof b=="object"&&b!==null){switch(b.$$typeof){case nh:return b.key===k?l(g,x,b,w):null;case Xi:return b.key===k?u(g,x,b,w):null;case Qr:return k=b._init,d(g,x,k(b._payload),w)}if(Nl(b)||dl(b))return k!==null?null:c(g,x,b,w,null);ph(g,b)}return null}function p(g,x,b,w,k){if(typeof w=="string"&&w!==""||typeof w=="number")return g=g.get(b)||null,a(x,g,""+w,k);if(typeof w=="object"&&w!==null){switch(w.$$typeof){case nh:return g=g.get(w.key===null?b:w.key)||null,l(x,g,w,k);case Xi:return g=g.get(w.key===null?b:w.key)||null,u(x,g,w,k);case Qr:var S=w._init;return p(g,x,b,S(w._payload),k)}if(Nl(w)||dl(w))return g=g.get(b)||null,c(x,g,w,k,null);ph(x,w)}return null}function f(g,x,b,w){for(var k=null,S=null,N=x,$=x=0,T=null;N!==null&&$<b.length;$++){N.index>$?(T=N,N=null):T=N.sibling;var E=d(g,N,b[$],w);if(E===null){N===null&&(N=T);break}t&&N&&E.alternate===null&&e(g,N),x=o(E,x,$),S===null?k=E:S.sibling=E,S=E,N=T}if($===b.length)return n(g,N),at&&Qo(g,$),k;if(N===null){for(;$<b.length;$++)N=h(g,b[$],w),N!==null&&(x=o(N,x,$),S===null?k=N:S.sibling=N,S=N);return at&&Qo(g,$),k}for(N=s(g,N);$<b.length;$++)T=p(N,g,$,b[$],w),T!==null&&(t&&T.alternate!==null&&N.delete(T.key===null?$:T.key),x=o(T,x,$),S===null?k=T:S.sibling=T,S=T);return t&&N.forEach(function(F){return e(g,F)}),at&&Qo(g,$),k}function m(g,x,b,w){var k=dl(b);if(typeof k!="function")throw Error(ee(150));if(b=k.call(b),b==null)throw Error(ee(151));for(var S=k=null,N=x,$=x=0,T=null,E=b.next();N!==null&&!E.done;$++,E=b.next()){N.index>$?(T=N,N=null):T=N.sibling;var F=d(g,N,E.value,w);if(F===null){N===null&&(N=T);break}t&&N&&F.alternate===null&&e(g,N),x=o(F,x,$),S===null?k=F:S.sibling=F,S=F,N=T}if(E.done)return n(g,N),at&&Qo(g,$),k;if(N===null){for(;!E.done;$++,E=b.next())E=h(g,E.value,w),E!==null&&(x=o(E,x,$),S===null?k=E:S.sibling=E,S=E);return at&&Qo(g,$),k}for(N=s(g,N);!E.done;$++,E=b.next())E=p(N,g,$,E.value,w),E!==null&&(t&&E.alternate!==null&&N.delete(E.key===null?$:E.key),x=o(E,x,$),S===null?k=E:S.sibling=E,S=E);return t&&N.forEach(function(M){return e(g,M)}),at&&Qo(g,$),k}function y(g,x,b,w){if(typeof b=="object"&&b!==null&&b.type===Yi&&b.key===null&&(b=b.props.children),typeof b=="object"&&b!==null){switch(b.$$typeof){case nh:e:{for(var k=b.key,S=x;S!==null;){if(S.key===k){if(k=b.type,k===Yi){if(S.tag===7){n(g,S.sibling),x=r(S,b.props.children),x.return=g,g=x;break e}}else if(S.elementType===k||typeof k=="object"&&k!==null&&k.$$typeof===Qr&&Ow(k)===S.type){n(g,S.sibling),x=r(S,b.props),x.ref=yl(g,S,b),x.return=g,g=x;break e}n(g,S);break}else e(g,S);S=S.sibling}b.type===Yi?(x=ui(b.props.children,g.mode,w,b.key),x.return=g,g=x):(w=Uh(b.type,b.key,b.props,null,g.mode,w),w.ref=yl(g,x,b),w.return=g,g=w)}return i(g);case Xi:e:{for(S=b.key;x!==null;){if(x.key===S)if(x.tag===4&&x.stateNode.containerInfo===b.containerInfo&&x.stateNode.implementation===b.implementation){n(g,x.sibling),x=r(x,b.children||[]),x.return=g,g=x;break e}else{n(g,x);break}else e(g,x);x=x.sibling}x=Dm(b,g.mode,w),x.return=g,g=x}return i(g);case Qr:return S=b._init,y(g,x,S(b._payload),w)}if(Nl(b))return f(g,x,b,w);if(dl(b))return m(g,x,b,w);ph(g,b)}return typeof b=="string"&&b!==""||typeof b=="number"?(b=""+b,x!==null&&x.tag===6?(n(g,x.sibling),x=r(x,b),x.return=g,g=x):(n(g,x),x=Em(b,g.mode,w),x.return=g,g=x),i(g)):n(g,x)}return y}var Na=tC(!0),nC=tC(!1),$u={},dr=_o($u),nu=_o($u),su=_o($u);function oi(t){if(t===$u)throw Error(ee(174));return t}function y0(t,e){switch(Xe(su,e),Xe(nu,t),Xe(dr,$u),t=e.nodeType,t){case 9:case 11:e=(e=e.documentElement)?e.namespaceURI:og(null,"");break;default:t=t===8?e.parentNode:e,e=t.namespaceURI||null,t=t.tagName,e=og(e,t)}tt(dr),Xe(dr,e)}function $a(){tt(dr),tt(nu),tt(su)}function sC(t){oi(su.current);var e=oi(dr.current),n=og(e,t.type);e!==n&&(Xe(nu,t),Xe(dr,n))}function x0(t){nu.current===t&&(tt(dr),tt(nu))}var ht=_o(0);function cd(t){for(var e=t;e!==null;){if(e.tag===13){var n=e.memoizedState;if(n!==null&&(n=n.dehydrated,n===null||n.data==="$?"||n.data==="$!"))return e}else if(e.tag===19&&e.memoizedProps.revealOrder!==void 0){if((e.flags&128)!==0)return e}else if(e.child!==null){e.child.return=e,e=e.child;continue}if(e===t)break;for(;e.sibling===null;){if(e.return===null||e.return===t)return null;e=e.return}e.sibling.return=e.return,e=e.sibling}return null}var Sm=[];function b0(){for(var t=0;t<Sm.length;t++)Sm[t]._workInProgressVersionPrimary=null;Sm.length=0}var zh=Br.ReactCurrentDispatcher,Cm=Br.ReactCurrentBatchConfig,fi=0,pt=null,At=null,Ut=null,hd=!1,Ml=!1,ru=0,ZA=0;function tn(){throw Error(ee(321))}function w0(t,e){if(e===null)return!1;for(var n=0;n<e.length&&n<t.length;n++)if(!qs(t[n],e[n]))return!1;return!0}function v0(t,e,n,s,r,o){if(fi=o,pt=e,e.memoizedState=null,e.updateQueue=null,e.lanes=0,zh.current=t===null||t.memoizedState===null?n_:s_,t=n(s,r),Ml){o=0;do{if(Ml=!1,ru=0,25<=o)throw Error(ee(301));o+=1,Ut=At=null,e.updateQueue=null,zh.current=r_,t=n(s,r)}while(Ml)}if(zh.current=dd,e=At!==null&&At.next!==null,fi=0,Ut=At=pt=null,hd=!1,e)throw Error(ee(300));return t}function k0(){var t=ru!==0;return ru=0,t}function sr(){var t={memoizedState:null,baseState:null,baseQueue:null,queue:null,next:null};return Ut===null?pt.memoizedState=Ut=t:Ut=Ut.next=t,Ut}function Ts(){if(At===null){var t=pt.alternate;t=t!==null?t.memoizedState:null}else t=At.next;var e=Ut===null?pt.memoizedState:Ut.next;if(e!==null)Ut=e,At=t;else{if(t===null)throw Error(ee(310));At=t,t={memoizedState:At.memoizedState,baseState:At.baseState,baseQueue:At.baseQueue,queue:At.queue,next:null},Ut===null?pt.memoizedState=Ut=t:Ut=Ut.next=t}return Ut}function ou(t,e){return typeof e=="function"?e(t):e}function Nm(t){var e=Ts(),n=e.queue;if(n===null)throw Error(ee(311));n.lastRenderedReducer=t;var s=At,r=s.baseQueue,o=n.pending;if(o!==null){if(r!==null){var i=r.next;r.next=o.next,o.next=i}s.baseQueue=r=o,n.pending=null}if(r!==null){o=r.next,s=s.baseState;var a=i=null,l=null,u=o;do{var c=u.lane;if((fi&c)===c)l!==null&&(l=l.next={lane:0,action:u.action,hasEagerState:u.hasEagerState,eagerState:u.eagerState,next:null}),s=u.hasEagerState?u.eagerState:t(s,u.action);else{var h={lane:c,action:u.action,hasEagerState:u.hasEagerState,eagerState:u.eagerState,next:null};l===null?(a=l=h,i=s):l=l.next=h,pt.lanes|=c,mi|=c}u=u.next}while(u!==null&&u!==o);l===null?i=s:l.next=a,qs(s,e.memoizedState)||(Dn=!0),e.memoizedState=s,e.baseState=i,e.baseQueue=l,n.lastRenderedState=s}if(t=n.interleaved,t!==null){r=t;do o=r.lane,pt.lanes|=o,mi|=o,r=r.next;while(r!==t)}else r===null&&(n.lanes=0);return[e.memoizedState,n.dispatch]}function $m(t){var e=Ts(),n=e.queue;if(n===null)throw Error(ee(311));n.lastRenderedReducer=t;var s=n.dispatch,r=n.pending,o=e.memoizedState;if(r!==null){n.pending=null;var i=r=r.next;do o=t(o,i.action),i=i.next;while(i!==r);qs(o,e.memoizedState)||(Dn=!0),e.memoizedState=o,e.baseQueue===null&&(e.baseState=o),n.lastRenderedState=o}return[o,s]}function rC(){}function oC(t,e){var n=pt,s=Ts(),r=e(),o=!qs(s.memoizedState,r);if(o&&(s.memoizedState=r,Dn=!0),s=s.queue,S0(lC.bind(null,n,s,t),[t]),s.getSnapshot!==e||o||Ut!==null&&Ut.memoizedState.tag&1){if(n.flags|=2048,iu(9,aC.bind(null,n,s,r,e),void 0,null),Ht===null)throw Error(ee(349));(fi&30)!==0||iC(n,e,r)}return r}function iC(t,e,n){t.flags|=16384,t={getSnapshot:e,value:n},e=pt.updateQueue,e===null?(e={lastEffect:null,stores:null},pt.updateQueue=e,e.stores=[t]):(n=e.stores,n===null?e.stores=[t]:n.push(t))}function aC(t,e,n,s){e.value=n,e.getSnapshot=s,uC(e)&&cC(t)}function lC(t,e,n){return n(function(){uC(e)&&cC(t)})}function uC(t){var e=t.getSnapshot;t=t.value;try{var n=e();return!qs(t,n)}catch{return!0}}function cC(t){var e=Lr(t,1);e!==null&&Hs(e,t,1,-1)}function Fw(t){var e=sr();return typeof t=="function"&&(t=t()),e.memoizedState=e.baseState=t,t={pending:null,interleaved:null,lanes:0,dispatch:null,lastRenderedReducer:ou,lastRenderedState:t},e.queue=t,t=t.dispatch=t_.bind(null,pt,t),[e.memoizedState,t]}function iu(t,e,n,s){return t={tag:t,create:e,destroy:n,deps:s,next:null},e=pt.updateQueue,e===null?(e={lastEffect:null,stores:null},pt.updateQueue=e,e.lastEffect=t.next=t):(n=e.lastEffect,n===null?e.lastEffect=t.next=t:(s=n.next,n.next=t,t.next=s,e.lastEffect=t)),t}function hC(){return Ts().memoizedState}function Mh(t,e,n,s){var r=sr();pt.flags|=t,r.memoizedState=iu(1|e,n,void 0,s===void 0?null:s)}function np(t,e,n,s){var r=Ts();s=s===void 0?null:s;var o=void 0;if(At!==null){var i=At.memoizedState;if(o=i.destroy,s!==null&&w0(s,i.deps)){r.memoizedState=iu(e,n,o,s);return}}pt.flags|=t,r.memoizedState=iu(1|e,n,o,s)}function Lw(t,e){return Mh(8390656,8,t,e)}function S0(t,e){return np(2048,8,t,e)}function dC(t,e){return np(4,2,t,e)}function pC(t,e){return np(4,4,t,e)}function fC(t,e){if(typeof e=="function")return t=t(),e(t),function(){e(null)};if(e!=null)return t=t(),e.current=t,function(){e.current=null}}function mC(t,e,n){return n=n!=null?n.concat([t]):null,np(4,4,fC.bind(null,e,t),n)}function C0(){}function gC(t,e){var n=Ts();e=e===void 0?null:e;var s=n.memoizedState;return s!==null&&e!==null&&w0(e,s[1])?s[0]:(n.memoizedState=[t,e],t)}function yC(t,e){var n=Ts();e=e===void 0?null:e;var s=n.memoizedState;return s!==null&&e!==null&&w0(e,s[1])?s[0]:(t=t(),n.memoizedState=[t,e],t)}function xC(t,e,n){return(fi&21)===0?(t.baseState&&(t.baseState=!1,Dn=!0),t.memoizedState=n):(qs(n,e)||(n=vS(),pt.lanes|=n,mi|=n,t.baseState=!0),e)}function JA(t,e){var n=Be;Be=n!==0&&4>n?n:4,t(!0);var s=Cm.transition;Cm.transition={};try{t(!1),e()}finally{Be=n,Cm.transition=s}}function bC(){return Ts().memoizedState}function e_(t,e,n){var s=fo(t);if(n={lane:s,action:n,hasEagerState:!1,eagerState:null,next:null},wC(t))vC(e,n);else if(n=QS(t,e,n,s),n!==null){var r=wn();Hs(n,t,s,r),kC(n,e,s)}}function t_(t,e,n){var s=fo(t),r={lane:s,action:n,hasEagerState:!1,eagerState:null,next:null};if(wC(t))vC(e,r);else{var o=t.alternate;if(t.lanes===0&&(o===null||o.lanes===0)&&(o=e.lastRenderedReducer,o!==null))try{var i=e.lastRenderedState,a=o(i,n);if(r.hasEagerState=!0,r.eagerState=a,qs(a,i)){var l=e.interleaved;l===null?(r.next=r,m0(e)):(r.next=l.next,l.next=r),e.interleaved=r;return}}catch{}finally{}n=QS(t,e,r,s),n!==null&&(r=wn(),Hs(n,t,s,r),kC(n,e,s))}}function wC(t){var e=t.alternate;return t===pt||e!==null&&e===pt}function vC(t,e){Ml=hd=!0;var n=t.pending;n===null?e.next=e:(e.next=n.next,n.next=e),t.pending=e}function kC(t,e,n){if((n&4194240)!==0){var s=e.lanes;s&=t.pendingLanes,n|=s,e.lanes=n,t0(t,n)}}var dd={readContext:Is,useCallback:tn,useContext:tn,useEffect:tn,useImperativeHandle:tn,useInsertionEffect:tn,useLayoutEffect:tn,useMemo:tn,useReducer:tn,useRef:tn,useState:tn,useDebugValue:tn,useDeferredValue:tn,useTransition:tn,useMutableSource:tn,useSyncExternalStore:tn,useId:tn,unstable_isNewReconciler:!1},n_={readContext:Is,useCallback:function(t,e){return sr().memoizedState=[t,e===void 0?null:e],t},useContext:Is,useEffect:Lw,useImperativeHandle:function(t,e,n){return n=n!=null?n.concat([t]):null,Mh(4194308,4,fC.bind(null,e,t),n)},useLayoutEffect:function(t,e){return Mh(4194308,4,t,e)},useInsertionEffect:function(t,e){return Mh(4,2,t,e)},useMemo:function(t,e){var n=sr();return e=e===void 0?null:e,t=t(),n.memoizedState=[t,e],t},useReducer:function(t,e,n){var s=sr();return e=n!==void 0?n(e):e,s.memoizedState=s.baseState=e,t={pending:null,interleaved:null,lanes:0,dispatch:null,lastRenderedReducer:t,lastRenderedState:e},s.queue=t,t=t.dispatch=e_.bind(null,pt,t),[s.memoizedState,t]},useRef:function(t){var e=sr();return t={current:t},e.memoizedState=t},useState:Fw,useDebugValue:C0,useDeferredValue:function(t){return sr().memoizedState=t},useTransition:function(){var t=Fw(!1),e=t[0];return t=JA.bind(null,t[1]),sr().memoizedState=t,[e,t]},useMutableSource:function(){},useSyncExternalStore:function(t,e,n){var s=pt,r=sr();if(at){if(n===void 0)throw Error(ee(407));n=n()}else{if(n=e(),Ht===null)throw Error(ee(349));(fi&30)!==0||iC(s,e,n)}r.memoizedState=n;var o={value:n,getSnapshot:e};return r.queue=o,Lw(lC.bind(null,s,o,t),[t]),s.flags|=2048,iu(9,aC.bind(null,s,o,n,e),void 0,null),n},useId:function(){var t=sr(),e=Ht.identifierPrefix;if(at){var n=Dr,s=Er;n=(s&~(1<<32-Gs(s)-1)).toString(32)+n,e=":"+e+"R"+n,n=ru++,0<n&&(e+="H"+n.toString(32)),e+=":"}else n=ZA++,e=":"+e+"r"+n.toString(32)+":";return t.memoizedState=e},unstable_isNewReconciler:!1},s_={readContext:Is,useCallback:gC,useContext:Is,useEffect:S0,useImperativeHandle:mC,useInsertionEffect:dC,useLayoutEffect:pC,useMemo:yC,useReducer:Nm,useRef:hC,useState:function(){return Nm(ou)},useDebugValue:C0,useDeferredValue:function(t){var e=Ts();return xC(e,At.memoizedState,t)},useTransition:function(){var t=Nm(ou)[0],e=Ts().memoizedState;return[t,e]},useMutableSource:rC,useSyncExternalStore:oC,useId:bC,unstable_isNewReconciler:!1},r_={readContext:Is,useCallback:gC,useContext:Is,useEffect:S0,useImperativeHandle:mC,useInsertionEffect:dC,useLayoutEffect:pC,useMemo:yC,useReducer:$m,useRef:hC,useState:function(){return $m(ou)},useDebugValue:C0,useDeferredValue:function(t){var e=Ts();return At===null?e.memoizedState=t:xC(e,At.memoizedState,t)},useTransition:function(){var t=$m(ou)[0],e=Ts().memoizedState;return[t,e]},useMutableSource:rC,useSyncExternalStore:oC,useId:bC,unstable_isNewReconciler:!1};function Ia(t,e){try{var n="",s=e;do n+=AR(s),s=s.return;while(s);var r=n}catch(o){r=`
Error generating stack: `+o.message+`
`+o.stack}return{value:t,source:e,stack:r,digest:null}}function Im(t,e,n){return{value:t,source:null,stack:n!=null?n:null,digest:e!=null?e:null}}function Tg(t,e){try{console.error(e.value)}catch(n){setTimeout(function(){throw n})}}var o_=typeof WeakMap=="function"?WeakMap:Map;function SC(t,e,n){n=Rr(-1,n),n.tag=3,n.payload={element:null};var s=e.value;return n.callback=function(){fd||(fd=!0,zg=s),Tg(t,e)},n}function CC(t,e,n){n=Rr(-1,n),n.tag=3;var s=t.type.getDerivedStateFromError;if(typeof s=="function"){var r=e.value;n.payload=function(){return s(r)},n.callback=function(){Tg(t,e)}}var o=t.stateNode;return o!==null&&typeof o.componentDidCatch=="function"&&(n.callback=function(){Tg(t,e),typeof s!="function"&&(po===null?po=new Set([this]):po.add(this));var i=e.stack;this.componentDidCatch(e.value,{componentStack:i!==null?i:""})}),n}function Pw(t,e,n){var s=t.pingCache;if(s===null){s=t.pingCache=new o_;var r=new Set;s.set(e,r)}else r=s.get(e),r===void 0&&(r=new Set,s.set(e,r));r.has(n)||(r.add(n),t=b_.bind(null,t,e,n),e.then(t,t))}function zw(t){do{var e;if((e=t.tag===13)&&(e=t.memoizedState,e=e!==null?e.dehydrated!==null:!0),e)return t;t=t.return}while(t!==null);return null}function Mw(t,e,n,s,r){return(t.mode&1)===0?(t===e?t.flags|=65536:(t.flags|=128,n.flags|=131072,n.flags&=-52805,n.tag===1&&(n.alternate===null?n.tag=17:(e=Rr(-1,1),e.tag=2,ho(n,e,1))),n.lanes|=1),t):(t.flags|=65536,t.lanes=r,t)}var i_=Br.ReactCurrentOwner,Dn=!1;function fn(t,e,n,s){e.child=t===null?nC(e,null,n,s):Na(e,t.child,n,s)}function Bw(t,e,n,s,r){n=n.render;var o=e.ref;return pa(e,r),s=v0(t,e,n,s,o,r),n=k0(),t!==null&&!Dn?(e.updateQueue=t.updateQueue,e.flags&=-2053,t.lanes&=~r,Pr(t,e,r)):(at&&n&&u0(e),e.flags|=1,fn(t,e,s,r),e.child)}function Vw(t,e,n,s,r){if(t===null){var o=n.type;return typeof o=="function"&&!A0(o)&&o.defaultProps===void 0&&n.compare===null&&n.defaultProps===void 0?(e.tag=15,e.type=o,NC(t,e,o,s,r)):(t=Uh(n.type,null,s,e,e.mode,r),t.ref=e.ref,t.return=e,e.child=t)}if(o=t.child,(t.lanes&r)===0){var i=o.memoizedProps;if(n=n.compare,n=n!==null?n:Zl,n(i,s)&&t.ref===e.ref)return Pr(t,e,r)}return e.flags|=1,t=mo(o,s),t.ref=e.ref,t.return=e,e.child=t}function NC(t,e,n,s,r){if(t!==null){var o=t.memoizedProps;if(Zl(o,s)&&t.ref===e.ref)if(Dn=!1,e.pendingProps=s=o,(t.lanes&r)!==0)(t.flags&131072)!==0&&(Dn=!0);else return e.lanes=t.lanes,Pr(t,e,r)}return Eg(t,e,n,s,r)}function $C(t,e,n){var s=e.pendingProps,r=s.children,o=t!==null?t.memoizedState:null;if(s.mode==="hidden")if((e.mode&1)===0)e.memoizedState={baseLanes:0,cachePool:null,transitions:null},Xe(ia,Hn),Hn|=n;else{if((n&1073741824)===0)return t=o!==null?o.baseLanes|n:n,e.lanes=e.childLanes=1073741824,e.memoizedState={baseLanes:t,cachePool:null,transitions:null},e.updateQueue=null,Xe(ia,Hn),Hn|=t,null;e.memoizedState={baseLanes:0,cachePool:null,transitions:null},s=o!==null?o.baseLanes:n,Xe(ia,Hn),Hn|=s}else o!==null?(s=o.baseLanes|n,e.memoizedState=null):s=n,Xe(ia,Hn),Hn|=s;return fn(t,e,r,n),e.child}function IC(t,e){var n=e.ref;(t===null&&n!==null||t!==null&&t.ref!==n)&&(e.flags|=512,e.flags|=2097152)}function Eg(t,e,n,s,r){var o=On(n)?di:un.current;return o=Sa(e,o),pa(e,r),n=v0(t,e,n,s,o,r),s=k0(),t!==null&&!Dn?(e.updateQueue=t.updateQueue,e.flags&=-2053,t.lanes&=~r,Pr(t,e,r)):(at&&s&&u0(e),e.flags|=1,fn(t,e,n,r),e.child)}function Ww(t,e,n,s,r){if(On(n)){var o=!0;rd(e)}else o=!1;if(pa(e,r),e.stateNode===null)Bh(t,e),eC(e,n,s),Ig(e,n,s,r),s=!0;else if(t===null){var i=e.stateNode,a=e.memoizedProps;i.props=a;var l=i.context,u=n.contextType;typeof u=="object"&&u!==null?u=Is(u):(u=On(n)?di:un.current,u=Sa(e,u));var c=n.getDerivedStateFromProps,h=typeof c=="function"||typeof i.getSnapshotBeforeUpdate=="function";h||typeof i.UNSAFE_componentWillReceiveProps!="function"&&typeof i.componentWillReceiveProps!="function"||(a!==s||l!==u)&&_w(e,i,s,u),Zr=!1;var d=e.memoizedState;i.state=d,ud(e,s,i,r),l=e.memoizedState,a!==s||d!==l||_n.current||Zr?(typeof c=="function"&&($g(e,n,c,s),l=e.memoizedState),(a=Zr||Aw(e,n,a,s,d,l,u))?(h||typeof i.UNSAFE_componentWillMount!="function"&&typeof i.componentWillMount!="function"||(typeof i.componentWillMount=="function"&&i.componentWillMount(),typeof i.UNSAFE_componentWillMount=="function"&&i.UNSAFE_componentWillMount()),typeof i.componentDidMount=="function"&&(e.flags|=4194308)):(typeof i.componentDidMount=="function"&&(e.flags|=4194308),e.memoizedProps=s,e.memoizedState=l),i.props=s,i.state=l,i.context=u,s=a):(typeof i.componentDidMount=="function"&&(e.flags|=4194308),s=!1)}else{i=e.stateNode,ZS(t,e),a=e.memoizedProps,u=e.type===e.elementType?a:zs(e.type,a),i.props=u,h=e.pendingProps,d=i.context,l=n.contextType,typeof l=="object"&&l!==null?l=Is(l):(l=On(n)?di:un.current,l=Sa(e,l));var p=n.getDerivedStateFromProps;(c=typeof p=="function"||typeof i.getSnapshotBeforeUpdate=="function")||typeof i.UNSAFE_componentWillReceiveProps!="function"&&typeof i.componentWillReceiveProps!="function"||(a!==h||d!==l)&&_w(e,i,s,l),Zr=!1,d=e.memoizedState,i.state=d,ud(e,s,i,r);var f=e.memoizedState;a!==h||d!==f||_n.current||Zr?(typeof p=="function"&&($g(e,n,p,s),f=e.memoizedState),(u=Zr||Aw(e,n,u,s,d,f,l)||!1)?(c||typeof i.UNSAFE_componentWillUpdate!="function"&&typeof i.componentWillUpdate!="function"||(typeof i.componentWillUpdate=="function"&&i.componentWillUpdate(s,f,l),typeof i.UNSAFE_componentWillUpdate=="function"&&i.UNSAFE_componentWillUpdate(s,f,l)),typeof i.componentDidUpdate=="function"&&(e.flags|=4),typeof i.getSnapshotBeforeUpdate=="function"&&(e.flags|=1024)):(typeof i.componentDidUpdate!="function"||a===t.memoizedProps&&d===t.memoizedState||(e.flags|=4),typeof i.getSnapshotBeforeUpdate!="function"||a===t.memoizedProps&&d===t.memoizedState||(e.flags|=1024),e.memoizedProps=s,e.memoizedState=f),i.props=s,i.state=f,i.context=l,s=u):(typeof i.componentDidUpdate!="function"||a===t.memoizedProps&&d===t.memoizedState||(e.flags|=4),typeof i.getSnapshotBeforeUpdate!="function"||a===t.memoizedProps&&d===t.memoizedState||(e.flags|=1024),s=!1)}return Dg(t,e,n,s,o,r)}function Dg(t,e,n,s,r,o){IC(t,e);var i=(e.flags&128)!==0;if(!s&&!i)return r&&Iw(e,n,!1),Pr(t,e,o);s=e.stateNode,i_.current=e;var a=i&&typeof n.getDerivedStateFromError!="function"?null:s.render();return e.flags|=1,t!==null&&i?(e.child=Na(e,t.child,null,o),e.child=Na(e,null,a,o)):fn(t,e,a,o),e.memoizedState=s.state,r&&Iw(e,n,!0),e.child}function TC(t){var e=t.stateNode;e.pendingContext?$w(t,e.pendingContext,e.pendingContext!==e.context):e.context&&$w(t,e.context,!1),y0(t,e.containerInfo)}function Uw(t,e,n,s,r){return Ca(),h0(r),e.flags|=256,fn(t,e,n,s),e.child}var Rg={dehydrated:null,treeContext:null,retryLane:0};function Ag(t){return{baseLanes:t,cachePool:null,transitions:null}}function EC(t,e,n){var s=e.pendingProps,r=ht.current,o=!1,i=(e.flags&128)!==0,a;if((a=i)||(a=t!==null&&t.memoizedState===null?!1:(r&2)!==0),a?(o=!0,e.flags&=-129):(t===null||t.memoizedState!==null)&&(r|=1),Xe(ht,r&1),t===null)return Cg(e),t=e.memoizedState,t!==null&&(t=t.dehydrated,t!==null)?((e.mode&1)===0?e.lanes=1:t.data==="$!"?e.lanes=8:e.lanes=1073741824,null):(i=s.children,t=s.fallback,o?(s=e.mode,o=e.child,i={mode:"hidden",children:i},(s&1)===0&&o!==null?(o.childLanes=0,o.pendingProps=i):o=op(i,s,0,null),t=ui(t,s,n,null),o.return=e,t.return=e,o.sibling=t,e.child=o,e.child.memoizedState=Ag(n),e.memoizedState=Rg,t):N0(e,i));if(r=t.memoizedState,r!==null&&(a=r.dehydrated,a!==null))return a_(t,e,i,s,a,r,n);if(o){o=s.fallback,i=e.mode,r=t.child,a=r.sibling;var l={mode:"hidden",children:s.children};return(i&1)===0&&e.child!==r?(s=e.child,s.childLanes=0,s.pendingProps=l,e.deletions=null):(s=mo(r,l),s.subtreeFlags=r.subtreeFlags&14680064),a!==null?o=mo(a,o):(o=ui(o,i,n,null),o.flags|=2),o.return=e,s.return=e,s.sibling=o,e.child=s,s=o,o=e.child,i=t.child.memoizedState,i=i===null?Ag(n):{baseLanes:i.baseLanes|n,cachePool:null,transitions:i.transitions},o.memoizedState=i,o.childLanes=t.childLanes&~n,e.memoizedState=Rg,s}return o=t.child,t=o.sibling,s=mo(o,{mode:"visible",children:s.children}),(e.mode&1)===0&&(s.lanes=n),s.return=e,s.sibling=null,t!==null&&(n=e.deletions,n===null?(e.deletions=[t],e.flags|=16):n.push(t)),e.child=s,e.memoizedState=null,s}function N0(t,e){return e=op({mode:"visible",children:e},t.mode,0,null),e.return=t,t.child=e}function fh(t,e,n,s){return s!==null&&h0(s),Na(e,t.child,null,n),t=N0(e,e.pendingProps.children),t.flags|=2,e.memoizedState=null,t}function a_(t,e,n,s,r,o,i){if(n)return e.flags&256?(e.flags&=-257,s=Im(Error(ee(422))),fh(t,e,i,s)):e.memoizedState!==null?(e.child=t.child,e.flags|=128,null):(o=s.fallback,r=e.mode,s=op({mode:"visible",children:s.children},r,0,null),o=ui(o,r,i,null),o.flags|=2,s.return=e,o.return=e,s.sibling=o,e.child=s,(e.mode&1)!==0&&Na(e,t.child,null,i),e.child.memoizedState=Ag(i),e.memoizedState=Rg,o);if((e.mode&1)===0)return fh(t,e,i,null);if(r.data==="$!"){if(s=r.nextSibling&&r.nextSibling.dataset,s)var a=s.dgst;return s=a,o=Error(ee(419)),s=Im(o,s,void 0),fh(t,e,i,s)}if(a=(i&t.childLanes)!==0,Dn||a){if(s=Ht,s!==null){switch(i&-i){case 4:r=2;break;case 16:r=8;break;case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:r=32;break;case 536870912:r=268435456;break;default:r=0}r=(r&(s.suspendedLanes|i))!==0?0:r,r!==0&&r!==o.retryLane&&(o.retryLane=r,Lr(t,r),Hs(s,t,r,-1))}return R0(),s=Im(Error(ee(421))),fh(t,e,i,s)}return r.data==="$?"?(e.flags|=128,e.child=t.child,e=w_.bind(null,t),r._reactRetry=e,null):(t=o.treeContext,Kn=co(r.nextSibling),Xn=e,at=!0,Bs=null,t!==null&&(fs[ms++]=Er,fs[ms++]=Dr,fs[ms++]=pi,Er=t.id,Dr=t.overflow,pi=e),e=N0(e,s.children),e.flags|=4096,e)}function Gw(t,e,n){t.lanes|=e;var s=t.alternate;s!==null&&(s.lanes|=e),Ng(t.return,e,n)}function Tm(t,e,n,s,r){var o=t.memoizedState;o===null?t.memoizedState={isBackwards:e,rendering:null,renderingStartTime:0,last:s,tail:n,tailMode:r}:(o.isBackwards=e,o.rendering=null,o.renderingStartTime=0,o.last=s,o.tail=n,o.tailMode=r)}function DC(t,e,n){var s=e.pendingProps,r=s.revealOrder,o=s.tail;if(fn(t,e,s.children,n),s=ht.current,(s&2)!==0)s=s&1|2,e.flags|=128;else{if(t!==null&&(t.flags&128)!==0)e:for(t=e.child;t!==null;){if(t.tag===13)t.memoizedState!==null&&Gw(t,n,e);else if(t.tag===19)Gw(t,n,e);else if(t.child!==null){t.child.return=t,t=t.child;continue}if(t===e)break e;for(;t.sibling===null;){if(t.return===null||t.return===e)break e;t=t.return}t.sibling.return=t.return,t=t.sibling}s&=1}if(Xe(ht,s),(e.mode&1)===0)e.memoizedState=null;else switch(r){case"forwards":for(n=e.child,r=null;n!==null;)t=n.alternate,t!==null&&cd(t)===null&&(r=n),n=n.sibling;n=r,n===null?(r=e.child,e.child=null):(r=n.sibling,n.sibling=null),Tm(e,!1,r,n,o);break;case"backwards":for(n=null,r=e.child,e.child=null;r!==null;){if(t=r.alternate,t!==null&&cd(t)===null){e.child=r;break}t=r.sibling,r.sibling=n,n=r,r=t}Tm(e,!0,n,null,o);break;case"together":Tm(e,!1,null,null,void 0);break;default:e.memoizedState=null}return e.child}function Bh(t,e){(e.mode&1)===0&&t!==null&&(t.alternate=null,e.alternate=null,e.flags|=2)}function Pr(t,e,n){if(t!==null&&(e.dependencies=t.dependencies),mi|=e.lanes,(n&e.childLanes)===0)return null;if(t!==null&&e.child!==t.child)throw Error(ee(153));if(e.child!==null){for(t=e.child,n=mo(t,t.pendingProps),e.child=n,n.return=e;t.sibling!==null;)t=t.sibling,n=n.sibling=mo(t,t.pendingProps),n.return=e;n.sibling=null}return e.child}function l_(t,e,n){switch(e.tag){case 3:TC(e),Ca();break;case 5:sC(e);break;case 1:On(e.type)&&rd(e);break;case 4:y0(e,e.stateNode.containerInfo);break;case 10:var s=e.type._context,r=e.memoizedProps.value;Xe(ad,s._currentValue),s._currentValue=r;break;case 13:if(s=e.memoizedState,s!==null)return s.dehydrated!==null?(Xe(ht,ht.current&1),e.flags|=128,null):(n&e.child.childLanes)!==0?EC(t,e,n):(Xe(ht,ht.current&1),t=Pr(t,e,n),t!==null?t.sibling:null);Xe(ht,ht.current&1);break;case 19:if(s=(n&e.childLanes)!==0,(t.flags&128)!==0){if(s)return DC(t,e,n);e.flags|=128}if(r=e.memoizedState,r!==null&&(r.rendering=null,r.tail=null,r.lastEffect=null),Xe(ht,ht.current),s)break;return null;case 22:case 23:return e.lanes=0,$C(t,e,n)}return Pr(t,e,n)}var RC,_g,AC,_C;RC=function(t,e){for(var n=e.child;n!==null;){if(n.tag===5||n.tag===6)t.appendChild(n.stateNode);else if(n.tag!==4&&n.child!==null){n.child.return=n,n=n.child;continue}if(n===e)break;for(;n.sibling===null;){if(n.return===null||n.return===e)return;n=n.return}n.sibling.return=n.return,n=n.sibling}};_g=function(){};AC=function(t,e,n,s){var r=t.memoizedProps;if(r!==s){t=e.stateNode,oi(dr.current);var o=null;switch(n){case"input":r=tg(t,r),s=tg(t,s),o=[];break;case"select":r=mt({},r,{value:void 0}),s=mt({},s,{value:void 0}),o=[];break;case"textarea":r=rg(t,r),s=rg(t,s),o=[];break;default:typeof r.onClick!="function"&&typeof s.onClick=="function"&&(t.onclick=nd)}ig(n,s);var i;n=null;for(u in r)if(!s.hasOwnProperty(u)&&r.hasOwnProperty(u)&&r[u]!=null)if(u==="style"){var a=r[u];for(i in a)a.hasOwnProperty(i)&&(n||(n={}),n[i]="")}else u!=="dangerouslySetInnerHTML"&&u!=="children"&&u!=="suppressContentEditableWarning"&&u!=="suppressHydrationWarning"&&u!=="autoFocus"&&(Hl.hasOwnProperty(u)?o||(o=[]):(o=o||[]).push(u,null));for(u in s){var l=s[u];if(a=r!=null?r[u]:void 0,s.hasOwnProperty(u)&&l!==a&&(l!=null||a!=null))if(u==="style")if(a){for(i in a)!a.hasOwnProperty(i)||l&&l.hasOwnProperty(i)||(n||(n={}),n[i]="");for(i in l)l.hasOwnProperty(i)&&a[i]!==l[i]&&(n||(n={}),n[i]=l[i])}else n||(o||(o=[]),o.push(u,n)),n=l;else u==="dangerouslySetInnerHTML"?(l=l?l.__html:void 0,a=a?a.__html:void 0,l!=null&&a!==l&&(o=o||[]).push(u,l)):u==="children"?typeof l!="string"&&typeof l!="number"||(o=o||[]).push(u,""+l):u!=="suppressContentEditableWarning"&&u!=="suppressHydrationWarning"&&(Hl.hasOwnProperty(u)?(l!=null&&u==="onScroll"&&Je("scroll",t),o||a===l||(o=[])):(o=o||[]).push(u,l))}n&&(o=o||[]).push("style",n);var u=o;(e.updateQueue=u)&&(e.flags|=4)}};_C=function(t,e,n,s){n!==s&&(e.flags|=4)};function xl(t,e){if(!at)switch(t.tailMode){case"hidden":e=t.tail;for(var n=null;e!==null;)e.alternate!==null&&(n=e),e=e.sibling;n===null?t.tail=null:n.sibling=null;break;case"collapsed":n=t.tail;for(var s=null;n!==null;)n.alternate!==null&&(s=n),n=n.sibling;s===null?e||t.tail===null?t.tail=null:t.tail.sibling=null:s.sibling=null}}function nn(t){var e=t.alternate!==null&&t.alternate.child===t.child,n=0,s=0;if(e)for(var r=t.child;r!==null;)n|=r.lanes|r.childLanes,s|=r.subtreeFlags&14680064,s|=r.flags&14680064,r.return=t,r=r.sibling;else for(r=t.child;r!==null;)n|=r.lanes|r.childLanes,s|=r.subtreeFlags,s|=r.flags,r.return=t,r=r.sibling;return t.subtreeFlags|=s,t.childLanes=n,e}function u_(t,e,n){var s=e.pendingProps;switch(c0(e),e.tag){case 2:case 16:case 15:case 0:case 11:case 7:case 8:case 12:case 9:case 14:return nn(e),null;case 1:return On(e.type)&&sd(),nn(e),null;case 3:return s=e.stateNode,$a(),tt(_n),tt(un),b0(),s.pendingContext&&(s.context=s.pendingContext,s.pendingContext=null),(t===null||t.child===null)&&(dh(e)?e.flags|=4:t===null||t.memoizedState.isDehydrated&&(e.flags&256)===0||(e.flags|=1024,Bs!==null&&(Vg(Bs),Bs=null))),_g(t,e),nn(e),null;case 5:x0(e);var r=oi(su.current);if(n=e.type,t!==null&&e.stateNode!=null)AC(t,e,n,s,r),t.ref!==e.ref&&(e.flags|=512,e.flags|=2097152);else{if(!s){if(e.stateNode===null)throw Error(ee(166));return nn(e),null}if(t=oi(dr.current),dh(e)){s=e.stateNode,n=e.type;var o=e.memoizedProps;switch(s[lr]=e,s[tu]=o,t=(e.mode&1)!==0,n){case"dialog":Je("cancel",s),Je("close",s);break;case"iframe":case"object":case"embed":Je("load",s);break;case"video":case"audio":for(r=0;r<Il.length;r++)Je(Il[r],s);break;case"source":Je("error",s);break;case"img":case"image":case"link":Je("error",s),Je("load",s);break;case"details":Je("toggle",s);break;case"input":Jb(s,o),Je("invalid",s);break;case"select":s._wrapperState={wasMultiple:!!o.multiple},Je("invalid",s);break;case"textarea":tw(s,o),Je("invalid",s)}ig(n,o),r=null;for(var i in o)if(o.hasOwnProperty(i)){var a=o[i];i==="children"?typeof a=="string"?s.textContent!==a&&(o.suppressHydrationWarning!==!0&&hh(s.textContent,a,t),r=["children",a]):typeof a=="number"&&s.textContent!==""+a&&(o.suppressHydrationWarning!==!0&&hh(s.textContent,a,t),r=["children",""+a]):Hl.hasOwnProperty(i)&&a!=null&&i==="onScroll"&&Je("scroll",s)}switch(n){case"input":sh(s),ew(s,o,!0);break;case"textarea":sh(s),nw(s);break;case"select":case"option":break;default:typeof o.onClick=="function"&&(s.onclick=nd)}s=r,e.updateQueue=s,s!==null&&(e.flags|=4)}else{i=r.nodeType===9?r:r.ownerDocument,t==="http://www.w3.org/1999/xhtml"&&(t=iS(n)),t==="http://www.w3.org/1999/xhtml"?n==="script"?(t=i.createElement("div"),t.innerHTML="<script><\/script>",t=t.removeChild(t.firstChild)):typeof s.is=="string"?t=i.createElement(n,{is:s.is}):(t=i.createElement(n),n==="select"&&(i=t,s.multiple?i.multiple=!0:s.size&&(i.size=s.size))):t=i.createElementNS(t,n),t[lr]=e,t[tu]=s,RC(t,e,!1,!1),e.stateNode=t;e:{switch(i=ag(n,s),n){case"dialog":Je("cancel",t),Je("close",t),r=s;break;case"iframe":case"object":case"embed":Je("load",t),r=s;break;case"video":case"audio":for(r=0;r<Il.length;r++)Je(Il[r],t);r=s;break;case"source":Je("error",t),r=s;break;case"img":case"image":case"link":Je("error",t),Je("load",t),r=s;break;case"details":Je("toggle",t),r=s;break;case"input":Jb(t,s),r=tg(t,s),Je("invalid",t);break;case"option":r=s;break;case"select":t._wrapperState={wasMultiple:!!s.multiple},r=mt({},s,{value:void 0}),Je("invalid",t);break;case"textarea":tw(t,s),r=rg(t,s),Je("invalid",t);break;default:r=s}ig(n,r),a=r;for(o in a)if(a.hasOwnProperty(o)){var l=a[o];o==="style"?uS(t,l):o==="dangerouslySetInnerHTML"?(l=l?l.__html:void 0,l!=null&&aS(t,l)):o==="children"?typeof l=="string"?(n!=="textarea"||l!=="")&&jl(t,l):typeof l=="number"&&jl(t,""+l):o!=="suppressContentEditableWarning"&&o!=="suppressHydrationWarning"&&o!=="autoFocus"&&(Hl.hasOwnProperty(o)?l!=null&&o==="onScroll"&&Je("scroll",t):l!=null&&Xy(t,o,l,i))}switch(n){case"input":sh(t),ew(t,s,!1);break;case"textarea":sh(t),nw(t);break;case"option":s.value!=null&&t.setAttribute("value",""+wo(s.value));break;case"select":t.multiple=!!s.multiple,o=s.value,o!=null?ua(t,!!s.multiple,o,!1):s.defaultValue!=null&&ua(t,!!s.multiple,s.defaultValue,!0);break;default:typeof r.onClick=="function"&&(t.onclick=nd)}switch(n){case"button":case"input":case"select":case"textarea":s=!!s.autoFocus;break e;case"img":s=!0;break e;default:s=!1}}s&&(e.flags|=4)}e.ref!==null&&(e.flags|=512,e.flags|=2097152)}return nn(e),null;case 6:if(t&&e.stateNode!=null)_C(t,e,t.memoizedProps,s);else{if(typeof s!="string"&&e.stateNode===null)throw Error(ee(166));if(n=oi(su.current),oi(dr.current),dh(e)){if(s=e.stateNode,n=e.memoizedProps,s[lr]=e,(o=s.nodeValue!==n)&&(t=Xn,t!==null))switch(t.tag){case 3:hh(s.nodeValue,n,(t.mode&1)!==0);break;case 5:t.memoizedProps.suppressHydrationWarning!==!0&&hh(s.nodeValue,n,(t.mode&1)!==0)}o&&(e.flags|=4)}else s=(n.nodeType===9?n:n.ownerDocument).createTextNode(s),s[lr]=e,e.stateNode=s}return nn(e),null;case 13:if(tt(ht),s=e.memoizedState,t===null||t.memoizedState!==null&&t.memoizedState.dehydrated!==null){if(at&&Kn!==null&&(e.mode&1)!==0&&(e.flags&128)===0)YS(),Ca(),e.flags|=98560,o=!1;else if(o=dh(e),s!==null&&s.dehydrated!==null){if(t===null){if(!o)throw Error(ee(318));if(o=e.memoizedState,o=o!==null?o.dehydrated:null,!o)throw Error(ee(317));o[lr]=e}else Ca(),(e.flags&128)===0&&(e.memoizedState=null),e.flags|=4;nn(e),o=!1}else Bs!==null&&(Vg(Bs),Bs=null),o=!0;if(!o)return e.flags&65536?e:null}return(e.flags&128)!==0?(e.lanes=n,e):(s=s!==null,s!==(t!==null&&t.memoizedState!==null)&&s&&(e.child.flags|=8192,(e.mode&1)!==0&&(t===null||(ht.current&1)!==0?Ot===0&&(Ot=3):R0())),e.updateQueue!==null&&(e.flags|=4),nn(e),null);case 4:return $a(),_g(t,e),t===null&&Jl(e.stateNode.containerInfo),nn(e),null;case 10:return f0(e.type._context),nn(e),null;case 17:return On(e.type)&&sd(),nn(e),null;case 19:if(tt(ht),o=e.memoizedState,o===null)return nn(e),null;if(s=(e.flags&128)!==0,i=o.rendering,i===null)if(s)xl(o,!1);else{if(Ot!==0||t!==null&&(t.flags&128)!==0)for(t=e.child;t!==null;){if(i=cd(t),i!==null){for(e.flags|=128,xl(o,!1),s=i.updateQueue,s!==null&&(e.updateQueue=s,e.flags|=4),e.subtreeFlags=0,s=n,n=e.child;n!==null;)o=n,t=s,o.flags&=14680066,i=o.alternate,i===null?(o.childLanes=0,o.lanes=t,o.child=null,o.subtreeFlags=0,o.memoizedProps=null,o.memoizedState=null,o.updateQueue=null,o.dependencies=null,o.stateNode=null):(o.childLanes=i.childLanes,o.lanes=i.lanes,o.child=i.child,o.subtreeFlags=0,o.deletions=null,o.memoizedProps=i.memoizedProps,o.memoizedState=i.memoizedState,o.updateQueue=i.updateQueue,o.type=i.type,t=i.dependencies,o.dependencies=t===null?null:{lanes:t.lanes,firstContext:t.firstContext}),n=n.sibling;return Xe(ht,ht.current&1|2),e.child}t=t.sibling}o.tail!==null&&vt()>Ta&&(e.flags|=128,s=!0,xl(o,!1),e.lanes=4194304)}else{if(!s)if(t=cd(i),t!==null){if(e.flags|=128,s=!0,n=t.updateQueue,n!==null&&(e.updateQueue=n,e.flags|=4),xl(o,!0),o.tail===null&&o.tailMode==="hidden"&&!i.alternate&&!at)return nn(e),null}else 2*vt()-o.renderingStartTime>Ta&&n!==1073741824&&(e.flags|=128,s=!0,xl(o,!1),e.lanes=4194304);o.isBackwards?(i.sibling=e.child,e.child=i):(n=o.last,n!==null?n.sibling=i:e.child=i,o.last=i)}return o.tail!==null?(e=o.tail,o.rendering=e,o.tail=e.sibling,o.renderingStartTime=vt(),e.sibling=null,n=ht.current,Xe(ht,s?n&1|2:n&1),e):(nn(e),null);case 22:case 23:return D0(),s=e.memoizedState!==null,t!==null&&t.memoizedState!==null!==s&&(e.flags|=8192),s&&(e.mode&1)!==0?(Hn&1073741824)!==0&&(nn(e),e.subtreeFlags&6&&(e.flags|=8192)):nn(e),null;case 24:return null;case 25:return null}throw Error(ee(156,e.tag))}function c_(t,e){switch(c0(e),e.tag){case 1:return On(e.type)&&sd(),t=e.flags,t&65536?(e.flags=t&-65537|128,e):null;case 3:return $a(),tt(_n),tt(un),b0(),t=e.flags,(t&65536)!==0&&(t&128)===0?(e.flags=t&-65537|128,e):null;case 5:return x0(e),null;case 13:if(tt(ht),t=e.memoizedState,t!==null&&t.dehydrated!==null){if(e.alternate===null)throw Error(ee(340));Ca()}return t=e.flags,t&65536?(e.flags=t&-65537|128,e):null;case 19:return tt(ht),null;case 4:return $a(),null;case 10:return f0(e.type._context),null;case 22:case 23:return D0(),null;case 24:return null;default:return null}}var mh=!1,rn=!1,h_=typeof WeakSet=="function"?WeakSet:Set,ue=null;function oa(t,e){var n=t.ref;if(n!==null)if(typeof n=="function")try{n(null)}catch(s){yt(t,e,s)}else n.current=null}function Og(t,e,n){try{n()}catch(s){yt(t,e,s)}}var Hw=!1;function d_(t,e){if(yg=Jh,t=PS(),l0(t)){if("selectionStart"in t)var n={start:t.selectionStart,end:t.selectionEnd};else e:{n=(n=t.ownerDocument)&&n.defaultView||window;var s=n.getSelection&&n.getSelection();if(s&&s.rangeCount!==0){n=s.anchorNode;var r=s.anchorOffset,o=s.focusNode;s=s.focusOffset;try{n.nodeType,o.nodeType}catch{n=null;break e}var i=0,a=-1,l=-1,u=0,c=0,h=t,d=null;t:for(;;){for(var p;h!==n||r!==0&&h.nodeType!==3||(a=i+r),h!==o||s!==0&&h.nodeType!==3||(l=i+s),h.nodeType===3&&(i+=h.nodeValue.length),(p=h.firstChild)!==null;)d=h,h=p;for(;;){if(h===t)break t;if(d===n&&++u===r&&(a=i),d===o&&++c===s&&(l=i),(p=h.nextSibling)!==null)break;h=d,d=h.parentNode}h=p}n=a===-1||l===-1?null:{start:a,end:l}}else n=null}n=n||{start:0,end:0}}else n=null;for(xg={focusedElem:t,selectionRange:n},Jh=!1,ue=e;ue!==null;)if(e=ue,t=e.child,(e.subtreeFlags&1028)!==0&&t!==null)t.return=e,ue=t;else for(;ue!==null;){e=ue;try{var f=e.alternate;if((e.flags&1024)!==0)switch(e.tag){case 0:case 11:case 15:break;case 1:if(f!==null){var m=f.memoizedProps,y=f.memoizedState,g=e.stateNode,x=g.getSnapshotBeforeUpdate(e.elementType===e.type?m:zs(e.type,m),y);g.__reactInternalSnapshotBeforeUpdate=x}break;case 3:var b=e.stateNode.containerInfo;b.nodeType===1?b.textContent="":b.nodeType===9&&b.documentElement&&b.removeChild(b.documentElement);break;case 5:case 6:case 4:case 17:break;default:throw Error(ee(163))}}catch(w){yt(e,e.return,w)}if(t=e.sibling,t!==null){t.return=e.return,ue=t;break}ue=e.return}return f=Hw,Hw=!1,f}function Bl(t,e,n){var s=e.updateQueue;if(s=s!==null?s.lastEffect:null,s!==null){var r=s=s.next;do{if((r.tag&t)===t){var o=r.destroy;r.destroy=void 0,o!==void 0&&Og(e,n,o)}r=r.next}while(r!==s)}}function sp(t,e){if(e=e.updateQueue,e=e!==null?e.lastEffect:null,e!==null){var n=e=e.next;do{if((n.tag&t)===t){var s=n.create;n.destroy=s()}n=n.next}while(n!==e)}}function Fg(t){var e=t.ref;if(e!==null){var n=t.stateNode;switch(t.tag){case 5:t=n;break;default:t=n}typeof e=="function"?e(t):e.current=t}}function OC(t){var e=t.alternate;e!==null&&(t.alternate=null,OC(e)),t.child=null,t.deletions=null,t.sibling=null,t.tag===5&&(e=t.stateNode,e!==null&&(delete e[lr],delete e[tu],delete e[vg],delete e[qA],delete e[XA])),t.stateNode=null,t.return=null,t.dependencies=null,t.memoizedProps=null,t.memoizedState=null,t.pendingProps=null,t.stateNode=null,t.updateQueue=null}function FC(t){return t.tag===5||t.tag===3||t.tag===4}function jw(t){e:for(;;){for(;t.sibling===null;){if(t.return===null||FC(t.return))return null;t=t.return}for(t.sibling.return=t.return,t=t.sibling;t.tag!==5&&t.tag!==6&&t.tag!==18;){if(t.flags&2||t.child===null||t.tag===4)continue e;t.child.return=t,t=t.child}if(!(t.flags&2))return t.stateNode}}function Lg(t,e,n){var s=t.tag;if(s===5||s===6)t=t.stateNode,e?n.nodeType===8?n.parentNode.insertBefore(t,e):n.insertBefore(t,e):(n.nodeType===8?(e=n.parentNode,e.insertBefore(t,n)):(e=n,e.appendChild(t)),n=n._reactRootContainer,n!=null||e.onclick!==null||(e.onclick=nd));else if(s!==4&&(t=t.child,t!==null))for(Lg(t,e,n),t=t.sibling;t!==null;)Lg(t,e,n),t=t.sibling}function Pg(t,e,n){var s=t.tag;if(s===5||s===6)t=t.stateNode,e?n.insertBefore(t,e):n.appendChild(t);else if(s!==4&&(t=t.child,t!==null))for(Pg(t,e,n),t=t.sibling;t!==null;)Pg(t,e,n),t=t.sibling}var Yt=null,Ms=!1;function Yr(t,e,n){for(n=n.child;n!==null;)LC(t,e,n),n=n.sibling}function LC(t,e,n){if(hr&&typeof hr.onCommitFiberUnmount=="function")try{hr.onCommitFiberUnmount(Xd,n)}catch{}switch(n.tag){case 5:rn||oa(n,e);case 6:var s=Yt,r=Ms;Yt=null,Yr(t,e,n),Yt=s,Ms=r,Yt!==null&&(Ms?(t=Yt,n=n.stateNode,t.nodeType===8?t.parentNode.removeChild(n):t.removeChild(n)):Yt.removeChild(n.stateNode));break;case 18:Yt!==null&&(Ms?(t=Yt,n=n.stateNode,t.nodeType===8?vm(t.parentNode,n):t.nodeType===1&&vm(t,n),Yl(t)):vm(Yt,n.stateNode));break;case 4:s=Yt,r=Ms,Yt=n.stateNode.containerInfo,Ms=!0,Yr(t,e,n),Yt=s,Ms=r;break;case 0:case 11:case 14:case 15:if(!rn&&(s=n.updateQueue,s!==null&&(s=s.lastEffect,s!==null))){r=s=s.next;do{var o=r,i=o.destroy;o=o.tag,i!==void 0&&((o&2)!==0||(o&4)!==0)&&Og(n,e,i),r=r.next}while(r!==s)}Yr(t,e,n);break;case 1:if(!rn&&(oa(n,e),s=n.stateNode,typeof s.componentWillUnmount=="function"))try{s.props=n.memoizedProps,s.state=n.memoizedState,s.componentWillUnmount()}catch(a){yt(n,e,a)}Yr(t,e,n);break;case 21:Yr(t,e,n);break;case 22:n.mode&1?(rn=(s=rn)||n.memoizedState!==null,Yr(t,e,n),rn=s):Yr(t,e,n);break;default:Yr(t,e,n)}}function Kw(t){var e=t.updateQueue;if(e!==null){t.updateQueue=null;var n=t.stateNode;n===null&&(n=t.stateNode=new h_),e.forEach(function(s){var r=v_.bind(null,t,s);n.has(s)||(n.add(s),s.then(r,r))})}}function Fs(t,e){var n=e.deletions;if(n!==null)for(var s=0;s<n.length;s++){var r=n[s];try{var o=t,i=e,a=i;e:for(;a!==null;){switch(a.tag){case 5:Yt=a.stateNode,Ms=!1;break e;case 3:Yt=a.stateNode.containerInfo,Ms=!0;break e;case 4:Yt=a.stateNode.containerInfo,Ms=!0;break e}a=a.return}if(Yt===null)throw Error(ee(160));LC(o,i,r),Yt=null,Ms=!1;var l=r.alternate;l!==null&&(l.return=null),r.return=null}catch(u){yt(r,e,u)}}if(e.subtreeFlags&12854)for(e=e.child;e!==null;)PC(e,t),e=e.sibling}function PC(t,e){var n=t.alternate,s=t.flags;switch(t.tag){case 0:case 11:case 14:case 15:if(Fs(e,t),nr(t),s&4){try{Bl(3,t,t.return),sp(3,t)}catch(m){yt(t,t.return,m)}try{Bl(5,t,t.return)}catch(m){yt(t,t.return,m)}}break;case 1:Fs(e,t),nr(t),s&512&&n!==null&&oa(n,n.return);break;case 5:if(Fs(e,t),nr(t),s&512&&n!==null&&oa(n,n.return),t.flags&32){var r=t.stateNode;try{jl(r,"")}catch(m){yt(t,t.return,m)}}if(s&4&&(r=t.stateNode,r!=null)){var o=t.memoizedProps,i=n!==null?n.memoizedProps:o,a=t.type,l=t.updateQueue;if(t.updateQueue=null,l!==null)try{a==="input"&&o.type==="radio"&&o.name!=null&&rS(r,o),ag(a,i);var u=ag(a,o);for(i=0;i<l.length;i+=2){var c=l[i],h=l[i+1];c==="style"?uS(r,h):c==="dangerouslySetInnerHTML"?aS(r,h):c==="children"?jl(r,h):Xy(r,c,h,u)}switch(a){case"input":ng(r,o);break;case"textarea":oS(r,o);break;case"select":var d=r._wrapperState.wasMultiple;r._wrapperState.wasMultiple=!!o.multiple;var p=o.value;p!=null?ua(r,!!o.multiple,p,!1):d!==!!o.multiple&&(o.defaultValue!=null?ua(r,!!o.multiple,o.defaultValue,!0):ua(r,!!o.multiple,o.multiple?[]:"",!1))}r[tu]=o}catch(m){yt(t,t.return,m)}}break;case 6:if(Fs(e,t),nr(t),s&4){if(t.stateNode===null)throw Error(ee(162));r=t.stateNode,o=t.memoizedProps;try{r.nodeValue=o}catch(m){yt(t,t.return,m)}}break;case 3:if(Fs(e,t),nr(t),s&4&&n!==null&&n.memoizedState.isDehydrated)try{Yl(e.containerInfo)}catch(m){yt(t,t.return,m)}break;case 4:Fs(e,t),nr(t);break;case 13:Fs(e,t),nr(t),r=t.child,r.flags&8192&&(o=r.memoizedState!==null,r.stateNode.isHidden=o,!o||r.alternate!==null&&r.alternate.memoizedState!==null||(T0=vt())),s&4&&Kw(t);break;case 22:if(c=n!==null&&n.memoizedState!==null,t.mode&1?(rn=(u=rn)||c,Fs(e,t),rn=u):Fs(e,t),nr(t),s&8192){if(u=t.memoizedState!==null,(t.stateNode.isHidden=u)&&!c&&(t.mode&1)!==0)for(ue=t,c=t.child;c!==null;){for(h=ue=c;ue!==null;){switch(d=ue,p=d.child,d.tag){case 0:case 11:case 14:case 15:Bl(4,d,d.return);break;case 1:oa(d,d.return);var f=d.stateNode;if(typeof f.componentWillUnmount=="function"){s=d,n=d.return;try{e=s,f.props=e.memoizedProps,f.state=e.memoizedState,f.componentWillUnmount()}catch(m){yt(s,n,m)}}break;case 5:oa(d,d.return);break;case 22:if(d.memoizedState!==null){Xw(h);continue}}p!==null?(p.return=d,ue=p):Xw(h)}c=c.sibling}e:for(c=null,h=t;;){if(h.tag===5){if(c===null){c=h;try{r=h.stateNode,u?(o=r.style,typeof o.setProperty=="function"?o.setProperty("display","none","important"):o.display="none"):(a=h.stateNode,l=h.memoizedProps.style,i=l!=null&&l.hasOwnProperty("display")?l.display:null,a.style.display=lS("display",i))}catch(m){yt(t,t.return,m)}}}else if(h.tag===6){if(c===null)try{h.stateNode.nodeValue=u?"":h.memoizedProps}catch(m){yt(t,t.return,m)}}else if((h.tag!==22&&h.tag!==23||h.memoizedState===null||h===t)&&h.child!==null){h.child.return=h,h=h.child;continue}if(h===t)break e;for(;h.sibling===null;){if(h.return===null||h.return===t)break e;c===h&&(c=null),h=h.return}c===h&&(c=null),h.sibling.return=h.return,h=h.sibling}}break;case 19:Fs(e,t),nr(t),s&4&&Kw(t);break;case 21:break;default:Fs(e,t),nr(t)}}function nr(t){var e=t.flags;if(e&2){try{e:{for(var n=t.return;n!==null;){if(FC(n)){var s=n;break e}n=n.return}throw Error(ee(160))}switch(s.tag){case 5:var r=s.stateNode;s.flags&32&&(jl(r,""),s.flags&=-33);var o=jw(t);Pg(t,o,r);break;case 3:case 4:var i=s.stateNode.containerInfo,a=jw(t);Lg(t,a,i);break;default:throw Error(ee(161))}}catch(l){yt(t,t.return,l)}t.flags&=-3}e&4096&&(t.flags&=-4097)}function p_(t,e,n){ue=t,zC(t)}function zC(t,e,n){for(var s=(t.mode&1)!==0;ue!==null;){var r=ue,o=r.child;if(r.tag===22&&s){var i=r.memoizedState!==null||mh;if(!i){var a=r.alternate,l=a!==null&&a.memoizedState!==null||rn;a=mh;var u=rn;if(mh=i,(rn=l)&&!u)for(ue=r;ue!==null;)i=ue,l=i.child,i.tag===22&&i.memoizedState!==null?Yw(r):l!==null?(l.return=i,ue=l):Yw(r);for(;o!==null;)ue=o,zC(o),o=o.sibling;ue=r,mh=a,rn=u}qw(t)}else(r.subtreeFlags&8772)!==0&&o!==null?(o.return=r,ue=o):qw(t)}}function qw(t){for(;ue!==null;){var e=ue;if((e.flags&8772)!==0){var n=e.alternate;try{if((e.flags&8772)!==0)switch(e.tag){case 0:case 11:case 15:rn||sp(5,e);break;case 1:var s=e.stateNode;if(e.flags&4&&!rn)if(n===null)s.componentDidMount();else{var r=e.elementType===e.type?n.memoizedProps:zs(e.type,n.memoizedProps);s.componentDidUpdate(r,n.memoizedState,s.__reactInternalSnapshotBeforeUpdate)}var o=e.updateQueue;o!==null&&Rw(e,o,s);break;case 3:var i=e.updateQueue;if(i!==null){if(n=null,e.child!==null)switch(e.child.tag){case 5:n=e.child.stateNode;break;case 1:n=e.child.stateNode}Rw(e,i,n)}break;case 5:var a=e.stateNode;if(n===null&&e.flags&4){n=a;var l=e.memoizedProps;switch(e.type){case"button":case"input":case"select":case"textarea":l.autoFocus&&n.focus();break;case"img":l.src&&(n.src=l.src)}}break;case 6:break;case 4:break;case 12:break;case 13:if(e.memoizedState===null){var u=e.alternate;if(u!==null){var c=u.memoizedState;if(c!==null){var h=c.dehydrated;h!==null&&Yl(h)}}}break;case 19:case 17:case 21:case 22:case 23:case 25:break;default:throw Error(ee(163))}rn||e.flags&512&&Fg(e)}catch(d){yt(e,e.return,d)}}if(e===t){ue=null;break}if(n=e.sibling,n!==null){n.return=e.return,ue=n;break}ue=e.return}}function Xw(t){for(;ue!==null;){var e=ue;if(e===t){ue=null;break}var n=e.sibling;if(n!==null){n.return=e.return,ue=n;break}ue=e.return}}function Yw(t){for(;ue!==null;){var e=ue;try{switch(e.tag){case 0:case 11:case 15:var n=e.return;try{sp(4,e)}catch(l){yt(e,n,l)}break;case 1:var s=e.stateNode;if(typeof s.componentDidMount=="function"){var r=e.return;try{s.componentDidMount()}catch(l){yt(e,r,l)}}var o=e.return;try{Fg(e)}catch(l){yt(e,o,l)}break;case 5:var i=e.return;try{Fg(e)}catch(l){yt(e,i,l)}}}catch(l){yt(e,e.return,l)}if(e===t){ue=null;break}var a=e.sibling;if(a!==null){a.return=e.return,ue=a;break}ue=e.return}}var f_=Math.ceil,pd=Br.ReactCurrentDispatcher,$0=Br.ReactCurrentOwner,Cs=Br.ReactCurrentBatchConfig,Fe=0,Ht=null,$t=null,Qt=0,Hn=0,ia=_o(0),Ot=0,au=null,mi=0,rp=0,I0=0,Vl=null,Tn=null,T0=0,Ta=1/0,Sr=null,fd=!1,zg=null,po=null,gh=!1,so=null,md=0,Wl=0,Mg=null,Vh=-1,Wh=0;function wn(){return(Fe&6)!==0?vt():Vh!==-1?Vh:Vh=vt()}function fo(t){return(t.mode&1)===0?1:(Fe&2)!==0&&Qt!==0?Qt&-Qt:QA.transition!==null?(Wh===0&&(Wh=vS()),Wh):(t=Be,t!==0||(t=window.event,t=t===void 0?16:TS(t.type)),t)}function Hs(t,e,n,s){if(50<Wl)throw Wl=0,Mg=null,Error(ee(185));Su(t,n,s),((Fe&2)===0||t!==Ht)&&(t===Ht&&((Fe&2)===0&&(rp|=n),Ot===4&&to(t,Qt)),Fn(t,s),n===1&&Fe===0&&(e.mode&1)===0&&(Ta=vt()+500,ep&&Oo()))}function Fn(t,e){var n=t.callbackNode;QR(t,e);var s=Zh(t,t===Ht?Qt:0);if(s===0)n!==null&&ow(n),t.callbackNode=null,t.callbackPriority=0;else if(e=s&-s,t.callbackPriority!==e){if(n!=null&&ow(n),e===1)t.tag===0?YA(Qw.bind(null,t)):KS(Qw.bind(null,t)),jA(function(){(Fe&6)===0&&Oo()}),n=null;else{switch(kS(s)){case 1:n=e0;break;case 4:n=bS;break;case 16:n=Qh;break;case 536870912:n=wS;break;default:n=Qh}n=jC(n,MC.bind(null,t))}t.callbackPriority=e,t.callbackNode=n}}function MC(t,e){if(Vh=-1,Wh=0,(Fe&6)!==0)throw Error(ee(327));var n=t.callbackNode;if(fa()&&t.callbackNode!==n)return null;var s=Zh(t,t===Ht?Qt:0);if(s===0)return null;if((s&30)!==0||(s&t.expiredLanes)!==0||e)e=gd(t,s);else{e=s;var r=Fe;Fe|=2;var o=VC();(Ht!==t||Qt!==e)&&(Sr=null,Ta=vt()+500,li(t,e));do try{y_();break}catch(a){BC(t,a)}while(1);p0(),pd.current=o,Fe=r,$t!==null?e=0:(Ht=null,Qt=0,e=Ot)}if(e!==0){if(e===2&&(r=dg(t),r!==0&&(s=r,e=Bg(t,r))),e===1)throw n=au,li(t,0),to(t,s),Fn(t,vt()),n;if(e===6)to(t,s);else{if(r=t.current.alternate,(s&30)===0&&!m_(r)&&(e=gd(t,s),e===2&&(o=dg(t),o!==0&&(s=o,e=Bg(t,o))),e===1))throw n=au,li(t,0),to(t,s),Fn(t,vt()),n;switch(t.finishedWork=r,t.finishedLanes=s,e){case 0:case 1:throw Error(ee(345));case 2:Zo(t,Tn,Sr);break;case 3:if(to(t,s),(s&130023424)===s&&(e=T0+500-vt(),10<e)){if(Zh(t,0)!==0)break;if(r=t.suspendedLanes,(r&s)!==s){wn(),t.pingedLanes|=t.suspendedLanes&r;break}t.timeoutHandle=wg(Zo.bind(null,t,Tn,Sr),e);break}Zo(t,Tn,Sr);break;case 4:if(to(t,s),(s&4194240)===s)break;for(e=t.eventTimes,r=-1;0<s;){var i=31-Gs(s);o=1<<i,i=e[i],i>r&&(r=i),s&=~o}if(s=r,s=vt()-s,s=(120>s?120:480>s?480:1080>s?1080:1920>s?1920:3e3>s?3e3:4320>s?4320:1960*f_(s/1960))-s,10<s){t.timeoutHandle=wg(Zo.bind(null,t,Tn,Sr),s);break}Zo(t,Tn,Sr);break;case 5:Zo(t,Tn,Sr);break;default:throw Error(ee(329))}}}return Fn(t,vt()),t.callbackNode===n?MC.bind(null,t):null}function Bg(t,e){var n=Vl;return t.current.memoizedState.isDehydrated&&(li(t,e).flags|=256),t=gd(t,e),t!==2&&(e=Tn,Tn=n,e!==null&&Vg(e)),t}function Vg(t){Tn===null?Tn=t:Tn.push.apply(Tn,t)}function m_(t){for(var e=t;;){if(e.flags&16384){var n=e.updateQueue;if(n!==null&&(n=n.stores,n!==null))for(var s=0;s<n.length;s++){var r=n[s],o=r.getSnapshot;r=r.value;try{if(!qs(o(),r))return!1}catch{return!1}}}if(n=e.child,e.subtreeFlags&16384&&n!==null)n.return=e,e=n;else{if(e===t)break;for(;e.sibling===null;){if(e.return===null||e.return===t)return!0;e=e.return}e.sibling.return=e.return,e=e.sibling}}return!0}function to(t,e){for(e&=~I0,e&=~rp,t.suspendedLanes|=e,t.pingedLanes&=~e,t=t.expirationTimes;0<e;){var n=31-Gs(e),s=1<<n;t[n]=-1,e&=~s}}function Qw(t){if((Fe&6)!==0)throw Error(ee(327));fa();var e=Zh(t,0);if((e&1)===0)return Fn(t,vt()),null;var n=gd(t,e);if(t.tag!==0&&n===2){var s=dg(t);s!==0&&(e=s,n=Bg(t,s))}if(n===1)throw n=au,li(t,0),to(t,e),Fn(t,vt()),n;if(n===6)throw Error(ee(345));return t.finishedWork=t.current.alternate,t.finishedLanes=e,Zo(t,Tn,Sr),Fn(t,vt()),null}function E0(t,e){var n=Fe;Fe|=1;try{return t(e)}finally{Fe=n,Fe===0&&(Ta=vt()+500,ep&&Oo())}}function gi(t){so!==null&&so.tag===0&&(Fe&6)===0&&fa();var e=Fe;Fe|=1;var n=Cs.transition,s=Be;try{if(Cs.transition=null,Be=1,t)return t()}finally{Be=s,Cs.transition=n,Fe=e,(Fe&6)===0&&Oo()}}function D0(){Hn=ia.current,tt(ia)}function li(t,e){t.finishedWork=null,t.finishedLanes=0;var n=t.timeoutHandle;if(n!==-1&&(t.timeoutHandle=-1,HA(n)),$t!==null)for(n=$t.return;n!==null;){var s=n;switch(c0(s),s.tag){case 1:s=s.type.childContextTypes,s!=null&&sd();break;case 3:$a(),tt(_n),tt(un),b0();break;case 5:x0(s);break;case 4:$a();break;case 13:tt(ht);break;case 19:tt(ht);break;case 10:f0(s.type._context);break;case 22:case 23:D0()}n=n.return}if(Ht=t,$t=t=mo(t.current,null),Qt=Hn=e,Ot=0,au=null,I0=rp=mi=0,Tn=Vl=null,ri!==null){for(e=0;e<ri.length;e++)if(n=ri[e],s=n.interleaved,s!==null){n.interleaved=null;var r=s.next,o=n.pending;if(o!==null){var i=o.next;o.next=r,s.next=i}n.pending=s}ri=null}return t}function BC(t,e){do{var n=$t;try{if(p0(),zh.current=dd,hd){for(var s=pt.memoizedState;s!==null;){var r=s.queue;r!==null&&(r.pending=null),s=s.next}hd=!1}if(fi=0,Ut=At=pt=null,Ml=!1,ru=0,$0.current=null,n===null||n.return===null){Ot=1,au=e,$t=null;break}e:{var o=t,i=n.return,a=n,l=e;if(e=Qt,a.flags|=32768,l!==null&&typeof l=="object"&&typeof l.then=="function"){var u=l,c=a,h=c.tag;if((c.mode&1)===0&&(h===0||h===11||h===15)){var d=c.alternate;d?(c.updateQueue=d.updateQueue,c.memoizedState=d.memoizedState,c.lanes=d.lanes):(c.updateQueue=null,c.memoizedState=null)}var p=zw(i);if(p!==null){p.flags&=-257,Mw(p,i,a,o,e),p.mode&1&&Pw(o,u,e),e=p,l=u;var f=e.updateQueue;if(f===null){var m=new Set;m.add(l),e.updateQueue=m}else f.add(l);break e}else{if((e&1)===0){Pw(o,u,e),R0();break e}l=Error(ee(426))}}else if(at&&a.mode&1){var y=zw(i);if(y!==null){(y.flags&65536)===0&&(y.flags|=256),Mw(y,i,a,o,e),h0(Ia(l,a));break e}}o=l=Ia(l,a),Ot!==4&&(Ot=2),Vl===null?Vl=[o]:Vl.push(o),o=i;do{switch(o.tag){case 3:o.flags|=65536,e&=-e,o.lanes|=e;var g=SC(o,l,e);Dw(o,g);break e;case 1:a=l;var x=o.type,b=o.stateNode;if((o.flags&128)===0&&(typeof x.getDerivedStateFromError=="function"||b!==null&&typeof b.componentDidCatch=="function"&&(po===null||!po.has(b)))){o.flags|=65536,e&=-e,o.lanes|=e;var w=CC(o,a,e);Dw(o,w);break e}}o=o.return}while(o!==null)}UC(n)}catch(k){e=k,$t===n&&n!==null&&($t=n=n.return);continue}break}while(1)}function VC(){var t=pd.current;return pd.current=dd,t===null?dd:t}function R0(){(Ot===0||Ot===3||Ot===2)&&(Ot=4),Ht===null||(mi&268435455)===0&&(rp&268435455)===0||to(Ht,Qt)}function gd(t,e){var n=Fe;Fe|=2;var s=VC();(Ht!==t||Qt!==e)&&(Sr=null,li(t,e));do try{g_();break}catch(r){BC(t,r)}while(1);if(p0(),Fe=n,pd.current=s,$t!==null)throw Error(ee(261));return Ht=null,Qt=0,Ot}function g_(){for(;$t!==null;)WC($t)}function y_(){for(;$t!==null&&!WR();)WC($t)}function WC(t){var e=HC(t.alternate,t,Hn);t.memoizedProps=t.pendingProps,e===null?UC(t):$t=e,$0.current=null}function UC(t){var e=t;do{var n=e.alternate;if(t=e.return,(e.flags&32768)===0){if(n=u_(n,e,Hn),n!==null){$t=n;return}}else{if(n=c_(n,e),n!==null){n.flags&=32767,$t=n;return}if(t!==null)t.flags|=32768,t.subtreeFlags=0,t.deletions=null;else{Ot=6,$t=null;return}}if(e=e.sibling,e!==null){$t=e;return}$t=e=t}while(e!==null);Ot===0&&(Ot=5)}function Zo(t,e,n){var s=Be,r=Cs.transition;try{Cs.transition=null,Be=1,x_(t,e,n,s)}finally{Cs.transition=r,Be=s}return null}function x_(t,e,n,s){do fa();while(so!==null);if((Fe&6)!==0)throw Error(ee(327));n=t.finishedWork;var r=t.finishedLanes;if(n===null)return null;if(t.finishedWork=null,t.finishedLanes=0,n===t.current)throw Error(ee(177));t.callbackNode=null,t.callbackPriority=0;var o=n.lanes|n.childLanes;if(ZR(t,o),t===Ht&&($t=Ht=null,Qt=0),(n.subtreeFlags&2064)===0&&(n.flags&2064)===0||gh||(gh=!0,jC(Qh,function(){return fa(),null})),o=(n.flags&15990)!==0,(n.subtreeFlags&15990)!==0||o){o=Cs.transition,Cs.transition=null;var i=Be;Be=1;var a=Fe;Fe|=4,$0.current=null,d_(t,n),PC(n,t),zA(xg),Jh=!!yg,xg=yg=null,t.current=n,p_(n),UR(),Fe=a,Be=i,Cs.transition=o}else t.current=n;if(gh&&(gh=!1,so=t,md=r),o=t.pendingLanes,o===0&&(po=null),jR(n.stateNode),Fn(t,vt()),e!==null)for(s=t.onRecoverableError,n=0;n<e.length;n++)r=e[n],s(r.value,{componentStack:r.stack,digest:r.digest});if(fd)throw fd=!1,t=zg,zg=null,t;return(md&1)!==0&&t.tag!==0&&fa(),o=t.pendingLanes,(o&1)!==0?t===Mg?Wl++:(Wl=0,Mg=t):Wl=0,Oo(),null}function fa(){if(so!==null){var t=kS(md),e=Cs.transition,n=Be;try{if(Cs.transition=null,Be=16>t?16:t,so===null)var s=!1;else{if(t=so,so=null,md=0,(Fe&6)!==0)throw Error(ee(331));var r=Fe;for(Fe|=4,ue=t.current;ue!==null;){var o=ue,i=o.child;if((ue.flags&16)!==0){var a=o.deletions;if(a!==null){for(var l=0;l<a.length;l++){var u=a[l];for(ue=u;ue!==null;){var c=ue;switch(c.tag){case 0:case 11:case 15:Bl(8,c,o)}var h=c.child;if(h!==null)h.return=c,ue=h;else for(;ue!==null;){c=ue;var d=c.sibling,p=c.return;if(OC(c),c===u){ue=null;break}if(d!==null){d.return=p,ue=d;break}ue=p}}}var f=o.alternate;if(f!==null){var m=f.child;if(m!==null){f.child=null;do{var y=m.sibling;m.sibling=null,m=y}while(m!==null)}}ue=o}}if((o.subtreeFlags&2064)!==0&&i!==null)i.return=o,ue=i;else e:for(;ue!==null;){if(o=ue,(o.flags&2048)!==0)switch(o.tag){case 0:case 11:case 15:Bl(9,o,o.return)}var g=o.sibling;if(g!==null){g.return=o.return,ue=g;break e}ue=o.return}}var x=t.current;for(ue=x;ue!==null;){i=ue;var b=i.child;if((i.subtreeFlags&2064)!==0&&b!==null)b.return=i,ue=b;else e:for(i=x;ue!==null;){if(a=ue,(a.flags&2048)!==0)try{switch(a.tag){case 0:case 11:case 15:sp(9,a)}}catch(k){yt(a,a.return,k)}if(a===i){ue=null;break e}var w=a.sibling;if(w!==null){w.return=a.return,ue=w;break e}ue=a.return}}if(Fe=r,Oo(),hr&&typeof hr.onPostCommitFiberRoot=="function")try{hr.onPostCommitFiberRoot(Xd,t)}catch{}s=!0}return s}finally{Be=n,Cs.transition=e}}return!1}function Zw(t,e,n){e=Ia(n,e),e=SC(t,e,1),t=ho(t,e,1),e=wn(),t!==null&&(Su(t,1,e),Fn(t,e))}function yt(t,e,n){if(t.tag===3)Zw(t,t,n);else for(;e!==null;){if(e.tag===3){Zw(e,t,n);break}else if(e.tag===1){var s=e.stateNode;if(typeof e.type.getDerivedStateFromError=="function"||typeof s.componentDidCatch=="function"&&(po===null||!po.has(s))){t=Ia(n,t),t=CC(e,t,1),e=ho(e,t,1),t=wn(),e!==null&&(Su(e,1,t),Fn(e,t));break}}e=e.return}}function b_(t,e,n){var s=t.pingCache;s!==null&&s.delete(e),e=wn(),t.pingedLanes|=t.suspendedLanes&n,Ht===t&&(Qt&n)===n&&(Ot===4||Ot===3&&(Qt&130023424)===Qt&&500>vt()-T0?li(t,0):I0|=n),Fn(t,e)}function GC(t,e){e===0&&((t.mode&1)===0?e=1:(e=ih,ih<<=1,(ih&130023424)===0&&(ih=4194304)));var n=wn();t=Lr(t,e),t!==null&&(Su(t,e,n),Fn(t,n))}function w_(t){var e=t.memoizedState,n=0;e!==null&&(n=e.retryLane),GC(t,n)}function v_(t,e){var n=0;switch(t.tag){case 13:var s=t.stateNode,r=t.memoizedState;r!==null&&(n=r.retryLane);break;case 19:s=t.stateNode;break;default:throw Error(ee(314))}s!==null&&s.delete(e),GC(t,n)}var HC;HC=function(t,e,n){if(t!==null)if(t.memoizedProps!==e.pendingProps||_n.current)Dn=!0;else{if((t.lanes&n)===0&&(e.flags&128)===0)return Dn=!1,l_(t,e,n);Dn=(t.flags&131072)!==0}else Dn=!1,at&&(e.flags&1048576)!==0&&qS(e,id,e.index);switch(e.lanes=0,e.tag){case 2:var s=e.type;Bh(t,e),t=e.pendingProps;var r=Sa(e,un.current);pa(e,n),r=v0(null,e,s,t,r,n);var o=k0();return e.flags|=1,typeof r=="object"&&r!==null&&typeof r.render=="function"&&r.$$typeof===void 0?(e.tag=1,e.memoizedState=null,e.updateQueue=null,On(s)?(o=!0,rd(e)):o=!1,e.memoizedState=r.state!==null&&r.state!==void 0?r.state:null,g0(e),r.updater=tp,e.stateNode=r,r._reactInternals=e,Ig(e,s,t,n),e=Dg(null,e,s,!0,o,n)):(e.tag=0,at&&o&&u0(e),fn(null,e,r,n),e=e.child),e;case 16:s=e.elementType;e:{switch(Bh(t,e),t=e.pendingProps,r=s._init,s=r(s._payload),e.type=s,r=e.tag=S_(s),t=zs(s,t),r){case 0:e=Eg(null,e,s,t,n);break e;case 1:e=Ww(null,e,s,t,n);break e;case 11:e=Bw(null,e,s,t,n);break e;case 14:e=Vw(null,e,s,zs(s.type,t),n);break e}throw Error(ee(306,s,""))}return e;case 0:return s=e.type,r=e.pendingProps,r=e.elementType===s?r:zs(s,r),Eg(t,e,s,r,n);case 1:return s=e.type,r=e.pendingProps,r=e.elementType===s?r:zs(s,r),Ww(t,e,s,r,n);case 3:e:{if(TC(e),t===null)throw Error(ee(387));s=e.pendingProps,o=e.memoizedState,r=o.element,ZS(t,e),ud(e,s,null,n);var i=e.memoizedState;if(s=i.element,o.isDehydrated)if(o={element:s,isDehydrated:!1,cache:i.cache,pendingSuspenseBoundaries:i.pendingSuspenseBoundaries,transitions:i.transitions},e.updateQueue.baseState=o,e.memoizedState=o,e.flags&256){r=Ia(Error(ee(423)),e),e=Uw(t,e,s,n,r);break e}else if(s!==r){r=Ia(Error(ee(424)),e),e=Uw(t,e,s,n,r);break e}else for(Kn=co(e.stateNode.containerInfo.firstChild),Xn=e,at=!0,Bs=null,n=nC(e,null,s,n),e.child=n;n;)n.flags=n.flags&-3|4096,n=n.sibling;else{if(Ca(),s===r){e=Pr(t,e,n);break e}fn(t,e,s,n)}e=e.child}return e;case 5:return sC(e),t===null&&Cg(e),s=e.type,r=e.pendingProps,o=t!==null?t.memoizedProps:null,i=r.children,bg(s,r)?i=null:o!==null&&bg(s,o)&&(e.flags|=32),IC(t,e),fn(t,e,i,n),e.child;case 6:return t===null&&Cg(e),null;case 13:return EC(t,e,n);case 4:return y0(e,e.stateNode.containerInfo),s=e.pendingProps,t===null?e.child=Na(e,null,s,n):fn(t,e,s,n),e.child;case 11:return s=e.type,r=e.pendingProps,r=e.elementType===s?r:zs(s,r),Bw(t,e,s,r,n);case 7:return fn(t,e,e.pendingProps,n),e.child;case 8:return fn(t,e,e.pendingProps.children,n),e.child;case 12:return fn(t,e,e.pendingProps.children,n),e.child;case 10:e:{if(s=e.type._context,r=e.pendingProps,o=e.memoizedProps,i=r.value,Xe(ad,s._currentValue),s._currentValue=i,o!==null)if(qs(o.value,i)){if(o.children===r.children&&!_n.current){e=Pr(t,e,n);break e}}else for(o=e.child,o!==null&&(o.return=e);o!==null;){var a=o.dependencies;if(a!==null){i=o.child;for(var l=a.firstContext;l!==null;){if(l.context===s){if(o.tag===1){l=Rr(-1,n&-n),l.tag=2;var u=o.updateQueue;if(u!==null){u=u.shared;var c=u.pending;c===null?l.next=l:(l.next=c.next,c.next=l),u.pending=l}}o.lanes|=n,l=o.alternate,l!==null&&(l.lanes|=n),Ng(o.return,n,e),a.lanes|=n;break}l=l.next}}else if(o.tag===10)i=o.type===e.type?null:o.child;else if(o.tag===18){if(i=o.return,i===null)throw Error(ee(341));i.lanes|=n,a=i.alternate,a!==null&&(a.lanes|=n),Ng(i,n,e),i=o.sibling}else i=o.child;if(i!==null)i.return=o;else for(i=o;i!==null;){if(i===e){i=null;break}if(o=i.sibling,o!==null){o.return=i.return,i=o;break}i=i.return}o=i}fn(t,e,r.children,n),e=e.child}return e;case 9:return r=e.type,s=e.pendingProps.children,pa(e,n),r=Is(r),s=s(r),e.flags|=1,fn(t,e,s,n),e.child;case 14:return s=e.type,r=zs(s,e.pendingProps),r=zs(s.type,r),Vw(t,e,s,r,n);case 15:return NC(t,e,e.type,e.pendingProps,n);case 17:return s=e.type,r=e.pendingProps,r=e.elementType===s?r:zs(s,r),Bh(t,e),e.tag=1,On(s)?(t=!0,rd(e)):t=!1,pa(e,n),eC(e,s,r),Ig(e,s,r,n),Dg(null,e,s,!0,t,n);case 19:return DC(t,e,n);case 22:return $C(t,e,n)}throw Error(ee(156,e.tag))};function jC(t,e){return xS(t,e)}function k_(t,e,n,s){this.tag=t,this.key=n,this.sibling=this.child=this.return=this.stateNode=this.type=this.elementType=null,this.index=0,this.ref=null,this.pendingProps=e,this.dependencies=this.memoizedState=this.updateQueue=this.memoizedProps=null,this.mode=s,this.subtreeFlags=this.flags=0,this.deletions=null,this.childLanes=this.lanes=0,this.alternate=null}function ys(t,e,n,s){return new k_(t,e,n,s)}function A0(t){return t=t.prototype,!(!t||!t.isReactComponent)}function S_(t){if(typeof t=="function")return A0(t)?1:0;if(t!=null){if(t=t.$$typeof,t===Qy)return 11;if(t===Zy)return 14}return 2}function mo(t,e){var n=t.alternate;return n===null?(n=ys(t.tag,e,t.key,t.mode),n.elementType=t.elementType,n.type=t.type,n.stateNode=t.stateNode,n.alternate=t,t.alternate=n):(n.pendingProps=e,n.type=t.type,n.flags=0,n.subtreeFlags=0,n.deletions=null),n.flags=t.flags&14680064,n.childLanes=t.childLanes,n.lanes=t.lanes,n.child=t.child,n.memoizedProps=t.memoizedProps,n.memoizedState=t.memoizedState,n.updateQueue=t.updateQueue,e=t.dependencies,n.dependencies=e===null?null:{lanes:e.lanes,firstContext:e.firstContext},n.sibling=t.sibling,n.index=t.index,n.ref=t.ref,n}function Uh(t,e,n,s,r,o){var i=2;if(s=t,typeof t=="function")A0(t)&&(i=1);else if(typeof t=="string")i=5;else e:switch(t){case Yi:return ui(n.children,r,o,e);case Yy:i=8,r|=8;break;case Qm:return t=ys(12,n,e,r|2),t.elementType=Qm,t.lanes=o,t;case Zm:return t=ys(13,n,e,r),t.elementType=Zm,t.lanes=o,t;case Jm:return t=ys(19,n,e,r),t.elementType=Jm,t.lanes=o,t;case tS:return op(n,r,o,e);default:if(typeof t=="object"&&t!==null)switch(t.$$typeof){case Jk:i=10;break e;case eS:i=9;break e;case Qy:i=11;break e;case Zy:i=14;break e;case Qr:i=16,s=null;break e}throw Error(ee(130,t==null?t:typeof t,""))}return e=ys(i,n,e,r),e.elementType=t,e.type=s,e.lanes=o,e}function ui(t,e,n,s){return t=ys(7,t,s,e),t.lanes=n,t}function op(t,e,n,s){return t=ys(22,t,s,e),t.elementType=tS,t.lanes=n,t.stateNode={isHidden:!1},t}function Em(t,e,n){return t=ys(6,t,null,e),t.lanes=n,t}function Dm(t,e,n){return e=ys(4,t.children!==null?t.children:[],t.key,e),e.lanes=n,e.stateNode={containerInfo:t.containerInfo,pendingChildren:null,implementation:t.implementation},e}function C_(t,e,n,s,r){this.tag=e,this.containerInfo=t,this.finishedWork=this.pingCache=this.current=this.pendingChildren=null,this.timeoutHandle=-1,this.callbackNode=this.pendingContext=this.context=null,this.callbackPriority=0,this.eventTimes=cm(0),this.expirationTimes=cm(-1),this.entangledLanes=this.finishedLanes=this.mutableReadLanes=this.expiredLanes=this.pingedLanes=this.suspendedLanes=this.pendingLanes=0,this.entanglements=cm(0),this.identifierPrefix=s,this.onRecoverableError=r,this.mutableSourceEagerHydrationData=null}function _0(t,e,n,s,r,o,i,a,l){return t=new C_(t,e,n,a,l),e===1?(e=1,o===!0&&(e|=8)):e=0,o=ys(3,null,null,e),t.current=o,o.stateNode=t,o.memoizedState={element:s,isDehydrated:n,cache:null,transitions:null,pendingSuspenseBoundaries:null},g0(o),t}function N_(t,e,n){var s=3<arguments.length&&arguments[3]!==void 0?arguments[3]:null;return{$$typeof:Xi,key:s==null?null:""+s,children:t,containerInfo:e,implementation:n}}function KC(t){if(!t)return vo;t=t._reactInternals;e:{if(Ri(t)!==t||t.tag!==1)throw Error(ee(170));var e=t;do{switch(e.tag){case 3:e=e.stateNode.context;break e;case 1:if(On(e.type)){e=e.stateNode.__reactInternalMemoizedMergedChildContext;break e}}e=e.return}while(e!==null);throw Error(ee(171))}if(t.tag===1){var n=t.type;if(On(n))return jS(t,n,e)}return e}function qC(t,e,n,s,r,o,i,a,l){return t=_0(n,s,!0,t,r,o,i,a,l),t.context=KC(null),n=t.current,s=wn(),r=fo(n),o=Rr(s,r),o.callback=e!=null?e:null,ho(n,o,r),t.current.lanes=r,Su(t,r,s),Fn(t,s),t}function ip(t,e,n,s){var r=e.current,o=wn(),i=fo(r);return n=KC(n),e.context===null?e.context=n:e.pendingContext=n,e=Rr(o,i),e.payload={element:t},s=s===void 0?null:s,s!==null&&(e.callback=s),t=ho(r,e,i),t!==null&&(Hs(t,r,i,o),Ph(t,r,i)),i}function yd(t){if(t=t.current,!t.child)return null;switch(t.child.tag){case 5:return t.child.stateNode;default:return t.child.stateNode}}function Jw(t,e){if(t=t.memoizedState,t!==null&&t.dehydrated!==null){var n=t.retryLane;t.retryLane=n!==0&&n<e?n:e}}function O0(t,e){Jw(t,e),(t=t.alternate)&&Jw(t,e)}function $_(){return null}var XC=typeof reportError=="function"?reportError:function(t){console.error(t)};function F0(t){this._internalRoot=t}ap.prototype.render=F0.prototype.render=function(t){var e=this._internalRoot;if(e===null)throw Error(ee(409));ip(t,e,null,null)};ap.prototype.unmount=F0.prototype.unmount=function(){var t=this._internalRoot;if(t!==null){this._internalRoot=null;var e=t.containerInfo;gi(function(){ip(null,t,null,null)}),e[Fr]=null}};function ap(t){this._internalRoot=t}ap.prototype.unstable_scheduleHydration=function(t){if(t){var e=NS();t={blockedOn:null,target:t,priority:e};for(var n=0;n<eo.length&&e!==0&&e<eo[n].priority;n++);eo.splice(n,0,t),n===0&&IS(t)}};function L0(t){return!(!t||t.nodeType!==1&&t.nodeType!==9&&t.nodeType!==11)}function lp(t){return!(!t||t.nodeType!==1&&t.nodeType!==9&&t.nodeType!==11&&(t.nodeType!==8||t.nodeValue!==" react-mount-point-unstable "))}function ev(){}function I_(t,e,n,s,r){if(r){if(typeof s=="function"){var o=s;s=function(){var u=yd(i);o.call(u)}}var i=qC(e,s,t,0,null,!1,!1,"",ev);return t._reactRootContainer=i,t[Fr]=i.current,Jl(t.nodeType===8?t.parentNode:t),gi(),i}for(;r=t.lastChild;)t.removeChild(r);if(typeof s=="function"){var a=s;s=function(){var u=yd(l);a.call(u)}}var l=_0(t,0,!1,null,null,!1,!1,"",ev);return t._reactRootContainer=l,t[Fr]=l.current,Jl(t.nodeType===8?t.parentNode:t),gi(function(){ip(e,l,n,s)}),l}function up(t,e,n,s,r){var o=n._reactRootContainer;if(o){var i=o;if(typeof r=="function"){var a=r;r=function(){var l=yd(i);a.call(l)}}ip(e,i,t,r)}else i=I_(n,e,t,r,s);return yd(i)}SS=function(t){switch(t.tag){case 3:var e=t.stateNode;if(e.current.memoizedState.isDehydrated){var n=$l(e.pendingLanes);n!==0&&(t0(e,n|1),Fn(e,vt()),(Fe&6)===0&&(Ta=vt()+500,Oo()))}break;case 13:gi(function(){var s=Lr(t,1);if(s!==null){var r=wn();Hs(s,t,1,r)}}),O0(t,1)}};n0=function(t){if(t.tag===13){var e=Lr(t,134217728);if(e!==null){var n=wn();Hs(e,t,134217728,n)}O0(t,134217728)}};CS=function(t){if(t.tag===13){var e=fo(t),n=Lr(t,e);if(n!==null){var s=wn();Hs(n,t,e,s)}O0(t,e)}};NS=function(){return Be};$S=function(t,e){var n=Be;try{return Be=t,e()}finally{Be=n}};ug=function(t,e,n){switch(e){case"input":if(ng(t,n),e=n.name,n.type==="radio"&&e!=null){for(n=t;n.parentNode;)n=n.parentNode;for(n=n.querySelectorAll("input[name="+JSON.stringify(""+e)+'][type="radio"]'),e=0;e<n.length;e++){var s=n[e];if(s!==t&&s.form===t.form){var r=Jd(s);if(!r)throw Error(ee(90));sS(s),ng(s,r)}}}break;case"textarea":oS(t,n);break;case"select":e=n.value,e!=null&&ua(t,!!n.multiple,e,!1)}};dS=E0;pS=gi;var T_={usingClientEntryPoint:!1,Events:[Nu,ea,Jd,cS,hS,E0]},bl={findFiberByHostInstance:si,bundleType:0,version:"18.2.0",rendererPackageName:"react-dom"},E_={bundleType:bl.bundleType,version:bl.version,rendererPackageName:bl.rendererPackageName,rendererConfig:bl.rendererConfig,overrideHookState:null,overrideHookStateDeletePath:null,overrideHookStateRenamePath:null,overrideProps:null,overridePropsDeletePath:null,overridePropsRenamePath:null,setErrorHandler:null,setSuspenseHandler:null,scheduleUpdate:null,currentDispatcherRef:Br.ReactCurrentDispatcher,findHostInstanceByFiber:function(t){return t=gS(t),t===null?null:t.stateNode},findFiberByHostInstance:bl.findFiberByHostInstance||$_,findHostInstancesForRefresh:null,scheduleRefresh:null,scheduleRoot:null,setRefreshHandler:null,getCurrentFiber:null,reconcilerVersion:"18.2.0-next-9e3b772b8-20220608"};if(typeof __REACT_DEVTOOLS_GLOBAL_HOOK__<"u"){var yh=__REACT_DEVTOOLS_GLOBAL_HOOK__;if(!yh.isDisabled&&yh.supportsFiber)try{Xd=yh.inject(E_),hr=yh}catch{}}ns.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=T_;ns.createPortal=function(t,e){var n=2<arguments.length&&arguments[2]!==void 0?arguments[2]:null;if(!L0(e))throw Error(ee(200));return N_(t,e,null,n)};ns.createRoot=function(t,e){if(!L0(t))throw Error(ee(299));var n=!1,s="",r=XC;return e!=null&&(e.unstable_strictMode===!0&&(n=!0),e.identifierPrefix!==void 0&&(s=e.identifierPrefix),e.onRecoverableError!==void 0&&(r=e.onRecoverableError)),e=_0(t,1,!1,null,null,n,!1,s,r),t[Fr]=e.current,Jl(t.nodeType===8?t.parentNode:t),new F0(e)};ns.findDOMNode=function(t){if(t==null)return null;if(t.nodeType===1)return t;var e=t._reactInternals;if(e===void 0)throw typeof t.render=="function"?Error(ee(188)):(t=Object.keys(t).join(","),Error(ee(268,t)));return t=gS(e),t=t===null?null:t.stateNode,t};ns.flushSync=function(t){return gi(t)};ns.hydrate=function(t,e,n){if(!lp(e))throw Error(ee(200));return up(null,t,e,!0,n)};ns.hydrateRoot=function(t,e,n){if(!L0(t))throw Error(ee(405));var s=n!=null&&n.hydratedSources||null,r=!1,o="",i=XC;if(n!=null&&(n.unstable_strictMode===!0&&(r=!0),n.identifierPrefix!==void 0&&(o=n.identifierPrefix),n.onRecoverableError!==void 0&&(i=n.onRecoverableError)),e=qC(e,null,t,1,n!=null?n:null,r,!1,o,i),t[Fr]=e.current,Jl(t),s)for(t=0;t<s.length;t++)n=s[t],r=n._getVersion,r=r(n._source),e.mutableSourceEagerHydrationData==null?e.mutableSourceEagerHydrationData=[n,r]:e.mutableSourceEagerHydrationData.push(n,r);return new ap(e)};ns.render=function(t,e,n){if(!lp(e))throw Error(ee(200));return up(null,t,e,!1,n)};ns.unmountComponentAtNode=function(t){if(!lp(t))throw Error(ee(40));return t._reactRootContainer?(gi(function(){up(null,null,t,!1,function(){t._reactRootContainer=null,t[Fr]=null})}),!0):!1};ns.unstable_batchedUpdates=E0;ns.unstable_renderSubtreeIntoContainer=function(t,e,n,s){if(!lp(n))throw Error(ee(200));if(t==null||t._reactInternals===void 0)throw Error(ee(38));return up(t,e,n,!1,s)};ns.version="18.2.0-next-9e3b772b8-20220608";(function(t){function e(){if(!(typeof __REACT_DEVTOOLS_GLOBAL_HOOK__>"u"||typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE!="function"))try{__REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(e)}catch(n){console.error(n)}}e(),t.exports=ns})(qk);var YC,tv=qk.exports;YC=tv.createRoot,tv.hydrateRoot;/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const D_=1e-7,R_=1e-4;class QC{constructor(e,n){this.backend=e,this.dataMover=n,this.data=new WeakMap,this.dataIdsCount=0}get(e){return this.data.has(e)||this.dataMover.moveData(this.backend,e),this.data.get(e)}set(e,n){this.dataIdsCount++,this.data.set(e,n)}has(e){return this.data.has(e)}delete(e){return this.dataIdsCount--,this.data.delete(e)}numDataIds(){return this.dataIdsCount}}class P0{refCount(e){return $n("refCount")}incRef(e){return $n("incRef")}timerAvailable(){return!0}time(e){return $n("time")}read(e){return $n("read")}readSync(e){return $n("readSync")}readToGPU(e,n){return $n("readToGPU")}numDataIds(){return $n("numDataIds")}disposeData(e,n){return $n("disposeData")}write(e,n,s){return $n("write")}move(e,n,s,r,o){return $n("move")}createTensorFromGPUData(e,n,s){return $n("createTensorFromGPUData")}memory(){return $n("memory")}floatPrecision(){return $n("floatPrecision")}epsilon(){return this.floatPrecision()===32?D_:R_}dispose(){return $n("dispose")}}function $n(t){throw new Error(`'${t}' not yet implemented or not found in the registry. This kernel may not be supported by the tfjs backend you have chosen`)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function A_(t){let e=t.length,n=0;for(;e>0;)n=Math.random()*e|0,e--,ji(t,e,n)}function yi(t,e,n){return Math.max(t,Math.min(e,n))}function z0(t){return t%2===0?t:t+1}function ji(t,e,n){const s=t[e];t[e]=t[n],t[n]=s}function __(t){let e=0;for(let n=0;n<t.length;n++)e+=t[n];return e}function C(t,e){if(!t)throw new Error(typeof e=="string"?e:e())}function Vn(t,e,n=""){C(Ae(t,e),()=>n+` Shapes ${t} and ${e} must match`)}function Ka(t){C(t!=null,()=>"The input to the tensor constructor must be a non-null value.")}function H(t){if(t.length===0)return 1;let e=t[0];for(let n=1;n<t.length;n++)e*=t[n];return e}function Ae(t,e){if(t===e)return!0;if(t==null||e==null||t.length!==e.length)return!1;for(let n=0;n<t.length;n++)if(t[n]!==e[n])return!1;return!0}function Ea(t){return t%1===0}function Wg(t){const e=Math.ceil(Math.sqrt(t));return[e,Math.ceil(t/e)]}function ma(t,e){return e<=t.length?t:t+" ".repeat(e-t.length)}function nv(t,e=r=>0,n,s){return new Promise((r,o)=>{let i=0;const a=()=>{if(t()){r();return}i++;const l=e(i);if(n!=null&&i>=n){o();return}s!=null?s(a,l):setTimeout(a,l)};a()})}function ZC(t,e){let n=1,s=-1;for(let o=0;o<t.length;++o)if(t[o]>=0)n*=t[o];else if(t[o]===-1){if(s!==-1)throw Error(`Shapes can only have 1 implicit size. Found -1 at dim ${s} and dim ${o}`);s=o}else if(t[o]<0)throw Error(`Shapes can not be < 0. Found ${t[o]} at dim ${o}`);if(s===-1){if(e>0&&e!==n)throw Error(`Size(${e}) must match the product of shape ${t}`);return t}if(n===0)throw Error(`Cannot infer the missing size in [${t}] when there are 0 elements`);if(e%n!==0)throw Error(`The implicit shape can't be a fractional number. Got ${e} / ${n}`);const r=t.slice();return r[s]=e/n,r}function $e(t,e){const n=e.length;return t=t==null?e.map((s,r)=>r):[].concat(t),C(t.every(s=>s>=-n&&s<n),()=>`All values in axis param must be in range [-${n}, ${n}) but got axis ${t}`),C(t.every(s=>Ea(s)),()=>`All values in axis param must be integers but got axis ${t}`),t.map(s=>s<0?n+s:s)}function Fo(t,e){const n=[],s=[],r=e!=null&&Array.isArray(e)&&e.length===0,o=e==null||r?null:$e(e,t).sort();let i=0;for(let a=0;a<t.length;++a){if(o!=null){if(o[i]===a&&t[a]!==1)throw new Error(`Can't squeeze axis ${a} since its dim '${t[a]}' is not 1`);(o[i]==null||o[i]>a)&&t[a]===1&&(n.push(t[a]),s.push(a)),o[i]<=a&&i++}t[a]!==1&&(n.push(t[a]),s.push(a))}return{newShape:n,keptDims:s}}function zt(t,e){let n=null;if(t==null||t==="float32")n=new Float32Array(e);else if(t==="int32")n=new Int32Array(e);else if(t==="bool")n=new Uint8Array(e);else throw new Error(`Unknown data type ${t}`);return n}function St(t,e){let n=null;if(t==null||t==="float32")n=new Float32Array(e);else if(t==="int32")n=new Int32Array(e);else if(t==="bool")n=new Uint8Array(e);else if(t==="string")n=new Array(e);else throw new Error(`Unknown data type ${t}`);return n}function O_(t,e){for(let n=0;n<t.length;n++){const s=t[n];if(isNaN(s)||!isFinite(s))throw Error(`A tensor of type ${e} being uploaded contains ${s}.`)}}function F_(t){return t==="bool"||t==="complex64"||t==="float32"||t==="int32"||t==="string"}function JC(t,e){return!(e==="complex64"||e==="float32"&&t!=="complex64"||e==="int32"&&t!=="float32"&&t!=="complex64"||e==="bool"&&t==="bool")}function xd(t){if(t==="float32"||t==="int32")return 4;if(t==="complex64")return 8;if(t==="bool")return 1;throw new Error(`Unknown dtype ${t}`)}function L_(t){if(t==null)return 0;let e=0;return t.forEach(n=>e+=n.length),e}function Iu(t){return typeof t=="string"||t instanceof String}function P_(t){return typeof t=="boolean"}function Ug(t){return typeof t=="number"}function Tu(t){return Array.isArray(t)?Tu(t[0]):t instanceof Float32Array?"float32":t instanceof Int32Array||t instanceof Uint8Array||t instanceof Uint8ClampedArray?"int32":Ug(t)?"float32":Iu(t)?"string":P_(t)?"bool":"float32"}function Gg(t){return!!(t&&t.constructor&&t.call&&t.apply)}function Hg(t,e){for(let n=e;n<t;++n)if(t%n===0)return n;return t}function me(t){const e=t.length;if(e<2)return[];const n=new Array(e-1);n[e-2]=t[e-1];for(let s=e-3;s>=0;--s)n[s]=n[s+1]*t[s+1];return n}function eN(t,e,n,s=!1){const r=new Array;if(e.length===1){const o=e[0]*(s?2:1);for(let i=0;i<o;i++)r[i]=n[t+i]}else{const o=e[0],i=e.slice(1),a=i.reduce((l,u)=>l*u)*(s?2:1);for(let l=0;l<o;l++)r[l]=eN(t+l*a,i,n,s)}return r}function Ns(t,e,n=!1){if(t.length===0)return e[0];const s=t.reduce((r,o)=>r*o)*(n?2:1);if(s===0)return[];if(s!==e.length)throw new Error(`[${t}] does not match the input size ${e.length}${n?" for a complex tensor":""}.`);return eN(0,t,e,n)}function z_(t,e){if(Array.isArray(t))return t;if(e==="float32")return t instanceof Float32Array?t:new Float32Array(t);if(e==="int32")return t instanceof Int32Array?t:new Int32Array(t);if(e==="bool"||e==="string")return Uint8Array.from(new Int32Array(t));throw new Error(`Unknown dtype ${e}`)}function M0(t,e){const n=Jt(t,e);for(let s=0;s<n.length;s++)n[s]=1;return n}function Jt(t,e){if(e==null||e==="float32"||e==="complex64")return new Float32Array(t);if(e==="int32")return new Int32Array(t);if(e==="bool")return new Uint8Array(t);throw new Error(`Unknown data type ${e}`)}function tN(t,e){const n=t.reduce((s,r)=>s*r,1);if(e==null||e==="float32")return Ns(t,new Float32Array(n));if(e==="int32")return Ns(t,new Int32Array(n));if(e==="bool")return Ns(t,new Uint8Array(n));throw new Error(`Unknown data type ${e}`)}function rs(t){t.forEach(e=>{C(Number.isInteger(e)&&e>=0,()=>`Tensor must have a shape comprised of positive integers but got shape [${t}].`)})}function pr(t,e,n){if(e===0)return 0;if(e===1)return t[0];let s=t[t.length-1];for(let r=0;r<t.length-1;++r)s+=n[r]*t[r];return s}function qa(t,e,n){if(e===0)return[];if(e===1)return[t];const s=new Array(e);for(let r=0;r<s.length-1;++r)s[r]=Math.floor(t/n[r]),t-=s[r]*n[r];return s[s.length-1]=t,s}function xi(t){return t&&t.then&&typeof t.then=="function"}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const sv="tfjsflags";class M_{constructor(e){this.global=e,this.flags={},this.flagRegistry={},this.urlFlags={},this.getQueryParams=B_,this.populateURLFlags()}setPlatform(e,n){this.platform!=null&&(U().getBool("IS_TEST")||U().getBool("PROD")||console.warn(`Platform ${this.platformName} has already been set. Overwriting the platform with ${e}.`)),this.platformName=e,this.platform=n}registerFlag(e,n,s){if(this.flagRegistry[e]={evaluationFn:n,setHook:s},this.urlFlags[e]!=null){const r=this.urlFlags[e];U().getBool("IS_TEST")||U().getBool("PROD")||console.warn(`Setting feature override from URL ${e}: ${r}.`),this.set(e,r)}}async getAsync(e){return e in this.flags?this.flags[e]:(this.flags[e]=await this.evaluateFlag(e),this.flags[e])}get(e){if(e in this.flags)return this.flags[e];const n=this.evaluateFlag(e);if(xi(n))throw new Error(`Flag ${e} cannot be synchronously evaluated. Please use getAsync() instead.`);return this.flags[e]=n,this.flags[e]}getNumber(e){return this.get(e)}getBool(e){return this.get(e)}getFlags(){return this.flags}get features(){return this.flags}set(e,n){if(this.flagRegistry[e]==null)throw new Error(`Cannot set flag ${e} as it has not been registered.`);this.flags[e]=n,this.flagRegistry[e].setHook!=null&&this.flagRegistry[e].setHook(n)}evaluateFlag(e){if(this.flagRegistry[e]==null)throw new Error(`Cannot evaluate flag '${e}': no evaluation function found.`);return this.flagRegistry[e].evaluationFn()}setFlags(e){this.flags=Object.assign({},e)}reset(){this.flags={},this.urlFlags={},this.populateURLFlags()}populateURLFlags(){if(typeof this.global>"u"||typeof this.global.location>"u"||typeof this.global.location.search>"u")return;const e=this.getQueryParams(this.global.location.search);sv in e&&e[sv].split(",").forEach(s=>{const[r,o]=s.split(":");this.urlFlags[r]=W_(r,o)})}}function B_(t){const e={};return t.replace(/[?&]([^=?&]+)(?:=([^&]*))?/g,(n,...s)=>(V_(e,s[0],s[1]),s.join("="))),e}function V_(t,e,n){t[decodeURIComponent(e)]=decodeURIComponent(n||"")}function W_(t,e){if(e=e.toLowerCase(),e==="true"||e==="false")return e==="true";if(`${+e}`===e)return+e;throw new Error(`Could not parse value flag value ${e} for flag ${t}.`)}function U(){return nN}let nN=null;function U_(t){nN=t}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let Rm;function sN(){if(Rm==null){let t;if(typeof window<"u")t=window;else if(typeof global<"u")t=global;else if(typeof process<"u")t=process;else if(typeof self<"u")t=self;else throw new Error("Could not find a global object");Rm=t}return Rm}function G_(){const t=sN();return t._tfGlobals==null&&(t._tfGlobals=new Map),t._tfGlobals}function B0(t,e){const n=G_();if(n.has(t))return n.get(t);{const s=e();return n.set(t,s),n.get(t)}}const cp="Abs",Eu="Acos",Du="Acosh",Xa="Add",hp="AddN",V0="All",W0="Any",dp="ArgMax",pp="ArgMin",Ru="Asin",Au="Asinh",_u="Atan",Ou="Atanh",Fu="Atan2",fp="AvgPool",U0="AvgPoolGrad",mp="AvgPool3D",G0="AvgPool3DGrad",gp="BatchMatMul",yp="BatchToSpaceND",H0="Bincount",H_="BroadcastTo",j0="BroadcastArgs",Lu="Cast",Pu="Ceil",zu="ClipByValue",K0="Complex",xp="ComplexAbs",bp="Concat",wp="Conv2D",q0="Conv2DBackpropFilter",vp="Conv2DBackpropInput",kp="Conv3D",X0="Conv3DBackpropFilterV2",Y0="Conv3DBackpropInputV2",Mu="Cos",Bu="Cosh",Q0="Cumprod",Sp="Cumsum",Z0="CropAndResize",J0="DenseBincount",ex="DepthToSpace",Cp="DepthwiseConv2dNative",tx="DepthwiseConv2dNativeBackpropFilter",nx="DepthwiseConv2dNativeBackpropInput",sx="Diag",Np="Dilation2D",jg="Dilation2DBackpropInput",Kg="Dilation2DBackpropFilter",Vu="RealDiv",rx="Einsum",Wu="Elu",ox="EluGrad",Uu="Erf",$p="Equal",Gu="Exp",Ip="ExpandDims",Hu="Expm1",ix="FFT",ax="Fill",lx="FlipLeftRight",ju="Floor",Ku="FloorDiv",Tp="FusedBatchNorm",Ep="GatherV2",ux="GatherNd",Dp="Greater",qu="GreaterEqual",Xu="Identity",cx="IFFT",hx="Imag",Yu="IsFinite",Qu="IsInf",Zu="IsNan",Rp="LeakyRelu",Ap="Less",_p="LessEqual",dx="LinSpace",Ju="Log",ec="Log1p",Op="LogicalAnd",Fp="LogicalNot",Lp="LogicalOr",j_="LogSoftmax",Pp="LRN",px="LRNGrad",zp="Max",tc="Maximum",Mp="MaxPool",fx="MaxPoolGrad",Bp="MaxPool3D",mx="MaxPool3DGrad",gx="MaxPoolWithArgmax",Vp="Mean",Wp="Min",nc="Minimum",Up="MirrorPad",sc="Mod",yx="Multinomial",rc="Multiply",Gp="Neg",Hp="NotEqual",xx="NonMaxSuppressionV3",bx="NonMaxSuppressionV4",wx="NonMaxSuppressionV5",jp="OnesLike",Kp="OneHot",qp="Pack",Xp="PadV2",oc="Pow",Yp="Prelu",Qp="Prod",vx="RaggedGather",kx="RaggedRange",Sx="RaggedTensorToTensor",Cx="Range",Nx="Real",ic="Reciprocal",ac="Relu",Zp="Reshape",Jp="ResizeNearestNeighbor",$x="ResizeNearestNeighborGrad",ef="ResizeBilinear",Ix="ResizeBilinearGrad",lc="Relu6",tf="Reverse",uc="Round",cc="Rsqrt",Tx="ScatterNd",Ex="SearchSorted",nf="Select",hc="Selu",sf="Slice",dc="Sin",pc="Sinh",fc="Sign",mc="Sigmoid",gc="Softplus",yc="Sqrt",rf="Sum",of="SpaceToBatchND",af="SplitV",lf="Softmax",Dx="SparseFillEmptyRows",Rx="SparseReshape",Ax="SparseSegmentMean",_x="SparseSegmentSum",Ox="SparseToDense",xc="SquaredDifference",Fx="Square",Lx="StridedSlice",Px="StringNGrams",zx="StringSplit",Mx="StringToHashBucketFast",bc="Sub",wc="Tan",vc="Tanh",kc="Tile",Bx="TopK",Vx="Transform",ga="Transpose",Wx="Unique",uf="Unpack",cf="UnsortedSegmentSum",hf="ZerosLike",Sc="Step",qg="FromPixels",Ux="RotateWithOffset",bd="_FusedMatMul",wd="FusedConv2D",vd="FusedDepthwiseConv2D";/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jn(...t){U().getBool("IS_TEST")||U().getBool("PROD")||console.warn(...t)}function K_(...t){U().getBool("IS_TEST")||U().getBool("PROD")||console.log(...t)}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const kd=B0("kernelRegistry",()=>new Map),Xg=B0("gradRegistry",()=>new Map);function Yg(t,e){const n=oN(t,e);return kd.get(n)}function rv(t){return Xg.get(t)}function ov(t){const e=kd.entries(),n=[];for(;;){const{done:s,value:r}=e.next();if(s)break;const[o,i]=r,[a]=o.split("_");a===t&&n.push(i)}return n}function rN(t){const{kernelName:e,backendName:n}=t,s=oN(e,n);kd.has(s)&&jn(`The kernel '${e}' for backend '${n}' is already registered`),kd.set(s,t)}function q_(t){const{kernelName:e}=t;Xg.has(e)&&U().getBool("DEBUG")&&jn(`Overriding the gradient for '${e}'`),Xg.set(e,t)}function oN(t,e){return`${e}_${t}`}var Qg=Ye,xs=null;try{xs=new WebAssembly.Instance(new WebAssembly.Module(new Uint8Array([0,97,115,109,1,0,0,0,1,13,2,96,0,1,127,96,4,127,127,127,127,1,127,3,7,6,0,1,1,1,1,1,6,6,1,127,1,65,0,11,7,50,6,3,109,117,108,0,1,5,100,105,118,95,115,0,2,5,100,105,118,95,117,0,3,5,114,101,109,95,115,0,4,5,114,101,109,95,117,0,5,8,103,101,116,95,104,105,103,104,0,0,10,191,1,6,4,0,35,0,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,126,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,127,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,128,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,129,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,130,34,4,66,32,135,167,36,0,32,4,167,11])),{}).exports}catch{}function Ye(t,e,n){this.low=t|0,this.high=e|0,this.unsigned=!!n}Ye.prototype.__isLong__;Object.defineProperty(Ye.prototype,"__isLong__",{value:!0});function Wn(t){return(t&&t.__isLong__)===!0}Ye.isLong=Wn;var iv={},av={};function Ai(t,e){var n,s,r;return e?(t>>>=0,(r=0<=t&&t<256)&&(s=av[t],s)?s:(n=Qe(t,(t|0)<0?-1:0,!0),r&&(av[t]=n),n)):(t|=0,(r=-128<=t&&t<128)&&(s=iv[t],s)?s:(n=Qe(t,t<0?-1:0,!1),r&&(iv[t]=n),n))}Ye.fromInt=Ai;function bs(t,e){if(isNaN(t))return e?ii:ws;if(e){if(t<0)return ii;if(t>=iN)return uN}else{if(t<=-uv)return Rn;if(t+1>=uv)return lN}return t<0?bs(-t,e).neg():Qe(t%Da|0,t/Da|0,e)}Ye.fromNumber=bs;function Qe(t,e,n){return new Ye(t,e,n)}Ye.fromBits=Qe;var Sd=Math.pow;function Gx(t,e,n){if(t.length===0)throw Error("empty string");if(t==="NaN"||t==="Infinity"||t==="+Infinity"||t==="-Infinity")return ws;if(typeof e=="number"?(n=e,e=!1):e=!!e,n=n||10,n<2||36<n)throw RangeError("radix");var s;if((s=t.indexOf("-"))>0)throw Error("interior hyphen");if(s===0)return Gx(t.substring(1),e,n).neg();for(var r=bs(Sd(n,8)),o=ws,i=0;i<t.length;i+=8){var a=Math.min(8,t.length-i),l=parseInt(t.substring(i,i+a),n);if(a<8){var u=bs(Sd(n,a));o=o.mul(u).add(bs(l))}else o=o.mul(r),o=o.add(bs(l))}return o.unsigned=e,o}Ye.fromString=Gx;function er(t,e){return typeof t=="number"?bs(t,e):typeof t=="string"?Gx(t,e):Qe(t.low,t.high,typeof e=="boolean"?e:t.unsigned)}Ye.fromValue=er;var lv=1<<16,X_=1<<24,Da=lv*lv,iN=Da*Da,uv=iN/2,cv=Ai(X_),ws=Ai(0);Ye.ZERO=ws;var ii=Ai(0,!0);Ye.UZERO=ii;var aa=Ai(1);Ye.ONE=aa;var aN=Ai(1,!0);Ye.UONE=aN;var Zg=Ai(-1);Ye.NEG_ONE=Zg;var lN=Qe(-1,2147483647,!1);Ye.MAX_VALUE=lN;var uN=Qe(-1,-1,!0);Ye.MAX_UNSIGNED_VALUE=uN;var Rn=Qe(0,-2147483648,!1);Ye.MIN_VALUE=Rn;var se=Ye.prototype;se.toInt=function(){return this.unsigned?this.low>>>0:this.low};se.toNumber=function(){return this.unsigned?(this.high>>>0)*Da+(this.low>>>0):this.high*Da+(this.low>>>0)};se.toString=function(e){if(e=e||10,e<2||36<e)throw RangeError("radix");if(this.isZero())return"0";if(this.isNegative())if(this.eq(Rn)){var n=bs(e),s=this.div(n),r=s.mul(n).sub(this);return s.toString(e)+r.toInt().toString(e)}else return"-"+this.neg().toString(e);for(var o=bs(Sd(e,6),this.unsigned),i=this,a="";;){var l=i.div(o),u=i.sub(l.mul(o)).toInt()>>>0,c=u.toString(e);if(i=l,i.isZero())return c+a;for(;c.length<6;)c="0"+c;a=""+c+a}};se.getHighBits=function(){return this.high};se.getHighBitsUnsigned=function(){return this.high>>>0};se.getLowBits=function(){return this.low};se.getLowBitsUnsigned=function(){return this.low>>>0};se.getNumBitsAbs=function(){if(this.isNegative())return this.eq(Rn)?64:this.neg().getNumBitsAbs();for(var e=this.high!=0?this.high:this.low,n=31;n>0&&(e&1<<n)==0;n--);return this.high!=0?n+33:n+1};se.isZero=function(){return this.high===0&&this.low===0};se.eqz=se.isZero;se.isNegative=function(){return!this.unsigned&&this.high<0};se.isPositive=function(){return this.unsigned||this.high>=0};se.isOdd=function(){return(this.low&1)===1};se.isEven=function(){return(this.low&1)===0};se.equals=function(e){return Wn(e)||(e=er(e)),this.unsigned!==e.unsigned&&this.high>>>31===1&&e.high>>>31===1?!1:this.high===e.high&&this.low===e.low};se.eq=se.equals;se.notEquals=function(e){return!this.eq(e)};se.neq=se.notEquals;se.ne=se.notEquals;se.lessThan=function(e){return this.comp(e)<0};se.lt=se.lessThan;se.lessThanOrEqual=function(e){return this.comp(e)<=0};se.lte=se.lessThanOrEqual;se.le=se.lessThanOrEqual;se.greaterThan=function(e){return this.comp(e)>0};se.gt=se.greaterThan;se.greaterThanOrEqual=function(e){return this.comp(e)>=0};se.gte=se.greaterThanOrEqual;se.ge=se.greaterThanOrEqual;se.compare=function(e){if(Wn(e)||(e=er(e)),this.eq(e))return 0;var n=this.isNegative(),s=e.isNegative();return n&&!s?-1:!n&&s?1:this.unsigned?e.high>>>0>this.high>>>0||e.high===this.high&&e.low>>>0>this.low>>>0?-1:1:this.sub(e).isNegative()?-1:1};se.comp=se.compare;se.negate=function(){return!this.unsigned&&this.eq(Rn)?Rn:this.not().add(aa)};se.neg=se.negate;se.add=function(e){Wn(e)||(e=er(e));var n=this.high>>>16,s=this.high&65535,r=this.low>>>16,o=this.low&65535,i=e.high>>>16,a=e.high&65535,l=e.low>>>16,u=e.low&65535,c=0,h=0,d=0,p=0;return p+=o+u,d+=p>>>16,p&=65535,d+=r+l,h+=d>>>16,d&=65535,h+=s+a,c+=h>>>16,h&=65535,c+=n+i,c&=65535,Qe(d<<16|p,c<<16|h,this.unsigned)};se.subtract=function(e){return Wn(e)||(e=er(e)),this.add(e.neg())};se.sub=se.subtract;se.multiply=function(e){if(this.isZero())return ws;if(Wn(e)||(e=er(e)),xs){var n=xs.mul(this.low,this.high,e.low,e.high);return Qe(n,xs.get_high(),this.unsigned)}if(e.isZero())return ws;if(this.eq(Rn))return e.isOdd()?Rn:ws;if(e.eq(Rn))return this.isOdd()?Rn:ws;if(this.isNegative())return e.isNegative()?this.neg().mul(e.neg()):this.neg().mul(e).neg();if(e.isNegative())return this.mul(e.neg()).neg();if(this.lt(cv)&&e.lt(cv))return bs(this.toNumber()*e.toNumber(),this.unsigned);var s=this.high>>>16,r=this.high&65535,o=this.low>>>16,i=this.low&65535,a=e.high>>>16,l=e.high&65535,u=e.low>>>16,c=e.low&65535,h=0,d=0,p=0,f=0;return f+=i*c,p+=f>>>16,f&=65535,p+=o*c,d+=p>>>16,p&=65535,p+=i*u,d+=p>>>16,p&=65535,d+=r*c,h+=d>>>16,d&=65535,d+=o*u,h+=d>>>16,d&=65535,d+=i*l,h+=d>>>16,d&=65535,h+=s*c+r*u+o*l+i*a,h&=65535,Qe(p<<16|f,h<<16|d,this.unsigned)};se.mul=se.multiply;se.divide=function(e){if(Wn(e)||(e=er(e)),e.isZero())throw Error("division by zero");if(xs){if(!this.unsigned&&this.high===-2147483648&&e.low===-1&&e.high===-1)return this;var n=(this.unsigned?xs.div_u:xs.div_s)(this.low,this.high,e.low,e.high);return Qe(n,xs.get_high(),this.unsigned)}if(this.isZero())return this.unsigned?ii:ws;var s,r,o;if(this.unsigned){if(e.unsigned||(e=e.toUnsigned()),e.gt(this))return ii;if(e.gt(this.shru(1)))return aN;o=ii}else{if(this.eq(Rn)){if(e.eq(aa)||e.eq(Zg))return Rn;if(e.eq(Rn))return aa;var i=this.shr(1);return s=i.div(e).shl(1),s.eq(ws)?e.isNegative()?aa:Zg:(r=this.sub(e.mul(s)),o=s.add(r.div(e)),o)}else if(e.eq(Rn))return this.unsigned?ii:ws;if(this.isNegative())return e.isNegative()?this.neg().div(e.neg()):this.neg().div(e).neg();if(e.isNegative())return this.div(e.neg()).neg();o=ws}for(r=this;r.gte(e);){s=Math.max(1,Math.floor(r.toNumber()/e.toNumber()));for(var a=Math.ceil(Math.log(s)/Math.LN2),l=a<=48?1:Sd(2,a-48),u=bs(s),c=u.mul(e);c.isNegative()||c.gt(r);)s-=l,u=bs(s,this.unsigned),c=u.mul(e);u.isZero()&&(u=aa),o=o.add(u),r=r.sub(c)}return o};se.div=se.divide;se.modulo=function(e){if(Wn(e)||(e=er(e)),xs){var n=(this.unsigned?xs.rem_u:xs.rem_s)(this.low,this.high,e.low,e.high);return Qe(n,xs.get_high(),this.unsigned)}return this.sub(this.div(e).mul(e))};se.mod=se.modulo;se.rem=se.modulo;se.not=function(){return Qe(~this.low,~this.high,this.unsigned)};se.and=function(e){return Wn(e)||(e=er(e)),Qe(this.low&e.low,this.high&e.high,this.unsigned)};se.or=function(e){return Wn(e)||(e=er(e)),Qe(this.low|e.low,this.high|e.high,this.unsigned)};se.xor=function(e){return Wn(e)||(e=er(e)),Qe(this.low^e.low,this.high^e.high,this.unsigned)};se.shiftLeft=function(e){return Wn(e)&&(e=e.toInt()),(e&=63)===0?this:e<32?Qe(this.low<<e,this.high<<e|this.low>>>32-e,this.unsigned):Qe(0,this.low<<e-32,this.unsigned)};se.shl=se.shiftLeft;se.shiftRight=function(e){return Wn(e)&&(e=e.toInt()),(e&=63)===0?this:e<32?Qe(this.low>>>e|this.high<<32-e,this.high>>e,this.unsigned):Qe(this.high>>e-32,this.high>=0?0:-1,this.unsigned)};se.shr=se.shiftRight;se.shiftRightUnsigned=function(e){if(Wn(e)&&(e=e.toInt()),e&=63,e===0)return this;var n=this.high;if(e<32){var s=this.low;return Qe(s>>>e|n<<32-e,n>>>e,this.unsigned)}else return e===32?Qe(n,0,this.unsigned):Qe(n>>>e-32,0,this.unsigned)};se.shru=se.shiftRightUnsigned;se.shr_u=se.shiftRightUnsigned;se.toSigned=function(){return this.unsigned?Qe(this.low,this.high,!1):this};se.toUnsigned=function(){return this.unsigned?this:Qe(this.low,this.high,!0)};se.toBytes=function(e){return e?this.toBytesLE():this.toBytesBE()};se.toBytesLE=function(){var e=this.high,n=this.low;return[n&255,n>>>8&255,n>>>16&255,n>>>24,e&255,e>>>8&255,e>>>16&255,e>>>24]};se.toBytesBE=function(){var e=this.high,n=this.low;return[e>>>24,e>>>16&255,e>>>8&255,e&255,n>>>24,n>>>16&255,n>>>8&255,n&255]};Ye.fromBytes=function(e,n,s){return s?Ye.fromBytesLE(e,n):Ye.fromBytesBE(e,n)};Ye.fromBytesLE=function(e,n){return new Ye(e[0]|e[1]<<8|e[2]<<16|e[3]<<24,e[4]|e[5]<<8|e[6]<<16|e[7]<<24,n)};Ye.fromBytesBE=function(e,n){return new Ye(e[4]<<24|e[5]<<16|e[6]<<8|e[7],e[0]<<24|e[1]<<16|e[2]<<8|e[3],n)};const Y_=uR({__proto__:null,default:Qg},[Qg]);/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ei=Qg||Y_;function df(t){return ei.fromString(t,!0,16)}const cN=df("c3a5c85c97cb3127"),Jo=df("b492b66fbe98f273"),on=df("9ae16a3b2f90404f");function Jg(t){return t.xor(t.shru(47))}function hN(t,e,n){const s=t.slice(e,e+n);return ei.fromBytes(Array.from(s),!0,!0)}function He(t,e){return hN(t,e,8)}function hv(t,e){return hN(t,e,4)}function _t(t,e){return e===0?t:t.shru(e).or(t.shl(64-e))}function go(t,e,n=df("9ddfea08eb382d69")){let s=t.xor(e).mul(n);s=s.xor(s.shru(47));let r=e.xor(s).mul(n);return r=r.xor(r.shru(47)),r=r.mul(n),r}function Q_(t,e,n,s,r,o){r=r.add(t),o=_t(o.add(r).add(s),21);const i=r;return r=r.add(e),r=r.add(n),o=o.add(_t(r,44)),[r.add(s),o.add(i)]}function xh(t,e,n,s){return Q_(He(t,e),He(t,e+8),He(t,e+16),He(t,e+24),n,s)}function Z_(t,e=t.length){if(e>=8){const n=on.add(e*2),s=He(t,0).add(on),r=He(t,e-8),o=_t(r,37).mul(n).add(s),i=_t(s,25).add(r).mul(n);return go(o,i,n)}if(e>=4){const n=on.add(e*2),s=hv(t,0);return go(s.shl(3).add(e),hv(t,e-4),n)}if(e>0){const n=t[0],s=t[e>>1],r=t[e-1],o=n+(s<<8),i=e+(r<<2);return Jg(on.mul(o).xor(cN.mul(i))).mul(on)}return on}function J_(t,e=t.length){const n=on.add(e*2),s=He(t,0).mul(Jo),r=He(t,8),o=He(t,e-8).mul(n),i=He(t,e-16).mul(on);return go(_t(s.add(r),43).add(_t(o,30)).add(i),s.add(_t(r.add(on),18)).add(o),n)}function eO(t,e=t.length){const n=on.add(e*2),s=He(t,0).mul(on),r=He(t,8),o=He(t,e-8).mul(n),i=He(t,e-16).mul(on),a=_t(s.add(r),43).add(_t(o,30)).add(i),l=go(a,s.add(_t(r.add(on),18)).add(o),n),u=He(t,16).mul(n),c=He(t,24),h=a.add(He(t,e-32)).mul(n),d=l.add(He(t,e-24)).mul(n);return go(_t(u.add(c),43).add(_t(h,30)).add(d),u.add(_t(c.add(s),18)).add(h),n)}function tO(t,e=t.length){const n=ei.fromNumber(81,!0);if(e<=32)return e<=16?Z_(t,e):J_(t,e);if(e<=64)return eO(t,e);let s=n,r=n.mul(Jo).add(113),o=Jg(r.mul(on).add(113)).mul(on),i=[ei.UZERO,ei.UZERO],a=[ei.UZERO,ei.UZERO];s=s.mul(on).add(He(t,0));let l=0;const u=(e-1>>6)*64,c=u+(e-1&63)-63;do s=_t(s.add(r).add(i[0]).add(He(t,l+8)),37).mul(Jo),r=_t(r.add(i[1]).add(He(t,l+48)),42).mul(Jo),s=s.xor(a[1]),r=r.add(i[0]).add(He(t,l+40)),o=_t(o.add(a[0]),33).mul(Jo),i=xh(t,l,i[1].mul(Jo),s.add(a[0])),a=xh(t,l+32,o.add(a[1]),r.add(He(t,l+16))),[o,s]=[s,o],l+=64;while(l!==u);const h=Jo.add(o.and(255).shl(1));return l=c,a[0]=a[0].add(e-1&63),i[0]=i[0].add(a[0]),a[0]=a[0].add(i[0]),s=_t(s.add(r).add(i[0]).add(He(t,l+8)),37).mul(h),r=_t(r.add(i[1]).add(He(t,l+48)),42).mul(h),s=s.xor(a[1].mul(9)),r=r.add(i[0].mul(9).add(He(t,l+40))),o=_t(o.add(a[0]),33).mul(h),i=xh(t,l,i[1].mul(h),s.add(a[0])),a=xh(t,l+32,o.add(a[1]),r.add(He(t,l+16))),[o,s]=[s,o],go(go(i[0],a[0],h).add(Jg(r).mul(cN)).add(o),go(i[1],a[1],h).add(s),h)}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Lo(t,e){return e==="string"?yo(t):_i([t],e)}function nO(t,e){return t instanceof Float32Array&&e==="float32"||t instanceof Int32Array&&e==="int32"||t instanceof Uint8Array&&e==="bool"}function _i(t,e){if(e==="string")throw new Error("Cannot convert a string[] to a TypedArray");if(Array.isArray(t)&&(t=bi(t)),U().getBool("DEBUG")&&O_(t,e),nO(t,e))return t;if(e==null||e==="float32"||e==="complex64")return new Float32Array(t);if(e==="int32")return new Int32Array(t);if(e==="bool"){const n=new Uint8Array(t.length);for(let s=0;s<n.length;++s)Math.round(t[s])!==0&&(n[s]=1);return n}else throw new Error(`Unknown data type ${e}`)}function mn(){return U().platform.now()}function yo(t,e="utf-8"){return e=e||"utf-8",U().platform.encode(t,e)}function ko(t,e="utf-8"){return e=e||"utf-8",U().platform.decode(t,e)}function Xs(t){return U().platform.isTypedArray(t)}function bi(t,e=[],n=!1){if(e==null&&(e=[]),typeof t=="boolean"||typeof t=="number"||typeof t=="string"||xi(t)||t==null||Xs(t)&&n)e.push(t);else if(Array.isArray(t)||Xs(t))for(let s=0;s<t.length;++s)bi(t[s],e,n);else{let s=-1;for(const r of Object.keys(t))/^([1-9]+[0-9]*|0)$/.test(r)&&(s=Math.max(s,Number(r)));for(let r=0;r<=s;r++)bi(t[r],e,n)}return e}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class sO{constructor(e,n){this.backendTimer=e,this.logger=n,n==null&&(this.logger=new oO)}profileKernel(e,n,s){let r;const o=()=>{r=s()};let i;const a=mn();if(this.backendTimer.timerAvailable())i=this.backendTimer.time(o);else{o();for(const u of r)u.dataSync();i=Promise.resolve({kernelMs:mn()-a})}if(U().getBool("CHECK_COMPUTATION_FOR_ERRORS"))for(let u=0;u<r.length;u++){const c=r[u];c.data().then(h=>{rO(h,c.dtype,e)})}return{kernelName:e,outputs:r,inputs:n,timeMs:i.then(u=>u.kernelMs),extraInfo:i.then(u=>u.getExtraProfileInfo!=null?u.getExtraProfileInfo():"")}}logKernelProfile(e){const{kernelName:n,outputs:s,timeMs:r,inputs:o,extraInfo:i}=e;s.forEach(a=>{Promise.all([a.data(),r,i]).then(l=>{this.logger.logKernelProfile(n,a,l[0],l[1],o,l[2])})})}}function rO(t,e,n){if(e!=="float32")return!1;for(let s=0;s<t.length;s++){const r=t[s];if(isNaN(r)||!isFinite(r))return console.warn(`Found ${r} in the result of '${n}'`),!0}return!1}class oO{logKernelProfile(e,n,s,r,o,i){const a=typeof r=="number"?ma(`${r}ms`,9):r.error,l=ma(e,25),u=n.rank,c=n.size,h=ma(n.shape.toString(),14);let d="";for(const p in o){const f=o[p];if(f!=null){const m=f.shape||n.shape,y=m.length;d+=`${p}: ${y}D ${y>0?m:""} `}}console.log(`%c${l}	%c${a}	%c${u}D ${h}	%c${c}	%c${d}	%c${i}`,"font-weight:bold","color:red","color:blue","color: orange","color: green","color: steelblue")}}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function iO(t,e,n){const s={},r={};for(let l=0;l<e.length;l++)s[e[l].id]=!0;for(let l=0;l<t.length;l++){const u=t[l],c=u.inputs;for(const h in c){const d=c[h];let p=!1;for(let f=0;f<e.length;f++)if(s[d.id]){u.outputs.forEach(m=>s[m.id]=!0),p=!0,r[u.id]=!0;break}if(p)break}}const o={};o[n.id]=!0;const i={};for(let l=t.length-1;l>=0;l--){const u=t[l],c=u.inputs;for(let h=0;h<u.outputs.length;h++)if(o[u.outputs[h].id]){for(const d in c)o[c[d].id]=!0,i[u.id]=!0;break}}const a=[];for(let l=0;l<t.length;l++){const u=t[l];if(r[u.id]&&i[u.id]){const c={};for(const d in u.inputs){const p=u.inputs[d];s[p.id]&&(c[d]=p)}const h=Object.assign({},u);h.inputs=c,h.outputs=u.outputs,a.push(h)}}return a}function aO(t,e,n,s){for(let r=e.length-1;r>=0;r--){const o=e[r],i=[];if(o.outputs.forEach(l=>{const u=t[l.id];u!=null?i.push(u):i.push(null)}),o.gradient==null)throw new Error(`Cannot compute gradient: gradient function not found for ${o.kernelName}.`);const a=o.gradient(i);for(const l in o.inputs){if(!(l in a))throw new Error(`Cannot backprop through input ${l}. Available gradients found: ${Object.keys(a)}.`);const u=n(()=>a[l]());if(u.dtype!=="float32")throw new Error(`Error in gradient for op ${o.kernelName}. The gradient of input ${l} must have 'float32' dtype, but has '${u.dtype}'`);const c=o.inputs[l];if(!Ae(u.shape,c.shape))throw new Error(`Error in gradient for op ${o.kernelName}. The gradient of input '${l}' has shape '${u.shape}', which does not match the shape of the input '${c.shape}'`);if(t[c.id]==null)t[c.id]=u;else{const h=t[c.id];t[c.id]=s(h,u),h.dispose()}}}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const dv=20,wl=3,Am=7;function lO(t,e,n,s){const r=me(e),o=uO(t,e,n,r),i=e.length,a=Gh(t,e,n,r,o),l=["Tensor"];return s&&(l.push(`  dtype: ${n}`),l.push(`  rank: ${i}`),l.push(`  shape: [${e}]`),l.push("  values:")),l.push(a.map(u=>"    "+u).join(`
`)),l.join(`
`)}function uO(t,e,n,s){const r=H(e),o=s[s.length-1],i=new Array(o).fill(0),a=e.length,l=n==="complex64"?El(t):t;if(a>1)for(let u=0;u<r/o;u++){const c=u*o;for(let h=0;h<o;h++)i[h]=Math.max(i[h],Tl(l[c+h],0,n).length)}return i}function Tl(t,e,n){let s;return Array.isArray(t)?s=`${parseFloat(t[0].toFixed(Am))} + ${parseFloat(t[1].toFixed(Am))}j`:Iu(t)?s=`'${t}'`:n==="bool"?s=dN(t):s=parseFloat(t.toFixed(Am)).toString(),ma(s,e)}function dN(t){return t===0?"false":"true"}function Gh(t,e,n,s,r,o=!0){const i=n==="complex64"?2:1,a=e[0],l=e.length;if(l===0){if(n==="complex64"){const m=El(t);return[Tl(m[0],0,n)]}return n==="bool"?[dN(t[0])]:[t[0].toString()]}if(l===1){if(a>dv){const y=wl*i;let g=Array.from(t.slice(0,y)),x=Array.from(t.slice((a-wl)*i,a*i));return n==="complex64"&&(g=El(g),x=El(x)),["["+g.map((b,w)=>Tl(b,r[w],n)).join(", ")+", ..., "+x.map((b,w)=>Tl(b,r[a-wl+w],n)).join(", ")+"]"]}return["["+(n==="complex64"?El(t):Array.from(t)).map((y,g)=>Tl(y,r[g],n)).join(", ")+"]"]}const u=e.slice(1),c=s.slice(1),h=s[0]*i,d=[];if(a>dv){for(let m=0;m<wl;m++){const y=m*h,g=y+h;d.push(...Gh(t.slice(y,g),u,n,c,r,!1))}d.push("...");for(let m=a-wl;m<a;m++){const y=m*h,g=y+h;d.push(...Gh(t.slice(y,g),u,n,c,r,m===a-1))}}else for(let m=0;m<a;m++){const y=m*h,g=y+h;d.push(...Gh(t.slice(y,g),u,n,c,r,m===a-1))}const p=l===2?",":"";d[0]="["+(a>0?d[0]+p:"");for(let m=1;m<d.length-1;m++)d[m]=" "+d[m]+p;let f=`,
`;for(let m=2;m<l;m++)f+=`
`;return d[d.length-1]=" "+d[d.length-1]+"]"+(o?"":f),d}function El(t){const e=[];for(let n=0;n<t.length;n+=2)e.push([t[n],t[n+1]]);return e}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Pt{constructor(e,n,s){if(this.dtype=n,this.shape=e.slice(),this.size=H(e),s!=null){const r=s.length;C(r===this.size,()=>`Length of values '${r}' does not match the size inferred by the shape '${this.size}'.`)}if(n==="complex64")throw new Error("complex64 dtype TensorBuffers are not supported. Please create a TensorBuffer for the real and imaginary parts separately and call tf.complex(real, imag).");this.values=s||St(n,this.size),this.strides=me(e)}set(e,...n){n.length===0&&(n=[0]),C(n.length===this.rank,()=>`The number of provided coordinates (${n.length}) must match the rank (${this.rank})`);const s=this.locToIndex(n);this.values[s]=e}get(...e){e.length===0&&(e=[0]);let n=0;for(const r of e){if(r<0||r>=this.shape[n]){const o=`Requested out of range element at ${e}.   Buffer shape=${this.shape}`;throw new Error(o)}n++}let s=e[e.length-1];for(let r=0;r<e.length-1;++r)s+=this.strides[r]*e[r];return this.values[s]}locToIndex(e){if(this.rank===0)return 0;if(this.rank===1)return e[0];let n=e[e.length-1];for(let s=0;s<e.length-1;++s)n+=this.strides[s]*e[s];return n}indexToLoc(e){if(this.rank===0)return[];if(this.rank===1)return[e];const n=new Array(this.shape.length);for(let s=0;s<n.length-1;++s)n[s]=Math.floor(e/this.strides[s]),e-=n[s]*this.strides[s];return n[n.length-1]=e,n}get rank(){return this.shape.length}toTensor(){return Vs().makeTensor(this.values,this.shape,this.dtype)}}let Vs=null,Ki=null;function cO(t){Vs=t}function hO(t){Ki=t}class et{constructor(e,n,s,r){this.kept=!1,this.isDisposedInternal=!1,this.shape=e.slice(),this.dtype=n||"float32",this.size=H(e),this.strides=me(e),this.dataId=s,this.id=r,this.rankType=this.rank<5?this.rank.toString():"higher"}get rank(){return this.shape.length}async buffer(){const e=await this.data();return Ki.buffer(this.shape,this.dtype,e)}bufferSync(){return Ki.buffer(this.shape,this.dtype,this.dataSync())}async array(){const e=await this.data();return Ns(this.shape,e,this.dtype==="complex64")}arraySync(){return Ns(this.shape,this.dataSync(),this.dtype==="complex64")}async data(){this.throwIfDisposed();const e=Vs().read(this.dataId);if(this.dtype==="string"){const n=await e;try{return n.map(s=>ko(s))}catch{throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}}return e}dataToGPU(e){return this.throwIfDisposed(),Vs().readToGPU(this.dataId,e)}dataSync(){this.throwIfDisposed();const e=Vs().readSync(this.dataId);if(this.dtype==="string")try{return e.map(n=>ko(n))}catch{throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}return e}async bytes(){this.throwIfDisposed();const e=await Vs().read(this.dataId);return this.dtype==="string"?e:new Uint8Array(e.buffer)}dispose(){this.isDisposed||(Vs().disposeTensor(this),this.isDisposedInternal=!0)}get isDisposed(){return this.isDisposedInternal}throwIfDisposed(){if(this.isDisposed)throw new Error("Tensor is disposed.")}print(e=!1){return Ki.print(this,e)}clone(){return this.throwIfDisposed(),Ki.clone(this)}toString(e=!1){const n=this.dataSync();return lO(n,this.shape,this.dtype,e)}cast(e){return this.throwIfDisposed(),Ki.cast(this,e)}variable(e=!0,n,s){return this.throwIfDisposed(),Vs().makeVariable(this,e,n,s)}}Object.defineProperty(et,Symbol.hasInstance,{value:t=>!!t&&t.data!=null&&t.dataSync!=null&&t.throwIfDisposed!=null});function K(){return B0("Tensor",()=>et)}K();class Cd extends et{constructor(e,n,s,r){super(e.shape,e.dtype,e.dataId,r),this.trainable=n,this.name=s}assign(e){if(e.dtype!==this.dtype)throw new Error(`dtype of the new value (${e.dtype}) and previous value (${this.dtype}) must match`);if(!Ae(e.shape,this.shape))throw new Error(`shape of the new value (${e.shape}) and previous value (${this.shape}) must match`);Vs().disposeTensor(this),this.dataId=e.dataId,Vs().incRef(this,null)}dispose(){Vs().disposeVariable(this),this.isDisposedInternal=!0}}Object.defineProperty(Cd,Symbol.hasInstance,{value:t=>t instanceof et&&t.assign!=null&&t.assign instanceof Function});/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var pv;(function(t){t.R0="R0",t.R1="R1",t.R2="R2",t.R3="R3",t.R4="R4",t.R5="R5",t.R6="R6"})(pv||(pv={}));var ey;(function(t){t.float32="float32",t.int32="int32",t.bool="int32",t.complex64="complex64"})(ey||(ey={}));var ty;(function(t){t.float32="float32",t.int32="int32",t.bool="bool",t.complex64="complex64"})(ty||(ty={}));var ny;(function(t){t.float32="float32",t.int32="float32",t.bool="float32",t.complex64="complex64"})(ny||(ny={}));var sy;(function(t){t.float32="complex64",t.int32="complex64",t.bool="complex64",t.complex64="complex64"})(sy||(sy={}));const dO={float32:ny,int32:ey,bool:ty,complex64:sy};function Pn(t,e){if(t==="string"||e==="string"){if(t==="string"&&e==="string")return"string";throw new Error(`Can not upcast ${t} with ${e}`)}return dO[t][e]}function Hx(t){return Pn(t,"int32")}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gt(t,e){if(t.dtype===e.dtype)return[t,e];const n=Pn(t.dtype,e.dtype);return[t.cast(n),e.cast(n)]}function pO(t,e){C(t.dtype===e.dtype,()=>`The dtypes of the first(${t.dtype}) and second(${e.dtype}) input must match`)}function pN(t){const e=[];return fN(t,e,new Set),e}function fN(t,e,n){if(t==null)return;if(t instanceof et){e.push(t);return}if(!fO(t))return;const s=t;for(const r in s){const o=s[r];n.has(o)||(n.add(o),fN(o,e,n))}}function fO(t){return Array.isArray(t)||typeof t=="object"}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _m(t){return t.kernelName!=null}class fv{constructor(){this.registeredVariables={},this.nextTapeNodeId=0,this.numBytes=0,this.numTensors=0,this.numStringTensors=0,this.numDataBuffers=0,this.gradientDepth=0,this.kernelDepth=0,this.scopeStack=[],this.numDataMovesStack=[],this.nextScopeId=0,this.tensorInfo=new WeakMap,this.profiling=!1,this.activeProfile={newBytes:0,newTensors:0,peakBytes:0,kernels:[],result:null,get kernelNames(){return Array.from(new Set(this.kernels.map(e=>e.name)))}}}dispose(){for(const e in this.registeredVariables)this.registeredVariables[e].dispose()}}class Ra{constructor(e){this.ENV=e,this.registry={},this.registryFactory={},this.pendingBackendInitId=0,this.state=new fv}async ready(){if(this.pendingBackendInit!=null)return this.pendingBackendInit.then(()=>{});if(this.backendInstance!=null)return;const e=this.getSortedBackends();for(let n=0;n<e.length;n++){const s=e[n];if(await this.initializeBackend(s).success){await this.setBackend(s);return}}throw new Error("Could not initialize any backends, all backend initializations failed.")}get backend(){if(this.pendingBackendInit!=null)throw new Error(`Backend '${this.backendName}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);if(this.backendInstance==null){const{name:e,asyncInit:n}=this.initializeBackendsAndReturnBest();if(n)throw new Error(`The highest priority backend '${e}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);this.setBackend(e)}return this.backendInstance}backendNames(){return Object.keys(this.registryFactory)}findBackend(e){if(!(e in this.registry))if(e in this.registryFactory){const{asyncInit:n}=this.initializeBackend(e);if(n)return null}else return null;return this.registry[e]}findBackendFactory(e){return e in this.registryFactory?this.registryFactory[e].factory:null}registerBackend(e,n,s=1){return e in this.registryFactory?(jn(`${e} backend was already registered. Reusing existing backend factory.`),!1):(this.registryFactory[e]={factory:n,priority:s},!0)}async setBackend(e){if(this.registryFactory[e]==null)throw new Error(`Backend name '${e}' not found in registry`);if(this.backendName=e,this.registry[e]==null){this.backendInstance=null;const{success:n,asyncInit:s}=this.initializeBackend(e);if(!(s?await n:n))return!1}return this.backendInstance=this.registry[e],this.setupRegisteredKernels(),this.profiler=new sO(this.backendInstance),!0}setupRegisteredKernels(){ov(this.backendName).forEach(n=>{n.setupFunc!=null&&n.setupFunc(this.backendInstance)})}disposeRegisteredKernels(e){ov(e).forEach(s=>{s.disposeFunc!=null&&s.disposeFunc(this.registry[e])})}initializeBackend(e){const n=this.registryFactory[e];if(n==null)throw new Error(`Cannot initialize backend ${e}, no registration found.`);try{const s=n.factory();if(s&&!(s instanceof P0)&&typeof s.then=="function"){const r=++this.pendingBackendInitId,o=s.then(i=>r<this.pendingBackendInitId?!1:(this.registry[e]=i,this.pendingBackendInit=null,!0)).catch(i=>(r<this.pendingBackendInitId||(this.pendingBackendInit=null,jn(`Initialization of backend ${e} failed`),jn(i.stack||i.message)),!1));return this.pendingBackendInit=o,{success:o,asyncInit:!0}}else return this.registry[e]=s,{success:!0,asyncInit:!1}}catch(s){return jn(`Initialization of backend ${e} failed`),jn(s.stack||s.message),{success:!1,asyncInit:!1}}}removeBackend(e){if(!(e in this.registryFactory))throw new Error(`${e} backend not found in registry`);this.backendName===e&&this.pendingBackendInit!=null&&this.pendingBackendInitId++,e in this.registry&&(this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e]),delete this.registryFactory[e],this.backendName===e&&(this.pendingBackendInit=null,this.backendName=null,this.backendInstance=null)}getSortedBackends(){if(Object.keys(this.registryFactory).length===0)throw new Error("No backend found in registry.");return Object.keys(this.registryFactory).sort((e,n)=>this.registryFactory[n].priority-this.registryFactory[e].priority)}initializeBackendsAndReturnBest(){const e=this.getSortedBackends();for(let n=0;n<e.length;n++){const s=e[n],{success:r,asyncInit:o}=this.initializeBackend(s);if(o||r)return{name:s,asyncInit:o}}throw new Error("Could not initialize any backends, all backend initializations failed.")}moveData(e,n){const s=this.state.tensorInfo.get(n),r=s.backend,o=this.readSync(n),i=r.refCount(n);r.disposeData(n,!0),s.backend=e,e.move(n,o,s.shape,s.dtype,i),this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack[this.state.numDataMovesStack.length-1]++}tidy(e,n){let s=null;if(n==null){if(typeof e!="function")throw new Error("Please provide a function to tidy()");n=e}else{if(typeof e!="string"&&!(e instanceof String))throw new Error("When calling with two arguments, the first argument to tidy() must be a string");if(typeof n!="function")throw new Error("When calling with two arguments, the 2nd argument to tidy() must be a function");s=e}let r;return this.scopedRun(()=>this.startScope(s),()=>this.endScope(r),()=>(r=n(),r instanceof Promise&&console.error("Cannot return a Promise inside of tidy."),r))}scopedRun(e,n,s){e();try{const r=s();return n(),r}catch(r){throw n(),r}}nextTensorId(){return Ra.nextTensorId++}nextVariableId(){return Ra.nextVariableId++}clone(e){const n=R.runKernel(Xu,{x:e}),s={x:e},r=i=>({x:()=>{const a="float32",l={x:i},u={dtype:a};return R.runKernel(Lu,l,u)}}),o=[];return this.addTapeNode(this.state.activeScope.name,s,[n],r,o,{}),n}runKernel(e,n,s){if(this.backendName==null&&this.backend,!(Yg(e,this.backendName)!=null))throw new Error(`Kernel '${e}' not registered for backend '${this.backendName}'`);return this.runKernelFunc({kernelName:e,inputs:n,attrs:s})}shouldCheckForMemLeaks(){return this.ENV.getBool("IS_TEST")}checkKernelForMemLeak(e,n,s){const r=this.backend.numDataIds();let o=0;s.forEach(l=>{o+=l.dtype==="complex64"?3:1});const i=this.state.numDataMovesStack[this.state.numDataMovesStack.length-1],a=r-n-o-i;if(a>0)throw new Error(`Backend '${this.backendName}' has an internal memory leak (${a} data ids) after running '${e}'`)}runKernelFunc(e){let n,s=[];const r=this.isTapeOn(),o=this.state.numBytes,i=this.state.numTensors;this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack.push(0);let a;this.backendName==null&&this.backend;let l;const u=_m(e)?e.kernelName:this.state.activeScope!=null?this.state.activeScope.name:"";if(_m(e)){const{kernelName:f,inputs:m,attrs:y}=e;this.backendName==null&&this.backend;const g=Yg(f,this.backendName);C(g!=null,()=>`Cannot find registered kernel '${f}' for backend '${this.backendName}'`),a=()=>{const x=this.backend.numDataIds();l=g.kernelFunc({inputs:m,attrs:y,backend:this.backend});const b=Array.isArray(l)?l:[l];this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(f,x,b);const w=b.map(k=>k.rank!=null?k:this.makeTensorFromTensorInfo(k));if(r){const k=this.getTensorsForGradient(f,m,w);s=this.saveTensorsForBackwardMode(k)}return w}}else{const{forwardFunc:f}=e,m=y=>{!r||(s=y.map(g=>this.keep(this.clone(g))))};a=()=>{const y=this.backend.numDataIds();l=this.tidy(()=>f(this.backend,m));const g=Array.isArray(l)?l:[l];return this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(u,y,g),g}}const{inputs:c,attrs:h}=e,d=_m(e)?null:e.backwardsFunc;let p;return this.scopedRun(()=>this.state.kernelDepth++,()=>this.state.kernelDepth--,()=>{!this.ENV.getBool("DEBUG")&&!this.state.profiling?n=a():(p=this.profiler.profileKernel(u,c,()=>a()),this.ENV.getBool("DEBUG")&&this.profiler.logKernelProfile(p),n=p.outputs)}),r&&this.addTapeNode(u,c,n,d,s,h),this.state.profiling&&this.state.activeProfile.kernels.push({name:u,bytesAdded:this.state.numBytes-o,totalBytesSnapshot:this.state.numBytes,tensorsAdded:this.state.numTensors-i,totalTensorsSnapshot:this.state.numTensors,inputShapes:Object.keys(c).map(f=>c[f]!=null?c[f].shape:null),outputShapes:n.map(f=>f.shape),kernelTimeMs:p.timeMs,extraInfo:p.extraInfo}),Array.isArray(l)?n:n[0]}saveTensorsForBackwardMode(e){return e.map(s=>this.keep(this.clone(s)))}getTensorsForGradient(e,n,s){const r=rv(e);if(r!=null){const o=r.inputsToSave||[],i=r.outputsToSave||[];let a;r.saveAllInputs?(C(Array.isArray(n),()=>"saveAllInputs is true, expected inputs to be an array."),a=Object.keys(n).map(u=>n[u])):a=o.map(u=>n[u]);const l=s.filter((u,c)=>i[c]);return a.concat(l)}return[]}makeTensor(e,n,s,r){if(e==null)throw new Error("Values passed to engine.makeTensor() are null");s=s||"float32",r=r||this.backend;let o=e;s==="string"&&Iu(e[0])&&(o=e.map(l=>yo(l)));const i=r.write(o,n,s),a=new et(n,s,i,this.nextTensorId());if(this.trackTensor(a,r),s==="string"){const l=this.state.tensorInfo.get(i),u=L_(o);this.state.numBytes+=u-l.bytes,l.bytes=u}return a}makeTensorFromDataId(e,n,s,r){s=s||"float32";const o={dataId:e,shape:n,dtype:s};return this.makeTensorFromTensorInfo(o,r)}makeTensorFromTensorInfo(e,n){const{dataId:s,shape:r,dtype:o}=e,i=new et(r,o,s,this.nextTensorId());return this.trackTensor(i,n),i}makeVariable(e,n=!0,s,r){s=s||this.nextVariableId().toString(),r!=null&&r!==e.dtype&&(e=e.cast(r));const o=new Cd(e,n,s,this.nextTensorId());if(this.state.registeredVariables[o.name]!=null)throw new Error(`Variable with name ${o.name} was already registered`);return this.state.registeredVariables[o.name]=o,this.incRef(o,this.backend),o}trackTensor(e,n){this.state.numTensors++,e.dtype==="string"&&this.state.numStringTensors++;let s=0;e.dtype!=="complex64"&&e.dtype!=="string"&&(s=e.size*xd(e.dtype)),this.state.numBytes+=s,this.state.tensorInfo.has(e.dataId)||(this.state.numDataBuffers++,this.state.tensorInfo.set(e.dataId,{backend:n||this.backend,dtype:e.dtype,shape:e.shape,bytes:s})),e instanceof Cd||this.track(e)}incRef(e,n){this.trackTensor(e,n),this.backend.incRef(e.dataId)}removeDataId(e,n){this.state.tensorInfo.has(e)&&this.state.tensorInfo.get(e).backend===n&&(this.state.tensorInfo.delete(e),this.state.numDataBuffers--)}disposeTensor(e){if(!this.state.tensorInfo.has(e.dataId))return;const n=this.state.tensorInfo.get(e.dataId);if(this.state.numTensors--,e.dtype==="string"&&(this.state.numStringTensors--,this.state.numBytes-=n.bytes),e.dtype!=="complex64"&&e.dtype!=="string"){const s=e.size*xd(e.dtype);this.state.numBytes-=s}n.backend.disposeData(e.dataId)&&this.removeDataId(e.dataId,n.backend)}disposeVariables(){for(const e in this.state.registeredVariables){const n=this.state.registeredVariables[e];this.disposeVariable(n)}}disposeVariable(e){this.disposeTensor(e),this.state.registeredVariables[e.name]!=null&&delete this.state.registeredVariables[e.name]}memory(){const e=this.backend.memory();return e.numTensors=this.state.numTensors,e.numDataBuffers=this.state.numDataBuffers,e.numBytes=this.state.numBytes,this.state.numStringTensors>0&&(e.unreliable=!0,e.reasons==null&&(e.reasons=[]),e.reasons.push("Memory usage by string tensors is approximate (2 bytes per character)")),e}async profile(e){this.state.profiling=!0;const n=this.state.numBytes,s=this.state.numTensors;this.state.activeProfile.kernels=[],this.state.activeProfile.result=await e(),this.state.profiling=!1,this.state.activeProfile.peakBytes=Math.max(...this.state.activeProfile.kernels.map(r=>r.totalBytesSnapshot)),this.state.activeProfile.newBytes=this.state.numBytes-n,this.state.activeProfile.newTensors=this.state.numTensors-s;for(const r of this.state.activeProfile.kernels)r.kernelTimeMs=await r.kernelTimeMs,r.extraInfo=await r.extraInfo;return this.state.activeProfile}isTapeOn(){return this.state.gradientDepth>0&&this.state.kernelDepth===0}addTapeNode(e,n,s,r,o,i){const a={id:this.state.nextTapeNodeId++,kernelName:e,inputs:n,outputs:s,saved:o},l=rv(e);l!=null&&(r=l.gradFunc),r!=null&&(a.gradient=u=>(u=u.map((c,h)=>{if(c==null){const d=s[h],p=Jt(d.size,d.dtype);return this.makeTensor(p,d.shape,d.dtype)}return c}),r(u.length>1?u:u[0],o,i))),this.state.activeTape.push(a)}keep(e){return e.kept=!0,e}startTape(){this.state.gradientDepth===0&&(this.state.activeTape=[]),this.state.gradientDepth++}endTape(){this.state.gradientDepth--}startScope(e){const n={track:[],name:"unnamed scope",id:this.state.nextScopeId++};e&&(n.name=e),this.state.scopeStack.push(n),this.state.activeScope=n}endScope(e){const n=pN(e),s=new Set(n.map(o=>o.id));for(let o=0;o<this.state.activeScope.track.length;o++){const i=this.state.activeScope.track[o];!i.kept&&!s.has(i.id)&&i.dispose()}const r=this.state.scopeStack.pop();this.state.activeScope=this.state.scopeStack.length===0?null:this.state.scopeStack[this.state.scopeStack.length-1],n.forEach(o=>{!o.kept&&o.scopeId===r.id&&this.track(o)})}gradients(e,n,s,r=!1){if(C(n.length>0,()=>"gradients() received an empty list of xs."),s!=null&&s.dtype!=="float32")throw new Error(`dy must have 'float32' dtype, but has '${s.dtype}'`);const o=this.scopedRun(()=>this.startTape(),()=>this.endTape(),()=>this.tidy("forward",e));C(o instanceof et,()=>"The result y returned by f() must be a tensor.");const i=iO(this.state.activeTape,n,o);if(!r&&i.length===0&&n.length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that the f you passed encloses all operations that lead from x to y.");return this.tidy("backward",()=>{const a={};a[o.id]=s==null?mO(o.shape):s,aO(a,i,u=>this.tidy(u),gO);const l=n.map(u=>a[u.id]);return this.state.gradientDepth===0&&(this.state.activeTape.forEach(u=>{for(const c of u.saved)c.dispose()}),this.state.activeTape=null),{value:o,grads:l}})}customGrad(e){return C(Gg(e),()=>"The f passed in customGrad(f) must be a function."),(...n)=>{C(n.every(a=>a instanceof et),()=>"The args passed in customGrad(f)(x1, x2,...) must all be tensors");let s;const r={};n.forEach((a,l)=>{r[l]=a});const o=(a,l)=>(s=e(...n,l),C(s.value instanceof et,()=>"The function f passed in customGrad(f) must return an object where `obj.value` is a tensor"),C(Gg(s.gradFunc),()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function."),s.value),i=(a,l)=>{const u=s.gradFunc(a,l),c=Array.isArray(u)?u:[u];C(c.length===n.length,()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns the same number of tensors as inputs passed to f(...)."),C(c.every(d=>d instanceof et),()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns a list of only tensors.");const h={};return c.forEach((d,p)=>{h[p]=()=>d}),h};return this.runKernelFunc({forwardFunc:o,backwardsFunc:i,inputs:r})}}readSync(e){return this.state.tensorInfo.get(e).backend.readSync(e)}read(e){return this.state.tensorInfo.get(e).backend.read(e)}readToGPU(e,n){return this.state.tensorInfo.get(e).backend.readToGPU(e,n)}async time(e){const n=mn(),s=await this.backend.time(e);return s.wallMs=mn()-n,s}track(e){return this.state.activeScope!=null&&(e.scopeId=this.state.activeScope.id,this.state.activeScope.track.push(e)),e}get registeredVariables(){return this.state.registeredVariables}reset(){this.pendingBackendInitId++,this.state.dispose(),this.ENV.reset(),this.state=new fv;for(const e in this.registry)this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e];this.backendName=null,this.backendInstance=null,this.pendingBackendInit=null}}Ra.nextTensorId=0;Ra.nextVariableId=0;function mO(t){const e=M0(H(t),"float32");return R.makeTensor(e,t,"float32")}function mN(){const t=sN();if(t._tfengine==null){const e=new M_(t);t._tfengine=new Ra(e)}return U_(t._tfengine.ENV),cO(()=>t._tfengine),t._tfengine}const R=mN();function gO(t,e){const n={a:t,b:e};return R.runKernel(Xa,n)}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yO(){return typeof navigator<"u"&&navigator!=null}function gN(t){if(t||yO()){if(t||(t=navigator),t.product==="ReactNative")return!0;const e=t.userAgent||t.vendor||(typeof window<"u"?window.opera:"");if(!e){const n=t;return n.userAgentData&&n.userAgentData.mobile}return/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(e)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(e.substr(0,4))}return!1}function yN(){return typeof window<"u"&&window.document!=null||typeof WorkerGlobalScope<"u"}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Qn=U();Qn.registerFlag("DEBUG",()=>!1,t=>{t&&console.warn("Debugging mode is ON. The output of every math call will be downloaded to CPU and checked for NaNs. This significantly impacts performance.")});Qn.registerFlag("IS_BROWSER",()=>yN());Qn.registerFlag("IS_NODE",()=>typeof process<"u"&&typeof process.versions<"u"&&typeof process.versions.node<"u");Qn.registerFlag("IS_CHROME",()=>typeof navigator<"u"&&navigator!=null&&navigator.userAgent!=null&&/Chrome/.test(navigator.userAgent)&&/Google Inc/.test(navigator.vendor));Qn.registerFlag("PROD",()=>!1);Qn.registerFlag("TENSORLIKE_CHECK_SHAPE_CONSISTENCY",()=>Qn.getBool("DEBUG"));Qn.registerFlag("DEPRECATION_WARNINGS_ENABLED",()=>!0);Qn.registerFlag("IS_TEST",()=>!1);Qn.registerFlag("CHECK_COMPUTATION_FOR_ERRORS",()=>!0);Qn.registerFlag("WRAP_TO_IMAGEBITMAP",()=>!1);Qn.registerFlag("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU",()=>!1);Qn.registerFlag("USE_SETTIMEOUTCUSTOM",()=>!1);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Po(t,e){let n=t;if(Xs(t))return e==="string"?[]:[t.length];if(typeof t=="object"){if("texture"in t){const o=t.channels||"RGBA";return[t.height,t.width*o.length]}else if("buffer"in t&&!(t.buffer instanceof ArrayBuffer))return[t.buffer.size/(e==null?4:xd(e))]}if(!Array.isArray(t))return[];const r=[];for(;Array.isArray(n)||Xs(n)&&e!=="string";)r.push(n.length),n=n[0];return Array.isArray(t)&&U().getBool("TENSORLIKE_CHECK_SHAPE_CONSISTENCY")&&xN(t,r,[]),r}function xN(t,e,n){if(n=n||[],!Array.isArray(t)&&!Xs(t)){C(e.length===0,()=>`Element arr[${n.join("][")}] is a primitive, but should be an array/TypedArray of ${e[0]} elements`);return}C(e.length>0,()=>`Element arr[${n.join("][")}] should be a primitive, but is an array of ${t.length} elements`),C(t.length===e[0],()=>`Element arr[${n.join("][")}] should have ${e[0]} elements, but has ${t.length} elements`);const s=e.slice(1);for(let r=0;r<t.length;++r)xN(t[r],s,n.concat(r))}function mv(t,e,n,s){if(t!=="string_or_numeric"){if(t==null)throw new Error("Expected dtype cannot be null.");if(t!=="numeric"&&t!==e||t==="numeric"&&e==="string")throw new Error(`Argument '${n}' passed to '${s}' must be ${t} tensor, but got ${e} tensor`)}}function I(t,e,n,s="numeric"){if(t instanceof et)return mv(s,t.dtype,e,n),t;let r=Tu(t);if(r!=="string"&&["bool","int32","float32"].indexOf(s)>=0&&(r=s),mv(s,r,e,n),t==null||!Xs(t)&&!Array.isArray(t)&&typeof t!="number"&&typeof t!="boolean"&&typeof t!="string"){const l=t==null?"null":t.constructor.name;throw new Error(`Argument '${e}' passed to '${n}' must be a Tensor or TensorLike, but got '${l}'`)}const o=Po(t,r);!Xs(t)&&!Array.isArray(t)&&(t=[t]);const a=r!=="string"?_i(t,r):bi(t,[],!0);return R.makeTensor(a,o,r)}function Nd(t,e,n,s="numeric"){if(!Array.isArray(t))throw new Error(`Argument ${e} passed to ${n} must be a \`Tensor[]\` or \`TensorLike[]\``);return t.map((o,i)=>I(o,`${e}[${i}]`,n,s))}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const bN="__op";function D(t){const e=Object.keys(t);if(e.length!==1)throw new Error(`Please provide an object with a single key (operation name) mapping to a function. Got an object with ${e.length} keys.`);let n=e[0];const s=t[n];n.endsWith("_")&&(n=n.substring(0,n.length-1)),n=n+bN;const r=(...o)=>{R.startScope(n);try{const i=s(...o);return xi(i)&&console.error("Cannot return a Promise inside of tidy."),R.endScope(i),i}catch(i){throw R.endScope(null),i}};return Object.defineProperty(r,"name",{value:n,configurable:!0}),r}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xO(t,e){const n=I(t,"real","complex"),s=I(e,"imag","complex");Vn(n.shape,s.shape,`real and imag shapes, ${n.shape} and ${s.shape}, must match in call to tf.complex().`);const r={real:n,imag:s};return R.runKernel(K0,r)}const So=D({complex_:xO});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zo(t,e,n,s){if(s==null)s=Tu(t);else if(s==="complex64")throw new Error("Cannot construct a complex64 tensor directly. Please use tf.complex(real, imag).");if(typeof t=="object"&&("texture"in t||"buffer"in t&&!(t.buffer instanceof ArrayBuffer))){if(s!=="float32"&&s!=="int32")throw new Error(`Creating tensor from GPU data only supports 'float32'|'int32' dtype, while the dtype is ${s}.`);return R.backend.createTensorFromGPUData(t,e||n,s)}if(!Xs(t)&&!Array.isArray(t)&&typeof t!="number"&&typeof t!="boolean"&&typeof t!="string")throw new Error("values passed to tensor(values) must be a number/boolean/string or an array of numbers/booleans/strings, or a TypedArray");if(e!=null){rs(e);const r=H(e),o=H(n);C(r===o,()=>`Based on the provided shape, [${e}], the tensor should have ${r} values but has ${o}`);for(let i=0;i<n.length;++i){const a=n[i],l=i===n.length-1?a!==H(e.slice(i)):!0;C(n[i]===e[i]||!l,()=>`Error creating a new Tensor. Inferred shape (${n}) does not match the provided shape (${e}). `)}}return!Xs(t)&&!Array.isArray(t)&&(t=[t]),e=e||n,t=s!=="string"?_i(t,s):bi(t,[],!0),R.makeTensor(t,e,s)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function js(t,e,n){const s=Po(t,n);return zo(t,e,s,n)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ry={float32:4,float16:2,int32:4,uint16:2,uint8:1,bool:1,complex64:8};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $d=4;async function oy(t,e){const n=[],s=[],r=Array.isArray(t)?t.map(i=>i.name):Object.keys(t);for(let i=0;i<r.length;++i){const a=r[i],l=Array.isArray(t)?t[i].tensor:t[a];if(l.dtype!=="float32"&&l.dtype!=="int32"&&l.dtype!=="bool"&&l.dtype!=="string"&&l.dtype!=="complex64")throw new Error(`Unsupported dtype in weight '${a}': ${l.dtype}`);const u={name:a,shape:l.shape,dtype:l.dtype};if(l.dtype==="string"){const c=new Promise(async h=>{const d=await l.bytes(),p=d.reduce((y,g)=>y+g.length,0)+$d*d.length,f=new Uint8Array(p);let m=0;for(let y=0;y<d.length;y++){const g=d[y],x=new Uint8Array(new Uint32Array([g.length]).buffer);f.set(x,m),m+=$d,f.set(g,m),m+=g.length}h(f)});s.push(c)}else s.push(l.data());e!=null&&(u.group=e),n.push(u)}const o=await Promise.all(s);return{data:bO(o),specs:n}}function wN(t,e){const n={};let s,r=0;for(const o of e){const i=o.name,a=o.dtype,l=o.shape,u=H(l);let c;if("quantization"in o){const h=o.quantization;if(h.dtype==="uint8"||h.dtype==="uint16"){if(!("min"in h&&"scale"in h))throw new Error(`Weight ${o.name} with quantization ${h.dtype} doesn't have corresponding metadata min and scale.`)}else if(h.dtype==="float16"){if(a!=="float32")throw new Error(`Weight ${o.name} is quantized with ${h.dtype} which only supports weights of type float32 not ${a}.`)}else throw new Error(`Weight ${o.name} has unknown quantization dtype ${h.dtype}. Supported quantization dtypes are: 'uint8', 'uint16', and 'float16'.`);const d=ry[h.dtype],p=t.slice(r,r+u*d),f=h.dtype==="uint8"?new Uint8Array(p):new Uint16Array(p);if(a==="float32")if(h.dtype==="uint8"||h.dtype==="uint16"){c=new Float32Array(f.length);for(let m=0;m<f.length;m++){const y=f[m];c[m]=y*h.scale+h.min}}else if(h.dtype==="float16")s===void 0&&(s=NO()),c=s(f);else throw new Error(`Unsupported quantization type ${h.dtype} for weight type float32.`);else if(a==="int32"){if(h.dtype!=="uint8"&&h.dtype!=="uint16")throw new Error(`Unsupported quantization type ${h.dtype} for weight type int32.`);c=new Int32Array(f.length);for(let m=0;m<f.length;m++){const y=f[m];c[m]=Math.round(y*h.scale+h.min)}}else throw new Error(`Unsupported dtype in weight '${i}': ${a}`);r+=u*d}else if(a==="string"){const h=H(o.shape);c=[];for(let d=0;d<h;d++){const p=new Uint32Array(t.slice(r,r+$d))[0];r+=$d;const f=new Uint8Array(t.slice(r,r+p));c.push(f),r+=p}}else{const h=ry[a],d=t.slice(r,r+u*h);if(a==="float32")c=new Float32Array(d);else if(a==="int32")c=new Int32Array(d);else if(a==="bool")c=new Uint8Array(d);else if(a==="complex64"){c=new Float32Array(d);const p=new Float32Array(c.length/2),f=new Float32Array(c.length/2);for(let g=0;g<p.length;g++)p[g]=c[g*2],f[g]=c[g*2+1];const m=js(p,l,"float32"),y=js(f,l,"float32");n[i]=So(m,y),m.dispose(),y.dispose()}else throw new Error(`Unsupported dtype in weight '${i}': ${a}`);r+=u*h}a!=="complex64"&&(n[i]=js(c,l,a))}return n}function bO(t){if(t===null)throw new Error(`Invalid input value: ${JSON.stringify(t)}`);let e=0;const n=[];t.forEach(o=>{if(e+=o.byteLength,n.push(o.byteLength===o.buffer.byteLength?o:new o.constructor(o)),!(o instanceof Float32Array||o instanceof Int32Array||o instanceof Uint8Array))throw new Error(`Unsupported TypedArray subtype: ${o.constructor.name}`)});const s=new Uint8Array(e);let r=0;return n.forEach(o=>{s.set(new Uint8Array(o.buffer),r),r+=o.byteLength}),s.buffer}const jx=typeof Buffer<"u"&&(typeof Blob>"u"||typeof atob>"u"||typeof btoa>"u");function gv(t){return jx?Buffer.byteLength(t):new Blob([t]).size}function wO(t){if(jx)return Buffer.from(t).toString("base64");const e=new Uint8Array(t);let n="";for(let s=0,r=e.length;s<r;s++)n+=String.fromCharCode(e[s]);return btoa(n)}function vO(t){if(jx){const s=Buffer.from(t,"base64");return s.buffer.slice(s.byteOffset,s.byteOffset+s.byteLength)}const e=atob(t),n=new Uint8Array(e.length);for(let s=0;s<e.length;++s)n.set([e.charCodeAt(s)],s);return n.buffer}function pf(t){if(t.length===1)return t[0];let e=0;t.forEach(r=>{e+=r.byteLength});const n=new Uint8Array(e);let s=0;return t.forEach(r=>{n.set(new Uint8Array(r),s),s+=r.byteLength}),n.buffer}function yv(t){const e="/";for(t=t.trim();t.endsWith(e);)t=t.slice(0,t.length-1);const n=t.split(e);return n[n.length-1]}function vN(t,e){const n={modelTopology:t.modelTopology,format:t.format,generatedBy:t.generatedBy,convertedBy:t.convertedBy,weightsManifest:e};return t.signature!=null&&(n.signature=t.signature),t.userDefinedMetadata!=null&&(n.userDefinedMetadata=t.userDefinedMetadata),t.modelInitializer!=null&&(n.modelInitializer=t.modelInitializer),t.initializerSignature!=null&&(n.initializerSignature=t.initializerSignature),t.trainingConfig!=null&&(n.trainingConfig=t.trainingConfig),n}function kN(t,e,n){const s={modelTopology:t.modelTopology,format:t.format,generatedBy:t.generatedBy,convertedBy:t.convertedBy};if(t.trainingConfig!=null&&(s.trainingConfig=t.trainingConfig),t.weightsManifest!=null){if(!e)throw new Error("modelJSON has weightsManifest but weightSpecs is null");if(!n)throw new Error("modelJSON has weightsManifest but weightData is null");s.weightSpecs=e,s.weightData=n}return t.signature!=null&&(s.signature=t.signature),t.userDefinedMetadata!=null&&(s.userDefinedMetadata=t.userDefinedMetadata),t.modelInitializer!=null&&(s.modelInitializer=t.modelInitializer),t.initializerSignature!=null&&(s.initializerSignature=t.initializerSignature),s}async function Kx(t,e){let n,s;return t.weightsManifest!=null&&([n,s]=await e(t.weightsManifest)),kN(t,n,s)}function Cc(t){if(t.modelTopology instanceof ArrayBuffer)throw new Error("Expected JSON model topology, received ArrayBuffer.");return{dateSaved:new Date,modelTopologyType:"JSON",modelTopologyBytes:t.modelTopology==null?0:gv(JSON.stringify(t.modelTopology)),weightSpecsBytes:t.weightSpecs==null?0:gv(JSON.stringify(t.weightSpecs)),weightDataBytes:t.weightData==null?0:t.weightData.byteLength}}function SN(t){const e=[];for(const n of t)e.push(...n.weights);return e}function kO(){const t=n=>{let s=n<<13,r=0;for(;(s&8388608)===0;)r-=8388608,s<<=1;return s&=-8388609,r+=947912704,s|r},e=new Uint32Array(2048);e[0]=0;for(let n=1;n<1024;n++)e[n]=t(n);for(let n=1024;n<2048;n++)e[n]=939524096+(n-1024<<13);return e}function SO(){const t=new Uint32Array(64);t[0]=0,t[31]=1199570944,t[32]=2147483648,t[63]=3347054592;for(let e=1;e<31;e++)t[e]=e<<23;for(let e=33;e<63;e++)t[e]=2147483648+(e-32<<23);return t}function CO(){const t=new Uint32Array(64);for(let e=0;e<64;e++)t[e]=1024;return t[0]=t[32]=0,t}function NO(){const t=kO(),e=SO(),n=CO();return s=>{const r=new ArrayBuffer(4*s.length),o=new Uint32Array(r);for(let i=0;i<s.length;i++){const a=s[i],l=t[n[a>>10]+(a&1023)]+e[a>>10];o[i]=l}return new Float32Array(r)}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class it{constructor(){this.saveRouters=[],this.loadRouters=[]}static getInstance(){return it.instance==null&&(it.instance=new it),it.instance}static registerSaveRouter(e){it.getInstance().saveRouters.push(e)}static registerLoadRouter(e){it.getInstance().loadRouters.push(e)}static getSaveHandlers(e){return it.getHandlers(e,"save")}static getLoadHandlers(e,n){return it.getHandlers(e,"load",n)}static getHandlers(e,n,s){const r=[];return(n==="load"?it.getInstance().loadRouters:it.getInstance().saveRouters).forEach(i=>{const a=i(e,s);a!==null&&r.push(a)}),r}}const $O=t=>it.registerSaveRouter(t),IO=t=>it.registerLoadRouter(t),CN=t=>it.getSaveHandlers(t),TO=(t,e)=>it.getLoadHandlers(t,e);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const iy="tensorflowjs",ay=1,ai="models_store",ro="model_info_store";function NN(){if(!U().getBool("IS_BROWSER"))throw new Error("Failed to obtain IndexedDB factory because the current environmentis not a web browser.");const t=typeof window>"u"?self:window,e=t.indexedDB||t.mozIndexedDB||t.webkitIndexedDB||t.msIndexedDB||t.shimIndexedDB;if(e==null)throw new Error("The current browser does not appear to support IndexedDB.");return e}function ly(t){const e=t.result;e.createObjectStore(ai,{keyPath:"modelPath"}),e.createObjectStore(ro,{keyPath:"modelPath"})}class wi{constructor(e){if(this.indexedDB=NN(),e==null||!e)throw new Error("For IndexedDB, modelPath must not be null, undefined or empty.");this.modelPath=e}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");return this.databaseAction(this.modelPath,e)}async load(){return this.databaseAction(this.modelPath)}databaseAction(e,n){return new Promise((s,r)=>{const o=this.indexedDB.open(iy,ay);o.onupgradeneeded=()=>ly(o),o.onsuccess=()=>{const i=o.result;if(n==null){const a=i.transaction(ai,"readonly"),u=a.objectStore(ai).get(this.modelPath);u.onsuccess=()=>{if(u.result==null)return i.close(),r(new Error(`Cannot find model with path '${this.modelPath}' in IndexedDB.`));s(u.result.modelArtifacts)},u.onerror=c=>(i.close(),r(u.error)),a.oncomplete=()=>i.close()}else{const a=Cc(n),l=i.transaction(ro,"readwrite");let u=l.objectStore(ro);const c=u.put({modelPath:this.modelPath,modelArtifactsInfo:a});let h;c.onsuccess=()=>{h=i.transaction(ai,"readwrite");const p=h.objectStore(ai).put({modelPath:this.modelPath,modelArtifacts:n,modelArtifactsInfo:a});p.onsuccess=()=>s({modelArtifactsInfo:a}),p.onerror=f=>{u=l.objectStore(ro);const m=u.delete(this.modelPath);m.onsuccess=()=>(i.close(),r(p.error)),m.onerror=y=>(i.close(),r(p.error))}},c.onerror=d=>(i.close(),r(c.error)),l.oncomplete=()=>{h==null?i.close():h.oncomplete=()=>i.close()}}},o.onerror=i=>r(o.error)})}}wi.URL_SCHEME="indexeddb://";const $N=t=>U().getBool("IS_BROWSER")&&!Array.isArray(t)&&t.startsWith(wi.URL_SCHEME)?EO(t.slice(wi.URL_SCHEME.length)):null;it.registerSaveRouter($N);it.registerLoadRouter($N);function EO(t){return new wi(t)}function DO(t){return t.startsWith(wi.URL_SCHEME)?t.slice(wi.URL_SCHEME.length):t}class RO{constructor(){this.indexedDB=NN()}async listModels(){return new Promise((e,n)=>{const s=this.indexedDB.open(iy,ay);s.onupgradeneeded=()=>ly(s),s.onsuccess=()=>{const r=s.result,o=r.transaction(ro,"readonly"),a=o.objectStore(ro).getAll();a.onsuccess=()=>{const l={};for(const u of a.result)l[u.modelPath]=u.modelArtifactsInfo;e(l)},a.onerror=l=>(r.close(),n(a.error)),o.oncomplete=()=>r.close()},s.onerror=r=>n(s.error)})}async removeModel(e){return e=DO(e),new Promise((n,s)=>{const r=this.indexedDB.open(iy,ay);r.onupgradeneeded=()=>ly(r),r.onsuccess=()=>{const o=r.result,i=o.transaction(ro,"readwrite"),a=i.objectStore(ro),l=a.get(e);let u;l.onsuccess=()=>{if(l.result==null)return o.close(),s(new Error(`Cannot find model with path '${e}' in IndexedDB.`));{const c=a.delete(e),h=()=>{u=o.transaction(ai,"readwrite");const p=u.objectStore(ai).delete(e);p.onsuccess=()=>n(l.result.modelArtifactsInfo),p.onerror=f=>s(l.error)};c.onsuccess=h,c.onerror=d=>(h(),o.close(),s(l.error))}},l.onerror=c=>(o.close(),s(l.error)),i.oncomplete=()=>{u==null?o.close():u.oncomplete=()=>o.close()}},r.onerror=o=>s(r.error)})}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Tr="/",qi="tensorflowjs_models",IN="info",AO="model_topology",_O="weight_specs",OO="weight_data",FO="model_metadata";function TN(t){return{info:[qi,t,IN].join(Tr),topology:[qi,t,AO].join(Tr),weightSpecs:[qi,t,_O].join(Tr),weightData:[qi,t,OO].join(Tr),modelMetadata:[qi,t,FO].join(Tr)}}function EN(t){for(const e of Object.values(t))window.localStorage.removeItem(e)}function LO(t){const e=t.split(Tr);if(e.length<3)throw new Error(`Invalid key format: ${t}`);return e.slice(1,e.length-1).join(Tr)}function PO(t){return t.startsWith(vi.URL_SCHEME)?t.slice(vi.URL_SCHEME.length):t}class vi{constructor(e){if(!U().getBool("IS_BROWSER")||typeof window>"u"||typeof window.localStorage>"u")throw new Error("The current environment does not support local storage.");if(this.LS=window.localStorage,e==null||!e)throw new Error("For local storage, modelPath must not be null, undefined or empty.");this.modelPath=e,this.keys=TN(this.modelPath)}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");{const n=JSON.stringify(e.modelTopology),s=JSON.stringify(e.weightSpecs),r=Cc(e);try{this.LS.setItem(this.keys.info,JSON.stringify(r)),this.LS.setItem(this.keys.topology,n),this.LS.setItem(this.keys.weightSpecs,s),this.LS.setItem(this.keys.weightData,wO(e.weightData));const o={format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,signature:e.signature!=null?e.signature:void 0,userDefinedMetadata:e.userDefinedMetadata!=null?e.userDefinedMetadata:void 0,modelInitializer:e.modelInitializer!=null?e.modelInitializer:void 0,initializerSignature:e.initializerSignature!=null?e.initializerSignature:void 0,trainingConfig:e.trainingConfig!=null?e.trainingConfig:void 0};return this.LS.setItem(this.keys.modelMetadata,JSON.stringify(o)),{modelArtifactsInfo:r}}catch{throw EN(this.keys),new Error(`Failed to save model '${this.modelPath}' to local storage: size quota being exceeded is a possible cause of this failure: modelTopologyBytes=${r.modelTopologyBytes}, weightSpecsBytes=${r.weightSpecsBytes}, weightDataBytes=${r.weightDataBytes}.`)}}}async load(){const e=JSON.parse(this.LS.getItem(this.keys.info));if(e==null)throw new Error(`In local storage, there is no model with name '${this.modelPath}'`);if(e.modelTopologyType!=="JSON")throw new Error("BrowserLocalStorage does not support loading non-JSON model topology yet.");const n={},s=JSON.parse(this.LS.getItem(this.keys.topology));if(s==null)throw new Error(`In local storage, the topology of model '${this.modelPath}' is missing.`);n.modelTopology=s;const r=JSON.parse(this.LS.getItem(this.keys.weightSpecs));if(r==null)throw new Error(`In local storage, the weight specs of model '${this.modelPath}' are missing.`);n.weightSpecs=r;const o=this.LS.getItem(this.keys.modelMetadata);if(o!=null){const a=JSON.parse(o);n.format=a.format,n.generatedBy=a.generatedBy,n.convertedBy=a.convertedBy,a.signature!=null&&(n.signature=a.signature),a.userDefinedMetadata!=null&&(n.userDefinedMetadata=a.userDefinedMetadata),a.modelInitializer!=null&&(n.modelInitializer=a.modelInitializer),a.initializerSignature!=null&&(n.initializerSignature=a.initializerSignature),a.trainingConfig!=null&&(n.trainingConfig=a.trainingConfig)}const i=this.LS.getItem(this.keys.weightData);if(i==null)throw new Error(`In local storage, the binary weight values of model '${this.modelPath}' are missing.`);return n.weightData=vO(i),n}}vi.URL_SCHEME="localstorage://";const DN=t=>U().getBool("IS_BROWSER")&&!Array.isArray(t)&&t.startsWith(vi.URL_SCHEME)?zO(t.slice(vi.URL_SCHEME.length)):null;it.registerSaveRouter(DN);it.registerLoadRouter(DN);function zO(t){return new vi(t)}class MO{constructor(){C(U().getBool("IS_BROWSER"),()=>"Current environment is not a web browser"),C(typeof window>"u"||typeof window.localStorage<"u",()=>"Current browser does not appear to support localStorage"),this.LS=window.localStorage}async listModels(){const e={},n=qi+Tr,s=Tr+IN;for(let r=0;r<this.LS.length;++r){const o=this.LS.key(r);if(o.startsWith(n)&&o.endsWith(s)){const i=LO(o);e[i]=JSON.parse(this.LS.getItem(o))}}return e}async removeModel(e){e=PO(e);const n=TN(e);if(this.LS.getItem(n.info)==null)throw new Error(`Cannot find model at path '${e}'`);const s=JSON.parse(this.LS.getItem(n.info));return EN(n),s}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ya="://";class sn{constructor(){this.managers={}}static getInstance(){return sn.instance==null&&(sn.instance=new sn),sn.instance}static registerManager(e,n){C(e!=null,()=>"scheme must not be undefined or null."),e.endsWith(ya)&&(e=e.slice(0,e.indexOf(ya))),C(e.length>0,()=>"scheme must not be an empty string.");const s=sn.getInstance();C(s.managers[e]==null,()=>`A model store manager is already registered for scheme '${e}'.`),s.managers[e]=n}static getManager(e){const n=sn.getInstance().managers[e];if(n==null)throw new Error(`Cannot find model manager for scheme '${e}'`);return n}static getSchemes(){return Object.keys(sn.getInstance().managers)}}function Hh(t){if(t.indexOf(ya)===-1)throw new Error(`The url string provided does not contain a scheme. Supported schemes are: ${sn.getSchemes().join(",")}`);return{scheme:t.split(ya)[0],path:t.split(ya)[1]}}async function RN(t,e,n=!1){C(t!==e,()=>`Old path and new path are the same: '${t}'`);const s=it.getLoadHandlers(t);C(s.length>0,()=>`Copying failed because no load handler is found for source URL ${t}.`),C(s.length<2,()=>`Copying failed because more than one (${s.length}) load handlers for source URL ${t}.`);const r=s[0],o=it.getSaveHandlers(e);C(o.length>0,()=>`Copying failed because no save handler is found for destination URL ${e}.`),C(o.length<2,()=>`Copying failed because more than one (${s.length}) save handlers for destination URL ${e}.`);const i=o[0],a=Hh(t).scheme,l=Hh(t).path,u=a===Hh(t).scheme,c=await r.load();n&&u&&await sn.getManager(a).removeModel(l);const h=await i.save(c);return n&&!u&&await sn.getManager(a).removeModel(l),h.modelArtifactsInfo}async function BO(){const t=sn.getSchemes(),e={};for(const n of t){const s=await sn.getManager(n).listModels();for(const r in s){const o=n+ya+r;e[o]=s[r]}}return e}async function VO(t){const e=Hh(t);return sn.getManager(e.scheme).removeModel(e.path)}async function WO(t,e){return RN(t,e,!1)}async function UO(t,e){return RN(t,e,!0)}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class GO{constructor(){this.messageName="setTimeoutCustom",this.functionRefs=[],this.handledMessageCount=0,this.hasEventListener=!1}fetch(e,n){return fetch(e,n)}now(){return performance.now()}encode(e,n){if(n!=="utf-8"&&n!=="utf8")throw new Error(`Browser's encoder only supports utf-8, but got ${n}`);return this.textEncoder==null&&(this.textEncoder=new TextEncoder),this.textEncoder.encode(e)}decode(e,n){return new TextDecoder(n).decode(e)}setTimeoutCustom(e,n){if(typeof window>"u"||!U().getBool("USE_SETTIMEOUTCUSTOM")){setTimeout(e,n);return}this.functionRefs.push(e),setTimeout(()=>{window.postMessage({name:this.messageName,index:this.functionRefs.length-1},"*")},n),this.hasEventListener||(this.hasEventListener=!0,window.addEventListener("message",s=>{if(s.source===window&&s.data.name===this.messageName){s.stopPropagation();const r=this.functionRefs[s.data.index];r(),this.handledMessageCount++,this.handledMessageCount===this.functionRefs.length&&(this.functionRefs=[],this.handledMessageCount=0)}},!0))}isTypedArray(e){return e instanceof Float32Array||e instanceof Int32Array||e instanceof Uint8Array||e instanceof Uint8ClampedArray}}if(U().get("IS_BROWSER")){U().setPlatform("browser",new GO);try{sn.registerManager(vi.URL_SCHEME,new MO)}catch{}try{sn.registerManager(wi.URL_SCHEME,new RO)}catch{}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const HO={importFetch:()=>require("node-fetch")};let Om;class jO{constructor(){this.util=require("util"),this.textEncoder=new this.util.TextEncoder}fetch(e,n){return U().global.fetch!=null?U().global.fetch(e,n):(Om==null&&(Om=HO.importFetch()),Om(e,n))}now(){const e=process.hrtime();return e[0]*1e3+e[1]/1e6}encode(e,n){if(n!=="utf-8"&&n!=="utf8")throw new Error(`Node built-in encoder only supports utf-8, but got ${n}`);return this.textEncoder.encode(e)}decode(e,n){return e.length===0?"":new this.util.TextDecoder(n).decode(e)}isTypedArray(e){return this.util.types.isFloat32Array(e)||this.util.types.isInt32Array(e)||this.util.types.isUint8Array(e)||this.util.types.isUint8ClampedArray(e)}}U().get("IS_NODE")&&!U().get("IS_BROWSER")&&U().setPlatform("node",new jO);/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ce(t,e="float32",n){return e=e||"float32",rs(t),new Pt(t,e,n)}/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function KO(t,e){const n=I(t,"x","cast");if(!F_(e))throw new Error(`Failed to cast to unknown dtype ${e}`);if(e==="string"&&n.dtype!=="string"||e!=="string"&&n.dtype==="string")throw new Error("Only strings can be casted to strings");const s={x:n},r={dtype:e};return R.runKernel(Lu,s,r)}const ie=D({cast_:KO});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qO(t){const n={x:I(t,"x","clone","string_or_numeric")};return R.runKernel(Xu,n)}const Ar=D({clone_:qO});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function AN(t,e=!1){console.log(t.toString(e))}/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */mN();const XO={buffer:Ce,cast:ie,clone:Ar,print:AN};hO(XO);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cs(){return R}function uy(){return R.memory()}function P(t,e){return R.tidy(t,e)}function Se(t){pN(t).forEach(n=>n.dispose())}function Ft(t){return R.keep(t)}function YO(){return R.ready()}function _N(t,e,n=1){return R.registerBackend(t,e,n)}function QO(){return R.backend}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ZO(t,e){let n=I(t,"a","add"),s=I(e,"b","add");[n,s]=gt(n,s);const r={a:n,b:s};return R.runKernel(Xa,r)}const Q=D({add_:ZO});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function JO(t,e){let n=I(t,"a","floorDiv"),s=I(e,"b","floorDiv");[n,s]=gt(n,s);const r={a:n,b:s};return R.runKernel(Ku,r)}const qx=D({floorDiv_:JO});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function eF(t,e){let n=I(t,"a","div"),s=I(e,"b","div");if([n,s]=gt(n,s),n.dtype==="int32"&&s.dtype==="int32")return qx(n,s);const r={a:n,b:s},o={};return R.runKernel(Vu,r,o)}const pe=D({div_:eF});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tF(t,e){let n=I(t,"a","mul"),s=I(e,"b","mul");[n,s]=gt(n,s);const r={a:n,b:s};return R.runKernel(rc,r)}const A=D({mul_:tF});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nF(t){const e=I(t,"x","abs");if(e.dtype==="complex64"){const n={x:e};return R.runKernel(xp,n)}else{const n={x:e};return R.runKernel(cp,n)}}const Nt=D({abs_:nF});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sF(t){const n={x:I(t,"x","acos")};return R.runKernel(Eu,n)}const ON=D({acos_:sF});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rF(t){const n={x:I(t,"x","acosh")};return R.runKernel(Du,n)}const FN=D({acosh_:rF});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function oF(t){C(Array.isArray(t),()=>"The argument passed to tf.addN() must be a list of tensors"),C(t.length>=1,()=>`Must pass at least one tensor to tf.addN(), but got ${t.length}`);const e=t.map((r,o)=>I(r,`tensors${o}`,"addN")),n=e[0];e.forEach(r=>{if(r.dtype!==n.dtype)throw new Error("All tensors passed to tf.addN() must have the same dtype")}),e.forEach(r=>{if(!Ae(r.shape,n.shape))throw new Error("All tensors passed to tf.addN() must have the same shape")});const s=e;return R.runKernel(hp,s)}const iF=D({addN_:oF});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function aF(t,e=null,n=!1){const r={x:I(t,"x","all","bool")},o={axis:e,keepDims:n};return R.runKernel(V0,r,o)}const Xx=D({all_:aF});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lF(t,e=null,n=!1){const r={x:I(t,"x","any","bool")},o={axis:e,keepDims:n};return R.runKernel(W0,r,o)}const Id=D({any_:lF});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function uF(t,e=0){const s={x:I(t,"x","argMax")},r={axis:e};return R.runKernel(dp,s,r)}const Aa=D({argMax_:uF});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cF(t,e=0){const s={x:I(t,"x","argMin")},r={axis:e};return R.runKernel(pp,s,r)}const LN=D({argMin_:cF});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hF(t){const n={x:I(t,"x","asin")};return R.runKernel(Ru,n)}const PN=D({asin_:hF});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dF(t){const n={x:I(t,"x","asinh")};return R.runKernel(Au,n)}const zN=D({asinh_:dF});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pF(t){const n={x:I(t,"x","atan")};return R.runKernel(_u,n)}const MN=D({atan_:pF});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fF(t,e){let n=I(t,"a","atan2"),s=I(e,"b","atan2");[n,s]=gt(n,s);const r={a:n,b:s};return R.runKernel(Fu,r)}const BN=D({atan2_:fF});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mF(t){const n={x:I(t,"x","atanh")};return R.runKernel(Ou,n)}const VN=D({atanh_:mF});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Nc(t,e,n,s,r="NHWC",o){const i=t[3],a=[...e,i],l=Wr(r);return Mt(t,a,n,o,s,null,null,l)}function Rs(t,e,n,s,r,o,i="channelsLast"){const[a,l]=lu(e);let u;if(i==="channelsLast")u=[a,l,t[3],t[3]];else if(i==="channelsFirst")u=[a,l,t[1],t[1]];else throw new Error(`Unknown dataFormat ${i}`);return Mt(t,u,n,s,r,o,!1,i)}function Vr(t,e,n,s,r,o,i="NDHWC"){const[a,l,u]=cy(e);let c,h;if(i==="NDHWC")h="channelsLast",c=[a,l,u,t[4],t[4]];else if(i==="NCDHW")h="channelsFirst",c=[a,l,u,t[1],t[1]];else throw new Error(`Unknown dataFormat ${i}`);return Mo(t,c,n,s,r,!1,h,o)}function Mt(t,e,n,s,r,o,i=!1,a="channelsLast"){let[l,u,c,h]=[-1,-1,-1,-1];if(a==="channelsLast")[l,u,c,h]=t;else if(a==="channelsFirst")[l,h,u,c]=t;else throw new Error(`Unknown dataFormat ${a}`);const[d,p,,f]=e,[m,y]=lu(n),[g,x]=lu(s),b=xa(d,g),w=xa(p,x),{padInfo:k,outHeight:S,outWidth:N}=xF(r,u,c,m,y,b,w,o,a),$=i?f*h:f;let T;return a==="channelsFirst"?T=[l,$,S,N]:a==="channelsLast"&&(T=[l,S,N,$]),{batchSize:l,dataFormat:a,inHeight:u,inWidth:c,inChannels:h,outHeight:S,outWidth:N,outChannels:$,padInfo:k,strideHeight:m,strideWidth:y,filterHeight:d,filterWidth:p,effectiveFilterHeight:b,effectiveFilterWidth:w,dilationHeight:g,dilationWidth:x,inShape:t,outShape:T,filterShape:e}}function Mo(t,e,n,s,r,o=!1,i="channelsLast",a){let[l,u,c,h,d]=[-1,-1,-1,-1,-1];if(i==="channelsLast")[l,u,c,h,d]=t;else if(i==="channelsFirst")[l,d,u,c,h]=t;else throw new Error(`Unknown dataFormat ${i}`);const[p,f,m,,y]=e,[g,x,b]=cy(n),[w,k,S]=cy(s),N=xa(p,w),$=xa(f,k),T=xa(m,S),{padInfo:E,outDepth:F,outHeight:M,outWidth:B}=bF(r,u,c,h,g,x,b,N,$,T,a),V=o?y*d:y;let W;return i==="channelsFirst"?W=[l,V,F,M,B]:i==="channelsLast"&&(W=[l,F,M,B,V]),{batchSize:l,dataFormat:i,inDepth:u,inHeight:c,inWidth:h,inChannels:d,outDepth:F,outHeight:M,outWidth:B,outChannels:V,padInfo:E,strideDepth:g,strideHeight:x,strideWidth:b,filterDepth:p,filterHeight:f,filterWidth:m,effectiveFilterDepth:N,effectiveFilterHeight:$,effectiveFilterWidth:T,dilationDepth:w,dilationHeight:k,dilationWidth:S,inShape:t,outShape:W,filterShape:e}}function gF(t,e,n,s,r){s==null&&(s=Yx(t,e,n));const o=t[0],i=t[1],a=uu((o-e+2*s)/n+1,r),l=uu((i-e+2*s)/n+1,r);return[a,l]}function yF(t,e,n,s,r,o){r==null&&(r=Yx(t,e[0],s[0]));const i=[0,0,0,n];for(let a=0;a<3;a++)t[a]+2*r>=e[a]&&(i[a]=uu((t[a]-e[a]+2*r)/s[a]+1,o));return i}function Yx(t,e,n,s=1){const r=xa(e,s);return Math.floor((t[0]*(n-1)-n+r)/2)}function lu(t){return typeof t=="number"?[t,t,t]:t.length===2?[t[0],t[1],1]:t}function cy(t){return typeof t=="number"?[t,t,t]:t}function xa(t,e){return e<=1?t:t+(t-1)*(e-1)}function xF(t,e,n,s,r,o,i,a,l){let u,c,h;if(typeof t=="number"){u={top:t,bottom:t,left:t,right:t,type:t===0?"VALID":"NUMBER"};const p=gF([e,n],o,s,t,a);c=p[0],h=p[1]}else if(t==="same"){c=Math.ceil(e/s),h=Math.ceil(n/r);const d=Math.max(0,(c-1)*s+o-e),p=Math.max(0,(h-1)*r+i-n),f=Math.floor(d/2),m=d-f,y=Math.floor(p/2),g=p-y;u={top:f,bottom:m,left:y,right:g,type:"SAME"}}else if(t==="valid")u={top:0,bottom:0,left:0,right:0,type:"VALID"},c=Math.ceil((e-o+1)/s),h=Math.ceil((n-i+1)/r);else if(typeof t=="object"){const d=l==="channelsLast"?t[1][0]:t[2][0],p=l==="channelsLast"?t[1][1]:t[2][1],f=l==="channelsLast"?t[2][0]:t[3][0],m=l==="channelsLast"?t[2][1]:t[3][1];u={top:d,bottom:p,left:f,right:m,type:d===0&&p===0&&f===0&&m===0?"VALID":"EXPLICIT"},c=uu((e-o+d+p)/s+1,a),h=uu((n-i+f+m)/r+1,a)}else throw Error(`Unknown padding parameter: ${t}`);return{padInfo:u,outHeight:c,outWidth:h}}function bF(t,e,n,s,r,o,i,a,l,u,c){let h,d,p,f;if(t==="valid"&&(t=0),typeof t=="number"){h={top:t,bottom:t,left:t,right:t,front:t,back:t,type:t===0?"VALID":"NUMBER"};const y=yF([e,n,s,1],[a,l,u],1,[r,o,i],t,c);d=y[0],p=y[1],f=y[2]}else if(t==="same"){d=Math.ceil(e/r),p=Math.ceil(n/o),f=Math.ceil(s/i);const m=(d-1)*r+a-e,y=(p-1)*o+l-n,g=(f-1)*i+u-s,x=Math.floor(m/2),b=m-x,w=Math.floor(y/2),k=y-w,S=Math.floor(g/2),N=g-S;h={top:w,bottom:k,left:S,right:N,front:x,back:b,type:"SAME"}}else throw Error(`Unknown padding parameter: ${t}`);return{padInfo:h,outDepth:d,outHeight:p,outWidth:f}}function uu(t,e){if(!e)return Math.trunc(t);switch(e){case"round":return Math.round(t);case"ceil":return Math.ceil(t);case"floor":return Math.floor(t);default:throw new Error(`Unknown roundingMode ${e}`)}}function Co(t){const[e,n,s]=lu(t);return e===1&&n===1&&s===1}function jt(t,e){return Co(t)||Co(e)}function ki(t){return lu(t).every(e=>e>0)}function Wr(t){if(t==="NHWC")return"channelsLast";if(t==="NCHW")return"channelsFirst";throw new Error(`Unknown dataFormat ${t}`)}function hn(t,e,n){if(n!=null){if(typeof e=="string")throw Error(`Error in ${t}: pad must be an integer when using dimRoundingMode ${n} but got pad ${e}.`);if(typeof e=="number")C(Ea(e),()=>`Error in ${t}: pad must be an integer when using dimRoundingMode ${n} but got pad ${e}.`);else if(typeof e=="object")e.forEach(s=>{s.forEach(r=>{C(Ea(r),()=>`Error in ${t}: pad must be an integer when using dimRoundingMode ${n} but got pad ${r}.`)})});else throw Error(`Error in ${t}: Unknown padding parameter: ${e}`)}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wF(t,e){const s={x:I(t,"x","reshape","string_or_numeric")},r={shape:e};return R.runKernel(Zp,s,r)}const O=D({reshape_:wF});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vF(t,e,n,s,r){const o=I(t,"x","avgPool","float32"),i=1;C(jt(n,i),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${n} and dilations '${i}'`);let a=o,l=!1;o.rank===3&&(l=!0,a=O(o,[1,o.shape[0],o.shape[1],o.shape[2]])),C(a.rank===4,()=>`Error in avgPool: x must be rank 4 but got rank ${a.rank}.`),hn("avgPool",s,r);const u={x:a},c={filterSize:e,strides:n,pad:s,dimRoundingMode:r};let h=R.runKernel(fp,u,c);return h=ie(h,o.dtype),l?O(h,[h.shape[1],h.shape[2],h.shape[3]]):h}const ff=D({avgPool_:vF});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function kF(t,e,n,s,r,o="NDHWC"){const i=I(t,"x","avgPool3d","float32");let a=i,l=!1;i.rank===4&&(l=!0,a=O(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),C(a.rank===5,()=>`Error in avgPool3d: x must be rank 5 but got rank ${a.rank}.`),C(o==="NDHWC",()=>`Error in avgPool3d: Only NDHWC is currently supported, but got dataFormat of ${o}`),C(typeof n=="number"&&n>0||Array.isArray(n)&&n[0]>0&&n[1]>0&&n[2]>0,()=>`Error in avgPool3d: Stride must be > 0, but got '${n}'`),hn("avgPool3d",s,r);const u={x:a},c={filterSize:e,strides:n,pad:s,dimRoundingMode:r,dataFormat:o};let h=R.runKernel(mp,u,c);return h=ie(h,a.dtype),l?O(h,[h.shape[1],h.shape[2],h.shape[3],h.shape[4]]):h}const WN=D({avgPool3d_:kF});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function SF(t,e=0){C(t.length>=1,()=>"Pass at least one tensor to concat");const n=Nd(t,"tensors","concat","string_or_numeric");if(n[0].dtype==="complex64"&&n.forEach(o=>{if(o.dtype!=="complex64")throw new Error(`Cannot concatenate complex64 tensors with a tensor
          with dtype ${o.dtype}. `)}),n.length===1)return Ar(n[0]);const s=n,r={axis:e};return R.runKernel(bp,s,r)}const ft=D({concat_:SF});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function CF(t,e,n=!1,s=!1){let r=I(t,"a","matMul"),o=I(e,"b","matMul");[r,o]=gt(r,o);const i={a:r,b:o},a={transposeA:n,transposeB:s};return R.runKernel(gp,i,a)}const Ie=D({matMul_:CF});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function NF(t){const n={x:I(t,"x","sigmoid","float32")};return R.runKernel(mc,n)}const fr=D({sigmoid_:NF});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $F(t,e,n){const s=I(t,"x","slice","string_or_numeric");if(s.rank===0)throw new Error("Slicing scalar is not possible");const r={x:s},o={begin:e,size:n};return R.runKernel(sf,r,o)}const De=D({slice_:$F});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function IF(t){const n={x:I(t,"x","tanh","float32")};return R.runKernel(vc,n)}const _a=D({tanh_:IF});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function TF(t,e,n,s,r,o){const i=I(t,"forgetBias","basicLSTMCell"),a=I(e,"lstmKernel","basicLSTMCell"),l=I(n,"lstmBias","basicLSTMCell"),u=I(s,"data","basicLSTMCell"),c=I(r,"c","basicLSTMCell"),h=I(o,"h","basicLSTMCell"),d=ft([u,h],1),p=Ie(d,a),f=Q(p,l),m=f.shape[0],y=f.shape[1]/4,g=[m,y],x=De(f,[0,0],g),b=De(f,[0,y],g),w=De(f,[0,y*2],g),k=De(f,[0,y*3],g),S=Q(A(fr(x),_a(b)),A(c,fr(Q(i,w)))),N=A(_a(S),fr(k));return[S,N]}const EF=D({basicLSTMCell_:TF});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function DF(t,e,n){const s=I(t,"x","batchToSpaceND"),r=e.reduce((a,l)=>a*l);C(s.rank>=1+e.length,()=>`input rank is ${s.rank} but should be > than blockShape.length ${e.length}`),C(n.length===e.length,()=>`crops.length is ${n.length} but should be equal to blockShape.length  ${e.length}`),C(s.shape[0]%r===0,()=>`input tensor batch is ${s.shape[0]} but is not divisible by the product of the elements of blockShape ${e.join(" * ")} === ${r}`);const o={x:s},i={blockShape:e,crops:n};return R.runKernel(yp,o,i)}const mf=D({batchToSpaceND_:DF});function RF(t){let e;return t.rank===0||t.rank===1?e=O(t,[1,1,1,t.size]):t.rank===2?e=O(t,[1,1,t.shape[0],t.shape[1]]):t.rank===3?e=O(t,[1,t.shape[0],t.shape[1],t.shape[2]]):e=t,e}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function AF(t,e,n,s,r,o){o==null&&(o=.001);const i=I(t,"x","batchNorm"),a=I(e,"mean","batchNorm"),l=I(n,"variance","batchNorm");let u;r!=null&&(u=I(r,"scale","batchNorm"));let c;s!=null&&(c=I(s,"offset","batchNorm")),C(a.rank===l.rank,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),C(c==null||a.rank===c.rank,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),C(u==null||a.rank===u.rank,()=>"Batch normalization gradient requires mean and scale to have equal ranks.");const d={x:RF(i),scale:u,offset:c,mean:a,variance:l},p={varianceEpsilon:o},f=R.runKernel(Tp,d,p);return O(f,i.shape)}const $c=D({batchNorm_:AF});function _F(t,e,n,s,r,o){const i=I(t,"x","batchNorm"),a=I(e,"mean","batchNorm"),l=I(n,"variance","batchNorm");let u;r!=null&&(u=I(r,"scale","batchNorm"));let c;return s!=null&&(c=I(s,"offset","batchNorm")),C(i.rank===2,()=>`Error in batchNorm2D: x must be rank 2 but got rank ${i.rank}.`),C(a.rank===2||a.rank===1,()=>`Error in batchNorm2D: mean must be rank 2 or rank 1 but got rank ${a.rank}.`),C(l.rank===2||l.rank===1,()=>`Error in batchNorm2D: variance must be rank 2 or rank 1 but got rank ${l.rank}.`),u!=null&&C(u.rank===2||u.rank===1,()=>`Error in batchNorm2D: scale must be rank 2 or rank 1 but got rank ${u.rank}.`),c!=null&&C(c.rank===2||c.rank===1,()=>`Error in batchNorm2D: offset must be rank 2 or rank 1 but got rank ${c.rank}.`),$c(i,a,l,c,u,o)}const UN=D({batchNorm2d_:_F});function OF(t,e,n,s,r,o){const i=I(t,"x","batchNorm"),a=I(e,"mean","batchNorm"),l=I(n,"variance","batchNorm");let u;r!=null&&(u=I(r,"scale","batchNorm"));let c;return s!=null&&(c=I(s,"offset","batchNorm")),C(i.rank===3,()=>`Error in batchNorm3D: x must be rank 3 but got rank ${i.rank}.`),C(a.rank===3||a.rank===1,()=>`Error in batchNorm3D: mean must be rank 3 or rank 1 but got rank ${a.rank}.`),C(l.rank===3||l.rank===1,()=>`Error in batchNorm3D: variance must be rank 3 or rank 1 but got rank ${l.rank}.`),u!=null&&C(u.rank===3||u.rank===1,()=>`Error in batchNorm3D: scale must be rank 3 or rank 1 but got rank ${u.rank}.`),c!=null&&C(c.rank===3||c.rank===1,()=>`Error in batchNorm3D: offset must be rank 3 or rank 1 but got rank ${c.rank}.`),$c(i,a,l,c,u,o)}const GN=D({batchNorm3d_:OF});function FF(t,e,n,s,r,o){const i=I(t,"x","batchNorm"),a=I(e,"mean","batchNorm"),l=I(n,"variance","batchNorm");let u;r!=null&&(u=I(r,"scale","batchNorm"));let c;return s!=null&&(c=I(s,"offset","batchNorm")),C(i.rank===4,()=>`Error in batchNorm4D: x must be rank 4 but got rank ${i.rank}.`),C(a.rank===4||a.rank===1,()=>`Error in batchNorm4D: mean must be rank 4 or rank 1 but got rank ${a.rank}.`),C(l.rank===4||l.rank===1,()=>`Error in batchNorm4D: variance must be rank 4 or rank 1 but got rank ${l.rank}.`),u!=null&&C(u.rank===4||u.rank===1,()=>`Error in batchNorm4D: scale must be rank 4 or rank 1 but got rank ${u.rank}.`),c!=null&&C(c.rank===4||c.rank===1,()=>`Error in batchNorm4D: offset must be rank 4 or rank 1 but got rank ${c.rank}.`),$c(i,a,l,c,u,o)}const HN=D({batchNorm4d_:FF});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function LF(t,e,n){const s=I(t,"x","bincount"),r=I(e,"weights","bincount");C(s.dtype==="int32",()=>`Error in bincount: input dtype must be int32, but got ${s.dtype}`),C(n>=0,()=>`size must be non-negative, but got ${n}.`),C(r.size===s.size||r.size===0,()=>`Error in bincount: weights must have the same size as input or0-length, but got input shape: ${s.shape}, weights shape: ${r.shape}.`);const o={x:s,weights:r},i={size:n};return R.runKernel(H0,o,i)}const jN=D({bincount_:LF});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function PF(t,e){const n=I(t,"s0","broadcastArgs","int32"),s=I(e,"s1","broadcastArgs","int32");if(n.rank!==1)throw new Error(`broadcastArgs(): first input must be a vector (rank=1). Has rank ${n.rank}`);if(s.rank!==1)throw new Error(`broadcastArgs(): second input must be a vector (rank=1). Has rank ${s.rank}`);const r={s0:n,s1:s};return R.runKernel(j0,r)}const zF=D({broadcastArgs_:PF});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function MF(t,e){let n=I(t,"broadcastTo","x");const s=n.shape;if(rs(e),e.length<n.rank)throw new Error(`broadcastTo(): shape.length=${e.length} < input.rank=${n.rank}.`);if(e.length>n.rank){const u=n.shape.slice();for(;u.length<e.length;)u.unshift(1);n=O(n,u)}const r=n.shape,o=Array.from(e);for(let u=e.length-1;u>=0;u--)if(r[u]===e[u])o[u]=1;else if(n.shape[u]!==1)throw new Error(`broadcastTo(): [${s}] cannot be broadcast to [${e}].`);if(o.map((u,c)=>u>1?c:-1).filter(u=>u>=0).length===0)return Ar(n);const a={x:n},l={reps:o};return R.runKernel(kc,a,l)}const ba=D({broadcastTo_:MF});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function BF(t){const n={x:I(t,"x","ceil","float32")};return R.runKernel(Pu,n)}const KN=D({ceil_:BF});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ya(t,e,n){rs(t);const s={shape:t,value:e,dtype:n};return R.runKernel(ax,{},s)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function VF(t,e,n){const s=I(t,"x","clipByValue");if(C(e<=n,()=>`Error in clip: min (${e}) must be less than or equal to max (${n}).`),e===n)return Ya(s.shape,e,s.dtype);const r={x:s},o={clipValueMin:e,clipValueMax:n};return R.runKernel(zu,r,o)}const zn=D({clipByValue_:VF});function WF(t){return ft(t,0)}const qN=D({concat1d_:WF});function UF(t,e){return ft(t,e)}const XN=D({concat2d_:UF});function GF(t,e){return ft(t,e)}const YN=D({concat3d_:GF});function HF(t,e){return ft(t,e)}const QN=D({concat4d_:HF});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jF(t,e,n,s,r="NHWC",o=[1,1],i){const a=I(t,"x","conv2d","float32"),l=I(e,"filter","conv2d","float32");let u=a,c=!1;a.rank===3&&(c=!0,u=O(a,[1,a.shape[0],a.shape[1],a.shape[2]])),C(u.rank===4,()=>`Error in conv2d: input must be rank 4, but got rank ${u.rank}.`),C(l.rank===4,()=>`Error in conv2d: filter must be rank 4, but got rank ${l.rank}.`),hn("conv2d",s,i);const h=r==="NHWC"?u.shape[3]:u.shape[1];C(h===l.shape[2],()=>`Error in conv2d: depth of input (${h}) must match input depth for filter ${l.shape[2]}.`),C(jt(n,o),()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${n} and dilations '${o}'`),C(ki(o),()=>"Error in conv2D: Dilated rates should be larger than 0."),C(ki(n),()=>"Error in conv2D: Strides should be larger than 0.");const d={x:u,filter:l},p={strides:n,pad:s,dataFormat:r,dilations:o,dimRoundingMode:i},f=R.runKernel(wp,d,p);return c?O(f,[f.shape[1],f.shape[2],f.shape[3]]):f}const No=D({conv2d_:jF});function KF(t,e,n,s,r="NWC",o=1,i){const a=I(t,"x","conv1d"),l=I(e,"filter","conv1d");let u=a,c=!1;a.rank===2&&(c=!0,u=O(a,[1,a.shape[0],a.shape[1]])),C(u.rank===3,()=>`Error in conv1d: input must be rank 3, but got rank ${u.rank}.`),C(l.rank===3,()=>`Error in conv1d: filter must be rank 3, but got rank ${l.rank}.`),hn("conv1d",s,i),C(u.shape[2]===l.shape[1],()=>`Error in conv1d: depth of input (${u.shape[2]}) must match input depth for filter ${l.shape[1]}.`),C(jt(n,o),()=>`Error in conv1D: Either stride or dilation must be 1. Got stride ${n} and dilation '${o}'`),C(ki(o),()=>"Error in conv1D: Dilated rates should be larger than 0."),C(ki(n),()=>"Error in conv1D: Stride should be larger than 0."),C(r==="NWC",()=>`Error in conv1d: got dataFormat of ${r} but only NWC is currently supported.`);const h=O(l,[1,l.shape[0],l.shape[1],l.shape[2]]),d=O(u,[u.shape[0],1,u.shape[1],u.shape[2]]),y=No(d,h,[1,n],s,"NHWC",[1,o],i);return c?O(y,[y.shape[2],y.shape[3]]):O(y,[y.shape[0],y.shape[2],y.shape[3]])}const Qx=D({conv1d_:KF});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qF(t,e,n,s,r,o="NHWC",i){C(t.length===e.rank,()=>`Length of inShape (${t.length}) and rank of dy (${e.rank}) must match`);let a=t,l=e,u=!1;e.rank===3&&(u=!0,l=O(e,[1,e.shape[0],e.shape[1],e.shape[2]]),a=[1,t[0],t[1],t[2]]),C(a.length===4,()=>`Error in conv2dDerInput: inShape must be length 4, but got length ${a.length}.`),C(l.rank===4,()=>`Error in conv2dDerInput: dy must be rank 4, but got rank ${l.rank}`),C(n.rank===4,()=>`Error in conv2dDerInput: filter must be rank 4, but got rank ${n.rank}`);const c=o==="NHWC"?a[3]:a[1],h=o==="NHWC"?l.shape[3]:l.shape[1];C(c===n.shape[2],()=>`Error in conv2dDerInput: depth of input (${c}) must match input depth for filter ${n.shape[2]}.`),C(h===n.shape[3],()=>`Error in conv2dDerInput: depth of output (${h}) must match output depth for filter ${n.shape[3]}.`),hn("conv2dDerInput",r,i);const d={dy:l,filter:n},p={strides:s,pad:r,dataFormat:o,dimRoundingMode:i,inputShape:a},f=R.runKernel(vp,d,p);return u?O(f,[f.shape[1],f.shape[2],f.shape[3]]):f}const Zx=D({conv2DBackpropInput_:qF});function XF(t,e,n,s,r,o){const i=I(t,"x","conv2dTranspose"),a=I(e,"filter","conv2dTranspose");return Zx(n,i,a,s,r,"NHWC",o)}const Jx=D({conv2dTranspose_:XF});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function YF(t,e,n,s,r="NDHWC",o=[1,1,1]){const i=I(t,"x","conv3d"),a=I(e,"filter","conv3d");let l=i,u=!1;i.rank===4&&(u=!0,l=O(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),C(l.rank===5,()=>`Error in conv3d: input must be rank 5, but got rank ${l.rank}.`),C(a.rank===5,()=>`Error in conv3d: filter must be rank 5, but got rank ${a.rank}.`),C(l.shape[4]===a.shape[3],()=>`Error in conv3d: depth of input (${l.shape[4]}) must match input depth for filter ${a.shape[3]}.`),C(jt(n,o),()=>`Error in conv3D: Either strides or dilations must be 1. Got strides ${n} and dilations '${o}'`),C(r==="NDHWC",()=>`Error in conv3d: got dataFormat of ${r} but only NDHWC is currently supported.`),C(ki(o),()=>"Error in conv3D: Dilated rates should be larger than 0."),C(ki(n),()=>"Error in conv3D: Strides should be larger than 0.");const c={x:l,filter:a},h={strides:n,pad:s,dataFormat:r,dilations:o},d=R.runKernel(kp,c,h);return u?O(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}const ZN=D({conv3d_:YF});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function QF(t,e,n,s,r){C(t.length===e.rank,()=>`Length of inShape (${t.length}) and rank of dy (${e.rank}) must match`);let o=t,i=e,a=!1;e.rank===4&&(a=!0,i=O(e,[1,e.shape[0],e.shape[1],e.shape[2],e.shape[3]]),o=[1,t[0],t[1],t[2],t[3]]);const l=o[4],u=i.shape[4];C(o.length===5,()=>`Error in conv3dDerInput: inShape must be length 5, but got length ${o.length}.`),C(i.rank===5,()=>`Error in conv3dDerInput: dy must be rank 5, but got rank ${i.rank}`),C(n.rank===5,()=>`Error in conv3dDerInput: filter must be rank 5, but got rank ${n.rank}`),C(l===n.shape[3],()=>`Error in conv3dDerInput: depth of input (${l}) must match input depth for filter ${n.shape[3]}.`),C(u===n.shape[4],()=>`Error in conv3dDerInput: depth of output (${u}) must match output depth for filter ${n.shape[4]}.`);const c={dy:i,filter:n},h={pad:r,strides:s,inputShape:o},d=R.runKernel(Y0,c,h);return a?O(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}const JN=D({conv3DBackpropInput_:QF});function ZF(t,e,n,s,r){const o=I(t,"x","conv3dTranspose"),i=I(e,"filter","conv3dTranspose");return JN(n,o,i,s,r)}const e$=D({conv3dTranspose_:ZF});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function JF(t){const n={x:I(t,"x","cos","float32")};return R.runKernel(Mu,n)}const gf=D({cos_:JF});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function eL(t){const n={x:I(t,"x","cosh","float32")};return R.runKernel(Bu,n)}const e1=D({cosh_:eL});/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the 'License');
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an 'AS IS' BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tL(t,e=0,n=!1,s=!1){const o={x:I(t,"x","cumprod")},i={axis:e,exclusive:n,reverse:s};return R.runKernel(Q0,o,i)}const Td=D({cumprod_:tL});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nL(t,e=0,n=!1,s=!1){const o={x:I(t,"x","cumsum")},i={axis:e,exclusive:n,reverse:s};return R.runKernel(Sp,o,i)}const t1=D({cumsum_:nL});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sL(t,e,n,s=!1){const r=I(t,"x","denseBincount"),o=I(e,"weights","denseBincount");C(r.dtype==="int32",()=>`Error in denseBincount: input dtype must be int32, but got ${r.dtype}`),C(r.rank<=2,()=>`Error in denseBincount: input must be at most rank 2, but got rank ${r.rank}.`),C(n>=0,()=>`size must be non-negative, but got ${n}.`),C(o.size===r.size||o.size===0,()=>`Error in denseBincount: weights must have the same shape as x or 0-length, but got x shape: ${r.shape}, weights shape: ${o.shape}.`);const i={x:r,weights:o},a={size:n,binaryOutput:s};return R.runKernel(J0,i,a)}const hy=D({denseBincount_:sL});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rL(t,e,n="NHWC"){const s=I(t,"x","depthToSpace","float32"),r=n==="NHWC"?s.shape[1]:s.shape[2],o=n==="NHWC"?s.shape[2]:s.shape[3],i=n==="NHWC"?s.shape[3]:s.shape[1];C(e>1,()=>`blockSize should be > 1 for depthToSpace, but was: ${e}`),C(r*e>=0,()=>`Negative dimension size caused by overflow when multiplying
    ${r} and ${e}  for depthToSpace with input shape
    ${s.shape}`),C(o*e>=0,()=>`Negative dimension size caused by overflow when multiplying
    ${o} and ${e} for depthToSpace with input shape
        ${s.shape}`),C(i%(e*e)===0,()=>`Dimension size must be evenly divisible by ${e*e} but is ${i} for depthToSpace with input shape ${s.shape}`);const a={x:s},l={blockSize:e,dataFormat:n};return R.runKernel(ex,a,l)}const t$=D({depthToSpace_:rL});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function oL(t,e,n,s,r="NHWC",o=[1,1],i){const a=I(t,"x","depthwiseConv2d","float32"),l=I(e,"filter","depthwiseConv2d","float32");let u=a,c=!1;a.rank===3&&(c=!0,u=O(a,[1,a.shape[0],a.shape[1],a.shape[2]])),C(u.rank===4,()=>`Error in depthwiseConv2d: input must be rank 4, but got rank ${u.rank}.`),C(l.rank===4,()=>`Error in depthwiseConv2d: filter must be rank 4, but got rank ${l.rank}.`);const h=r==="NHWC"?u.shape[3]:u.shape[1];C(h===l.shape[2],()=>`Error in depthwiseConv2d: number of input channels (${h}) must match the inChannels dimension in filter ${l.shape[2]}.`),hn("depthwiseConv2d",s,i);const d={x:u,filter:l},p={strides:n,pad:s,dataFormat:r,dilations:o,dimRoundingMode:i},f=R.runKernel(Cp,d,p);return c?O(f,[f.shape[1],f.shape[2],f.shape[3]]):f}const Ic=D({depthwiseConv2d_:oL});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function iL(t){const n={x:I(t,"x","diag")};return R.runKernel(sx,n)}const aL=D({diag_:iL});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lL(t,e,n,s,r=[1,1],o="NHWC"){const i=I(t,"x","dilation2d"),a=I(e,"filter","dilation2d");C(i.rank===3||i.rank===4,()=>`Error in dilation2d: input must be rank 3 or 4, but got rank ${i.rank}.`),C(a.rank===3,()=>`Error in dilation2d: filter must be rank 3, but got rank ${a.rank}.`),C(o==="NHWC",()=>`Error in dilation2d: Only NHWC is currently supported, but got dataFormat of ${o}`);let l=i,u=!1;i.rank===3&&(l=O(i,[1,i.shape[0],i.shape[1],i.shape[2]]),u=!0),C(l.shape[3]===a.shape[2],()=>`Error in dilation2d:  input and filter must have the same depth: ${l.shape[3]} vs ${a.shape[2]}`);const c={x:l,filter:a},h={strides:n,pad:s,dilations:r},d=R.runKernel(Np,c,h);return u?O(d,[d.shape[1],d.shape[2],d.shape[3]]):d}const n$=D({dilation2d_:lL});/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Oa(t,e){const n=t.length,s=[];for(let r=0;r<n;r++){const o=n-1-r,i=t[o]||1;(e[e.length-1-r]||1)>1&&i===1&&s.unshift(o)}return s}function Rt(t,e){const n=[];for(let s=0;s<e.length;s++){const r=t[t.length-s-1],o=e.length-s-1,i=e[o];(r==null||r===1&&i>1)&&n.unshift(o)}return n}function we(t,e){const n=[],s=Math.max(t.length,e.length);for(let r=0;r<s;r++){let o=t[t.length-r-1];o==null&&(o=1);let i=e[e.length-r-1];if(i==null&&(i=1),o===1)n.unshift(i);else if(i===1)n.unshift(o);else if(o!==i){const a=`Operands could not be broadcast together with shapes ${t} and ${e}.`;throw Error(a)}else n.unshift(o)}return n}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function uL(t,e){let n=I(t,"a","equal","string_or_numeric"),s=I(e,"b","equal","string_or_numeric");[n,s]=gt(n,s),we(n.shape,s.shape);const r={a:n,b:s};return R.runKernel($p,r)}const Ys=D({equal_:uL});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cL(t,e,n){const s=I(e,"a","where"),r=I(n,"b","where"),o=I(t,"condition","where","bool"),i=we(we(o.shape,s.shape),r.shape),a=ba(o,i),l=ba(s,i),u=ba(r,i),c={condition:a,t:l,e:u};return R.runKernel(nf,c)}const vn=D({where_:cL});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hL(t){const n={x:I(t,"x","zerosLike")};return R.runKernel(hf,n)}const Re=D({zerosLike_:hL});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dL(t,e){let n=I(t,"a","div"),s=I(e,"b","div");[n,s]=gt(n,s);const r=pe(n,s),o=Re(r),i=Ys(s,o);return vn(i,o,r)}const s$=D({divNoNan_:dL});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pL(t,e){const n=I(t,"t1","dot"),s=I(e,"t2","dot");C((n.rank===1||n.rank===2)&&(s.rank===1||s.rank===2),()=>`Error in dot: inputs must all be rank 1 or 2, but got ranks ${n.rank} and ${s.rank}.`);const r=n.rank===1?n.size:n.shape[1],o=s.rank===1?s.size:s.shape[0];if(C(r===o,()=>`Error in dot: inner dimensions of inputs must match, but got ${r} and ${o}.`),n.rank===1&&s.rank===1){const i=O(n,[1,-1]),a=O(s,[-1,1]),l=Ie(i,a);return O(l,[])}else if(n.rank===1&&s.rank===2){const i=O(n,[1,-1]),a=O(s,[s.shape[0],s.shape[1]]),l=Ie(i,a);return O(l,[l.size])}else if(n.rank===2&&s.rank===1){const i=O(s,[-1,1]),a=Ie(n,i);return O(a,[a.size])}else{const i=O(s,[s.shape[0],s.shape[1]]);return Ie(n,i)}}const r$=D({dot_:pL});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fL(t,...e){const n=e.map((r,o)=>I(r,`tensors${o}`,"einsum")),s={equation:t};return R.runKernel(rx,n,s)}const mL=D({einsum_:fL});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gL(t){const n={x:I(t,"x","elu","float32")};return R.runKernel(Wu,n)}const Tc=D({elu_:gL});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yL(t){let e=I(t,"x","erf");C(e.dtype==="int32"||e.dtype==="float32",()=>"Input dtype must be `int32` or `float32`."),e.dtype==="int32"&&(e=ie(e,"float32"));const n={x:e};return R.runKernel(Uu,n)}const o$=D({erf_:yL});/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function n1(t,e){for(let n=0;n<t.length;++n)if(t[t.length-n-1]!==e-1-n)return!1;return!0}function i$(t,e,n){const s=t.length+e.length,r=[];let o=0,i=0;for(let a=0;a<s;a++)n.indexOf(a)===-1?r.push(t[o++]):r.push(e[i++]);return r}function Bt(t,e){const n=[],s=t.length;for(let o=0;o<s;o++)e.indexOf(o)===-1&&n.push(t[o]);const r=e.map(o=>t[o]);return[n,r]}function xt(t,e){const n=e.map(s=>1);return i$(t,n,e)}function Kt(t,e,n){C(n1(e,n),()=>`${t} supports only inner-most axes for now. Got axes ${e} and rank-${n} input.`)}function ut(t,e){if(n1(t,e))return null;const n=[];for(let s=0;s<e;++s)t.indexOf(s)===-1&&n.push(s);return t.forEach(s=>n.push(s)),n}function Bo(t){return t.map((e,n)=>[n,e]).sort((e,n)=>e[1]-n[1]).map(e=>e[0])}function bt(t,e){const n=[];for(let s=e-t;s<e;++s)n.push(s);return n}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xL(t,e=null,n=!1){const r={x:I(t,"x","max")},o={reductionIndices:e,keepDims:n};return R.runKernel(zp,r,o)}const $s=D({max_:xL});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bL(t,e=null,n=!1){const r={x:I(t,"x","min")},o={axis:e,keepDims:n};return R.runKernel(Wp,r,o)}const cu=D({min_:bL});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wL(t,e){let n=I(t,"base","pow"),s=I(e,"exp","pow");[n,s]=gt(n,s);const r={a:n,b:s};return R.runKernel(oc,r)}const $o=D({pow_:wL});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ge(t,e){if((Xs(t)&&e!=="string"||Array.isArray(t))&&e!=="complex64")throw new Error("Error creating a new Scalar: value must be a primitive (number|boolean|string)");if(e==="string"&&Xs(t)&&!(t instanceof Uint8Array))throw new Error("When making a scalar from encoded string, the value must be `Uint8Array`.");return zo(t,[],[],e)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vL(t){const n={x:I(t,"x","sqrt","float32")};return R.runKernel(yc,n)}const en=D({sqrt_:vL});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function kL(t){const e=I(t,"x","square"),n={};return R.runKernel("Square",{x:e},n)}const Ve=D({square_:kL});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function SL(t,e=null,n=!1){let s=I(t,"x","sum");s.dtype==="bool"&&(s=ie(s,"int32"));const r={x:s},o={axis:e,keepDims:n};return R.runKernel(rf,r,o)}const he=D({sum_:SL});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function CL(t,e="euclidean",n=null,s=!1){t=I(t,"x","norm");const r=a$(t,e,n);let o=r.shape;if(s){const i=$e(n,t.shape);o=xt(r.shape,i)}return O(r,o)}function a$(t,e,n=null){if(t.rank===0)return Nt(t);if(t.rank!==1&&n===null)return a$(O(t,[-1]),e,n);if(t.rank===1||typeof n=="number"||Array.isArray(n)&&n.length===1){if(e===1)return he(Nt(t),n);if(e===1/0)return $s(Nt(t),n);if(e===-1/0)return cu(Nt(t),n);if(e==="euclidean"||e===2)return en(he($o(Nt(t),ge(2,"int32")),n));throw new Error(`Error in norm: invalid ord value: ${e}`)}if(Array.isArray(n)&&n.length===2){if(e===1)return $s(he(Nt(t),n[0]),n[1]-1);if(e===1/0)return $s(he(Nt(t),n[1]),n[0]);if(e===-1/0)return cu(he(Nt(t),n[1]),n[0]);if(e==="fro"||e==="euclidean")return en(he(Ve(t),n));throw new Error(`Error in norm: invalid ord value: ${e}`)}throw new Error(`Error in norm: invalid axis: ${n}`)}const Ec=D({norm_:CL});/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function NL(t,e=null,n=!1){return Ec(t,"euclidean",e,n)}const l$=D({euclideanNorm_:NL});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $L(t){const n={x:I(t,"x","exp")};return R.runKernel(Gu,n)}const Zn=D({exp_:$L});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function IL(t,e=0){const n=I(t,"x","expandDims","string_or_numeric");C(e<=n.rank,()=>"Axis must be <= rank of the tensor");const s={input:n},r={dim:e};return R.runKernel(Ip,s,r)}const gn=D({expandDims_:IL});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function TL(t){const n={x:I(t,"x","expm1")};return R.runKernel(Hu,n)}const u$=D({expm1_:TL});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function EL(t,e){const n=I(t,"x","tile","string_or_numeric");C(n.rank===e.length,()=>`Error in transpose: rank of input ${n.rank} must match length of reps ${e}.`);const s={x:n},r={reps:e};return R.runKernel(kc,s,r)}const vs=D({tile_:EL});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function DL(t,e,n,s="float32"){e==null&&(e=t);const r=Ce([t,e],s),o=t<=e?t:e;for(let a=0;a<o;++a)r.set(1,a,a);const i=O(r.toTensor(),[t,e]);if(n==null)return i;if(n.length===1)return vs(gn(i,0),[n[0],1,1]);if(n.length===2)return vs(gn(gn(i,0),0),[n[0],n[1],1,1]);if(n.length===3)return vs(gn(gn(gn(i,0),0),0),[n[0],n[1],n[2],1,1]);throw new Error(`eye() currently supports only 1D and 2D batchShapes, but received ${n.length}D.`)}const s1=D({eye_:DL});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function RL(t){const n={x:I(t,"x","floor","float32")};return R.runKernel(ju,n)}const Dc=D({floor_:RL});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function AL(t,e,n=0,s=0){const r=I(t,"x","gather"),o=I(e,"indices","gather","int32"),i={x:r,indices:o},a={axis:n,batchDims:s};return R.runKernel(Ep,i,a)}const Rc=D({gather_:AL});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _L(t,e){let n=I(t,"a","greater","string_or_numeric"),s=I(e,"b","greater","string_or_numeric");[n,s]=gt(n,s),we(n.shape,s.shape);const r={a:n,b:s};return R.runKernel(Dp,r)}const Un=D({greater_:_L});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function OL(t,e){let n=I(t,"a","greaterEqual","string_or_numeric"),s=I(e,"b","greaterEqual","string_or_numeric");[n,s]=gt(n,s),we(n.shape,s.shape);const r={a:n,b:s};return R.runKernel(qu,r)}const Vo=D({greaterEqual_:OL});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function FL(t){const n={input:I(t,"input","imag")};return R.runKernel(hx,n)}const yf=D({imag_:FL});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function LL(t){const n={x:I(t,"x","isFinite")};return R.runKernel(Yu,n)}const c$=D({isFinite_:LL});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function PL(t){const n={x:I(t,"x","isInf")};return R.runKernel(Qu,n)}const h$=D({isInf_:PL});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zL(t){const n={x:I(t,"x","isNaN")};return R.runKernel(Zu,n)}const d$=D({isNaN_:zL});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ML(t,e=.2){const s={x:I(t,"x","leakyRelu")},r={alpha:e};return R.runKernel(Rp,s,r)}const xf=D({leakyRelu_:ML});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function BL(t,e){let n=I(t,"a","less","string_or_numeric"),s=I(e,"b","less","string_or_numeric");[n,s]=gt(n,s),we(n.shape,s.shape);const r={a:n,b:s};return R.runKernel(Ap,r)}const r1=D({less_:BL});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function VL(t,e){let n=I(t,"a","lessEqual","string_or_numeric"),s=I(e,"b","lessEqual","string_or_numeric");[n,s]=gt(n,s),we(n.shape,s.shape);const r={a:n,b:s};return R.runKernel(_p,r)}const Oi=D({lessEqual_:VL});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function WL(t,e,n){if(n<=0)throw new Error("The number of values should be positive.");const s={start:t,stop:e,num:n};return R.runKernel(dx,{},s)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function UL(t,e=5,n=1,s=1,r=.5){const o=I(t,"x","localResponseNormalization");C(o.rank===4||o.rank===3,()=>`Error in localResponseNormalization: x must be rank 3 or 4 but got
               rank ${o.rank}.`),C(Ea(e),()=>`Error in localResponseNormalization: depthRadius must be an integer but got depthRadius ${e}.`);let i=o,a=!1;o.rank===3&&(a=!0,i=O(o,[1,o.shape[0],o.shape[1],o.shape[2]]));const l={x:i},u={depthRadius:e,bias:n,alpha:s,beta:r},c=R.runKernel(Pp,l,u);return a?O(c,[c.shape[1],c.shape[2],c.shape[3]]):c}const p$=D({localResponseNormalization_:UL});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function GL(t){const n={x:I(t,"x","log","float32")};return R.runKernel(Ju,n)}const Jn=D({log_:GL});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function HL(t){const n={x:I(t,"x","log1p")};return R.runKernel(ec,n)}const bf=D({log1p_:HL});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jL(t,e){C(Gg(t),()=>"The f passed in variableGrads(f) must be a function"),C(e==null||Array.isArray(e)&&e.every(u=>u instanceof Cd),()=>"The varList passed in variableGrads(f, varList) must be an array of variables");const n=e!=null;if(!n){e=[];for(const u in R.registeredVariables)e.push(R.registeredVariables[u])}const s=n?e.filter(u=>!u.trainable):null,r=e.length;e=e.filter(u=>u.trainable),C(e.length>0,()=>`variableGrads() expects at least one of the input variables to be trainable, but none of the ${r} variables is trainable.`);const o=!0,{value:i,grads:a}=R.gradients(t,e,null,o);C(a.some(u=>u!=null),()=>"Cannot find a connection between any variable and the result of the loss function y=f(x). Please make sure the operations that use variables are inside the function f passed to minimize()."),C(i.rank===0,()=>`The f passed in variableGrads(f) must return a scalar, but it returned a rank-${i.rank} tensor`);const l={};return e.forEach((u,c)=>{a[c]!=null&&(l[u.name]=a[c])}),s!=null&&s.forEach(u=>l[u.name]=null),{value:i,grads:l}}function zr(t){return R.customGrad(t)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function KL(t){const n={x:I(t,"x","neg")};return R.runKernel(Gp,n)}const st=D({neg_:KL});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qL(t){const n={x:I(t,"x","softplus")};return R.runKernel(gc,n)}const Qa=D({softplus_:qL});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function XL(t){const e=I(t,"x","logSigmoid");return zr(s=>({value:st(Qa(st(s))),gradFunc:i=>A(i,fr(st(s)))}))(e)}const f$=D({logSigmoid_:XL});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function YL(t,e){let n=I(t,"a","sub"),s=I(e,"b","sub");[n,s]=gt(n,s);const r={a:n,b:s};return R.runKernel(bc,r)}const le=D({sub_:YL});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function QL(t,e=-1){const n=I(t,"logits","logSoftmax");if(e===-1&&(e=n.rank-1),e!==n.rank-1)throw Error(`Log Softmax along a non-last dimension is not yet supported. Logits was rank ${n.rank} and axis was ${e}`);return zr((r,o)=>{const a=$s(r,e,!0),l=le(r,a),u=le(ie(l,"float32"),Jn(he(Zn(l),e,!0)));return o([u]),{value:u,gradFunc:(h,d)=>{const[p]=d,f=!0,m=Zn(p);return le(h,A(he(h,e,f),m))}}})(n)}const o1=D({logSoftmax_:QL});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ZL(t,e=null,n=!1){const s=I(t,"x","logSumExp"),r=$e(e,s.shape),o=$s(s,r,!0),i=le(s,o),a=Zn(i),l=he(a,r),u=Jn(l),c=Q(O(o,u.shape),u);if(n){const h=xt(c.shape,r);return O(c,h)}return c}const i1=D({logSumExp_:ZL});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function JL(t,e){const n=I(t,"a","logicalAnd","bool"),s=I(e,"b","logicalAnd","bool");we(n.shape,s.shape);const r={a:n,b:s};return R.runKernel(Op,r)}const xr=D({logicalAnd_:JL});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function e3(t){const n={x:I(t,"x","logicalNot","bool")};return R.runKernel(Fp,n)}const wf=D({logicalNot_:e3});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function t3(t,e){const n=I(t,"a","logicalOr","bool"),s=I(e,"b","logicalOr","bool");we(n.shape,s.shape);const r={a:n,b:s};return R.runKernel(Lp,r)}const a1=D({logicalOr_:t3});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function n3(t,e){const n=I(t,"a","logicalXor","bool"),s=I(e,"b","logicalXor","bool");return we(n.shape,s.shape),xr(a1(t,e),wf(xr(t,e)))}const m$=D({logicalXor_:n3});/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const bh=2147483648;function s3(t,e,n="left"){const s=I(t,"sortedSequence","searchSorted"),r=I(e,"values","searchSorted"),o=s.shape[s.shape.length-1],i=r.shape[r.shape.length-1],a=O(s,[-1,o]),l=O(r,[-1,i]);if(a.rank<2)throw new Error("Sorted input argument must be at least 2-dimensional");if(a.shape[0]!==l.shape[0])throw new Error("Leading dimension of 'sortedSequence' and 'values' must match.");if(H(l.shape)>=bh)throw new Error(`values tensor size must less than ${bh}`);if(a.shape[1]>=bh)throw new Error(`trailing dim_size must less than ${bh} for int32 output type, was ${a.shape[1]}`);const u={sortedSequence:a,values:l},c={side:n};return R.runKernel(Ex,u,c)}const l1=D({searchSorted_:s3});/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function r3(t,e){return l1(t,e,"left")}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function o3(t,e,n,s,r){const o=I(t,"x","maxPool"),i=1;let a=o,l=!1;o.rank===3&&(l=!0,a=O(o,[1,o.shape[0],o.shape[1],o.shape[2]])),C(a.rank===4,()=>`Error in maxPool: input must be rank 4 but got rank ${a.rank}.`),C(jt(n,i),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${n} and dilations '${i}'`),hn("maxPool",s,r);const u={x:a},c={filterSize:e,strides:n,pad:s,dimRoundingMode:r},h=R.runKernel(Mp,u,c);return l?O(h,[h.shape[1],h.shape[2],h.shape[3]]):h}const vf=D({maxPool_:o3});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function i3(t,e=[1,1,1],n,s,r,o="NDHWC"){const i=I(t,"x","maxPool3d");let a=i,l=!1;i.rank===4&&(l=!0,a=O(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),C(a.rank===5,()=>`Error in maxPool3d: x must be rank 5 but got rank ${a.rank}.`),C(o==="NDHWC",()=>`Error in maxPool3d: Only NDHWC is currently supported, but got dataFormat of ${o}`),hn("maxPool3d",s,r);const u={x:a},c={filterSize:e,strides:n,pad:s,dimRoundingMode:r,dataFormat:o},h=R.runKernel(Bp,u,c);return l?O(h,[h.shape[1],h.shape[2],h.shape[3],h.shape[4]]):h}const g$=D({maxPool3d_:i3});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function a3(t,e,n,s,r=!1){const i={x:I(t,"x","maxPoolWithArgmax")},a={filterSize:e,strides:n,pad:s,includeBatchInIndex:r},l=R.runKernel(gx,i,a);return{result:l[0],indexes:l[1]}}const l3=D({maxPoolWithArgmax_:a3});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function u3(t,e){let n=I(t,"a","maximum"),s=I(e,"b","maximum");[n,s]=gt(n,s),n.dtype==="bool"&&(n=ie(n,"int32"),s=ie(s,"int32")),we(n.shape,s.shape);const r={a:n,b:s};return R.runKernel(tc,r)}const Ur=D({maximum_:u3});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function c3(t,e=null,n=!1){const r={x:I(t,"x","mean")},o={axis:e,keepDims:n};return R.runKernel(Vp,r,o)}const dt=D({mean_:c3});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function kt(t,e="float32"){if(rs(t),e==="complex64"){const s=kt(t,"float32"),r=kt(t,"float32");return So(s,r)}const n=Jt(H(t),e);return R.makeTensor(n,t,e)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function An(t,e="float32"){if(rs(t),e==="complex64"){const s=An(t,"float32"),r=kt(t,"float32");return So(s,r)}const n=M0(H(t),e);return R.makeTensor(n,t,e)}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function h3(t,e,{indexing:n="xy"}={}){if(n!=="xy"&&n!=="ij")throw new TypeError(`${n} is not a valid third argument to meshgrid`);if(t===void 0)return[];let s=I(t,"x","meshgrid",t instanceof et?t.dtype:"float32");if(e===void 0)return[s];let r=I(e,"y","meshgrid",e instanceof et?e.dtype:"float32");const o=H(s.shape),i=H(r.shape);return n==="xy"?(s=O(s,[1,-1]),r=O(r,[-1,1]),[Ie(An([i,1],s.dtype),s),Ie(r,An([1,o],r.dtype))]):(s=O(s,[-1,1]),r=O(r,[1,-1]),[Ie(s,An([1,i],s.dtype)),Ie(An([o,1],r.dtype),r)])}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function d3(t,e){let n=I(t,"a","minimum"),s=I(e,"b","minimum");[n,s]=gt(n,s),n.dtype==="bool"&&(n=ie(n,"int32"),s=ie(s,"int32")),we(n.shape,s.shape);const r={a:n,b:s};return R.runKernel(nc,r)}const Ac=D({minimum_:d3});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function p3(t,e,n){C(n==="reflect"||n==="symmetric",()=>`Invalid mode. Mode must be either reflect or symmetric. Got ${n}.`);const s=I(t,"x","mirrorPad");if(s.rank===0)throw new Error("mirrorPad(scalar) is not defined. Pass non-scalar to mirrorPad");C(e.length===s.rank,()=>`Padding doesn't match input. Must be ${s.rank}. Got ${e.length}.`);const r=n==="reflect"?1:0;for(let a=0;a<s.rank;a++)C(e[a].length===2,()=>"Invalid number of paddings. Must be length of 2 each."),C(e[a][0]>=0&&e[a][0]<=s.shape[a]-r&&e[a][1]>=0&&e[a][1]<=s.shape[a]-r,()=>`Padding in dimension ${a} cannot be greater than or equal to ${s.shape[a]-r} or less than 0 for input of shape ${s.shape}`);const o={paddings:e,mode:n},i={x:s};return R.runKernel(Up,i,o)}const y$=D({mirrorPad_:p3});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function f3(t,e){let n=I(t,"a","mod"),s=I(e,"b","mod");[n,s]=gt(n,s);const r={a:n,b:s};return R.runKernel(sc,r)}const x$=D({mod_:f3});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function m3(t,e=null,n=!1){t=I(t,"x","moments");const s=$e(e,t.shape),r=dt(t,s,n);let o=r.shape;n||(o=xt(r.shape,s));const i=Ve(le(ie(t,"float32"),O(r,o))),a=dt(i,s,n);return{mean:r,variance:a}}const kf=D({moments_:m3});function g3(t,e,n,s){const r=I(e,"data","multiRNNCell"),o=Nd(n,"c","multiRNNCell"),i=Nd(s,"h","multiRNNCell");let a=r;const l=[];for(let h=0;h<t.length;h++){const d=t[h](a,o[h],i[h]);l.push(d[0]),l.push(d[1]),a=d[1]}const u=[],c=[];for(let h=0;h<l.length;h+=2)u.push(l[h]),c.push(l[h+1]);return[u,c]}const y3=D({multiRNNCell_:g3});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function x3(t,e,n,s=!1){const r=I(t,"logits","multinomial"),o=r.size,i=r.rank;if(o<2)throw new Error(`Error in multinomial: you need at least 2 outcomes, but got ${o}.`);if(i>2)throw new Error(`Rank of probabilities must be 1 or 2, but is ${i}`);n=n||Math.random();const l={logits:i===1?O(r,[1,-1]):r},u={numSamples:e,seed:n,normalized:s},c=R.runKernel(yx,l,u);return i===1?O(c,[c.size]):c}const b3=D({multinomial_:x3});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function w3(t,e){let n=I(t,"a","notEqual","string_or_numeric"),s=I(e,"b","notEqual","string_or_numeric");[n,s]=gt(n,s),we(n.shape,s.shape);const r={a:n,b:s};return R.runKernel(Hp,r)}const Fa=D({notEqual_:w3});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function v3(t,e,n=1,s=0,r="int32"){if(e<2)throw new Error(`Error in oneHot: depth must be >=2, but it is ${e}`);const i={indices:I(t,"indices","oneHot","int32")},a={dtype:r,depth:e,onValue:n,offValue:s};return R.runKernel(Kp,i,a)}const u1=D({oneHot_:v3});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function k3(t){const n={x:I(t,"x","onesLike")};return R.runKernel(jp,n)}const es=D({onesLike_:k3});function S3(t,e){const n=I(t,"v1","outerProduct"),s=I(e,"v2","outerProduct");C(n.rank===1&&s.rank===1,()=>`Error in outerProduct: inputs must be rank 1, but got ranks ${n.rank} and ${s.rank}.`);const r=O(n,[-1,1]),o=O(s,[1,-1]);return Ie(r,o)}const C3=D({outerProduct_:S3});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function N3(t,e,n=0){const s=I(t,"x","pad");if(s.rank===0)throw new Error("pad(scalar) is not defined. Pass non-scalar to pad");const r={paddings:e,constantValue:n},o={x:s};return R.runKernel(Xp,o,r)}const Wo=D({pad_:N3});function $3(t,e,n=0){return C(e.length===2,()=>"Invalid number of paddings. Must be length of 2."),Wo(t,[e],n)}const I3=D({pad1d_:$3});function T3(t,e,n=0){return C(e.length===2&&e[0].length===2&&e[1].length===2,()=>"Invalid number of paddings. Must be length of 2 each."),Wo(t,e,n)}const E3=D({pad2d_:T3});function D3(t,e,n=0){return C(e.length===3&&e[0].length===2&&e[1].length===2&&e[2].length===2,()=>"Invalid number of paddings. Must be length of 2 each."),Wo(t,e,n)}const R3=D({pad3d_:D3});function A3(t,e,n=0){return C(e.length===4&&e[0].length===2&&e[1].length===2&&e[2].length===2&&e[3].length===2,()=>"Invalid number of paddings. Must be length of 2 each."),Wo(t,e,n)}const _3=D({pad4d_:A3});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function O3(t,e,n){const s=I(t,"x","spaceToBatchND");C(s.rank>=1+e.length,()=>`input rank ${s.rank} should be > than [blockShape] ${e.length}`),C(n.length===e.length,()=>`paddings.shape[0] ${n.length} must be equal to [blockShape] ${e.length}`),C(s.shape.reduce((i,a,l)=>l>0&&l<=e.length?i&&(a+n[l-1][0]+n[l-1][1])%e[l-1]===0:i,!0),()=>`input spatial dimensions ${s.shape.slice(1)} with paddings ${n.toString()} must be divisible by blockShapes ${e.toString()}`);const r={x:s},o={blockShape:e,paddings:n};return R.runKernel(of,r,o)}const Sf=D({spaceToBatchND_:O3});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function F3(t,e,n,s,r,o,i){r==null&&(r=[1,1]),o==null&&(o=1),s===0&&(s="valid");const a=I(t,"x","maxPool");let l=a,u=!1;a.rank===3&&(u=!0,l=O(a,[1,a.shape[0],a.shape[1],a.shape[2]])),C(jt(o,r),()=>`Error in pool: Either strides or dilations must be 1. Got strides ${o} and dilations '${r}'`);const c=Rs(l.shape,e,o,r,s),h=[c.dilationHeight,c.dilationWidth];let d;s==="same"?d=P3([c.filterHeight,c.filterWidth],h):d=[[0,0],[0,0]];const p=h[0]===1&&h[1]===1,[f,m]=L3([c.inHeight,c.inWidth],h,d),y=p?s:"valid",g=p?l:Sf(l,h,f),b=(n==="avg"?()=>ff(g,e,o,y,i):()=>vf(g,e,o,y,i))(),w=p?b:mf(b,h,m);return u?O(w,[w.shape[1],w.shape[2],w.shape[3]]):w}function L3(t,e,n){const s=n.map(c=>c[0]),r=n.map(c=>c[1]),o=t.concat(s,r),i=e.map((c,h)=>(c-o[h]%c)%c),a=r.map((c,h)=>c+i[h]),l=e.map((c,h)=>[s[h],a[h]]),u=e.map((c,h)=>[0,i[h]]);return[l,u]}function P3(t,e){const s=t.map((i,a)=>i+(i-1)*(e[a]-1)).map(i=>i-1),r=s.map(i=>Math.floor(i/2)),o=s.map((i,a)=>i-r[a]);return s.map((i,a)=>[r[a],o[a]])}const b$=D({pool_:F3});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function z3(t,e){const n=I(t,"x","prelu"),s=I(e,"alpha","prelu"),r={x:n,alpha:s};return R.runKernel(Yp,r)}const Cf=D({prelu_:z3});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function M3(t,e=null,n=!1){let s=I(t,"x","prod");s.dtype==="bool"&&(s=ie(s,"int32"));const r={x:s},o={axis:e,keepDims:n};return R.runKernel(Qp,r,o)}const w$=D({prod_:M3});/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function B3(t,e,n,s){const r=t.map((c,h)=>I(c,`tensors${h}`,"raggedGather","int32")),o=I(e,"paramsDenseValues","raggedGather"),i=I(n,"indices","raggedGather","int32"),a={paramsNestedSplits:r,paramsDenseValues:o,indices:i},l={outputRaggedRank:s},u=R.runKernel(vx,a,l);return{outputNestedSplits:u.slice(0,u.length-1),outputDenseValues:u[u.length-1]}}const V3=D({raggedGather_:B3});/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function W3(t,e,n){const s=I(t,"starts","raggedRange"),r=I(e,"limits","raggedRange",s.dtype),o=I(n,"deltas","raggedRange",s.dtype),i={starts:s,limits:r,deltas:o},a=R.runKernel(kx,i);return{rtNestedSplits:a[0],rtDenseValues:a[1]}}const U3=D({raggedRange_:W3});/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function G3(t,e,n,s,r){const o=I(t,"shape","raggedTensorToTensor","int32"),i=I(e,"values","raggedTensorToTensor"),a=I(n,"defaultValue","raggedTensorToTensor",i.dtype),l=s.map((h,d)=>I(h,`tensors${d}`,"raggedTensorToTensor","int32")),u={shape:o,values:i,defaultValue:a,rowPartitionTensors:l},c={rowPartitionTypes:r};return R.runKernel(Sx,u,c)}const H3=D({raggedTensorToTensor_:G3});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function j3(t,e,n){rs(t);const s=H(t);let r=null;if(n==null||n==="float32")r=new Float32Array(s);else if(n==="int32")r=new Int32Array(s);else if(n==="bool")r=new Uint8Array(s);else throw new Error(`Unknown data type ${n}`);for(let o=0;o<s;o++)r[o]=e();return R.makeTensor(r,t,n)}const K3=D({rand_:j3});var v$={exports:{}};(function(t){(function(e,n,s){function r(l){var u=this,c=a();u.next=function(){var h=2091639*u.s0+u.c*23283064365386963e-26;return u.s0=u.s1,u.s1=u.s2,u.s2=h-(u.c=h|0)},u.c=1,u.s0=c(" "),u.s1=c(" "),u.s2=c(" "),u.s0-=c(l),u.s0<0&&(u.s0+=1),u.s1-=c(l),u.s1<0&&(u.s1+=1),u.s2-=c(l),u.s2<0&&(u.s2+=1),c=null}function o(l,u){return u.c=l.c,u.s0=l.s0,u.s1=l.s1,u.s2=l.s2,u}function i(l,u){var c=new r(l),h=u&&u.state,d=c.next;return d.int32=function(){return c.next()*4294967296|0},d.double=function(){return d()+(d()*2097152|0)*11102230246251565e-32},d.quick=d,h&&(typeof h=="object"&&o(h,c),d.state=function(){return o(c,{})}),d}function a(){var l=4022871197,u=function(c){c=String(c);for(var h=0;h<c.length;h++){l+=c.charCodeAt(h);var d=.02519603282416938*l;l=d>>>0,d-=l,d*=l,l=d>>>0,d-=l,l+=d*4294967296}return(l>>>0)*23283064365386963e-26};return u}n&&n.exports?n.exports=i:s&&s.amd?s(function(){return i}):this.alea=i})(Ei,t,!1)})(v$);var k$={exports:{}};(function(t){(function(e,n,s){function r(a){var l=this,u="";l.x=0,l.y=0,l.z=0,l.w=0,l.next=function(){var h=l.x^l.x<<11;return l.x=l.y,l.y=l.z,l.z=l.w,l.w^=l.w>>>19^h^h>>>8},a===(a|0)?l.x=a:u+=a;for(var c=0;c<u.length+64;c++)l.x^=u.charCodeAt(c)|0,l.next()}function o(a,l){return l.x=a.x,l.y=a.y,l.z=a.z,l.w=a.w,l}function i(a,l){var u=new r(a),c=l&&l.state,h=function(){return(u.next()>>>0)/4294967296};return h.double=function(){do var d=u.next()>>>11,p=(u.next()>>>0)/4294967296,f=(d+p)/(1<<21);while(f===0);return f},h.int32=u.next,h.quick=h,c&&(typeof c=="object"&&o(c,u),h.state=function(){return o(u,{})}),h}n&&n.exports?n.exports=i:s&&s.amd?s(function(){return i}):this.xor128=i})(Ei,t,!1)})(k$);var S$={exports:{}};(function(t){(function(e,n,s){function r(a){var l=this,u="";l.next=function(){var h=l.x^l.x>>>2;return l.x=l.y,l.y=l.z,l.z=l.w,l.w=l.v,(l.d=l.d+362437|0)+(l.v=l.v^l.v<<4^(h^h<<1))|0},l.x=0,l.y=0,l.z=0,l.w=0,l.v=0,a===(a|0)?l.x=a:u+=a;for(var c=0;c<u.length+64;c++)l.x^=u.charCodeAt(c)|0,c==u.length&&(l.d=l.x<<10^l.x>>>4),l.next()}function o(a,l){return l.x=a.x,l.y=a.y,l.z=a.z,l.w=a.w,l.v=a.v,l.d=a.d,l}function i(a,l){var u=new r(a),c=l&&l.state,h=function(){return(u.next()>>>0)/4294967296};return h.double=function(){do var d=u.next()>>>11,p=(u.next()>>>0)/4294967296,f=(d+p)/(1<<21);while(f===0);return f},h.int32=u.next,h.quick=h,c&&(typeof c=="object"&&o(c,u),h.state=function(){return o(u,{})}),h}n&&n.exports?n.exports=i:s&&s.amd?s(function(){return i}):this.xorwow=i})(Ei,t,!1)})(S$);var C$={exports:{}};(function(t){(function(e,n,s){function r(a){var l=this;l.next=function(){var c=l.x,h=l.i,d,p;return d=c[h],d^=d>>>7,p=d^d<<24,d=c[h+1&7],p^=d^d>>>10,d=c[h+3&7],p^=d^d>>>3,d=c[h+4&7],p^=d^d<<7,d=c[h+7&7],d=d^d<<13,p^=d^d<<9,c[h]=p,l.i=h+1&7,p};function u(c,h){var d,p=[];if(h===(h|0))p[0]=h;else for(h=""+h,d=0;d<h.length;++d)p[d&7]=p[d&7]<<15^h.charCodeAt(d)+p[d+1&7]<<13;for(;p.length<8;)p.push(0);for(d=0;d<8&&p[d]===0;++d);for(d==8?p[7]=-1:p[d],c.x=p,c.i=0,d=256;d>0;--d)c.next()}u(l,a)}function o(a,l){return l.x=a.x.slice(),l.i=a.i,l}function i(a,l){a==null&&(a=+new Date);var u=new r(a),c=l&&l.state,h=function(){return(u.next()>>>0)/4294967296};return h.double=function(){do var d=u.next()>>>11,p=(u.next()>>>0)/4294967296,f=(d+p)/(1<<21);while(f===0);return f},h.int32=u.next,h.quick=h,c&&(c.x&&o(c,u),h.state=function(){return o(u,{})}),h}n&&n.exports?n.exports=i:s&&s.amd?s(function(){return i}):this.xorshift7=i})(Ei,t,!1)})(C$);var N$={exports:{}};(function(t){(function(e,n,s){function r(a){var l=this;l.next=function(){var c=l.w,h=l.X,d=l.i,p,f;return l.w=c=c+1640531527|0,f=h[d+34&127],p=h[d=d+1&127],f^=f<<13,p^=p<<17,f^=f>>>15,p^=p>>>12,f=h[d]=f^p,l.i=d,f+(c^c>>>16)|0};function u(c,h){var d,p,f,m,y,g=[],x=128;for(h===(h|0)?(p=h,h=null):(h=h+"\0",p=0,x=Math.max(x,h.length)),f=0,m=-32;m<x;++m)h&&(p^=h.charCodeAt((m+32)%h.length)),m===0&&(y=p),p^=p<<10,p^=p>>>15,p^=p<<4,p^=p>>>13,m>=0&&(y=y+1640531527|0,d=g[m&127]^=p+y,f=d==0?f+1:0);for(f>=128&&(g[(h&&h.length||0)&127]=-1),f=127,m=4*128;m>0;--m)p=g[f+34&127],d=g[f=f+1&127],p^=p<<13,d^=d<<17,p^=p>>>15,d^=d>>>12,g[f]=p^d;c.w=y,c.X=g,c.i=f}u(l,a)}function o(a,l){return l.i=a.i,l.w=a.w,l.X=a.X.slice(),l}function i(a,l){a==null&&(a=+new Date);var u=new r(a),c=l&&l.state,h=function(){return(u.next()>>>0)/4294967296};return h.double=function(){do var d=u.next()>>>11,p=(u.next()>>>0)/4294967296,f=(d+p)/(1<<21);while(f===0);return f},h.int32=u.next,h.quick=h,c&&(c.X&&o(c,u),h.state=function(){return o(u,{})}),h}n&&n.exports?n.exports=i:s&&s.amd?s(function(){return i}):this.xor4096=i})(Ei,t,!1)})(N$);var $$={exports:{}};(function(t){(function(e,n,s){function r(a){var l=this,u="";l.next=function(){var h=l.b,d=l.c,p=l.d,f=l.a;return h=h<<25^h>>>7^d,d=d-p|0,p=p<<24^p>>>8^f,f=f-h|0,l.b=h=h<<20^h>>>12^d,l.c=d=d-p|0,l.d=p<<16^d>>>16^f,l.a=f-h|0},l.a=0,l.b=0,l.c=-1640531527,l.d=1367130551,a===Math.floor(a)?(l.a=a/4294967296|0,l.b=a|0):u+=a;for(var c=0;c<u.length+20;c++)l.b^=u.charCodeAt(c)|0,l.next()}function o(a,l){return l.a=a.a,l.b=a.b,l.c=a.c,l.d=a.d,l}function i(a,l){var u=new r(a),c=l&&l.state,h=function(){return(u.next()>>>0)/4294967296};return h.double=function(){do var d=u.next()>>>11,p=(u.next()>>>0)/4294967296,f=(d+p)/(1<<21);while(f===0);return f},h.int32=u.next,h.quick=h,c&&(typeof c=="object"&&o(c,u),h.state=function(){return o(u,{})}),h}n&&n.exports?n.exports=i:s&&s.amd?s(function(){return i}):this.tychei=i})(Ei,t,!1)})($$);var I$={exports:{}};const q3={},X3=Object.freeze(Object.defineProperty({__proto__:null,default:q3},Symbol.toStringTag,{value:"Module"})),Y3=hR(X3);(function(t){(function(e,n,s){var r=256,o=6,i=52,a="random",l=s.pow(r,o),u=s.pow(2,i),c=u*2,h=r-1,d;function p(w,k,S){var N=[];k=k==!0?{entropy:!0}:k||{};var $=g(y(k.entropy?[w,b(n)]:w==null?x():w,3),N),T=new f(N),E=function(){for(var F=T.g(o),M=l,B=0;F<u;)F=(F+B)*r,M*=r,B=T.g(1);for(;F>=c;)F/=2,M/=2,B>>>=1;return(F+B)/M};return E.int32=function(){return T.g(4)|0},E.quick=function(){return T.g(4)/4294967296},E.double=E,g(b(T.S),n),(k.pass||S||function(F,M,B,V){return V&&(V.S&&m(V,T),F.state=function(){return m(T,{})}),B?(s[a]=F,M):F})(E,$,"global"in k?k.global:this==s,k.state)}function f(w){var k,S=w.length,N=this,$=0,T=N.i=N.j=0,E=N.S=[];for(S||(w=[S++]);$<r;)E[$]=$++;for($=0;$<r;$++)E[$]=E[T=h&T+w[$%S]+(k=E[$])],E[T]=k;(N.g=function(F){for(var M,B=0,V=N.i,W=N.j,G=N.S;F--;)M=G[V=h&V+1],B=B*r+G[h&(G[V]=G[W=h&W+M])+(G[W]=M)];return N.i=V,N.j=W,B})(r)}function m(w,k){return k.i=w.i,k.j=w.j,k.S=w.S.slice(),k}function y(w,k){var S=[],N=typeof w,$;if(k&&N=="object")for($ in w)try{S.push(y(w[$],k-1))}catch{}return S.length?S:N=="string"?w:w+"\0"}function g(w,k){for(var S=w+"",N,$=0;$<S.length;)k[h&$]=h&(N^=k[h&$]*19)+S.charCodeAt($++);return b(k)}function x(){try{var w;return d&&(w=d.randomBytes)?w=w(r):(w=new Uint8Array(r),(e.crypto||e.msCrypto).getRandomValues(w)),b(w)}catch{var k=e.navigator,S=k&&k.plugins;return[+new Date,e,S,e.screen,b(n)]}}function b(w){return String.fromCharCode.apply(0,w)}if(g(s.random(),n),t.exports){t.exports=p;try{d=Y3}catch{}}else s["seed"+a]=p})(typeof self<"u"?self:Ei,[],Math)})(I$);var Q3=v$.exports,Z3=k$.exports,J3=S$.exports,eP=C$.exports,tP=N$.exports,nP=$$.exports,Fi=I$.exports;Fi.alea=Q3;Fi.xor128=Z3;Fi.xorwow=J3;Fi.xorshift7=eP;Fi.xor4096=tP;Fi.tychei=nP;var Nf=Fi;/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class c1{constructor(e,n,s,r,o){this.mean=e,this.stdDev=n,this.dtype=s,this.nextVal=NaN,this.truncated=r,this.truncated&&(this.upper=this.mean+this.stdDev*2,this.lower=this.mean-this.stdDev*2);const i=o||Math.random();this.random=Nf.alea(i.toString())}nextValue(){if(!isNaN(this.nextVal)){const r=this.nextVal;return this.nextVal=NaN,r}let e,n,s=!1;for(;!s;){let r,o,i;do r=2*this.random()-1,o=2*this.random()-1,i=r*r+o*o;while(i>=1||i===0);const a=Math.sqrt(-2*Math.log(i)/i);e=this.mean+this.stdDev*r*a,n=this.mean+this.stdDev*o*a,(!this.truncated||this.isValidTruncated(e))&&(s=!0)}return(!this.truncated||this.isValidTruncated(n))&&(this.nextVal=this.convertValue(n)),this.convertValue(e)}convertValue(e){return this.dtype==null||this.dtype==="float32"?e:Math.round(e)}isValidTruncated(e){return e<=this.upper&&e>=this.lower}}class sP{constructor(e,n,s,r){this.alpha=e,this.beta=1/n,this.dtype=s;const o=r||Math.random();this.randu=Nf.alea(o.toString()),this.randn=new c1(0,1,s,!1,this.randu()),e<1?this.d=e+2/3:this.d=e-1/3,this.c=1/Math.sqrt(9*this.d)}nextValue(){let e,n,s,r,o,i;for(;;){do r=this.randn.nextValue(),i=1+this.c*r;while(i<=0);if(i*=i*i,e=r*r,n=1-.331*e*e,s=.5*e+this.d*(1-i+Math.log(i)),o=this.randu(),o<n||Math.log(o)<s)break}return i=1/this.beta*this.d*i,this.alpha<1&&(i*=Math.pow(this.randu(),1/this.alpha)),this.convertValue(i)}convertValue(e){return this.dtype==="float32"?e:Math.round(e)}}class rP{constructor(e=0,n=1,s,r){if(this.canReturnFloat=()=>this.dtype==null||this.dtype==="float32",this.min=e,this.range=n-e,this.dtype=s,r==null&&(r=Math.random()),typeof r=="number"&&(r=r.toString()),!this.canReturnFloat()&&this.range<=1)throw new Error(`The difference between ${e} - ${n} <= 1 and dtype is not float`);this.random=Nf.alea(r)}convertValue(e){return this.canReturnFloat()?e:Math.round(e)}nextValue(){return this.convertValue(this.min+this.range*this.random())}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function oP(t,e,n=1,s="float32",r){if(rs(t),n==null&&(n=1),s==null&&(s="float32"),s!=="float32"&&s!=="int32")throw new Error(`Unsupported data type ${s}`);const o=new sP(e,n,s,r),i=Ce(t,s);for(let a=0;a<i.values.length;a++)i.values[a]=o.nextValue();return i.toTensor()}const iP=D({randomGamma_:oP});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function aP(t,e=0,n=1,s,r){if(rs(t),s!=null&&s==="bool")throw new Error(`Unsupported data type ${s}`);const o=new c1(e,n,s,!1,r),i=Ce(t,s);for(let a=0;a<i.values.length;a++)i.values[a]=o.nextValue();return i.toTensor()}const h1=D({randomNormal_:aP});/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lP(t,e,n){if(e!=null&&e==="bool")throw new Error(`Unsupported data type ${e}`);return h1(t,0,1,e,n)}const uP=D({randomStandardNormal_:lP});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cP(t,e=0,n=1,s="float32",r){rs(t);const o=Ce(t,s),i=new rP(e,n,null,r);for(let a=0;a<o.values.length;a++)o.values[a]=i.nextValue();return o.toTensor()}const _c=D({randomUniform_:cP});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function La(t,e,n=1,s="float32"){if(n===0)throw new Error("Cannot have a step of zero");const r={start:t,stop:e,step:n,dtype:s};return R.runKernel(Cx,{},r)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hP(t){const n={input:I(t,"input","real")};return R.runKernel(Nx,n)}const hu=D({real_:hP});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dP(t){const n={x:I(t,"x","reciprocal")};return R.runKernel(ic,n)}const T$=D({reciprocal_:dP});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pP(t){const n={x:I(t,"x","relu")};return R.runKernel(ac,n)}const wr=D({relu_:pP});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fP(t){const n={x:I(t,"x","relu6")};return R.runKernel(lc,n)}const d1=D({relu6_:fP});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mP(t,e){const s={x:I(t,"x","reverse")},r={dims:e};return R.runKernel(tf,s,r)}const Es=D({reverse_:mP});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gP(t){const e=I(t,"x","reverse");return C(e.rank===1,()=>`Error in reverse1D: x must be rank 1 but got rank ${e.rank}.`),Es(e,0)}const yP=D({reverse1d_:gP});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xP(t,e){const n=I(t,"x","reverse");return C(n.rank===2,()=>`Error in reverse2D: x must be rank 2 but got rank ${n.rank}.`),Es(n,e)}const bP=D({reverse2d_:xP});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wP(t,e){const n=I(t,"x","reverse");return C(n.rank===3,()=>`Error in reverse3D: x must be rank 3 but got rank ${n.rank}.`),Es(n,e)}const vP=D({reverse3d_:wP});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function kP(t,e){const n=I(t,"x","reverse");return C(n.rank===4,()=>`Error in reverse4D: x must be rank 4 but got rank ${n.rank}.`),Es(n,e)}const SP=D({reverse4d_:kP});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function CP(t){const n={x:I(t,"x","round")};return R.runKernel(uc,n)}const p1=D({round_:CP});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function NP(t){const n={x:I(t,"x","rsqrt","float32")};return R.runKernel(cc,n)}const f1=D({rsqrt_:NP});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $P(t){const n={x:I(t,"x","selu")};return R.runKernel(hc,n)}const m1=D({selu_:$P});function IP(t,e,n,s,r,o=[1,1],i="NHWC"){const a=I(t,"x","separableConv2d"),l=I(e,"depthwiseFilter","separableConv2d"),u=I(n,"pointwiseFilter","separableConv2d");let c=a,h=!1;if(a.rank===3&&(h=!0,c=O(a,[1,a.shape[0],a.shape[1],a.shape[2]])),i==="NCHW")throw new Error("separableConv2d currently does not support dataFormat NCHW; only NHWC is supported");C(c.rank===4,()=>`Error in separableConv2d: input must be rank 4, but got rank ${c.rank}.`),C(l.rank===4,()=>`Error in separableConv2d: depthwise filter must be rank 4, but got rank ${l.rank}.`),C(u.rank===4,()=>`Error in separableConv2d: pointwise filter must be rank 4, but got rank ${l.rank}.`),C(u.shape[0]===1,()=>`Error in separableConv2d: the first dimension of pointwise filter  must be 1, but got ${u.shape[0]}.`),C(u.shape[1]===1,()=>`Error in separableConv2d: the second dimension of pointwise filter must be 1, but got ${u.shape[1]}.`);const d=l.shape[2],p=l.shape[3];C(u.shape[2]===d*p,()=>`Error in separableConv2d: the third dimension of pointwise filter must be ${d*p}, but got ${u.shape[2]}.`);const f=Ic(c,l,s,r,i,o),y=No(f,u,1,"valid",i);return h?O(y,[y.shape[1],y.shape[2],y.shape[3]]):y}const g1=D({separableConv2d_:IP});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function TP(t,e){const n=I(t,"x","setdiff1d"),s=I(e,"y","setdiff1d");C(n.dtype===s.dtype,()=>`x and y should have the same dtype, but got x (${n.dtype}) and y (${s.dtype}).`),C(n.rank===1,()=>`x should be 1D tensor, but got x (${n.shape}).`),C(s.rank===1,()=>`y should be 1D tensor, but got y (${s.shape}).`);const r=await n.data(),o=await s.data(),i=new Set(o);let a=0;for(let c=0;c<r.length;c++)i.has(r[c])||a++;const l=new Pt([a],n.dtype),u=new Pt([a],"int32");for(let c=0,h=0;c<r.length;c++)i.has(r[c])||(l.values[h]=r[c],u.values[h]=c,h++);return[l.toTensor(),u.toTensor()]}const EP=TP;/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function DP(t){const n={x:I(t,"x","sign")};return R.runKernel(fc,n)}const E$=D({sign_:DP});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function RP(t){const n={x:I(t,"x","sin","float32")};return R.runKernel(dc,n)}const y1=D({sin_:RP});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function AP(t){const n={x:I(t,"x","sinh")};return R.runKernel(pc,n)}const x1=D({sinh_:AP});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _P(t,e,n){const s=I(t,"x","slice1d");return C(s.rank===1,()=>`slice1d expects a rank-1 tensor, but got a rank-${s.rank} tensor`),De(s,[e],[n])}const $f=D({slice1d_:_P});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function OP(t,e,n){const s=I(t,"x","slice2d");return C(s.rank===2,()=>`slice2d expects a rank-2 tensor, but got a rank-${s.rank} tensor`),De(s,e,n)}const b1=D({slice2d_:OP});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function FP(t,e,n){const s=I(t,"x","slice3d");return C(s.rank===3,()=>`slice3d expects a rank-3 tensor, but got a rank-${s.rank} tensor`),De(s,e,n)}const If=D({slice3d_:FP});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function LP(t,e,n){const s=I(t,"x","slice4d");return C(s.rank===4,()=>`slice4d expects a rank-4 tensor, but got a rank-${s.rank} tensor`),De(s,e,n)}const du=D({slice4d_:LP});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function PP(t,e=-1){const n=I(t,"logits","softmax","float32");if(e===-1&&(e=n.rank-1),e!==n.rank-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${n.rank} and dim was ${e}`);const s={logits:n},r={dim:e};return R.runKernel(lf,s,r)}const Tf=D({softmax_:PP});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zP(t){C(t.dtype==="complex64",()=>`The dtype for tf.spectral.fft() must be complex64 but got ${t.dtype}.`);const e={input:t};return R.runKernel(ix,e)}const Ef=D({fft_:zP});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function MP(t){C(t.dtype==="complex64",()=>`The dtype for tf.spectral.ifft() must be complex64 but got ${t.dtype}.`);const e={input:t};return R.runKernel(cx,e)}const pu=D({ifft_:MP});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function BP(t){const e=t.shape[t.shape.length-1],n=t.size/e;let s;if(e<=2){const r=O(t,[n,e]);s=pu(r)}else{const r=[n,2*(e-1)],o=O(hu(t),[n,e]),i=O(yf(t),[n,e]),a=Es(De(o,[0,1],[n,e-2]),1),l=A(Es(De(i,[0,1],[n,e-2]),1),ge(-1)),u=ft([o,a],1),c=ft([i,l],1),h=O(So(u,c),[r[0],r[1]]);s=pu(h)}if(s=hu(s),t.rank===3&&t.shape[0]!==0){const r=s,o=t.shape[0];s=O(s,[o,s.shape[0]/o,s.shape[1]]),r.dispose()}return s}const w1=D({irfft_:BP});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function VP(t,e,n=0){const r={x:I(t,"x","split")},o={numOrSizeSplits:e,axis:n};return R.runKernel(af,r,o)}const Ln=D({split_:VP});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function WP(t,e){C(t.dtype==="float32",()=>`The dtype for rfft() must be real value but got ${t.dtype}`);let n=t.shape[t.shape.length-1];const s=t.size/n;let r;if(e!=null&&e<n){const f=t.shape.map(y=>0),m=t.shape.map(y=>y);m[t.shape.length-1]=e,r=De(t,f,m),n=e}else if(e!=null&&e>n){const f=t.shape.map(m=>m);f[t.shape.length-1]=e-n,r=ft([t,kt(f)],t.shape.length-1),n=e}else r=t;const o=Re(r),i=O(So(r,o),[s,n]),a=Ef(i),l=Math.floor(n/2)+1,u=hu(a),c=yf(a),h=Ln(u,[l,n-l],u.shape.length-1),d=Ln(c,[l,n-l],c.shape.length-1),p=r.shape.slice();return p[r.shape.length-1]=l,O(So(h[0],d[0]),p)}const Df=D({rfft_:WP});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function UP(t,e){let n=I(t,"a","squaredDifference"),s=I(e,"b","squaredDifference");[n,s]=gt(n,s),we(n.shape,s.shape);const r={a:n,b:s},o={};return R.runKernel(xc,r,o)}const v1=D({squaredDifference_:UP});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function GP(t,e){const n=I(t,"x","squeeze","string_or_numeric");return O(n,Fo(n.shape,e).newShape)}const Li=D({squeeze_:GP});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function HP(t,e=0){const n=Nd(t,"tensors","stack","string_or_numeric");C(n.length>=1,()=>"Pass at least one tensor to tf.stack"),n.length>0&&C(e<=n[0].rank,()=>"Axis must be <= rank of the tensor");const s=n,r={axis:e};return R.runKernel(qp,s,r)}const ts=D({stack_:HP});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jP(t,e=0){const s={x:I(t,"x","step")},r={alpha:e};return R.runKernel(Sc,s,r)}const Za=D({step_:jP});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function KP(t,e,n,s,r=0,o=0,i=0,a=0,l=0){const c={x:I(t,"x","stridedSlice","string_or_numeric")},h={begin:e,end:n,strides:s,beginMask:r,endMask:o,ellipsisMask:i,newAxisMask:a,shrinkAxisMask:l};return R.runKernel(Lx,c,h)}const D$=D({stridedSlice_:KP});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qP(t){const n={x:I(t,"x","tan","float32")};return R.runKernel(wc,n)}const R$=D({tan_:qP});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bn(t,e){Ka(t);const n=Po(t,e);if(n.length!==1)throw new Error("tensor1d() requires values to be a flat/TypedArray");return zo(t,null,n,e)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ul(t,e,n){if(Ka(t),e!=null&&e.length!==2)throw new Error("tensor2d() requires shape to have two numbers");const s=Po(t,n);if(s.length!==2&&s.length!==1)throw new Error("tensor2d() requires values to be number[][] or flat/TypedArray");if(s.length===1&&e==null)throw new Error("tensor2d() requires shape to be provided when `values` are a flat/TypedArray");return zo(t,e,s,n)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function A$(t,e,n){if(Ka(t),e!=null&&e.length!==3)throw new Error("tensor3d() requires shape to have three numbers");const s=Po(t,n);if(s.length!==3&&s.length!==1)throw new Error("tensor3d() requires values to be number[][][] or flat/TypedArray");if(s.length===1&&e==null)throw new Error("tensor3d() requires shape to be provided when `values` are a flat array");return zo(t,e,s,n)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function XP(t,e,n){if(Ka(t),e!=null&&e.length!==4)throw new Error("tensor4d() requires shape to have four numbers");const s=Po(t,n);if(s.length!==4&&s.length!==1)throw new Error("tensor4d() requires values to be number[][][][] or flat/TypedArray");if(s.length===1&&e==null)throw new Error("tensor4d() requires shape to be provided when `values` are a flat array");return zo(t,e,s,n)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function YP(t,e,n){if(Ka(t),e!=null&&e.length!==5)throw new Error("tensor5d() requires shape to have five numbers");const s=Po(t,n);if(s.length!==5&&s.length!==1)throw new Error("tensor5d() requires values to be number[][][][][] or flat/TypedArray");if(s.length===1&&e==null)throw new Error("tensor5d() requires shape to be provided when `values` are a flat array");return zo(t,e,s,n)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function QP(t,e,n){if(Ka(t),e!=null&&e.length!==6)throw new Error("tensor6d() requires shape to have six numbers");const s=Po(t,n);if(s.length!==6&&s.length!==1)throw new Error("tensor6d() requires values to be number[][][][][][] or flat/TypedArray");if(s.length===1&&e==null)throw new Error("tensor6d() requires shape to be provided when `values` are a flat array");return e=e||s,zo(t,e,s,n)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ZP(t,e=1,n=!0){const s=I(t,"x","topk");if(s.rank===0)throw new Error("topk() expects the input to be of rank 1 or higher");const r=s.shape[s.shape.length-1];if(e<0)throw new Error(`'k' passed to topk() must be >= 0 but got ${e}`);if(e>r)throw new Error(`'k' passed to topk() must be <= the last dimension (${r}) but got ${e}`);const o={x:s},i={k:e,sorted:n},[a,l]=R.runKernel(Bx,o,i);return{values:a,indices:l}}const _$=D({topk_:ZP});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function JP(t,e=0,n=1,s,r){if(rs(t),s!=null&&s==="bool")throw new Error("Unsupported data type $ { dtype }");const o=new c1(e,n,s,!0,r),i=Ce(t,s);for(let a=0;a<i.values.length;a++)i.values[a]=o.nextValue();return i.toTensor()}const k1=D({truncatedNormal_:JP});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ez(t,e=0){const n=I(t,"x","unique","string_or_numeric");C(n.rank>0,()=>"The input tensor must be at least 1D");const s={x:n},r={axis:e},[o,i]=R.runKernel(Wx,s,r);return{values:o,indices:i}}const O$=D({unique_:ez});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tz(t,e,n){const s=I(t,"x","unsortedSegmentSum"),r=I(e,"segmentIds","unsortedSegmentSum","int32");C(Ea(n),()=>"numSegments must be of dtype int");const o={x:s,segmentIds:r},i={numSegments:n};return R.runKernel(cf,o,i)}const S1=D({unsortedSegmentSum_:tz});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nz(t,e=0){const n=I(t,"x","unstack","string_or_numeric");C(e>=-n.shape.length&&e<n.shape.length,()=>`Axis = ${e} is not in [-${n.shape.length}, ${n.shape.length})`);const s={value:n},r={axis:e};return R.runKernel(uf,s,r)}const Ds=D({unstack_:nz});/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sz(t,e){return l1(t,e,"right")}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function F$(t,e=!0,n,s){return R.makeVariable(t,e,n,s)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function C1(t,e){const n=[];for(let o=0;o<e.length;o++)e[o]&&n.push(o);const s=Ce(t,"int32"),r=Ce([n.length,t.length],"int32");for(let o=0;o<n.length;o++){const i=s.indexToLoc(n[o]),a=o*t.length;r.values.set(i,a)}return r.toTensor()}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function rz(t){const e=I(t,"condition","whereAsync","bool"),n=await e.data(),s=C1(e.shape,n);return t!==e&&e.dispose(),s}const L$=rz;/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function oz(t,e,n){const s=I(t,"tensor","boolMask"),r=I(e,"mask","boolMask","bool"),o=n==null?0:n,i=r.rank,a=s.shape;C(i>0,()=>"mask cannot be scalar"),Vn(a.slice(o,o+i),r.shape,"mask's shape must match the first K dimensions of tensor's shape,");let l=1;for(let m=o;m<o+i;m++)l*=a[m];const u=a.slice(0,o).concat([l],a.slice(o+i)),c=O(s,u),h=O(r,[-1]),d=await L$(h),p=Li(d,[1]),f=Rc(c,p,o);return t!==s&&s.dispose(),e!==r&&r.dispose(),p.dispose(),c.dispose(),h.dispose(),d.dispose(),f}const iz=oz;/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function az(t,e,n){const s=I(t,"x","transpose");if(e==null&&(e=s.shape.map((i,a)=>a).reverse()),C(s.rank===e.length,()=>`Error in transpose: rank of input ${s.rank} must match length of perm ${e}.`),e.forEach(i=>{C(i>=0&&i<s.rank,()=>`All entries in 'perm' must be between 0 and ${s.rank-1} but got ${e}`)}),s.rank<=1)return s.clone();const r={x:s},o={perm:e};return s.dtype==="complex64"?P(()=>{let i=hu(s),a=yf(s);return i=R.runKernel(ga,{x:i},o),a=R.runKernel(ga,{x:a},o),n&&(a=st(a)),So(i,a)}):R.runKernel(ga,r,o)}const Ee=D({transpose_:az});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lz(t,e,n,s,r=!0){const o=I(t,"v","movingAverage"),i=I(e,"x","movingAverage"),a=I(n,"decay","movingAverage");pO(o,i),C(Ae(o.shape,i.shape),()=>"Shape mismatch in v and x");const l=ge(1),u=le(l,a);let c=A(le(i,o),u);if(r){C(s!=null,()=>"When using zeroDebias: true, step is required.");const h=I(s,"step","movingAverage");c=pe(c,le(l,$o(a,h)))}return Q(o,c)}const uz=D({movingAverage_:lz});function P$(t,e,n){const s=e.rank>1?e.shape[e.rank-1]:1,r=e.rank>1?e.rank-1:1,o=`Must have updates.shape = indices.shape[:batchDim] + shape[sliceDim:], got updates.shape: ${n.shape}, indices.shape: ${e.shape}, shape: ${t}, sliceDim: ${s}, and batchDim: ${r}.`;if(n.rank<r)throw new Error(o+` update.rank < ${r}. `);if(t.length<s+(n.rank-r))throw new Error(o+` Output shape length < ${s+(n.rank-r)}`);if(n.rank!==r+t.length-s)throw new Error(o+` update.rank != ${r+t.length-s}`);for(let i=0;i<r;++i)if(n.shape[i]!==e.shape[i])throw new Error(o+` updates.shape[${i}] (${n.shape[i]}) != indices.shape[${i}] (${e.shape[i]}).`);for(let i=0;i<n.rank-r;++i)if(n.shape[i+r]!==t[i+s])throw new Error(o+` updates.shape[${i+r}] (${n.shape[i+r]}) != shape[${i+r}] (${t[i+r]})`)}function z$(t,e,n){if(e.rank<1)throw new Error(`tf.scatterND() expects the indices to be rank 1 or higher, but the rank was ${e.rank}.`);if(t.rank<1)throw new Error(`tf.scatterND() expects the updates to be rank 1 or higher, but the rank was ${t.rank}.`);if(e.dtype!=="int32")throw new Error(`The dtype of 'indices' should be int32, but got dtype: ${e.dtype}`);if(n.length<1)throw new Error(`Output rank must be greater or equal to 1, but got shape: ${n}`);if(n.length===0){if(e.size===0)throw new Error(`Indices specified for empty output. indices shape: ${e.shape}`);if(t.size===0)throw new Error(`Updates specified for empty output. updates shape: ${t.shape}`)}P$(n,e,t)}function Oc(t,e,n){const s=e.shape.length,r=s>1?e.shape[s-1]:1,o=n.length;let i=1;for(let h=r;h<o;++h)i*=n[h];const a=r<1?1:r,l=H(e.shape)/a,u=[...me(n.slice(0,r)),1],c=H(n);return{sliceRank:r,numUpdates:l,sliceSize:i,strides:u,outputSize:c}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cz(t,e,n){rs(n);const s=I(t,"indices","scatterND","int32"),r=I(e,"updates","scatterND");z$(r,s,n);const o={indices:s,updates:r},i={shape:n};return R.runKernel(Tx,o,i)}const hz=D({scatterND_:cz});function dz(t,e,n,s){if(t.dtype!=="int32")throw new Error(`tf.sparseToDense() expects the indices to be int32 type, but the dtype was ${t.dtype}.`);if(t.rank>2)throw new Error(`sparseIndices should be a scalar, vector, or matrix, but got shape ${t.shape}.`);const r=t.rank>0?t.shape[0]:1,o=t.rank>1?t.shape[1]:1;if(n.length!==o)throw new Error(`outputShape has incorrect number of elements:, ${n.length}, should be: ${o}.`);const i=e.size;if(!(e.rank===0||e.rank===1&&i===r))throw new Error(`sparseValues has incorrect shape ${e.shape}, should be [] or [${r}]`);if(e.dtype!==s.dtype)throw new Error("sparseValues.dtype must match defaultValues.dtype")}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pz(t,e,n,s=0){rs(n);const r=I(t,"sparseIndices","sparseToDense","int32"),o=I(e,"sparseValues","sparseToDense","string_or_numeric"),i=I(s,"defaultValue","sparseToDense",o.dtype);dz(r,o,n,i);const a={sparseIndices:r,sparseValues:o,defaultValue:i},l={outputShape:n};return R.runKernel(Ox,a,l)}const fz=D({sparseToDense_:pz});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mz(t,e){const n=I(e,"indices","gatherND","int32"),r={params:I(t,"x","gatherND","string_or_numeric"),indices:n};return R.runKernel(ux,r)}const gz=D({gatherND_:mz});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yz(t,e){if(e==null)return t.shape.slice();if(Ae(t.shape,e))return e;if(t.shape.length===e.length){const n=[];for(let s=0;s<t.shape.length;s++)e[s]==null&&t.shape[s]!=null?n.push(t.shape[s]):n.push(e[s]);return n}return e}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xz(t,e,n,s){const r=I(t,"x","dropout");if(C(r.dtype==="float32",()=>`x has to be a floating point tensor since it's going to be scaled, but got a ${r.dtype} tensor instead.`),C(e>=0&&e<1,()=>`rate must be a float in the range [0, 1), but got ${e}.`),e===0)return t instanceof et?r.clone():r;const o=yz(r,n),i=1-e,a=pe(Dc(Q(_c(o,0,1,"float32",s),i)),i);return A(r,a)}const M$=D({dropout_:xz});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function B$(t){return Math.floor(Math.pow(2,Math.ceil(Math.log(t)/Math.log(2))))}function N1(t,e,n){const s=1-t%2,r=new Float32Array(t);for(let o=0;o<t;++o){const i=2*Math.PI*o/(t+s-1);r[o]=e-n*Math.cos(i)}return bn(r,"float32")}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function bz(t,e,n=1){const s=I(t,"predictions","inTopK"),r=I(e,"targets","inTopK");C(s.rank>1,()=>`inTopK() expects the predictions to be of rank 2 or higher, but got ${s.rank}`),C(s.rank-1===r.rank,()=>`predictions rank should be 1 larger than targets rank, but got predictions rank ${s.rank} and targets rank ${r.rank}`),Vn(s.shape.slice(0,s.shape.length-1),r.shape,"predictions's shape should be align with the targets' shape, except the last dimension.");const o=s.shape[s.shape.length-1];C(n>0&&n<=o,()=>`'k' passed to inTopK() must be > 0 && <= the predictions last dimension (${o}), but got ${n}`);const i=await s.data(),a=await r.data(),[l,u]=[i.length/o,o],c=zt("bool",l);for(let h=0;h<l;h++){const d=h*u,p=i.subarray(d,d+u),f=[];for(let m=0;m<p.length;m++)f.push({value:p[m],index:m});f.sort((m,y)=>y.value-m.value),c[h]=0;for(let m=0;m<n;m++)if(f[m].index===a[h]){c[h]=1;break}}return t!==s&&s.dispose(),e!==r&&r.dispose(),js(c,r.shape,"bool")}const wz=bz;/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vz(t,e,n,s,r,o="NHWC",i){let a=t;t.rank===3&&(a=O(t,[1,t.shape[0],t.shape[1],t.shape[2]]));let l=e;l.rank===3&&(l=O(e,[1,e.shape[0],e.shape[1],e.shape[2]])),C(a.rank===4,()=>`Error in conv2dDerFilter: input must be rank 4, but got shape ${a.shape}.`),C(l.rank===4,()=>`Error in conv2dDerFilter: dy must be rank 4, but got shape ${l.shape}.`),C(n.length===4,()=>`Error in conv2dDerFilter: filterShape must be length 4, but got ${n}.`);const u=o==="NHWC"?a.shape[3]:a.shape[1],c=o==="NHWC"?l.shape[3]:l.shape[1];C(u===n[2],()=>`Error in conv2dDerFilter: depth of input ${u}) must match input depth in filter (${n[2]}.`),C(c===n[3],()=>`Error in conv2dDerFilter: depth of dy (${c}) must match output depth for filter (${n[3]}).`),hn("conv2dDerFilter",r,i);const h={x:a,dy:l},d={strides:s,pad:r,dataFormat:o,dimRoundingMode:i,filterShape:n};return R.runKernel(q0,h,d)}const $1=D({conv2DBackpropFilter_:vz});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Rf(t,e,n){if(n==null||n==="linear")return t;if(n==="relu")return A(t,Za(e));throw new Error(`Cannot compute gradient for fused activation ${n}.`)}function Af(t,e){let n=e;const s=Rt(t.shape,e.shape);return s.length>0&&(n=he(n,s)),O(n,t.shape)}function _f(t,e,n,s){if(e==="linear")return t;if(e==="relu")return wr(t);if(e==="elu")return Tc(t);if(e==="relu6")return d1(t);if(e==="prelu")return Cf(t,n);if(e==="leakyrelu")return xf(t,s);if(e==="sigmoid")return fr(t);throw new Error(`Unknown fused activation ${e}.`)}const Of=(t,e)=>!(t>0)||e==="linear";/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function kz({x:t,filter:e,strides:n,pad:s,dataFormat:r="NHWC",dilations:o=[1,1],dimRoundingMode:i,bias:a,activation:l="linear",preluActivationWeights:u,leakyreluAlpha:c}){if(l=l||"linear",Of(R.state.gradientDepth,l)===!1){C(r==="NHWC",()=>`Error in fused conv2d: got dataFormat of ${r} but only NHWC is currently supported for the case of gradient depth is 0 and the activation is not linear.`);let S=No(t,e,n,s,r,o,i);return a!=null&&(S=Q(S,a)),_f(S,l,u,c)}const h=I(t,"x","conv2d","float32"),d=I(e,"filter","conv2d","float32");let p=h,f=!1;h.rank===3&&(f=!0,p=O(h,[1,h.shape[0],h.shape[1],h.shape[2]])),C(p.rank===4,()=>`Error in fused conv2d: input must be rank 4, but got rank ${p.rank}.`),C(d.rank===4,()=>`Error in fused conv2d: filter must be rank 4, but got rank ${d.rank}.`),hn("fused conv2d",s,i);const m=r==="NHWC"?p.shape[3]:p.shape[1];C(d.shape[2]===m,()=>`Error in conv2d: depth of input (${m}) must match input depth for filter ${d.shape[2]}.`),C(jt(n,o),()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${n} and dilations '${o}'`);const y=Mt(p.shape,d.shape,n,o,s,i);let g;a!=null&&(g=I(a,"bias","fused conv2d"),[g]=gt(g,h),r==="NHWC"?we(y.outShape,g.shape):(C(g.shape.length<=1,()=>`Error in fused conv2d: only supports scalar or 1-D Tensor bias for NCHW format but got the bias of rank-${g.shape.length}.`),C(g.shape.length===0||g.shape[0]===y.outChannels||g.shape[0]===1,()=>`Error in fused conv2d: bias shape (${g.shape}) is not compatible with the number of output channels (${y.outChannels})`)));let x;if(u!=null){const S=u.shape;if(C(S.length<=1||S.length===3,()=>`Error in fused conv2d: only supports scalar, 1-D Tensor or 3-D Tensor PReLU activation weights but got a tensor of rank-${S.length}.`),S.length===1)C(S[0]===1||S[0]===y.outChannels,()=>`Error in fused conv2d: PReLU activation weights (${S}) is not compatible with the number of output channels (${y.outChannels}).`);else if(S.length===3)try{we(S,y.outShape)}catch{const $=`Error in fused conv2d: PReLU activation weights (${S}) is not compatible with the output shape of the conv2d (${y.outShape}).`;throw Error($)}x=I(u,"prelu weights","fused conv2d")}const b=(S,N)=>{C(r==="NHWC",()=>`Error in gradient of fused conv2D: got dataFormat of ${r} but only NHWC is currently supported.`);const[$,T,E,F]=N,M=Rf(S,E,l);C(Co(o),()=>`Error in gradient of fused conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${o}'`);const B=Zx(T.shape,M,$,n,s),V=$1(T,M,$.shape,n,s),W=[B,V];if(F!=null){const G=Af(F,M);W.push(G)}return W},w={x:p,filter:d,bias:g,preluActivationWeights:x},k={strides:n,pad:s,dataFormat:r,dilations:o,dimRoundingMode:i,activation:l,leakyreluAlpha:c};return a==null?zr((N,$,T)=>{let E=R.runKernel(wd,w,k);return T([$,N,E]),f&&(E=O(E,[E.shape[1],E.shape[2],E.shape[3]])),{value:E,gradFunc:b}})(p,d):zr((N,$,T,E)=>{let F=R.runKernel(wd,w,k);return E([$,N,F,T]),f&&(F=O(F,[F.shape[1],F.shape[2],F.shape[3]])),{value:F,gradFunc:b}})(p,d,g)}const V$=D({fusedConv2d_:kz});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Sz(t,e,n,s,r,o=[1,1],i){let a=t;t.rank===3&&(a=O(t,[1,t.shape[0],t.shape[1],t.shape[2]]));let l=e;l.rank===3&&(l=O(e,[1,e.shape[0],e.shape[1],e.shape[2]]));const u={x:a,dy:l},c={strides:s,pad:r,dimRoundingMode:i,dilations:o,filterShape:n};return R.runKernel(tx,u,c)}const W$=D({depthwiseConv2dNativeBackpropFilter_:Sz});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Cz(t,e,n,s,r,o=[1,1],i){let a=e,l=!1;e.rank===3&&(l=!0,a=O(e,[1,e.shape[0],e.shape[1],e.shape[2]]));const u={dy:a,filter:n},c={strides:s,pad:r,dimRoundingMode:i,dilations:o,inputShape:t},h=R.runKernel(nx,u,c);return l?O(h,[h.shape[1],h.shape[2],h.shape[3]]):h}const U$=D({depthwiseConv2dNativeBackpropInput_:Cz});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Nz({x:t,filter:e,strides:n,pad:s,dataFormat:r="NHWC",dilations:o=[1,1],dimRoundingMode:i,bias:a,activation:l="linear",preluActivationWeights:u,leakyreluAlpha:c}){if(Of(R.state.gradientDepth,l)===!1){let k=Ic(t,e,n,s,r,o,i);return a!=null&&(k=Q(k,a)),_f(k,l,u,c)}const h=I(t,"x","depthwiseConv2d","float32"),d=I(e,"filter","depthwiseConv2d","float32");let p=h,f=!1;h.rank===3&&(f=!0,p=O(h,[1,h.shape[0],h.shape[1],h.shape[2]])),C(p.rank===4,()=>`Error in fused depthwiseConv2d: input must be rank 4, but got rank ${p.rank}.`),C(d.rank===4,()=>`Error in fused depthwiseConv2d: filter must be rank 4, but got rank ${d.rank}.`),C(p.shape[3]===d.shape[2],()=>`Error in fused depthwiseConv2d: number of input channels (${p.shape[3]}) must match the inChannels dimension in filter ${d.shape[2]}.`),o==null&&(o=[1,1]),C(jt(n,o),()=>`Error in fused depthwiseConv2d: Either strides or dilations must be 1. Got strides ${n} and dilations '${o}'`),hn("fused depthwiseConv2d",s,i);const m=Mt(p.shape,d.shape,n,o,s,i,!0);let y;a!=null&&(y=I(a,"bias","fused conv2d"),[y]=gt(y,h),we(m.outShape,y.shape));let g;u!=null&&(g=I(u,"prelu weights","fused depthwiseConv2d"));const x=(k,S)=>{C(Co(o),()=>`Error in gradient of fused depthwiseConv2d: dilation rates greater than 1 are not yet supported. Got dilations '${o}'`);const[N,$,T,E]=S,F=Rf(k,T,l),M=U$($.shape,F,N,n,s,o,i),B=W$($,F,N.shape,n,s,o,i);if(E!=null){const V=Af(y,F);return[M,B,V]}return[M,B]},b={x:p,filter:d,bias:y,preluActivationWeights:g},w={strides:n,pad:s,dataFormat:r,dilations:o,dimRoundingMode:i,activation:l,leakyreluAlpha:c};return a==null?zr((S,N,$)=>{let T=R.runKernel(vd,b,w);return $([N,S,T]),f&&(T=O(T,[T.shape[1],T.shape[2],T.shape[3]])),{value:T,gradFunc:x}})(p,d):zr((S,N,$,T)=>{let E=R.runKernel(vd,b,w);return T([N,S,E,$]),f&&(E=O(E,[E.shape[1],E.shape[2],E.shape[3]])),{value:E,gradFunc:x}})(p,d,y)}const $z=D({fusedDepthwiseConv2d_:Nz});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Iz({a:t,b:e,transposeA:n=!1,transposeB:s=!1,bias:r,activation:o="linear",preluActivationWeights:i,leakyreluAlpha:a=.2}){if(Of(R.state.gradientDepth,o)===!1){let F=Ie(t,e,n,s);return r!=null&&(F=Q(F,r)),_f(F,o,i,a)}let l=I(t,"a","fused matMul"),u=I(e,"b","fused matMul");[l,u]=gt(l,u);const c=n?l.shape[l.rank-2]:l.shape[l.rank-1],h=s?u.shape[u.rank-1]:u.shape[u.rank-2],d=n?l.shape[l.rank-1]:l.shape[l.rank-2],p=s?u.shape[u.rank-2]:u.shape[u.rank-1],f=l.shape.slice(0,-2),m=u.shape.slice(0,-2),y=H(f),g=H(m);C(c===h,()=>`Error in fused matMul: inner shapes (${c}) and (${h}) of Tensors with shapes ${l.shape} and ${u.shape} and transposeA=${n} and transposeB=${s} must match.`);const b=we(l.shape.slice(0,-2),u.shape.slice(0,-2)).concat([d,p]),w=n?O(l,[y,c,d]):O(l,[y,d,c]),k=s?O(u,[g,p,h]):O(u,[g,h,p]);let S;r!=null&&(S=I(r,"bias","fused matMul"),[S]=gt(S,l),we(b,S.shape));let N;i!=null&&(N=I(i,"prelu weights","fused matMul"));const $=(F,M)=>{const[B,V,W,G]=M,q=Rf(O(F,W.shape),W,o);let _,z;if(!n&&!s?(_=Ie(q,V,!1,!0),z=Ie(B,q,!0,!1)):!n&&s?(_=Ie(q,V,!1,!1),z=Ie(q,B,!0,!1)):n&&!s?(_=Ie(V,q,!1,!0),z=Ie(B,q,!1,!1)):(_=Ie(V,q,!0,!0),z=Ie(q,B,!0,!0)),r!=null){const j=Af(G,q);return[_,z,j]}else return[_,z]},T={a:w,b:k,bias:S,preluActivationWeights:N},E={transposeA:n,transposeB:s,activation:o,leakyreluAlpha:a};return r==null?zr((M,B,V)=>{const W=R.runKernel(bd,T,E);return V([M,B,W]),{value:O(W,b),gradFunc:$}})(w,k):zr((M,B,V,W)=>{const G=R.runKernel(bd,T,E);return W([M,B,G,V]),{value:O(G,b),gradFunc:$}})(w,k,S)}const dy=D({fusedMatMul_:Iz});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Tz=Object.freeze(Object.defineProperty({__proto__:null,conv2d:V$,depthwiseConv2d:$z,matMul:dy},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ez(t){return N1(t,.54,.46)}const Dz=D({hammingWindow_:Ez});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Rz(t){return N1(t,.5,.5)}const G$=D({hannWindow_:Rz});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Az(t,e,n,s=!1,r=0){let o=0;const i=[];for(;o+e<=t.size;)i.push(De(t,o,e)),o+=n;if(s)for(;o<t.size;){const a=o+e-t.size,l=ft([De(t,o,e-a),Ya([a],r)]);i.push(l),o+=n}return i.length===0?Ul([],[0,e]):O(ft(i),[i.length,e])}const H$=D({frame_:Az});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _z(t,e,n,s,r=G$){s==null&&(s=B$(e));const o=H$(t,e,n),i=A(o,r(e));return Df(i,s)}const Oz=D({stft_:_z});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Fz(t,e,n,s,r="bilinear",o=0){const i=I(t,"image","cropAndResize"),a=I(e,"boxes","cropAndResize","float32"),l=I(n,"boxInd","cropAndResize","int32"),u=a.shape[0];C(i.rank===4,()=>`Error in cropAndResize: image must be rank 4,but got rank ${i.rank}.`),C(a.rank===2&&a.shape[1]===4,()=>`Error in cropAndResize: boxes must be have size [${u},4] but had shape ${a.shape}.`),C(l.rank===1&&l.shape[0]===u,()=>`Error in cropAndResize: boxInd must be have size [${u}] but had shape ${a.shape}.`),C(s.length===2,()=>`Error in cropAndResize: cropSize must be of length 2, but got length ${s.length}.`),C(s[0]>=1&&s[1]>=1,()=>`cropSize must be atleast [1,1], but was ${s}`),C(r==="bilinear"||r==="nearest",()=>`method must be bilinear or nearest, but was ${r}`);const c={image:i,boxes:a,boxInd:l},h={method:r,extrapolationValue:o,cropSize:s};return R.runKernel(Z0,c,h)}const Lz=D({cropAndResize_:Fz});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Pz(t){const e=I(t,"image","flipLeftRight","float32");C(e.rank===4,()=>`Error in flipLeftRight: image must be rank 4,but got rank ${e.rank}.`);const n={image:e};return R.runKernel(lx,n,{})}const zz=D({flipLeftRight_:Pz});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Mz(t){const e=I(t,"image","grayscaleToRGB"),n=e.rank-1,s=e.shape[n];C(e.rank>=2,()=>`Error in grayscaleToRGB: images must be at least rank 2, but got rank ${e.rank}.`),C(s===1,()=>`Error in grayscaleToRGB: last dimension of a grayscale image should be size 1, but got size ${s}.`);const r=new Array(e.rank);return r.fill(1,0,n),r[n]=3,vs(e,r)}const Bz=D({grayscaleToRGB_:Mz});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Vz(t,e,n=0,s=.5){const r=I(t,"image","rotateWithOffset","float32");C(r.rank===4,()=>`Error in rotateWithOffset: image must be rank 4,but got rank ${r.rank}.`);const o={image:r},i={radians:e,fillValue:n,center:s};return R.runKernel(Ux,o,i)}const Wz=D({rotateWithOffset_:Vz});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ja(t,e,n,s,r,o){s==null&&(s=.5),r==null&&(r=Number.NEGATIVE_INFINITY),o==null&&(o=0);const i=t.shape[0];return n=Math.min(n,i),C(0<=s&&s<=1,()=>`iouThreshold must be in [0, 1], but was '${s}'`),C(t.rank===2,()=>`boxes must be a 2D tensor, but was of rank '${t.rank}'`),C(t.shape[1]===4,()=>`boxes must have 4 columns, but 2nd dimension was ${t.shape[1]}`),C(e.rank===1,()=>"scores must be a 1D tensor"),C(e.shape[0]===i,()=>`scores has incompatible shape with boxes. Expected ${i}, but was ${e.shape[0]}`),C(0<=o&&o<=1,()=>`softNmsSigma must be in [0, 1], but was '${o}'`),{maxOutputSize:n,iouThreshold:s,scoreThreshold:r,softNmsSigma:o}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Uz(t,e,n,s=.5,r=Number.NEGATIVE_INFINITY){const o=I(t,"boxes","nonMaxSuppression","float32"),i=I(e,"scores","nonMaxSuppression","float32"),a=Ja(o,i,n,s,r);n=a.maxOutputSize,s=a.iouThreshold,r=a.scoreThreshold;const l={maxOutputSize:n,iouThreshold:s,scoreThreshold:r};return R.runKernel(xx,{boxes:o,scores:i},l)}const Gz=D({nonMaxSuppression_:Uz});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Hz(t,e,n){const s=jz(t,e,n),r=s<0?-(s+1):s;t.splice(r,0,e)}function jz(t,e,n){return qz(t,e,n||Kz)}function Kz(t,e){return t>e?1:t<e?-1:0}function qz(t,e,n){let s=0,r=t.length,o=0,i=!1;for(;s<r;){o=s+(r-s>>>1);const a=n(e,t[o]);a>0?s=o+1:(r=o,i=!a)}return i?s:-s-1}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function I1(t,e,n,s,r){return D1(t,e,n,s,r,0)}function T1(t,e,n,s,r,o){return D1(t,e,n,s,r,0,!1,o,!0)}function E1(t,e,n,s,r,o){return D1(t,e,n,s,r,o,!0)}function D1(t,e,n,s,r,o,i=!1,a=!1,l=!1){const u=[];for(let y=0;y<e.length;y++)e[y]>r&&u.push({score:e[y],boxIndex:y,suppressBeginIndex:0});u.sort(xv);const c=o>0?-.5/o:0,h=[],d=[];for(;h.length<n&&u.length>0;){const y=u.pop(),{score:g,boxIndex:x,suppressBeginIndex:b}=y;if(g<r)break;let w=!1;for(let k=h.length-1;k>=b;--k){const S=Xz(t,x,h[k]);if(S>=s){w=!0;break}if(y.score=y.score*Yz(s,c,S),y.score<=r)break}y.suppressBeginIndex=h.length,w||(y.score===g?(h.push(x),d.push(y.score)):y.score>r&&Hz(u,y,xv))}const p=h.length,f=n-p;a&&f>0&&(h.push(...new Array(f).fill(0)),d.push(...new Array(f).fill(0)));const m={selectedIndices:h};return i&&(m.selectedScores=d),l&&(m.validOutputs=p),m}function Xz(t,e,n){const s=t.subarray(e*4,e*4+4),r=t.subarray(n*4,n*4+4),o=Math.min(s[0],s[2]),i=Math.min(s[1],s[3]),a=Math.max(s[0],s[2]),l=Math.max(s[1],s[3]),u=Math.min(r[0],r[2]),c=Math.min(r[1],r[3]),h=Math.max(r[0],r[2]),d=Math.max(r[1],r[3]),p=(a-o)*(l-i),f=(h-u)*(d-c);if(p<=0||f<=0)return 0;const m=Math.max(o,u),y=Math.max(i,c),g=Math.min(a,h),x=Math.min(l,d),b=Math.max(g-m,0)*Math.max(x-y,0);return b/(p+f-b)}function Yz(t,e,n){const s=Math.exp(e*n*n);return n<=t?s:0}function xv(t,e){return t.score-e.score||t.score===e.score&&e.boxIndex-t.boxIndex}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function Qz(t,e,n,s=.5,r=Number.NEGATIVE_INFINITY){const o=I(t,"boxes","nonMaxSuppressionAsync"),i=I(e,"scores","nonMaxSuppressionAsync"),a=Ja(o,i,n,s,r);n=a.maxOutputSize,s=a.iouThreshold,r=a.scoreThreshold;const l=await Promise.all([o.data(),i.data()]),u=l[0],c=l[1],{selectedIndices:h}=I1(u,c,n,s,r);return o!==t&&o.dispose(),i!==e&&i.dispose(),bn(h,"int32")}const Zz=Qz;/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Jz(t,e,n,s=.5,r=Number.NEGATIVE_INFINITY,o=0){const i=I(t,"boxes","nonMaxSuppression"),a=I(e,"scores","nonMaxSuppression"),l=Ja(i,a,n,s,r,o);n=l.maxOutputSize,s=l.iouThreshold,r=l.scoreThreshold,o=l.softNmsSigma;const u={boxes:i,scores:a},c={maxOutputSize:n,iouThreshold:s,scoreThreshold:r,softNmsSigma:o},h=R.runKernel(wx,u,c);return{selectedIndices:h[0],selectedScores:h[1]}}const eM=D({nonMaxSuppressionWithScore_:Jz});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function tM(t,e,n,s=.5,r=Number.NEGATIVE_INFINITY,o=0){const i=I(t,"boxes","nonMaxSuppressionAsync"),a=I(e,"scores","nonMaxSuppressionAsync"),l=Ja(i,a,n,s,r,o);n=l.maxOutputSize,s=l.iouThreshold,r=l.scoreThreshold,o=l.softNmsSigma;const u=await Promise.all([i.data(),a.data()]),c=u[0],h=u[1],{selectedIndices:d,selectedScores:p}=E1(c,h,n,s,r,o);return i!==t&&i.dispose(),a!==e&&a.dispose(),{selectedIndices:bn(d,"int32"),selectedScores:bn(p)}}const nM=tM;/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sM(t,e,n,s=.5,r=Number.NEGATIVE_INFINITY,o=!1){const i=I(t,"boxes","nonMaxSuppression"),a=I(e,"scores","nonMaxSuppression"),l=Ja(i,a,n,s,r,null),u=l.maxOutputSize,c=l.iouThreshold,h=l.scoreThreshold,d={boxes:i,scores:a},p={maxOutputSize:u,iouThreshold:c,scoreThreshold:h,padToMaxOutputSize:o},f=R.runKernel(bx,d,p);return{selectedIndices:f[0],validOutputs:f[1]}}const rM=D({nonMaxSuppressionPadded_:sM});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function oM(t,e,n,s=.5,r=Number.NEGATIVE_INFINITY,o=!1){const i=I(t,"boxes","nonMaxSuppressionAsync"),a=I(e,"scores","nonMaxSuppressionAsync"),l=Ja(i,a,n,s,r,null),u=l.maxOutputSize,c=l.iouThreshold,h=l.scoreThreshold,[d,p]=await Promise.all([i.data(),a.data()]),{selectedIndices:f,validOutputs:m}=T1(d,p,u,c,h,o);return i!==t&&i.dispose(),a!==e&&a.dispose(),{selectedIndices:bn(f,"int32"),validOutputs:ge(m,"int32")}}const iM=oM;/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function aM(t,e,n=!1,s=!1){const r=I(t,"images","resizeBilinear");C(r.rank===3||r.rank===4,()=>`Error in resizeBilinear: x must be rank 3 or 4, but got rank ${r.rank}.`),C(e.length===2,()=>`Error in resizeBilinear: new shape must 2D, but got shape ${e}.`),C(s===!1||n===!1,()=>"Error in resizeBilinear: If halfPixelCenters is true, alignCorners must be false.");let o=r,i=!1;r.rank===3&&(i=!0,o=O(r,[1,r.shape[0],r.shape[1],r.shape[2]]));const a={images:o},l={alignCorners:n,halfPixelCenters:s,size:e},u=R.runKernel(ef,a,l);return i?O(u,[u.shape[1],u.shape[2],u.shape[3]]):u}const j$=D({resizeBilinear_:aM});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lM(t,e,n=!1,s=!1){const r=I(t,"images","resizeNearestNeighbor");C(r.rank===3||r.rank===4,()=>`Error in resizeNearestNeighbor: x must be rank 3 or 4, but got rank ${r.rank}.`),C(e.length===2,()=>`Error in resizeNearestNeighbor: new shape must 2D, but got shape ${e}.`),C(r.dtype==="float32"||r.dtype==="int32",()=>"`images` must have `int32` or `float32` as dtype"),C(s===!1||n===!1,()=>"Error in resizeNearestNeighbor: If halfPixelCenters is true, alignCorners must be false.");let o=r,i=!1;r.rank===3&&(i=!0,o=O(r,[1,r.shape[0],r.shape[1],r.shape[2]]));const a={images:o},l={alignCorners:n,halfPixelCenters:s,size:e},u=R.runKernel(Jp,a,l);return i?O(u,[u.shape[1],u.shape[2],u.shape[3]]):u}const K$=D({resizeNearestNeighbor_:lM});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function uM(t,e="binary",n=!1,s=.5){const r=I(t,"image","threshold"),o=.2989,i=.587,a=.114,l=r.shape[0]*r.shape[1];let u=A(bn([s]),255),c,h,d,p;if(C(r.rank===3,()=>`Error in threshold: image must be rank 3,but got rank ${r.rank}.`),C(r.shape[2]===3||r.shape[2]===1,()=>`Error in threshold: image color channel must be equal to 3 or 1but got ${r.shape[2]}.`),C(r.dtype==="int32"||r.dtype==="float32",()=>`Error in dtype: image dtype must be int32 or float32,but got dtype ${r.dtype}.`),C(e==="otsu"||e==="binary",()=>`Method must be binary or otsu, but was ${e}`),r.shape[2]===3){[c,h,d]=Ln(r,[1,1,1],-1);const y=A(c,o),g=A(h,i),x=A(d,a);p=Q(Q(y,g),x)}else p=t;if(e==="otsu"){const y=jN(ie(p1(p),"int32"),js([]),256);u=cM(y,l)}const f=n?Oi(p,u):Un(p,u);return ie(A(f,255),"int32")}function cM(t,e){let n=bn([-1]),s=bn([0]),r=bn([0]),o,i,a,l,u,c;for(let h=0;h<t.size-1;h++){o=De(t,0,h+1),i=De(t,h+1),u=pe(he(o),e),c=pe(he(i),e);const d=he(A(o,La(0,o.size)));a=pe(d,he(o));const p=Ya(i.shape,o.size),f=Q(La(0,i.size),p),m=A(i,f);l=pe(he(m),he(i));const y=le(a,l),g=le(a,l),x=A(u,c);r=A(A(x,y),g);const b=Un(r,s);s=vn(b,r,s),n=vn(b,bn([h]),n)}return n}const hM=D({threshold_:uM});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dM(t,e,n="nearest",s="constant",r=0,o){const i=I(t,"image","transform","float32"),a=I(e,"transforms","transform","float32");C(i.rank===4,()=>`Error in transform: image must be rank 4,but got rank ${i.rank}.`),C(a.rank===2&&(a.shape[0]===i.shape[0]||a.shape[0]===1)&&a.shape[1]===8,()=>"Error in transform: Input transform should be batch x 8 or 1 x 8"),C(o==null||o.length===2,()=>`Error in transform: outputShape must be [height, width] or null, but got ${o}.`);const l={image:i,transforms:a},u={interpolation:n,fillMode:s,fillValue:r,outputShape:o};return R.runKernel(Vx,l,u)}const pM=D({transform_:dM});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fM(t,e,n){C(e%1===0,()=>`bandPart(): numLower must be an integer, got ${e}.`),C(n%1===0,()=>`bandPart(): numUpper must be an integer, got ${n}.`);const s=I(t,"a","bandPart");C(s.rank>=2,()=>`bandPart(): Rank must be at least 2, got ${s.rank}.`);const r=s.shape,[o,i]=s.shape.slice(-2);if(!(e<=o))throw new Error(`bandPart(): numLower (${e}) must not be greater than the number of rows (${o}).`);if(!(n<=i))throw new Error(`bandPart(): numUpper (${n}) must not be greater than the number of columns (${i}).`);e<0&&(e=o),n<0&&(n=i);const a=O(La(0,o,1,"int32"),[-1,1]),l=La(0,i,1,"int32"),u=le(a,l),c=xr(Oi(u,ge(+e,"int32")),Vo(u,ge(-n,"int32"))),h=kt([o,i],s.dtype);return O(ts(Ds(O(s,[-1,o,i])).map(d=>vn(c,d,h))),r)}const mM=D({bandPart_:fM});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gM(t){let e;if(Array.isArray(t)){e=!1,C(t!=null&&t.length>0,()=>"Gram-Schmidt process: input must not be null, undefined, or empty");const r=t[0].shape[0];for(let o=1;o<t.length;++o)C(t[o].shape[0]===r,()=>`Gram-Schmidt: Non-unique lengths found in the input vectors: (${t[o].shape[0]} vs. ${r})`)}else e=!0,t=Ln(t,t.shape[0],0).map(r=>Li(r,[0]));C(t.length<=t[0].shape[0],()=>`Gram-Schmidt: Number of vectors (${t.length}) exceeds number of dimensions (${t[0].shape[0]}).`);const n=[],s=t;for(let r=0;r<t.length;++r)n.push(R.tidy(()=>{let o=s[r];if(r>0)for(let i=0;i<r;++i){const a=A(he(A(n[i],o)),n[i]);o=le(o,a)}return pe(o,Ec(o,"euclidean"))}));return e?ts(n,0):n}const yM=D({gramSchmidt_:gM});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xM(t,e=!1){if(C(t.rank>=2,()=>`qr() requires input tensor to have a rank >= 2, but got rank ${t.rank}`),t.rank===2)return bv(t,e);{const n=t.shape.slice(0,t.shape.length-2).reduce((l,u)=>l*u),s=Ds(O(t,[n,t.shape[t.shape.length-2],t.shape[t.shape.length-1]]),0),r=[],o=[];s.forEach(l=>{const[u,c]=bv(l,e);r.push(u),o.push(c)});const i=O(ts(r,0),t.shape),a=O(ts(o,0),t.shape);return[i,a]}}function bv(t,e=!1){return R.tidy(()=>{C(t.shape.length===2,()=>`qr2d() requires a 2D Tensor, but got a ${t.shape.length}D Tensor.`);const n=t.shape[0],s=t.shape[1];let r=s1(n),o=Ar(t);const i=Ul([[1]],[1,1]);let a=Ar(i);const l=n>=s?s:n;for(let u=0;u<l;++u){const c=o,h=a,d=r;[a,o,r]=R.tidy(()=>{const p=De(o,[u,u],[n-u,1]),f=Ec(p),m=De(o,[u,u],[1,1]),y=vn(Un(m,0),Ul([[-1]]),Ul([[1]])),g=le(m,A(y,f)),x=pe(p,g);x.shape[0]===1?a=Ar(i):a=ft([i,De(x,[1,0],[x.shape[0]-1,x.shape[1]])],0);const b=st(pe(Ie(y,g),f)),w=De(o,[u,0],[n-u,s]),k=A(b,a),S=Ee(a);if(u===0)o=le(w,Ie(k,Ie(S,w)));else{const T=le(w,Ie(k,Ie(S,w)));o=ft([De(o,[0,0],[u,s]),T],0)}const N=Ee(k),$=De(r,[0,u],[n,r.shape[1]-u]);if(u===0)r=le($,Ie(Ie($,a),N));else{const T=le($,Ie(Ie($,a),N));r=ft([De(r,[0,0],[n,u]),T],1)}return[a,o,r]}),Se([c,h,d])}return!e&&n>s&&(r=De(r,[0,0],[n,s]),o=De(o,[0,0],[s,s])),[r,o]})}const bM=D({qr_:xM});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var xn;(function(t){t[t.NONE=0]="NONE",t[t.MEAN=1]="MEAN",t[t.SUM=2]="SUM",t[t.SUM_BY_NONZERO_WEIGHTS=3]="SUM_BY_NONZERO_WEIGHTS"})(xn||(xn={}));function wM(t,e,n=xn.SUM_BY_NONZERO_WEIGHTS){const s=I(t,"losses","computeWeightedLoss");let r=null;e!=null&&(r=I(e,"weights","computeWeightedLoss"));const o=r==null?s:A(s,r);if(n===xn.NONE)return o;if(n===xn.SUM)return he(o);if(n===xn.MEAN){if(r==null)return dt(o);{const i=s.size/r.size,a=pe(he(o),he(r));return i>1?pe(a,ge(i)):a}}if(n===xn.SUM_BY_NONZERO_WEIGHTS){if(r==null)return pe(he(o),ge(s.size));{const i=A(r,An(s.shape)),a=ie(he(Fa(i,ge(0))),"float32");return pe(he(o),a)}}throw Error(`Unknown reduction: ${n}`)}const Gr=D({computeWeightedLoss_:wM});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vM(t,e,n,s=xn.SUM_BY_NONZERO_WEIGHTS){const r=I(t,"labels","absoluteDifference"),o=I(e,"predictions","absoluteDifference");let i=null;n!=null&&(i=I(n,"weights","absoluteDifference")),Vn(r.shape,o.shape,"Error in absoluteDifference: ");const a=Nt(le(r,o));return Gr(a,i,s)}const kM=D({absoluteDifference_:vM});function SM(t,e,n,s,r=xn.SUM_BY_NONZERO_WEIGHTS){const o=I(t,"labels","cosineDistance"),i=I(e,"predictions","cosineDistance");let a=null;s!=null&&(a=I(s,"weights","cosineDistance")),Vn(o.shape,i.shape,"Error in cosineDistance: ");const l=ge(1),u=le(l,he(A(o,i),n,!0));return Gr(u,a,r)}const CM=D({cosineDistance_:SM});function NM(t,e,n,s=xn.SUM_BY_NONZERO_WEIGHTS){let r=I(t,"labels","hingeLoss");const o=I(e,"predictions","hingeLoss");let i=null;n!=null&&(i=I(n,"weights","hingeLoss")),Vn(r.shape,o.shape,"Error in hingeLoss: ");const a=ge(1);r=le(A(ge(2),r),a);const l=wr(le(a,A(r,o)));return Gr(l,i,s)}const $M=D({hingeLoss_:NM});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function IM(t,e,n,s=1,r=xn.SUM_BY_NONZERO_WEIGHTS){const o=I(t,"labels","huberLoss"),i=I(e,"predictions","huberLoss");let a=null;n!=null&&(a=I(n,"weights","huberLoss")),Vn(o.shape,i.shape,"Error in huberLoss: ");const l=ge(s),u=Nt(le(i,o)),c=Ac(u,l),h=le(u,c),d=Q(A(ge(.5),Ve(c)),A(l,h));return Gr(d,a,r)}const TM=D({huberLoss_:IM});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function EM(t,e,n,s=1e-7,r=xn.SUM_BY_NONZERO_WEIGHTS){const o=I(t,"labels","logLoss"),i=I(e,"predictions","logLoss");let a=null;n!=null&&(a=I(n,"weights","logLoss")),Vn(o.shape,i.shape,"Error in logLoss: ");const l=ge(1),u=ge(s),c=st(A(o,Jn(Q(i,u)))),h=A(le(l,o),Jn(Q(le(l,i),u))),d=le(c,h);return Gr(d,a,r)}const DM=D({logLoss_:EM});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function RM(t,e,n,s=xn.SUM_BY_NONZERO_WEIGHTS){const r=I(t,"labels","meanSquaredError"),o=I(e,"predictions","meanSquaredError");let i=null;n!=null&&(i=I(n,"weights","meanSquaredError")),Vn(r.shape,o.shape,"Error in meanSquaredError: ");const a=v1(r,o);return Gr(a,i,s)}const AM=D({meanSquaredError_:RM});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _M(t,e){const n=I(t,"labels","sigmoidCrossEntropyWithLogits"),s=I(e,"logits","sigmoidCrossEntropyWithLogits");Vn(n.shape,s.shape,"Error in sigmoidCrossEntropyWithLogits: ");const r=wr(s),o=A(s,n),i=bf(Zn(st(Nt(s))));return Q(le(r,o),i)}function OM(t,e,n,s=0,r=xn.SUM_BY_NONZERO_WEIGHTS){let o=I(t,"multiClassLabels","sigmoidCrossEntropy");const i=I(e,"logits","sigmoidCrossEntropy");let a=null;if(n!=null&&(a=I(n,"weights","sigmoidCrossEntropy")),Vn(o.shape,i.shape,"Error in sigmoidCrossEntropy: "),s>0){const u=ge(s),c=ge(1),h=ge(.5);o=Q(A(o,le(c,u)),A(h,u))}const l=_M(o,i);return Gr(l,a,r)}const FM=D({sigmoidCrossEntropy_:OM});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function LM(t,e,n=-1){if(n===-1&&(n=e.rank-1),n!==e.rank-1)throw Error(`Softmax cross entropy along a non-last dimension is not yet supported. Labels / logits was rank ${e.rank} and dim was ${n}`);return zr((r,o,i)=>{const l=i1(o,[n],!0),u=le(ie(o,"float32"),l);i([r,u]);const c=st(A(u,r));return{value:he(c,[n]),gradFunc:(p,f)=>{const[m,y]=f,g=xt(p.shape,[n]);return[A(O(p,g),le(ie(m,"float32"),Zn(y))),A(O(p,g),le(Zn(y),ie(m,"float32")))]}}})(t,e)}function PM(t,e,n,s=0,r=xn.SUM_BY_NONZERO_WEIGHTS){let o=I(t,"onehotLabels","softmaxCrossEntropy");const i=I(e,"logits","softmaxCrossEntropy");let a=null;if(n!=null&&(a=I(n,"weights","softmaxCrossEntropy")),Vn(o.shape,i.shape,"Error in softmaxCrossEntropy: "),s>0){const u=ge(s),c=ge(1),h=ge(o.shape[1]);o=Q(A(o,le(c,u)),pe(u,h))}const l=LM(o,i);return Gr(l,a,r)}const zM=D({softmaxCrossEntropy_:PM});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function MM(t,e,n,s){const r=I(t,"indices","sparseFillEmptyRows","int32"),o=I(e,"values","sparseFillEmptyRows"),i=I(n,"denseShape","sparseFillEmptyRows","int32"),a=I(s,"defaultValue","sparseFillEmptyRows",o.dtype);if(r.rank!==2)throw new Error(`Indices should be Tensor2D but received shape
        ${r.shape}`);if(o.rank!==1)throw new Error(`Values should be Tensor1D but received shape ${o.shape}`);if(i.rank!==1)throw new Error(`Dense shape should be Tensor1D but received shape ${i.shape}`);if(a.rank!==0)throw new Error(`Default value should be a scalar but received shape ${a.shape}`);const l={indices:r,values:o,denseShape:i,defaultValue:a},u=R.runKernel(Dx,l);return{outputIndices:u[0],outputValues:u[1],emptyRowIndicator:u[2],reverseIndexMap:u[3]}}const BM=D({sparseFillEmptyRows_:MM});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function VM(t,e,n){const s=I(t,"inputIndices","sparseReshape","int32"),r=I(e,"inputShape","sparseReshape","int32"),o=I(n,"newShape","sparseReshape","int32");if(s.rank!==2)throw new Error(`Input indices should be Tensor2D but received shape
        ${s.shape}`);if(r.rank!==1)throw new Error(`Input shape should be Tensor1D but received shape ${r.shape}`);if(o.rank!==1)throw new Error(`New shape should be Tensor1D but received shape ${o.shape}`);const i={inputIndices:s,inputShape:r,newShape:o},a=R.runKernel(Rx,i);return{outputIndices:a[0],outputShape:a[1]}}const WM=D({sparseReshape_:VM});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function UM(t,e,n){const s=I(t,"data","sparseSegmentMean"),r=I(e,"indices","sparseSegmentMean","int32"),o=I(n,"segmentIds","sparseSegmentMean","int32");if(s.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(r.rank!==1)throw new Error(`Indices should be Tensor1D but received shape
          ${r.shape}`);if(o.rank!==1)throw new Error(`Segment ids should be Tensor1D but received shape
          ${o.shape}`);const i={data:s,indices:r,segmentIds:o};return R.runKernel(Ax,i)}const GM=D({sparseSegmentMean_:UM});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function HM(t,e,n){const s=I(t,"data","sparseSegmentSum"),r=I(e,"indices","sparseSegmentSum","int32"),o=I(n,"segmentIds","sparseSegmentSum","int32");if(s.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(r.rank!==1)throw new Error(`Indices should be Tensor1D but received shape
         ${r.shape}`);if(o.rank!==1)throw new Error(`Segment ids should be Tensor1D but received shape
         ${o.shape}`);const i={data:s,indices:r,segmentIds:o};return R.runKernel(_x,i)}const jM=D({sparseSegmentSum_:HM});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function KM(t,e,n,s,r,o,i,a){const l=I(t,"data","stringNGrams","string");if(l.dtype!=="string")throw new Error("Data must be of datatype string");if(l.shape.length!==1)throw new Error(`Data must be a vector, saw: ${l.shape}`);const u=I(e,"dataSplits","stringNGrams");if(u.dtype!=="int32")throw new Error("Data splits must be of datatype int32");const c={separator:n,nGramWidths:s,leftPad:r,rightPad:o,padWidth:i,preserveShortSequences:a},h={data:l,dataSplits:u},d=R.runKernel(Px,h,c);return{nGrams:d[0],nGramsSplits:d[1]}}const qM=D({stringNGrams_:KM});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function XM(t,e,n=!0){const s=I(t,"input","stringSplit","string"),r=I(e,"delimiter","stringSplit","string");if(s.rank!==1)throw new Error(`Input should be Tensor1D but received shape ${s.shape}`);if(r.rank!==0)throw new Error(`Delimiter should be a scalar but received shape ${r.shape}`);const o={skipEmpty:n},i={input:s,delimiter:r},a=R.runKernel(zx,i,o);return{indices:a[0],values:a[1],shape:a[2]}}const YM=D({stringSplit_:XM});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function QM(t,e){const n=I(t,"input","stringToHashBucketFast","string"),s={numBuckets:e};if(e<=0)throw new Error("Number of buckets must be at least 1");const r={input:n};return R.runKernel(Mx,r,s)}const ZM=D({stringToHashBucketFast_:QM});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const JM={fft:Ef,ifft:pu,rfft:Df,irfft:w1},eB={hammingWindow:Dz,hannWindow:G$,frame:H$,stft:Oz},Us={flipLeftRight:zz,grayscaleToRGB:Bz,resizeNearestNeighbor:K$,resizeBilinear:j$,rotateWithOffset:Wz,cropAndResize:Lz,nonMaxSuppression:Gz,nonMaxSuppressionAsync:Zz,nonMaxSuppressionWithScore:eM,nonMaxSuppressionWithScoreAsync:nM,nonMaxSuppressionPadded:rM,nonMaxSuppressionPaddedAsync:iM,threshold:hM,transform:pM},q$={bandPart:mM,gramSchmidt:yM,qr:bM},tB={absoluteDifference:kM,computeWeightedLoss:Gr,cosineDistance:CM,hingeLoss:$M,huberLoss:TM,logLoss:DM,meanSquaredError:AM,sigmoidCrossEntropy:FM,softmaxCrossEntropy:zM},nB={sparseFillEmptyRows:BM,sparseReshape:WM,sparseSegmentMean:GM,sparseSegmentSum:jM},sB={stringNGrams:qM,stringSplit:YM,stringToHashBucketFast:ZM};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class el{getClassName(){return this.constructor.className}static fromConfig(e,n){return new e(n)}}class gs{constructor(){this.classNameMap={}}static getMap(){return gs.instance==null&&(gs.instance=new gs),gs.instance}static register(e){gs.getMap().classNameMap[e.className]=[e,e.fromConfig]}}function Z(t){C(t.className!=null,()=>"Class being registered does not have the static className property defined."),C(typeof t.className=="string",()=>"className is required to be a string, but got type "+typeof t.className),C(t.className.length>0,()=>"Class being registered has an empty-string as its className, which is disallowed."),gs.register(t)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Uo extends el{minimize(e,n=!1,s){const{value:r,grads:o}=this.computeGradients(e,s);if(s!=null){const i=s.map(a=>({name:a.name,tensor:o[a.name]}));this.applyGradients(i)}else this.applyGradients(o);return Se(o),n?r:(r.dispose(),null)}get iterations(){return this.iterations_==null&&(this.iterations_=0),this.iterations_}incrementIterations(){this.iterations_=this.iterations+1}computeGradients(e,n){return jL(e,n)}dispose(){this.iterations_!=null&&Se(this.iterations_)}async saveIterations(){return this.iterations_==null&&(this.iterations_=0),{name:"iter",tensor:ge(this.iterations_,"int32")}}async getWeights(){throw new Error("getWeights() is not implemented for this optimizer yet.")}async setWeights(e){throw new Error(`setWeights() is not implemented for this optimizer class ${this.getClassName()}`)}async extractIterations(e){return this.iterations_=(await e[0].tensor.data())[0],e.slice(1)}}Object.defineProperty(Uo,Symbol.hasInstance,{value:t=>t.minimize!=null&&t.computeGradients!=null&&t.applyGradients!=null});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class X$ extends Uo{constructor(e,n,s=null){super(),this.learningRate=e,this.rho=n,this.epsilon=s,this.accumulatedGrads=[],this.accumulatedUpdates=[],s==null&&(this.epsilon=R.backend.epsilon())}static get className(){return"Adadelta"}applyGradients(e){(Array.isArray(e)?e.map(s=>s.name):Object.keys(e)).forEach((s,r)=>{const o=R.registeredVariables[s],i=!1;this.accumulatedGrads[r]==null&&(this.accumulatedGrads[r]={originalName:`${s}/accum_grad`,variable:P(()=>Re(o).variable(i))}),this.accumulatedUpdates[r]==null&&(this.accumulatedUpdates[r]={originalName:`${s}/accum_var`,variable:P(()=>Re(o).variable(i))});const a=Array.isArray(e)?e[r].tensor:e[s];if(a==null)return;const l=this.accumulatedGrads[r].variable,u=this.accumulatedUpdates[r].variable;P(()=>{const c=Q(A(l,this.rho),A(Ve(a),1-this.rho)),h=A(pe(en(Q(u,this.epsilon)),en(Q(l,this.epsilon))),a),d=Q(A(u,this.rho),A(Ve(h),1-this.rho));l.assign(c),u.assign(d);const p=Q(A(h,-this.learningRate),o);o.assign(p)})}),this.incrementIterations()}dispose(){this.accumulatedUpdates!=null&&(Se(this.accumulatedGrads.map(e=>e.variable)),Se(this.accumulatedUpdates.map(e=>e.variable)))}async getWeights(){const e=[...this.accumulatedGrads,...this.accumulatedUpdates];return[await this.saveIterations()].concat(e.map(n=>({name:n.originalName,tensor:n.variable})))}async setWeights(e){e=await this.extractIterations(e);const n=e.length/2,s=!1;this.accumulatedGrads=e.slice(0,n).map(r=>({originalName:r.name,variable:r.tensor.variable(s)})),this.accumulatedUpdates=e.slice(n,n*2).map(r=>({originalName:r.name,variable:r.tensor.variable(s)}))}getConfig(){return{learningRate:this.learningRate,rho:this.rho,epsilon:this.epsilon}}static fromConfig(e,n){return new e(n.learningRate,n.rho,n.epsilon)}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Y$ extends Uo{constructor(e,n=.1){super(),this.learningRate=e,this.initialAccumulatorValue=n,this.accumulatedGrads=[]}static get className(){return"Adagrad"}applyGradients(e){(Array.isArray(e)?e.map(s=>s.name):Object.keys(e)).forEach((s,r)=>{const o=R.registeredVariables[s];this.accumulatedGrads[r]==null&&(this.accumulatedGrads[r]={originalName:`${s}/accumulator`,variable:P(()=>Ya(o.shape,this.initialAccumulatorValue).variable(!1))});const i=Array.isArray(e)?e[r].tensor:e[s];if(i==null)return;const a=this.accumulatedGrads[r].variable;P(()=>{const l=Q(a,Ve(i));a.assign(l);const u=Q(A(pe(i,en(Q(l,R.backend.epsilon()))),-this.learningRate),o);o.assign(u)})}),this.incrementIterations()}dispose(){this.accumulatedGrads!=null&&Se(this.accumulatedGrads.map(e=>e.variable))}async getWeights(){return[await this.saveIterations()].concat(this.accumulatedGrads.map(e=>({name:e.originalName,tensor:e.variable})))}async setWeights(e){e=await this.extractIterations(e);const n=!1;this.accumulatedGrads=e.map(s=>({originalName:s.name,variable:s.tensor.variable(n)}))}getConfig(){return{learningRate:this.learningRate,initialAccumulatorValue:this.initialAccumulatorValue}}static fromConfig(e,n){return new e(n.learningRate,n.initialAccumulatorValue)}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Q$ extends Uo{constructor(e,n,s,r=null){super(),this.learningRate=e,this.beta1=n,this.beta2=s,this.epsilon=r,this.accumulatedFirstMoment=[],this.accumulatedSecondMoment=[],P(()=>{this.accBeta1=ge(n).variable(),this.accBeta2=ge(s).variable()}),r==null&&(this.epsilon=R.backend.epsilon())}static get className(){return"Adam"}applyGradients(e){const n=Array.isArray(e)?e.map(s=>s.name):Object.keys(e);P(()=>{const s=le(1,this.accBeta1),r=le(1,this.accBeta2);n.forEach((o,i)=>{const a=R.registeredVariables[o],l=!1;this.accumulatedFirstMoment[i]==null&&(this.accumulatedFirstMoment[i]={originalName:`${o}/m`,variable:P(()=>Re(a).variable(l))}),this.accumulatedSecondMoment[i]==null&&(this.accumulatedSecondMoment[i]={originalName:`${o}/v`,variable:P(()=>Re(a).variable(l))});const u=Array.isArray(e)?e[i].tensor:e[o];if(u==null)return;const c=this.accumulatedFirstMoment[i].variable,h=this.accumulatedSecondMoment[i].variable,d=Q(A(c,this.beta1),A(u,1-this.beta1)),p=Q(A(h,this.beta2),A(Ve(u),1-this.beta2)),f=pe(d,s),m=pe(p,r);c.assign(d),h.assign(p);const y=Q(A(pe(f,Q(en(m),this.epsilon)),-this.learningRate),a);a.assign(y)}),this.accBeta1.assign(A(this.accBeta1,this.beta1)),this.accBeta2.assign(A(this.accBeta2,this.beta2))}),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.accBeta2.dispose(),this.accumulatedFirstMoment!=null&&Se(this.accumulatedFirstMoment.map(e=>e.variable)),this.accumulatedSecondMoment!=null&&Se(this.accumulatedSecondMoment.map(e=>e.variable))}async getWeights(){const e=[...this.accumulatedFirstMoment,...this.accumulatedSecondMoment];return[await this.saveIterations()].concat(e.map(n=>({name:n.originalName,tensor:n.variable})))}async setWeights(e){e=await this.extractIterations(e),P(()=>{this.accBeta1.assign($o(this.beta1,this.iterations_+1)),this.accBeta2.assign($o(this.beta2,this.iterations_+1))});const n=e.length/2,s=!1;this.accumulatedFirstMoment=e.slice(0,n).map(r=>({originalName:r.name,variable:r.tensor.variable(s)})),this.accumulatedSecondMoment=e.slice(n,n*2).map(r=>({originalName:r.name,variable:r.tensor.variable(s)}))}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon}}static fromConfig(e,n){return new e(n.learningRate,n.beta1,n.beta2,n.epsilon)}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Z$ extends Uo{constructor(e,n,s,r=null,o=0){super(),this.learningRate=e,this.beta1=n,this.beta2=s,this.epsilon=r,this.decay=o,this.accumulatedFirstMoment=[],this.accumulatedWeightedInfNorm=[],P(()=>{this.iteration=ge(0).variable(),this.accBeta1=ge(n).variable()}),r==null&&(this.epsilon=R.backend.epsilon())}static get className(){return"Adamax"}applyGradients(e){const n=Array.isArray(e)?e.map(s=>s.name):Object.keys(e);P(()=>{const s=le(1,this.accBeta1),r=pe(-this.learningRate,Q(A(this.iteration,this.decay),1));n.forEach((o,i)=>{const a=R.registeredVariables[o],l=!1;this.accumulatedFirstMoment[i]==null&&(this.accumulatedFirstMoment[i]={originalName:`${o}/m`,variable:Re(a).variable(l)}),this.accumulatedWeightedInfNorm[i]==null&&(this.accumulatedWeightedInfNorm[i]={originalName:`${o}/v`,variable:Re(a).variable(l)});const u=Array.isArray(e)?e[i].tensor:e[o];if(u==null)return;const c=this.accumulatedFirstMoment[i].variable,h=this.accumulatedWeightedInfNorm[i].variable,d=Q(A(c,this.beta1),A(u,1-this.beta1)),p=A(h,this.beta2),f=Nt(u),m=Ur(p,f);c.assign(d),h.assign(m);const y=Q(A(pe(r,s),pe(d,Q(m,this.epsilon))),a);a.assign(y)}),this.iteration.assign(Q(this.iteration,1)),this.accBeta1.assign(A(this.accBeta1,this.beta1))}),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.iteration.dispose(),this.accumulatedFirstMoment!=null&&Se(this.accumulatedFirstMoment.map(e=>e.variable)),this.accumulatedWeightedInfNorm!=null&&Se(this.accumulatedWeightedInfNorm.map(e=>e.variable))}async getWeights(){throw new Error("getWeights() is not implemented for Adamax yet.")}async setWeights(e){throw new Error("setWeights() is not implemented for Adamax yet.")}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon,decay:this.decay}}static fromConfig(e,n){return new e(n.learningRate,n.beta1,n.beta2,n.epsilon,n.decay)}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class R1 extends Uo{constructor(e){super(),this.learningRate=e,this.setLearningRate(e)}static get className(){return"SGD"}applyGradients(e){(Array.isArray(e)?e.map(s=>s.name):Object.keys(e)).forEach((s,r)=>{const o=Array.isArray(e)?e[r].tensor:e[s];if(o==null)return;const i=R.registeredVariables[s];P(()=>{const a=Q(A(this.c,o),i);i.assign(a)})}),this.incrementIterations()}setLearningRate(e){this.learningRate=e,this.c!=null&&this.c.dispose(),this.c=Ft(ge(-e))}dispose(){this.c.dispose()}async getWeights(){return[await this.saveIterations()]}async setWeights(e){if(e=await this.extractIterations(e),e.length!==0)throw new Error("SGD optimizer does not have settable weights.")}getConfig(){return{learningRate:this.learningRate}}static fromConfig(e,n){return new e(n.learningRate)}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class J$ extends R1{constructor(e,n,s=!1){super(e),this.learningRate=e,this.momentum=n,this.useNesterov=s,this.accumulations=[],this.m=ge(this.momentum)}static get className(){return"Momentum"}applyGradients(e){(Array.isArray(e)?e.map(s=>s.name):Object.keys(e)).forEach((s,r)=>{const o=R.registeredVariables[s];this.accumulations[r]==null&&(this.accumulations[r]={originalName:`${s}/momentum`,variable:P(()=>Re(o).variable(!1))});const i=this.accumulations[r].variable,a=Array.isArray(e)?e[r].tensor:e[s];a!=null&&P(()=>{let l;const u=Q(A(this.m,i),a);this.useNesterov?l=Q(A(this.c,Q(a,A(u,this.m))),o):l=Q(A(this.c,u),o),i.assign(u),o.assign(l)})}),this.incrementIterations()}dispose(){this.m.dispose(),this.accumulations!=null&&Se(this.accumulations.map(e=>e.variable))}setMomentum(e){this.momentum=e}async getWeights(){return[await this.saveIterations()].concat(this.accumulations.map(e=>({name:e.originalName,tensor:e.variable})))}async setWeights(e){e=await this.extractIterations(e);const n=!1;this.accumulations=e.map(s=>({originalName:s.name,variable:s.tensor.variable(n)}))}getConfig(){return{learningRate:this.learningRate,momentum:this.momentum,useNesterov:this.useNesterov}}static fromConfig(e,n){return new e(n.learningRate,n.momentum,n.useNesterov)}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class eI extends Uo{constructor(e,n=.9,s=0,r=null,o=!1){if(super(),this.learningRate=e,this.decay=n,this.momentum=s,this.epsilon=r,this.accumulatedMeanSquares=[],this.accumulatedMoments=[],this.accumulatedMeanGrads=[],this.centered=o,r==null&&(this.epsilon=R.backend.epsilon()),e==null)throw new Error("learningRate for RMSPropOptimizer must be defined.")}static get className(){return"RMSProp"}applyGradients(e){(Array.isArray(e)?e.map(s=>s.name):Object.keys(e)).forEach((s,r)=>{const o=R.registeredVariables[s],i=!1;this.accumulatedMeanSquares[r]==null&&(this.accumulatedMeanSquares[r]={originalName:`${s}/rms`,variable:P(()=>Re(o).variable(i))}),this.accumulatedMoments[r]==null&&(this.accumulatedMoments[r]={originalName:`${s}/momentum`,variable:P(()=>Re(o).variable(i))}),this.accumulatedMeanGrads[r]==null&&this.centered&&(this.accumulatedMeanGrads[r]={originalName:`${s}/mg`,variable:P(()=>Re(o).variable(i))});const a=Array.isArray(e)?e[r].tensor:e[s];if(a==null)return;const l=this.accumulatedMeanSquares[r].variable,u=this.accumulatedMoments[r].variable;P(()=>{const c=Q(A(l,this.decay),A(Ve(a),1-this.decay));if(this.centered){const h=this.accumulatedMeanGrads[r].variable,d=Q(A(h,this.decay),A(a,1-this.decay)),p=pe(A(a,this.learningRate),en(le(c,Q(Ve(d),this.epsilon)))),f=Q(A(u,this.momentum),p);l.assign(c),h.assign(d),u.assign(f);const m=le(o,f);o.assign(m)}else{const h=Q(A(l,this.decay),A(Ve(a),1-this.decay)),d=Q(A(u,this.momentum),pe(A(a,this.learningRate),en(Q(h,this.epsilon))));l.assign(h),u.assign(d);const p=le(o,d);o.assign(p)}})}),this.incrementIterations()}dispose(){this.accumulatedMeanSquares!=null&&Se(this.accumulatedMeanSquares.map(e=>e.variable)),this.accumulatedMeanGrads!=null&&this.centered&&Se(this.accumulatedMeanGrads.map(e=>e.variable)),this.accumulatedMoments!=null&&Se(this.accumulatedMoments.map(e=>e.variable))}async getWeights(){const e=[...this.accumulatedMeanSquares,...this.accumulatedMoments];return this.centered&&e.push(...this.accumulatedMeanGrads),[await this.saveIterations()].concat(e.map(n=>({name:n.originalName,tensor:n.variable})))}async setWeights(e){e=await this.extractIterations(e);const n=this.centered?e.length/3:e.length/2,s=!1;this.accumulatedMeanSquares=e.slice(0,n).map(r=>({originalName:r.name,variable:r.tensor.variable(s)})),this.accumulatedMoments=e.slice(n,n*2).map(r=>({originalName:r.name,variable:r.tensor.variable(s)})),this.centered&&(this.accumulatedMeanGrads=e.slice(n*2,n*3).map(r=>({originalName:r.name,variable:r.tensor.variable(s)})))}getConfig(){return{learningRate:this.learningRate,decay:this.decay,momentum:this.momentum,epsilon:this.epsilon,centered:this.centered}}static fromConfig(e,n){return new e(n.learningRate,n.decay,n.momentum,n.epsilon,n.centered)}}/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const rB=[X$,Y$,Q$,Z$,J$,eI,R1];function oB(){for(const t of rB)Z(t)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const iB="model",aB=".json",lB=".weights.bin";function wv(t){return new Promise(e=>setTimeout(e)).then(t)}class Si{constructor(e){if(!U().getBool("IS_BROWSER"))throw new Error("browserDownloads() cannot proceed because the current environment is not a browser.");e.startsWith(Si.URL_SCHEME)&&(e=e.slice(Si.URL_SCHEME.length)),(e==null||e.length===0)&&(e=iB),this.modelJsonFileName=e+aB,this.weightDataFileName=e+lB}async save(e){if(typeof document>"u")throw new Error("Browser downloads are not supported in this environment since `document` is not present");const n=window.URL.createObjectURL(new Blob([e.weightData],{type:"application/octet-stream"}));if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserDownloads.save() does not support saving model topology in binary formats yet.");{const s=[{paths:["./"+this.weightDataFileName],weights:e.weightSpecs}],r=vN(e,s),o=window.URL.createObjectURL(new Blob([JSON.stringify(r)],{type:"application/json"})),i=this.modelJsonAnchor==null?document.createElement("a"):this.modelJsonAnchor;if(i.download=this.modelJsonFileName,i.href=o,await wv(()=>i.dispatchEvent(new MouseEvent("click"))),e.weightData!=null){const a=this.weightDataAnchor==null?document.createElement("a"):this.weightDataAnchor;a.download=this.weightDataFileName,a.href=n,await wv(()=>a.dispatchEvent(new MouseEvent("click")))}return{modelArtifactsInfo:Cc(e)}}}}Si.URL_SCHEME="downloads://";class uB{constructor(e){if(e==null||e.length<1)throw new Error(`When calling browserFiles, at least 1 file is required, but received ${e}`);this.jsonFile=e[0],this.weightsFiles=e.slice(1)}async load(){return new Promise((e,n)=>{const s=new FileReader;s.onload=r=>{const o=JSON.parse(r.target.result),i=o.modelTopology;if(i==null){n(new Error(`modelTopology field is missing from file ${this.jsonFile.name}`));return}if(o.weightsManifest==null){n(new Error(`weightManifest field is missing from file ${this.jsonFile.name}`));return}if(this.weightsFiles.length===0){e({modelTopology:i});return}const l=Kx(o,u=>this.loadWeights(u));e(l)},s.onerror=r=>n(`Failed to read model topology and weights manifest JSON from file '${this.jsonFile.name}'. BrowserFiles supports loading Keras-style tf.Model artifacts only.`),s.readAsText(this.jsonFile)})}loadWeights(e){const n=[],s=[];for(const i of e)n.push(...i.weights),s.push(...i.paths);const r=this.checkManifestAndWeightFiles(e),o=s.map(i=>this.loadWeightsFile(i,r[i]));return Promise.all(o).then(i=>[n,pf(i)])}loadWeightsFile(e,n){return new Promise((s,r)=>{const o=new FileReader;o.onload=i=>{const a=i.target.result;s(a)},o.onerror=i=>r(`Failed to weights data from file of path '${e}'.`),o.readAsArrayBuffer(n)})}checkManifestAndWeightFiles(e){const n=[],s=this.weightsFiles.map(o=>yv(o.name)),r={};for(const o of e)o.paths.forEach(i=>{const a=yv(i);if(n.indexOf(a)!==-1)throw new Error(`Duplicate file basename found in weights manifest: '${a}'`);if(n.push(a),s.indexOf(a)===-1)throw new Error(`Weight file with basename '${a}' is not provided.`);r[i]=this.weightsFiles[s.indexOf(a)]});if(n.length!==this.weightsFiles.length)throw new Error(`Mismatch in the number of files in weights manifest (${n.length}) and the number of weight files provided (${this.weightsFiles.length}).`);return r}}const cB=t=>U().getBool("IS_BROWSER")&&!Array.isArray(t)&&t.startsWith(Si.URL_SCHEME)?hB(t.slice(Si.URL_SCHEME.length)):null;it.registerSaveRouter(cB);function hB(t="model"){return new Si(t)}function dB(t){return new uB(t)}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vv(t,e,n,s){i(t),n=n==null?0:n,s=s==null?1:s,a(n,s);let r=0;const o=l=>(l.then(u=>{const c=n+ ++r/t.length*(s-n);return e(c),u}),l);function i(l){C(l!=null&&Array.isArray(l)&&l.length>0,()=>"promises must be a none empty array")}function a(l,u){C(l>=0&&l<=1,()=>`Progress fraction must be in range [0, 1], but got startFraction ${l}`),C(u>=0&&u<=1,()=>`Progress fraction must be in range [0, 1], but got endFraction ${u}`),C(u>=l,()=>`startFraction must be no more than endFraction, but got startFraction ${l} and endFraction ${u}`)}return Promise.all(t.map(o))}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function tI(t,e){e==null&&(e={});const n=e.fetchFunc==null?U().platform.fetch:e.fetchFunc,s=t.map(h=>n(h,e.requestInit,{isBinary:!0})),r=0,o=.5,a=(e.onProgress==null?await Promise.all(s):await vv(s,e.onProgress,r,o)).map(h=>h.arrayBuffer()),l=.5,u=1;return e.onProgress==null?await Promise.all(a):await vv(a,e.onProgress,l,u)}async function pB(t,e="",n,s){return nI(i=>tI(i,{requestInit:s}))(t,e,n)}function nI(t){return async(e,n="",s)=>{const r=e.map(()=>!1),o={},i=s!=null?s.map(()=>!1):[],a=[];if(e.forEach((p,f)=>{let m=0;p.weights.forEach(y=>{const g="quantization"in y?y.quantization.dtype:y.dtype,x=ry[g]*H(y.shape),b=()=>{r[f]=!0,o[f]==null&&(o[f]=[]),o[f].push({manifestEntry:y,groupOffset:m,sizeBytes:x})};s!=null?s.forEach((w,k)=>{w===y.name&&(b(),i[k]=!0)}):b(),a.push(y.name),m+=x})}),!i.every(p=>p)){const p=s.filter((f,m)=>!i[m]);throw new Error(`Could not find weights in manifest with names: ${p.join(", ")}. 
Manifest JSON has weights with names: ${a.join(", ")}.`)}const l=r.reduce((p,f,m)=>(f&&p.push(m),p),[]),u=[];l.forEach(p=>{e[p].paths.forEach(f=>{const m=n+(n.endsWith("/")?"":"/")+f;u.push(m)})});const c=await t(u),h={};let d=0;return l.forEach(p=>{const f=e[p].paths.length;let m=0;for(let w=0;w<f;w++)m+=c[d+w].byteLength;const y=new ArrayBuffer(m),g=new Uint8Array(y);let x=0;for(let w=0;w<f;w++){const k=new Uint8Array(c[d+w]);g.set(k,x),x+=k.byteLength}o[p].forEach(w=>{const k=y.slice(w.groupOffset,w.groupOffset+w.sizeBytes),S=wN(k,[w.manifestEntry]);for(const N in S)h[N]=S[N]}),d+=f}),h}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const fB="application/octet-stream",mB="application/json";class A1{constructor(e,n){if(this.DEFAULT_METHOD="POST",n==null&&(n={}),this.weightPathPrefix=n.weightPathPrefix,this.onProgress=n.onProgress,this.weightUrlConverter=n.weightUrlConverter,n.fetchFunc!=null?(C(typeof n.fetchFunc=="function",()=>"Must pass a function that matches the signature of `fetch` (see https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API)"),this.fetch=n.fetchFunc):this.fetch=U().platform.fetch,C(e!=null&&e.length>0,()=>"URL path for http must not be null, undefined or empty."),Array.isArray(e)&&C(e.length===2,()=>`URL paths for http must have a length of 2, (actual length is ${e.length}).`),this.path=e,n.requestInit!=null&&n.requestInit.body!=null)throw new Error("requestInit is expected to have no pre-existing body, but has one.");this.requestInit=n.requestInit||{}}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserHTTPRequest.save() does not support saving model topology in binary formats yet.");const n=Object.assign({method:this.DEFAULT_METHOD},this.requestInit);n.body=new FormData;const s=[{paths:["./model.weights.bin"],weights:e.weightSpecs}],r=vN(e,s);n.body.append("model.json",new Blob([JSON.stringify(r)],{type:mB}),"model.json"),e.weightData!=null&&n.body.append("model.weights.bin",new Blob([e.weightData],{type:fB}),"model.weights.bin");const o=await this.fetch(this.path,n);if(o.ok)return{modelArtifactsInfo:Cc(e),responses:[o]};throw new Error(`BrowserHTTPRequest.save() failed due to HTTP response status ${o.status}.`)}async load(){const e=await this.fetch(this.path,this.requestInit);if(!e.ok)throw new Error(`Request to ${this.path} failed with status code ${e.status}. Please verify this URL points to the model JSON of the model to load.`);let n;try{n=await e.json()}catch{let i=`Failed to parse model JSON of response from ${this.path}.`;throw this.path.endsWith(".pb")?i+=" Your path contains a .pb file extension. Support for .pb models have been removed in TensorFlow.js 1.0 in favor of .json models. You can re-convert your Python TensorFlow model using the TensorFlow.js 1.0 conversion scripts or you can convert your.pb models with the 'pb2json'NPM script in the tensorflow/tfjs-converter repository.":i+=" Please make sure the server is serving valid JSON for this request.",new Error(i)}const s=n.modelTopology,r=n.weightsManifest;if(s==null&&r==null)throw new Error(`The JSON from HTTP path ${this.path} contains neither model topology or manifest for weights.`);return Kx(n,o=>this.loadWeights(o))}async loadWeights(e){const n=Array.isArray(this.path)?this.path[1]:this.path,[s,r]=gB(n),o=this.weightPathPrefix||s,i=SN(e),a=[],l=[];for(const c of e)for(const h of c.paths)this.weightUrlConverter!=null?l.push(this.weightUrlConverter(h)):a.push(o+h+r);this.weightUrlConverter&&a.push(...await Promise.all(l));const u=await tI(a,{requestInit:this.requestInit,fetchFunc:this.fetch,onProgress:this.onProgress});return[i,pf(u)]}}A1.URL_SCHEME_REGEX=/^https?:\/\//;function gB(t){const e=t.lastIndexOf("/"),n=t.lastIndexOf("?"),s=t.substring(0,e),r=n>e?t.substring(n):"";return[s+"/",r]}function py(t){return t.match(A1.URL_SCHEME_REGEX)!=null}const sI=(t,e)=>{if(typeof fetch>"u"&&(e==null||e.fetchFunc==null))return null;{let n=!0;if(Array.isArray(t)?n=t.every(s=>py(s)):n=py(t),n)return _1(t,e)}return null};it.registerSaveRouter(sI);it.registerLoadRouter(sI);function _1(t,e){return new A1(t,e)}function yB(t,e){return _1(t,e)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Fm{constructor(e){this.modelArtifacts=e}load(){return this.modelArtifacts}}class rI{constructor(e){this.saveHandler=e}save(e){return this.saveHandler(e)}}class xB{constructor(e){e.load&&(this.load=()=>Promise.resolve(e.load())),e.save&&(this.save=n=>Promise.resolve(e.save(n)))}}function bB(t,e,n,s){const r=arguments;return new xB(oI(...r))}function oI(t,e,n,s){return arguments.length===1?t.modelTopology!=null||t.weightSpecs!=null?new Fm(t):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new Fm({modelTopology:t})):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new Fm({modelTopology:t,weightSpecs:e,weightData:n,trainingConfig:s}))}function wB(t){return new rI(t)}function vB(t){return new rI(t)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const iI=Object.freeze(Object.defineProperty({__proto__:null,browserFiles:dB,browserHTTPRequest:yB,concatenateArrayBuffers:pf,decodeWeights:wN,encodeWeights:oy,fromMemory:bB,fromMemorySync:oI,getLoadHandlers:TO,getModelArtifactsForJSON:Kx,getModelArtifactsForJSONSync:kN,getModelArtifactsInfoForJSON:Cc,getSaveHandlers:CN,getWeightSpecs:SN,http:_1,isHTTPScheme:py,loadWeights:pB,registerLoadRouter:IO,registerSaveRouter:$O,weightsLoaderFactory:nI,withSaveHandler:wB,withSaveHandlerSync:vB,copyModel:WO,listModels:BO,moveModel:UO,removeModel:VO},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let qo;function kB(t,e=3){if(e>4)throw new Error("Cannot construct Tensor with more than 4 channels from pixels.");if(t==null)throw new Error("pixels passed to tf.browser.fromPixels() can not be null");let n=!1,s=!1,r=!1,o=!1,i=!1,a=!1;if(t.data instanceof Uint8Array)n=!0;else if(typeof ImageData<"u"&&t instanceof ImageData)s=!0;else if(typeof HTMLVideoElement<"u"&&t instanceof HTMLVideoElement)r=!0;else if(typeof HTMLImageElement<"u"&&t instanceof HTMLImageElement)o=!0;else if(t.getContext!=null)i=!0;else if(typeof ImageBitmap<"u"&&t instanceof ImageBitmap)a=!0;else throw new Error(`pixels passed to tf.browser.fromPixels() must be either an HTMLVideoElement, HTMLImageElement, HTMLCanvasElement, ImageData in browser, or OffscreenCanvas, ImageData in webworker or {data: Uint32Array, width: number, height: number}, but was ${t.constructor.name}`);if(Yg(qg,R.backendName)!=null){const f={pixels:t},m={numChannels:e};return R.runKernel(qg,f,m)}const[u,c]=r?[t.videoWidth,t.videoHeight]:[t.width,t.height];let h;if(i)h=t.getContext("2d").getImageData(0,0,u,c).data;else if(s||n)h=t.data;else if(o||r||a){if(qo==null)if(typeof document>"u")if(typeof OffscreenCanvas<"u"&&typeof OffscreenCanvasRenderingContext2D<"u")qo=new OffscreenCanvas(1,1).getContext("2d");else throw new Error("Cannot parse input in current context. Reason: OffscreenCanvas Context2D rendering is not supported.");else qo=document.createElement("canvas").getContext("2d",{willReadFrequently:!0});qo.canvas.width=u,qo.canvas.height=c,qo.drawImage(t,0,0,u,c),h=qo.getImageData(0,0,u,c).data}let d;if(e===4)d=new Int32Array(h);else{const f=u*c;d=new Int32Array(f*e);for(let m=0;m<f;m++)for(let y=0;y<e;++y)d[m*e+y]=h[m*4+y]}return A$(d,[c,u,e],"int32")}const SB=D({fromPixels_:kB});function O1(t,e){const n=t.shape.length,s=e.shape.length;if(n<1)throw new Error(`tf.gatherND() expects the input to be rank 1 or higher, but the rank was ${n}.`);if(s<1)throw new Error(`tf.gatherND() expects the indices to be rank 1 or higher, but the rank was ${s}.`);if(e.dtype!=="int32")throw new Error(`tf.gatherND() expects the indices to be int32 type, but the dtype was ${e.dtype}.`);if(e.shape[s-1]>n)throw new Error(`index innermost dimension length must be <= tensor rank; saw: ${e.shape[s-1]} vs. ${n}`);if(H(t.shape)===0)throw new Error(`Requested more than 0 entries, but input is empty. Input shape: ${t.shape}.`);const r=e.shape,o=r[r.length-1];let i=1;for(let h=0;h<r.length-1;++h)i*=r[h];const a=t.shape,l=r.slice();l.pop();let u=1;for(let h=o;h<n;++h)u*=a[h],l.push(a[h]);const c=[...me(t.shape).map(h=>h/u),1].slice(0,o);return[l,i,u,c]}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const fy=-2,CB=-1;function F1(t,e,n){const s=t.shape.length;C(s===e.length,()=>`Error in slice${s}D: Length of begin ${e} must match the rank of the array (${s}).`),C(s===n.length,()=>`Error in slice${s}D: Length of size ${n} must match the rank of the array (${s}).`);for(let r=0;r<s;++r)C(e[r]+n[r]<=t.shape[r],()=>`Error in slice${s}D: begin[${r}] + size[${r}] (${e[r]+n[r]}) would overflow input.shape[${r}] (${t.shape[r]})`)}function NB(t){const e=[];let n=0;for(;t>0;)t&1&&e.push(n),t/=2,n++;return e}function L1(t,e,n){const s=[];for(let r=0;r<t.length;r++)s[r]=Math.ceil((e[r]-t[r])/n[r]);return s}function aI(t,e,n,s){const r=[...t];for(let o=r.length;o<s.length;o++)r.push(1);for(let o=0;o<n;o++)o===0?r[e]=1:(r.splice(e,0,1),r.pop());return r}function lI(t,e,n){return n<=t?n:n-(e-1)}function uI(t,e){const n=[];for(let s=0;s<t;s++)n.push(e+s);return n}function $B(t,e,n,s,r,o,i,a,l){const u=t.length;let c=new Array(u),h=new Array(u),d=new Array(u);if(e.length&&n>0){const p=e[0],f=n+1;c=cI(i,p,f,s,t),h=hI(a,p,f,r,t),d=aI(o,p,f,t)}else for(let p=0;p<u;p++)c[p]=pI(i,s,o,t,p,l),h[p]=fI(a,r,o,t,p,l),d[p]=dI(o,p,l);return{begin:c,end:h,strides:d}}function cI(t,e,n,s,r){const o=[...r],i=uI(n,e);for(let a=0;a<o.length;a++)if(i.indexOf(a)>-1)o[a]=0;else{const l=lI(e,n,a);let u=s[l];t&1<<l&&(u=0),o[a]=u}return o}function hI(t,e,n,s,r){const o=[...r],i=uI(n,e);for(let a=0;a<o.length;a++)if(i.indexOf(a)>-1)o[a]=Number.MAX_SAFE_INTEGER;else{const l=lI(e,n,a);let u=s[l];t&1<<l&&(u=Number.MAX_SAFE_INTEGER),o[a]=u}for(let a=0;a<o.length;a++){const l=r[a];o[a]<0&&(o[a]+=l),o[a]=yi(0,o[a],r[a])}return o}function dI(t,e,n){let s=t[e];return(n&1<<e||s==null)&&(s=1),s}function pI(t,e,n,s,r,o){let i=e[r];const a=n[r]||1;(t&1<<r||o&1<<r||i==null)&&(a>0?i=Number.MIN_SAFE_INTEGER:i=Number.MAX_SAFE_INTEGER);const l=s[r];return i<0&&(i+=l),i=yi(0,i,l-1),i}function fI(t,e,n,s,r,o){let i=e[r];const a=n[r]||1;(t&1<<r||o&1<<r||i==null)&&(a>0?i=Number.MAX_SAFE_INTEGER:i=Number.MIN_SAFE_INTEGER);const l=s[r];return i<0&&(i+=l),a>0?i=yi(0,i,l):i=yi(-1,i,l-1),i}function P1(t,e,n){let s=n.length;for(let r=0;r<n.length;r++)if(n[r]>1){s=r;break}for(let r=s+1;r<n.length;r++)if(e[r]>0||n[r]!==t[r])return!1;return!0}function z1(t,e){let n=t.length>0?t[t.length-1]:1;for(let s=0;s<t.length-1;s++)n+=t[s]*e[s];return n}function Ff(t,e,n){let s;const r=t.shape.length;typeof e=="number"?s=[e,...new Array(r-1).fill(0)]:e.length<r?s=e.concat(new Array(r-e.length).fill(0)):s=e.slice(),s.forEach(i=>{C(i!==-1,()=>"slice() does not support negative begin indexing.")});let o;return n==null?o=new Array(r).fill(-1):typeof n=="number"?o=[n,...new Array(r-1).fill(-1)]:n.length<r?o=n.concat(new Array(r-n.length).fill(-1)):o=n,o=o.map((i,a)=>i>=0?i:(C(i===-1,()=>`Negative size values should be exactly -1 but got ${i} for the slice() size at index ${a}.`),t.shape[a]-s[a])),[s,o]}function M1(t,e,n,s,r,o,i,a,l){let u;if(s==null?(u=new Array(e.length),u.fill(1)):u=s,i!=null&&(i&i-1)!==0)throw new Error("Multiple ellipses in slice is not allowed.");let c=!1;const h={dims:u.length,numAddAxisAfterEllipsis:0,begin:e.slice(),end:n.slice(),strides:u.slice(),beginMask:r,endMask:o,ellipsisMask:i,newAxisMask:a,shrinkAxisMask:l};for(let b=0;b<h.dims;b++)c&&(1<<b&a)!==0&&h.numAddAxisAfterEllipsis++,1<<b&i&&(c=!0);c||(h.ellipsisMask|=1<<h.dims,h.dims++);const d={dims:t.length,beginMask:0,endMask:0,beginValid:!1,endValid:!1};IB(h,d);let p=!0,f=!0,m=!0;const y=[],g=[];for(let b=0;b<t.length;++b){if(d.strides[b]===0)throw Error(`strides[${b}] must be non-zero`);const w=!!(d.shrinkAxisMask&1<<b),k=t[b];if(k===-1){y.push(w?1:-1);continue}const S=[d.beginMask&1<<b,d.endMask&1<<b],N=[d.strides[b]>0?0:-1,d.strides[b]>0?k:k-1];if(w&&d.strides[b]<=0)throw Error("only stride 1 allowed on non-range indexing.");m=m&&d.strides[b]===1;const $=!!(d.beginMask&1<<b&&d.endMask&1<<b);if(d.beginValid&&d.endValid){if(w){const M=d.begin[b]<0?k+d.begin[b]:d.begin[b];if(d.begin[b]=M,d.end[b]=d.begin[b]+1,M<0||M>=k)throw Error(`slice index ${d.begin[b]} of dimension ${b} out of bounds.`)}else d.begin[b]=kv(d.begin[b],0,d.strides[b],k,S,N),d.end[b]=kv(d.end[b],1,d.strides[b],k,S,N);const F=d.strides[b]===1&&d.begin[b]===0&&d.end[b]===k;p=p&&F,f=f&&(b===0&&d.strides[b]===1||F)}else p=p&&d.strides[b]===1&&$,f=f&&(b===0&&d.strides[b]===1||$);let T,E=!1;if(d.beginValid&&d.endValid?(T=d.end[b]-d.begin[b],E=!0):w?(T=1,E=!0):$&&k>=0&&(d.strides[b]<0?T=-k:T=k,E=!0),E){let F;T===0||T<0!=d.strides[b]<0?F=0:F=Math.trunc(T/d.strides[b])+(T%d.strides[b]!==0?1:0),y.push(F)}else y.push(-1)}for(let b=0;b<d.finalShapeGatherIndices.length;++b){const w=d.finalShapeGatherIndices[b];w>=0?g.push(y[w]):w===fy&&g.push(1)}return{finalShapeSparse:g.filter((b,w)=>d.finalShapeGatherIndices[w]!==fy),finalShape:g,isIdentity:p,sliceDim0:f,isSimpleSlice:m,begin:d.begin,end:d.end,strides:d.strides}}function IB(t,e){e.beginMask=0,e.endMask=0,e.shrinkAxisMask=0;let n=0;e.beginValid=t.begin!=null,e.endValid=t.end!=null,e.begin=new Array(e.dims),e.end=new Array(e.dims),e.strides=new Array(e.dims),e.finalShapeGatherIndices=[],e.finalShapeGatherIndicesSparse=[],e.inputShapeGatherIndicesSparse=new Array(e.dims);for(let s=0;s<t.dims;s++)if(1<<s&t.ellipsisMask){const r=Math.min(e.dims-(t.dims-s)+1+t.numAddAxisAfterEllipsis,e.dims);for(;n<r;n++)e.begin[n]=0,e.end[n]=0,e.strides[n]=1,e.beginMask|=1<<n,e.endMask|=1<<n,e.finalShapeGatherIndices.push(n),e.finalShapeGatherIndicesSparse.push(-1),e.inputShapeGatherIndicesSparse[n]=s}else if(1<<s&t.newAxisMask)e.finalShapeGatherIndices.push(fy),e.finalShapeGatherIndicesSparse.push(-1);else{if(n===e.begin.length)throw Error(`Index out of range using input dim ${n}; input has only ${e.dims} dims, ${e.begin.length}.`);t.begin!=null&&(e.begin[n]=t.begin[s]),t.end!=null&&(e.end[n]=t.end[s]),e.strides[n]=t.strides[s],t.beginMask&1<<s&&(e.beginMask|=1<<n),t.endMask&1<<s&&(e.endMask|=1<<n),t.shrinkAxisMask&1<<s?(e.finalShapeGatherIndices.push(CB),e.finalShapeGatherIndicesSparse.push(-1),e.shrinkAxisMask|=1<<n):(e.finalShapeGatherIndices.push(n),e.finalShapeGatherIndicesSparse.push(s)),e.inputShapeGatherIndicesSparse[n]=s,n++}}function kv(t,e,n,s,r,o){if(r[e])return n>0?o[e]:o[e+1&1];{const i=t<0?s+t:t;return i<o[0]?o[0]:i>o[1]?o[1]:i}}const TB=Object.freeze(Object.defineProperty({__proto__:null,assertParamsValid:F1,maskToAxes:NB,computeOutShape:L1,stridesWithElidedDims:aI,getNormalizedAxes:$B,startIndicesWithElidedDims:cI,stopIndicesWithElidedDims:hI,stridesForAxis:dI,startForAxis:pI,stopForAxis:fI,isSliceContinous:P1,computeFlatOffset:z1,parseSliceParams:Ff,sliceInfo:M1},Symbol.toStringTag,{value:"Module"}));/** @license See the LICENSE file. *//**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class EB{static sgd(e){return new R1(e)}static momentum(e,n,s=!1){return new J$(e,n,s)}static rmsprop(e,n=.9,s=0,r=null,o=!1){return new eI(e,n,s,r,o)}static adam(e=.001,n=.9,s=.999,r=null){return new Q$(e,n,s,r)}static adadelta(e=.001,n=.95,s=null){return new X$(e,n,s)}static adamax(e=.002,n=.9,s=.999,r=null,o=0){return new Z$(e,n,s,r,o)}static adagrad(e,n=.1){return new Y$(e,n)}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ui=EB;/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const DB=(()=>typeof requestAnimationFrame<"u"?requestAnimationFrame:typeof setImmediate<"u"?setImmediate:t=>t())();function mI(){return new Promise(t=>DB(()=>t()))}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function B1(t,e){const n=t[0].length;t.forEach((r,o)=>{C(r.length===n,()=>`Error in concat${n}D: rank of tensors[${o}] must be the same as the rank of the rest (${n})`)}),C(e>=0&&e<n,()=>`Error in concat${n}D: axis must be between 0 and ${n-1}.`);const s=t[0];t.forEach((r,o)=>{for(let i=0;i<n;i++)C(i===e||r[i]===s[i],()=>`Error in concat${n}D: Shape of tensors[${o}] (${r}) does not match the shape of the rest (${s}) along the non-concatenated axis ${o}.`)})}function mr(t,e){const n=t[0].slice();for(let s=1;s<t.length;s++)n[e]+=t[s][e];return n}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var Ws;(function(t){t[t.FIRST_DIM_SIZE=0]="FIRST_DIM_SIZE",t[t.VALUE_ROWIDS=1]="VALUE_ROWIDS",t[t.ROW_LENGTHS=2]="ROW_LENGTHS",t[t.ROW_SPLITS=3]="ROW_SPLITS",t[t.ROW_LIMITS=4]="ROW_LIMITS",t[t.ROW_STARTS=5]="ROW_STARTS"})(Ws||(Ws={}));function gI(t,e,n){let s=new Array;if(n==null&&e==null)return s;if(e==null)for(;s.length<t+n.length;)s.push(-1);else s=e.slice();if(n==null)return s;if(t+n.length!==s.length)throw new Error(`rt input.shape and shape=${e} are incompatible: rt input.rank = ${t+n.length}, but shape.rank = ${s.length}`);for(let r=1;r<n.length;++r){const o=n[r],i=s[s.length-n.length+r],a=s[i];if(o>=0)if(a>=0){if(a!==o)throw new Error(`rt input.shape and shape=${e} are incompatible: rt input.shape[${r+t}] = ${o} but shape[${r+t}] = ${a}`)}else s[i]=o}return s}function yI(t){const e={FIRST_DIM_SIZE:Ws.FIRST_DIM_SIZE,VALUE_ROWIDS:Ws.VALUE_ROWIDS,ROW_LENGTHS:Ws.ROW_LENGTHS,ROW_SPLITS:Ws.ROW_SPLITS,ROW_LIMITS:Ws.ROW_LIMITS,ROW_STARTS:Ws.ROW_STARTS},n=[];for(const s of t)if(s in e)n.push(e[s]);else break;return n}function xI(t){return t.length===0?0:t[0]===Ws.FIRST_DIM_SIZE?t.length-1:t.length}function bI(t,e){if(t==null||e==null)return;const n=t.length,s=e.length;if(n>=s)throw new Error(`defaultValue.shape=${t} and ragged tensor flatValues.shape=${e}, are incompatible: defaultValue.rank = ${n} must be less than ragged tensor input flatValues.rank = ${s})`);for(let r=0;r<Math.min(n,s-1);++r){const o=t[r],i=e[r+1];if(o>=0&&i>=0&&o!==1&&o!==i)throw new Error(`defaultValue.shape=${t}, and ragged tensor input flatValues.shape=${e} are incompatible: defaultValue.shape[${r-t.length}] = ${o} but ragged tensor input.flatValues.shape[${r-t.length}] = ${i}`)}}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const V1=30;function Lf(t){return t<=V1?t:Hg(t,Math.floor(Math.sqrt(t)))}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function W1(t,e,n){const s=n*(typeof t=="number"?t:t[0]),r=e*(typeof t=="number"?t:t[1]);return[s,r]}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Fc(t,e,n,s=!0){let r=[];if(s)r=r.concat(e.slice(0)),r.push(t[0]/n),r=r.concat(t.slice(1));else{r=r.concat(t[0]);const o=e.length;for(let i=0;i<o;++i)r=r.concat([t[i+1]/e[i],e[i]]);r=r.concat(t.slice(o+1))}return r}function Lc(t,e,n=!0){const s=[];if(n){s.push(e);for(let r=e+1;r<t;++r)r<=2*e?(s.push(r),s.push(r-(e+1))):s.push(r)}else{const r=[],o=[];for(let i=1;i<t;++i)i>=e*2+1||i%2===1?o.push(i):r.push(i);s.push(...r),s.push(0),s.push(...o)}return s}function Pc(t,e,n,s=!0){const r=[];s?r.push(t[0]/n):r.push(t[0]*n);for(let o=1;o<t.length;++o)o<=e.length?s?r.push(e[o-1]*t[o]):r.push(t[o]/e[o-1]):r.push(t[o]);return r}function U1(t,e){const n=[0];for(let s=0;s<e;++s)n.push(t[s][0]);return n}function G1(t,e,n){const s=t.slice(0,1);for(let r=0;r<n;++r)s.push(t[r+1]-e[r][0]-e[r][1]);return s}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Pf=1.7580993408473768,zf=1.0507009873554805;/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const H1=.3275911,j1=.254829592,K1=-.284496736,q1=1.421413741,X1=-1.453152027,Y1=1.061405429;/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Mr(t,e){if(t.length!==e.length)throw new Error(`Cannot merge real and imag arrays of different lengths. real:${t.length}, imag: ${e.length}.`);const n=new Float32Array(t.length*2);for(let s=0;s<n.length;s+=2)n[s]=t[s/2],n[s+1]=e[s/2];return n}function wI(t){const e=new Float32Array(t.length/2),n=new Float32Array(t.length/2);for(let s=0;s<t.length;s+=2)e[s/2]=t[s],n[s/2]=t[s+1];return{real:e,imag:n}}function vI(t){const e=Math.ceil(t.length/4),n=new Float32Array(e),s=new Float32Array(e);for(let r=0;r<t.length;r+=4)n[Math.floor(r/4)]=t[r],s[Math.floor(r/4)]=t[r+1];return{real:n,imag:s}}function kI(t){const e=Math.floor(t.length/4),n=new Float32Array(e),s=new Float32Array(e);for(let r=2;r<t.length;r+=4)n[Math.floor(r/4)]=t[r],s[Math.floor(r/4)]=t[r+1];return{real:n,imag:s}}function Q1(t,e){const n=t[e*2],s=t[e*2+1];return{real:n,imag:s}}function SI(t,e,n,s){t[s*2]=e,t[s*2+1]=n}function CI(t,e){const n=new Float32Array(t/2),s=new Float32Array(t/2);for(let r=0;r<Math.ceil(t/2);r++){const o=(e?2:-2)*Math.PI*(r/t);n[r]=Math.cos(o),s[r]=Math.sin(o)}return{real:n,imag:s}}function NI(t,e,n){const s=(n?2:-2)*Math.PI*(t/e),r=Math.cos(s),o=Math.sin(s);return{real:r,imag:o}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Lm="->",RB=/->/g,Sv=",",Cv="...";function Z1(t,e){t=t.replace(/\s/g,"");const n=(t.length-t.replace(RB,"").length)/Lm.length;if(n<1)throw new Error("Equations without an arrow are not supported.");if(n>1)throw new Error(`Equation must contain exactly one arrow ("${Lm}").`);const[s,r]=t.split(Lm);C(s.indexOf(Cv)===-1,()=>`The ellipsis notation ("${Cv}") is not supported yet.`);const o=s.split(Sv),i=o.length;if(e!==i)throw new Error(`Expected ${i} input tensors, received ${e}`);if(i>2)throw new Error("Support for more than 2 input tensors is not implemented yet.");const a=[];for(let d=0;d<r.length;++d){const p=r[d];if(!o.some(f=>f.indexOf(p)!==-1))throw new Error(`Output subscripts contain the label ${p} not present in the input subscripts.`);a.indexOf(p)===-1&&a.push(p)}for(let d=0;d<s.length;++d){const p=s[d];a.indexOf(p)===-1&&p!==Sv&&a.push(p)}const l=new Array(o.length);for(let d=0;d<i;++d){if(new Set(o[d].split("")).size!==o[d].length)throw new Error(`Found duplicate axes in input component ${o[d]}. Support for duplicate axes in input is not implemented yet.`);l[d]=[];for(let p=0;p<o[d].length;++p)l[d].push(a.indexOf(o[d][p]))}const u=a.length,c=r.length,h=[];for(let d=c;d<u;++d)h.push(d);return{allDims:a,summedDims:h,idDims:l}}function J1(t,e){let n=new Array(t);n.fill(-1);for(let r=0;r<e.length;++r)n[e[r]]=r;const s=[];for(let r=0;r<t;++r)n[r]===-1&&s.push(r);return n=n.filter(r=>r!==-1),{permutationIndices:n,expandDims:s}}function eb(t,e,n){const s=new Array(t);for(let r=0;r<n.length;++r){const o=n[r].shape;for(let i=0;i<e[r].length;++i)s[e[r][i]]===void 0?s[e[r][i]]=o[i]:C(s[e[r][i]]===o[i],()=>`Expected dimension ${s[e[r][i]]} at axis ${i} of input shaped ${JSON.stringify(o)}, but got dimension ${o[i]}`)}}function tb(t,e){const n=t,s=[];let r=0;t.length===0&&n.push(-1),r=t.length+1;for(let i=0;i<r;++i)s.push([]);const o=[];for(let i=0;i<n.length;++i){const a=n[i],l=AB(e,a);for(const u of l)o.indexOf(u)===-1&&(s[i].push(u),o.push(u))}return{path:n,steps:s}}function nb(t){return t.every((e,n)=>e===n)}function AB(t,e){const n=[];for(let s=0;s<t.length;++s)(t[s].length===0||t[s].indexOf(e)!==-1||e===-1)&&n.push(s);return n}function sb(t,e,n=0){let s=[];if(typeof e=="number")C(t.shape[n]%e===0,()=>"Number of splits must evenly divide the axis."),s=new Array(e).fill(t.shape[n]/e);else{const r=e.reduce((i,a)=>(a===-1&&(i+=1),i),0);C(r<=1,()=>"There should be only one negative value in split array.");const o=e.indexOf(-1);if(o!==-1){const i=e.reduce((a,l)=>l>0?a+l:a);e[o]=t.shape[n]-i}C(t.shape[n]===e.reduce((i,a)=>i+a),()=>"The sum of sizes must match the size of the axis dimension."),s=e}return s}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $I(t){return`Received SparseTensor with denseShape[0] = 0 but
  indices.shape[0] = ${t}`}function II(t,e){return`indices(${t}, 0) is invalid: ${e} < 0`}function TI(t,e,n){return`indices(${t}, 0) is invalid: ${e} >= ${n}`}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function EI(t,e){return`only one output dimension may be -1, not both ${t} and ${e}`}function DI(t,e){return`size ${t} must be non-negative, not ${e}`}function RI(){return"reshape cannot infer the missing input size for an empty tensor unless all specified input sizes are non-zero"}function AI(t,e){const n=H(t),s=H(e);return`Input to reshape is a SparseTensor with ${n}
  dense values, but the requested shape requires a multiple of ${s}. inputShape=${t} outputShape= ${e}`}function _I(t,e){const n=H(t),s=H(e);return`Input to reshape is a tensor with ${n} dense values, but the requested shape has ${s}. inputShape=${t} outputShape=${e}`}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function my(){return"segment ids must be >= 0"}function OI(){return"segment ids are not increasing"}function FI(t,e){return`Segment id ${t} out of range [0, ${e}), possibly because segmentIds input is not sorted.`}function LI(t,e,n){return`Bad: indices[${t}] == ${e} out of range [0, ${n})`}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function PI(t,e){let n=!1,s;for(t<=V1?(s=t,n=!0):s=Hg(t,Math.floor(Math.sqrt(t)));!n;)s>e||s===t?n=!0:s=Hg(t,s+1);return s}function zI(t,e,n){const s=[],r=t.length;for(let o=0;o<r;o++)o!==e?s.push(t[o]):s.push(n);return s}function rb(t,e,n,s){const r=e.shape.length,o=t.shape.length;if(s!==0&&(s<-r||s>r))throw new Error(`Expect batchDims in the range of [-${r}, ${r}], but got ${s}`);if(s<0&&(s+=r),s>o)throw new Error(`batchDims (${s}) must be less than rank(x) (
    ${o}).`);if(n<s)throw new Error(`batchDims (${s}) must be less than or equal to axis (${n}).`);for(let h=0;h<s;++h)if(t.shape[h]!==e.shape[h])throw new Error(`x.shape[${h}]: ${t.shape[h]} should be equal to indices.shape[${h}]: ${e.shape[h]}.`);const i=t.shape[n],a=[];let l=1,u=1,c=1;for(let h=0;h<s;++h)a.push(t.shape[h]),l*=t.shape[h];for(let h=s;h<n;h++)a.push(t.shape[h]),u*=t.shape[h];for(let h=s;h<r;h++)a.push(e.shape[h]);for(let h=n+1;h<o;h++)a.push(t.shape[h]),c*=t.shape[h];return{batchSize:l,sliceSize:c,outerSize:u,dimSize:i,outputShape:a}}const _B=Object.freeze(Object.defineProperty({__proto__:null,segOpComputeOptimalWindowSize:PI,computeOutShape:zI,collectGatherOpShapeInfo:rb},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ci(t){try{return t.map(e=>ko(e))}catch(e){throw new Error(`Failed to decode encoded string bytes into utf-8, error: ${e}`)}}function MI(t){return t.map(e=>yo(e))}const OB=Object.freeze(Object.defineProperty({__proto__:null,slice_util:TB,segment_util:_B,fromUint8ToStringArray:Ci,fromStringArrayToUint8:MI,upcastType:Pn,axesAreInnerMostDims:n1,combineLocations:i$,computeOutAndReduceShapes:Bt,expandShapeToKeepDim:xt,assertAxesAreInnerMostDims:Kt,getAxesPermutation:ut,getUndoAxesPermutation:Bo,getInnerMostAxes:bt,getBroadcastDims:Oa,getReductionAxes:Rt,assertAndGetBroadcastShape:we,assertParamsConsistent:B1,computeOutShape:mr,computeDilation2DInfo:Nc,computePool2DInfo:Rs,computePool3DInfo:Vr,computeConv2DInfo:Mt,computeConv3DInfo:Mo,computeDefaultPad:Yx,tupleValuesAreOne:Co,eitherStridesOrDilationsAreOne:jt,stridesOrDilationsArePositive:ki,convertConv2DDataFormat:Wr,checkPadOnDimRoundingMode:hn,getFusedDyActivation:Rf,getFusedBiasGradient:Af,applyActivation:_f,shouldFuse:Of,get RowPartitionType(){return Ws},combineRaggedTensorToTensorShapes:gI,getRowPartitionTypesHelper:yI,getRaggedRank:xI,validateDefaultValueShape:bI,PARALLELIZE_THRESHOLD:V1,computeOptimalWindowSize:Lf,getImageCenter:W1,getReshaped:Fc,getPermuted:Lc,getReshapedPermuted:Pc,getSliceBeginCoords:U1,getSliceSize:G1,prepareAndValidate:O1,validateUpdateShape:P$,validateInput:z$,calculateShapes:Oc,SELU_SCALEALPHA:Pf,SELU_SCALE:zf,ERF_P:H1,ERF_A1:j1,ERF_A2:K1,ERF_A3:q1,ERF_A4:X1,ERF_A5:Y1,warn:jn,log:K_,mergeRealAndImagArrays:Mr,splitRealAndImagArrays:wI,complexWithEvenIndex:vI,complexWithOddIndex:kI,getComplexWithIndex:Q1,assignToTypedArray:SI,exponents:CI,exponent:NI,decodeEinsumEquation:Z1,getEinsumPermutation:J1,checkEinsumDimSizes:eb,getEinsumComputePath:tb,isIdentityPermutation:nb,prepareSplitSize:sb,getSparseFillEmptyRowsIndicesDenseShapeMismatch:$I,getSparseFillEmptyRowsNegativeIndexErrorMessage:II,getSparseFillEmptyRowsOutOfRangeIndexErrorMessage:TI,getSparseReshapeMultipleNegativeOneOutputDimErrorMessage:EI,getSparseReshapeNegativeOutputDimErrorMessage:DI,getSparseReshapeEmptyTensorZeroOutputDimErrorMessage:RI,getSparseReshapeInputOutputMultipleErrorMessage:AI,getSparseReshapeInputOutputMismatchErrorMessage:_I,getSparseSegmentReductionNegativeSegmentIdsErrorMessage:my,getSparseSegmentReductionNonIncreasingSegmentIdsErrorMessage:OI,getSparseSegmentReductionSegmentIdOutOfRangeErrorMessage:FI,getSparseSegmentReductionIndicesOutOfRangeErrorMessage:LI},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */oB();/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const BI={kernelName:cp,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>A(t,Za(ie(n,"float32"),-1))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const FB={kernelName:Eu,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>{const s=Ve(ie(n,"float32")),r=en(le(ge(1),s));return st(pe(t,r))}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const LB={kernelName:Du,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>{const s=en(le(Ve(ie(n,"float32")),1));return pe(t,s)}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const PB={kernelName:Xa,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,s]=e,r=we(n.shape,s.shape);return{a:()=>{let a=t;const l=Rt(n.shape,r);return l.length>0&&(a=he(a,l)),O(a,n.shape)},b:()=>{let a=t;const l=Rt(s.shape,r);return l.length>0&&(a=he(a,l)),O(a,s.shape)}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const zB={kernelName:hp,saveAllInputs:!0,gradFunc:(t,e)=>{const n={};return e.forEach((s,r)=>{n[r]=()=>t.clone()}),n}};/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const MB={kernelName:dp,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Re(n)}}};/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const BB={kernelName:pp,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Re(n)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const VB={kernelName:Ru,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>pe(t,en(le(ge(1),Ve(ie(n,"float32")))))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const WB={kernelName:Au,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>{const s=en(Q(ge(1),Ve(ie(n,"float32"))));return pe(t,s)}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const UB={kernelName:Fu,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,s]=e,r=we(n.shape,s.shape);return{a:()=>{const a=Q(Ve(n),Ve(s));let l=A(t,pe(s,a));const u=Rt(n.shape,r);return u.length>0&&(l=he(l,u)),O(l,n.shape)},b:()=>{const a=Q(Ve(n),Ve(s));let l=st(A(t,pe(n,a)));const u=Rt(s.shape,r);return u.length>0&&(l=he(l,u)),O(l,s.shape)}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const GB={kernelName:_u,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>pe(t,Q(Ve(ie(n,"float32")),1))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const HB={kernelName:Ou,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>pe(t,le(ge(1),Ve(ie(n,"float32"))))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jB(t,e,n,s,r,o){const i=I(t,"dy","avgPool3dGrad"),a=I(e,"input","avgPool3dGrad");let l=i,u=a,c=!1;a.rank===4&&(c=!0,l=O(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]]),u=O(a,[1,a.shape[0],a.shape[1],a.shape[2],a.shape[3]])),C(l.rank===5,()=>`Error in avgPool3dGrad: dy must be rank 5 but got rank ${l.rank}.`),C(u.rank===5,()=>`Error in avgPool3dGrad: input must be rank 5 but got rank ${u.rank}.`),hn("avgPool3dGrad",r,o);const h={dy:l,input:u},d={filterSize:n,strides:s,pad:r,dimRoundingMode:o},p=R.runKernel(G0,h,d);return c?O(p,[p.shape[1],p.shape[2],p.shape[3],p.shape[4]]):p}const KB=D({avgPool3dGrad_:jB});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const qB={kernelName:mp,inputsToSave:["x"],gradFunc:(t,e,n)=>{const[s]=e,{filterSize:r,strides:o,pad:i,dimRoundingMode:a}=n;return{x:()=>KB(t,s,r,o,i,a)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function XB(t,e,n,s,r){const o=I(t,"dy","avgPoolGrad"),i=I(e,"input","avgPoolGrad");C(i.rank===o.rank,()=>`Rank of input (${i.rank}) does not match rank of dy (${o.rank})`);let a=i,l=o,u=!1;i.rank===3&&(u=!0,a=O(i,[1,i.shape[0],i.shape[1],i.shape[2]]),l=O(o,[1,o.shape[0],o.shape[1],o.shape[2]])),C(l.rank===4,()=>`Error in avgPoolGrad: dy must be rank 4 but got rank ${l.rank}.`),C(a.rank===4,()=>`Error in avgPoolGrad: input must be rank 4 but got rank ${a.rank}.`);const c={dy:l,input:a},h={filterSize:n,strides:s,pad:r},d=R.runKernel(U0,c,h);return u?O(d,[d.shape[1],d.shape[2],d.shape[3]]):d}const YB=D({avgPoolGrad_:XB});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const QB={kernelName:fp,inputsToSave:["x"],gradFunc:(t,e,n)=>{const[s]=e,{filterSize:r,strides:o,pad:i}=n;return{x:()=>YB(t,s,r,o,i)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ZB={kernelName:gp,inputsToSave:["a","b"],gradFunc:(t,e,n)=>{const[s,r]=e,{transposeA:o,transposeB:i}=n;return!o&&!i?{a:()=>Ie(t,r,!1,!0),b:()=>Ie(s,t,!0,!1)}:!o&&i?{a:()=>Ie(t,r,!1,!1),b:()=>Ie(t,s,!0,!1)}:o&&!i?{a:()=>Ie(r,t,!1,!0),b:()=>Ie(s,t,!1,!1)}:{a:()=>Ie(r,t,!0,!0),b:()=>Ie(t,s,!0,!0)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const JB={kernelName:yp,gradFunc:(t,e,n)=>{const{blockShape:s,crops:r}=n;return{x:()=>Sf(t,s,r)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const eV={kernelName:H_,gradFunc:(t,e,n)=>{const s=n,r=s.inputShape,o=s.shape,i=Array.from(o);for(let l=r.length-1;l>=0;l--)if(r[l]===o[l])i[l]=1;else if(r[l]!==1)throw new Error(`broadcastTo(): [${r}] cannot be broadcast to [${o}].`);const a=[];for(let l=0;l<i.length;l++)i[l]>1&&a.push(l);return{x:()=>he(t,a,!0)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const tV={kernelName:Lu,gradFunc:t=>({x:()=>t.clone()})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const nV={kernelName:Pu,gradFunc:t=>({x:()=>Re(t)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const sV={kernelName:zu,inputsToSave:["x"],gradFunc:(t,e,n)=>{const[s]=e,{clipValueMin:r,clipValueMax:o}=n;return{x:()=>vn(xr(Vo(s,r),Oi(s,o)),t,Re(t))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const rV={kernelName:xp,inputsToSave:["x"],gradFunc:BI.gradFunc};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const oV={kernelName:bp,saveAllInputs:!0,gradFunc:(t,e,n)=>{const s=e.map(l=>l.shape),{axis:r}=n,o=$e(r,e[0].shape)[0],i=s.map(l=>l[o]);return Ln(t,i,o).map(l=>()=>l)}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const iV={kernelName:wp,inputsToSave:["x","filter"],gradFunc:(t,e,n)=>{const[s,r]=e,{dilations:o,strides:i,pad:a,dataFormat:l}=n;return C(Co(o),()=>`Error in gradient of conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${o}'`),{x:()=>Zx(s.shape,t,r,i,a,l),filter:()=>$1(s,t,r.shape,i,a,l)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const aV={kernelName:vp,inputsToSave:["dy","filter"],gradFunc:(t,e,n)=>{const[s,r]=e,{strides:o,pad:i,dataFormat:a,dimRoundingMode:l}=n;return{dy:()=>No(t,r,o,i,a,1,l),filter:()=>$1(t,s,r.shape,o,i,a,l)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lV(t,e,n,s,r){let o=t;t.rank===4&&(o=O(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]]));let i=e;i.rank===4&&(i=O(e,[1,e.shape[0],e.shape[1],e.shape[2],e.shape[3]])),C(o.rank===5,()=>`Error in conv3dDerFilter: input must be rank 5, but got shape ${o.shape}.`),C(i.rank===5,()=>`Error in conv3dDerFilter: dy must be rank 5, but got shape ${i.shape}.`),C(n.length===5,()=>`Error in conv3dDerFilter: filterShape must be length 5, but got ${n}.`),C(o.shape[4]===n[3],()=>`Error in conv3dDerFilter: depth of input ${o.shape[4]}) must match input depth in filter (${n[3]}.`),C(i.shape[4]===n[4],()=>`Error in conv3dDerFilter: depth of dy (${i.shape[4]}) must match output depth for filter (${n[4]}).`);const a={x:o,dy:i},l={strides:s,pad:r,filterShape:n};return R.runKernel(X0,a,l)}const uV=D({conv3DBackpropFilter_:lV});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const cV={kernelName:kp,inputsToSave:["x","filter"],gradFunc:(t,e,n)=>{const{dilations:s,strides:r,pad:o}=n;C(Co(s),()=>`Error in gradient of conv3D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${s}'`);const[i,a]=e;return{x:()=>JN(i.shape,t,a,r,o),filter:()=>uV(i,t,a.shape,r,o)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const hV={kernelName:Mu,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>A(st(y1(ie(n,"float32"))),t)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const dV={kernelName:Bu,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>A(x1(ie(n,"float32")),t)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const pV={kernelName:Sp,inputsToSave:["x"],gradFunc:(t,e,n)=>{const[s]=e,{axis:r,exclusive:o,reverse:i}=n;return{x:()=>{const a=ut([r],s.rank);let l=t1(t,r,o,!i);return a!=null&&(l=Ee(l,a)),l}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const fV={kernelName:Cp,inputsToSave:["x","filter"],gradFunc:(t,e,n)=>{const{dilations:s,strides:r,pad:o,dimRoundingMode:i}=n,a=s==null?[1,1]:s;C(Co(a),()=>`Error in gradient of depthwiseConv2dNative: dilation rates greater than 1 are not yet supported. Got dilations '${a}'`);const[l,u]=e;return C(l.rank===4,()=>`Error in gradient of depthwiseConv2dNative: input must be rank 4, but got rank ${l.rank}.`),C(u.rank===4,()=>`Error in gradient of depthwiseConv2dNative: filter must be rank 4, but got rank ${u.rank}.`),C(l.shape[3]===u.shape[2],()=>`Error in gradient of depthwiseConv2d: number of input channels (${l.shape[3]}) must match the inChannels dimension in filter ${u.shape[2]}.`),C(jt(r,a),()=>`Error in gradient of depthwiseConv2d: Either strides or dilations must be  1. Got strides ${r} and dilations '${a}'.`),hn("depthwiseConv2d",o,i),{x:()=>U$(l.shape,t,u,r,o,a,i),filter:()=>W$(l,t,u.shape,r,o,a,i)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const mV={kernelName:Np,inputsToSave:["x","filter"],gradFunc:(t,e,n)=>{const[s,r]=e,o={x:s,filter:r,dy:t},i={x:s,filter:r,dy:t};return{x:()=>R.runKernel(jg,o,n),filter:()=>R.runKernel(Kg,i,n)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const gV={kernelName:Wu,outputsToSave:[!0],gradFunc:(t,e)=>{const[n]=e,s={dy:t,y:n};return{x:()=>R.runKernel(ox,s)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const yV={kernelName:Uu,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e,s=A(Zn(st(Ve(n))),2/Math.sqrt(Math.PI));return{x:()=>A(t,s)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const xV={kernelName:Gu,outputsToSave:[!0],gradFunc:(t,e)=>{const[n]=e;return{x:()=>A(t,n)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const bV={kernelName:Ip,inputsToSave:["input"],gradFunc:(t,e)=>{const[n]=e;return{input:()=>O(t,n.shape)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const wV={kernelName:Hu,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>A(t,Zn(n))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const vV={kernelName:ju,gradFunc:t=>({x:()=>Re(t)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const kV={kernelName:Ku,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,s]=e,r=we(n.shape,s.shape);return{a:()=>{const a=pe(t,ie(s,"float32")),l=Rt(n.shape,r);return l.length>0?O(he(a,l),n.shape):a},b:()=>{let a=A(t,ie(n,"float32"));const l=Rt(s.shape,r);l.length>0&&(a=O(he(a,l),s.shape));const u=Ve(s);return st(pe(a,ie(u,"float32")))}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const SV={kernelName:Tp,inputsToSave:["x","mean","variance","scale"],gradFunc:(t,e,n)=>{const{varianceEpsilon:s}=n,[r,o,i,a]=e,l=a==null?ge(1):a,u=Rt(o.shape,r.shape),c=[];if(o.rank===1){for(let w=0;w<r.shape.length-1;++w)c.push(r.shape[w]);c.push(1)}const h=le(r,o),d=A(t,l),p=f1(Q(i,ge(s))),f=A(A(A(p,p),p),ge(-.5));return{x:()=>o.rank===1?O(A(A(t,vs(O(p,[1,1,1,o.shape[0]]),c)),l),r.shape):O(A(A(t,p),l),r.shape),mean:()=>{let w=A(A(p,ge(-1)),d);return o.rank===1&&(w=he(w,u)),O(w,o.shape)},variance:()=>{let w=A(A(f,h),d);return o.rank===1&&(w=he(w,u)),O(w,o.shape)},scale:()=>{const w=A(h,p);let k=A(t,w);return o.rank===1&&(k=he(k,u)),O(k,o.shape)},offset:()=>{let w=t;return o.rank===1&&(w=he(w,u)),O(w,o.shape)}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const CV={kernelName:Ep,inputsToSave:["x","indices"],gradFunc:(t,e,n)=>{const[s,r]=e,{axis:o}=n,i=$e(o,s.shape)[0];return{x:()=>{const l=s.shape,u=r.size,c=l.slice(0,i),h=c.length,d=l.slice(o,l.length).slice(1),p=d.length,f=Nv(0,h),m=Nv(h+1,h+1+p),y=$v([c,[u],d]),g=O(t,y),x=O(r,[u]),b=$v([[h],f,m]),w=Ee(g,b);let k=S1(w,x,s.shape[i]);const S=Bo(b);return k=Ee(k,S),k},indices:()=>r}}};function Nv(t,e){const n=[];for(let s=t;s<e;++s)n.push(s);return n}function $v(t){const e=[];for(let n=0;n<t.length;++n)for(let s=0;s<t[n].length;++s)e.push(t[n][s]);return e}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const NV={kernelName:qu,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,s]=e;return{a:()=>Re(n),b:()=>Re(s)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $V={kernelName:Xu,gradFunc:t=>({x:()=>ie(t,"float32")})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const IV={kernelName:Yu,gradFunc:t=>({x:()=>Re(t)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const TV={kernelName:Qu,gradFunc:t=>({x:()=>Re(t)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const EV={kernelName:Zu,gradFunc:t=>({x:()=>Re(t)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const DV={kernelName:Rp,inputsToSave:["x"],gradFunc:(t,e,n)=>{const[s]=e,{alpha:r}=n,o=Un(s,0);return{x:()=>vn(o,t,A(t,r))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const RV={kernelName:ec,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>pe(t,Q(n,1))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const AV={kernelName:Ju,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>pe(t,ie(n,"float32"))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const _V={kernelName:j_,inputsToSave:[],outputsToSave:[!0],gradFunc:(t,e,n)=>{const[s]=e,{axis:r}=n;return{logits:()=>{const i=Zn(s);return le(t,A(he(t,r,!0),i))}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function OV(t,e,n,s=5,r=1,o=1,i=.5){const a={x:t,y:e,dy:n},l={depthRadius:s,bias:r,alpha:o,beta:i};return R.runKernel(px,a,l)}const FV=D({localResponseNormalizationBackprop_:OV});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const LV={kernelName:Pp,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(t,e,n)=>{const[s,r]=e,{depthRadius:o,bias:i,alpha:a,beta:l}=n;return{x:()=>FV(s,r,t,o,i,a,l)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function VI(t,e,n,s){return e.rank<n.rank&&(e=O(e,xt(e.shape,s))),t.rank<n.rank&&(t=O(t,xt(t.shape,s))),{x:()=>A(t,ie(Ys(n,e),t.dtype))}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Iv={kernelName:zp,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(t,e,n)=>{const s=n,{reductionIndices:r}=s,o=e[0],i=e[1],a=$e(r,o.shape),l=VI(t,i,o,a);return{x:()=>l.x()}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const PV={kernelName:tc,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,s]=e;return{a:()=>A(t,ie(Vo(n,s),"float32")),b:()=>A(t,ie(r1(n,s),"float32"))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zV(t,e,n,s,r,o,i){const a=I(t,"dy","maxPool3dGrad"),l=I(e,"input","maxPool3dGrad"),u=I(n,"output","maxPool3dGrad");let c=a,h=l,d=u,p=!1;l.rank===4&&(p=!0,c=O(a,[1,a.shape[0],a.shape[1],a.shape[2],a.shape[3]]),h=O(l,[1,l.shape[0],l.shape[1],l.shape[2],l.shape[3]]),d=O(u,[1,u.shape[0],u.shape[1],u.shape[2],u.shape[3]])),C(c.rank===5,()=>`Error in maxPool3dGrad: dy must be rank 5 but got rank ${c.rank}.`),C(h.rank===5,()=>`Error in maxPool3dGrad: input must be rank 5 but got rank ${h.rank}.`),C(d.rank===5,()=>`Error in maxPool3dGrad: output must be rank 5 but got rank ${d.rank}.`),hn("maxPool3dGrad",o,i);const f={dy:c,input:h,output:d},m={filterSize:s,strides:r,pad:o,dimRoundingMode:i},y=R.runKernel(mx,f,m);return p?O(y,[y.shape[1],y.shape[2],y.shape[3],y.shape[4]]):y}const MV=D({maxPool3dGrad_:zV});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const BV={kernelName:Bp,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(t,e,n)=>{const[s,r]=e,{filterSize:o,strides:i,pad:a,dimRoundingMode:l}=n;return{x:()=>MV(t,s,r,o,i,a,l)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function VV(t,e,n,s,r,o,i){const a=I(t,"dy","maxPoolGrad"),l=I(e,"input","maxPoolGrad"),u=I(n,"output","maxPoolGrad");C(l.rank===a.rank,()=>`Rank of input (${l.rank}) does not match rank of dy (${a.rank})`),C(a.rank===4,()=>`Error in maxPoolGrad: dy must be rank 4 but got rank ${a.rank}.`),C(l.rank===4,()=>`Error in maxPoolGrad: input must be rank 4 but got rank ${l.rank}.`),hn("maxPoolGrad",o,i);const c={dy:a,input:l,output:u},h={filterSize:s,strides:r,pad:o,dimRoundingMode:i};return R.runKernel(fx,c,h)}const WV=D({maxPoolGrad_:VV});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const UV={kernelName:Mp,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(t,e,n)=>{const[s,r]=e,{filterSize:o,strides:i,pad:a}=n;return{x:()=>WV(t,s,r,o,i,a)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const GV={kernelName:Vp,inputsToSave:["x"],gradFunc:(t,e,n)=>{const[s]=e,{axis:r}=n,o=$e(r,s.shape),a=Bt(s.shape,o)[1],l=H(a);return{x:()=>{const c=s.shape.slice();o.forEach(p=>{c[p]=1});const h=O(t,c);return pe(A(h,An(s.shape,"float32")),l)}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const HV={kernelName:Wp,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(t,e,n)=>{const s=n,{axis:r}=s,[o,i]=e,a=$e(r,o.shape),l=VI(t,i,o,a);return{x:()=>l.x()}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const jV={kernelName:nc,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,s]=e;return{a:()=>A(t,ie(Oi(n,s),"float32")),b:()=>A(t,ie(Un(n,s),"float32"))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const KV={kernelName:Up,inputsToSave:["x"],gradFunc:(t,e,n)=>{const s=e[0],{paddings:r}=n,o=r.map(i=>i[0]);return{x:()=>De(t,o,s.shape)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const qV={kernelName:sc,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,s]=e,r=we(n.shape,s.shape);return{a:()=>{const a=Rt(n.shape,r);return a.length>0?O(he(t,a),n.shape):t},b:()=>{const a=A(t,st(Dc(pe(n,s)))),l=Rt(s.shape,r);return l.length>0?O(he(a,l),s.shape):a}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const XV={kernelName:rc,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,s]=e,r=we(n.shape,s.shape);return{a:()=>{const a=A(t,ie(s,"float32")),l=Rt(n.shape,r);return l.length>0?O(he(a,l),n.shape):a},b:()=>{const a=A(t,ie(n,"float32")),l=Rt(s.shape,r);return l.length>0?O(he(a,l),s.shape):a}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const YV={kernelName:Gp,gradFunc:t=>({x:()=>st(t)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const QV={kernelName:Kp,inputsToSave:["indices"],gradFunc:(t,e)=>{const n=e[0];return{indices:()=>kt(n.shape,"float32")}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ZV={kernelName:jp,gradFunc:t=>({x:()=>Re(t)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const JV={kernelName:qp,saveAllInputs:!0,gradFunc:(t,e,n)=>{const{axis:s}=n;return Ds(t,s).map(o=>()=>o)}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Tv={kernelName:Xp,inputsToSave:["x"],gradFunc:(t,e,n)=>{const s=e[0],{paddings:r}=n,o=r.map(i=>i[0]);return{x:()=>De(t,o,s.shape)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const e4={kernelName:oc,inputsToSave:["a","b"],outputsToSave:[!0],gradFunc:(t,e)=>{const[n,s,r]=e,o=n,i=s,a=we(o.shape,i.shape);return{a:()=>{const c=ie(i,"float32");let h=A(t,A(c,$o(o,le(c,ge(1)))));const d=Rt(o.shape,a);return d.length>0&&(h=he(h,d)),O(h,o.shape)},b:()=>{const c=Un(o,0),h=vn(c,Jn(o),Re(o));let d=A(t,A(r,h));const p=Rt(i.shape,a);return p.length>0&&(d=he(d,p)),O(d,i.shape)}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const t4={kernelName:Yp,inputsToSave:["x","alpha"],gradFunc:(t,e)=>{const[n,s]=e,r=Un(n,0);return{x:()=>vn(r,t,A(t,s)),alpha:()=>{let o=vn(r,Re(t),A(t,n));const i=Rt(s.shape,t.shape);return i.length>0&&(o=he(o,i)),O(o,s.shape)}}}};/**
 * @license
 * Copyright 2022 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function n4(t,e,n){const s=t.shape.slice();s[n]=1;const r=O(e,s),o=Td(t,n,!0,!1),i=Td(t,n,!0,!0),a=A(o,i);return A(r,a)}function s4(t,e,n){const s=t.shape.length,r=s-n.length,o=ut(n,s);let i=t;o!=null&&(i=Ee(t,o));const a=i.shape.slice(),u=a.splice(s-n.length,n.length).reduce((d,p)=>d*p,1);a.push(u);const c=i.reshape(a);let h=n4(c,e,r);if(h=h.reshape(i.shape),o!=null){const d=Bo(o);h=Ee(h,d)}return h}const r4={kernelName:Qp,inputsToSave:["x"],gradFunc:(t,e,n)=>{const[s]=e,{axis:r}=n;let o=[];return r==null?o=s.shape.map((i,a)=>a):typeof r=="number"?o=[r]:o=r,{x:()=>s4(s,t,o)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const o4={kernelName:Vu,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,s]=e,r=we(n.shape,s.shape);return{a:()=>{const a=pe(t,ie(s,"float32")),l=Rt(n.shape,r);return l.length>0?O(he(a,l),n.shape):a},b:()=>{let a=A(t,ie(n,"float32"));const l=Rt(s.shape,r);l.length>0&&(a=O(he(a,l),s.shape));const u=Ve(s);return st(pe(a,ie(u,"float32")))}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const i4={kernelName:ic,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>pe(t,st(Ve(n)))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const a4={kernelName:lc,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e,s=A(Oi(n,6),Za(n));return{x:()=>A(t,ie(s,"float32"))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const l4={kernelName:ac,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>A(t,ie(Za(n),"float32"))}}};/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const u4={kernelName:Zp,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>O(t,n.shape)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const c4={kernelName:ef,inputsToSave:["images"],gradFunc:(t,e,n)=>{const[s]=e,r={dy:t,images:s};return{images:()=>R.runKernel(Ix,r,n)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const h4={kernelName:Jp,inputsToSave:["images"],gradFunc:(t,e,n)=>{const[s]=e,r={dy:t,images:s};return{images:()=>R.runKernel($x,r,n)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const d4={kernelName:tf,gradFunc:(t,e,n)=>{const{dims:s}=n,r=$e(s,t.shape);return{x:()=>Es(t,r)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const p4={kernelName:uc,gradFunc:t=>({x:()=>Re(t)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const f4={kernelName:cc,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>st(pe(t,A($o(n,1.5),2)))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const m4={kernelName:nf,inputsToSave:["condition"],gradFunc:(t,e)=>{const[n]=e;return{condition:()=>ie(Re(n),"float32"),t:()=>A(t,ie(n,t.dtype)),e:()=>A(t,ie(wf(n),t.dtype))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const g4={kernelName:hc,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>{const s=Un(n,ge(0)),r=ge(Pf),o=ge(zf),i=A(t,o),a=A(A(t,r),Zn(ie(n,"float32")));return vn(s,i,a)}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const y4={kernelName:mc,outputsToSave:[!0],gradFunc:(t,e)=>{const[n]=e;return{x:()=>A(t,A(n,le(ge(1),n)))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const x4={kernelName:fc,gradFunc:t=>({x:()=>Re(t)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const b4={kernelName:dc,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>A(gf(ie(n,"float32")),t)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const w4={kernelName:pc,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>A(e1(ie(n,"float32")),t)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const v4={kernelName:sf,inputsToSave:["x"],gradFunc:(t,e,n)=>{const[s]=e,{begin:r,size:o}=n,i=s.shape,[a,l]=Ff(s,r,o),u=[];for(let c=0;c<t.rank;c++)u.push([a[c],i[c]-a[c]-l[c]]);return{x:()=>Wo(t,u)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const k4={kernelName:lf,outputsToSave:[!0],gradFunc:(t,e,n)=>{const[s]=e,{dim:r}=n,o=!0,i=A(t,s);return{logits:()=>le(i,A(he(i,[r],o),s))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const S4={kernelName:gc,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>A(t,fr(n))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ev={kernelName:of,gradFunc:(t,e,n)=>{const{blockShape:s,paddings:r}=n;return{x:()=>mf(t,s,r)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Dv={kernelName:af,gradFunc:(t,e,n)=>{const{axis:s}=n;return{x:()=>ft(t,s)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const C4={kernelName:yc,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>pe(t,A(en(ie(n,"float32")),2))}}};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const N4={kernelName:Fx,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>A(t,A(ie(n,"float32"),2))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $4={kernelName:xc,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,s]=e,r=ge(2);return{a:()=>A(t,A(r,le(n,s))),b:()=>A(t,A(r,le(s,n)))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const I4={kernelName:Sc,gradFunc:t=>({x:()=>Re(t)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const T4={kernelName:bc,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,s]=e,r=we(n.shape,s.shape);return{a:()=>{let a=t;const l=Rt(n.shape,r);return l.length>0&&(a=he(a,l)),O(a,n.shape)},b:()=>{let a=t;const l=Rt(s.shape,r);return l.length>0&&(a=he(a,l)),O(st(a),s.shape)}}}};/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const E4={kernelName:rf,inputsToSave:["x"],gradFunc:(t,e,n)=>{const[s]=e,r=s.shape.slice(),{axis:o}=n;$e(o,s.shape).forEach(u=>{r[u]=1});const a=O(t,r),l=A(a,An(s.shape,"float32"));return{x:()=>l}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const D4={kernelName:wc,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>pe(t,Ve(gf(n)))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const R4={kernelName:vc,outputsToSave:[!0],gradFunc:(t,e)=>{const[n]=e;return{x:()=>A(le(ge(1),Ve(n)),t)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const A4={kernelName:kc,inputsToSave:["x"],gradFunc:(t,e,n)=>{const[s]=e,{reps:r}=n;return{x:()=>{let i=Re(s);if(s.rank===1)for(let a=0;a<r[0];++a)i=Q(i,De(t,[a*s.shape[0]],[s.shape[0]]));else if(s.rank===2)for(let a=0;a<r[0];++a)for(let l=0;l<r[1];++l)i=Q(i,De(t,[a*s.shape[0],l*s.shape[1]],[s.shape[0],s.shape[1]]));else if(s.rank===3)for(let a=0;a<r[0];++a)for(let l=0;l<r[1];++l)for(let u=0;u<r[2];++u)i=Q(i,De(t,[a*s.shape[0],l*s.shape[1],u*s.shape[2]],[s.shape[0],s.shape[1],s.shape[2]]));else if(s.rank===4)for(let a=0;a<r[0];++a)for(let l=0;l<r[1];++l)for(let u=0;u<r[2];++u)for(let c=0;c<r[3];++c)i=Q(i,De(t,[a*s.shape[0],l*s.shape[1],u*s.shape[2],c*s.shape[3]],[s.shape[0],s.shape[1],s.shape[2],s.shape[3]]));else throw new Error(`Gradient for tile operation is not implemented for rank-${s.rank} tensors yet.`);return i}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const _4={kernelName:ga,gradFunc:(t,e,n)=>{const s=n,{perm:r}=s,o=Bo(r);return{x:()=>Ee(t,o)}}};/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const O4={kernelName:uf,gradFunc:(t,e,n)=>{const s=n,{axis:r}=s;return{value:()=>ts(t,r)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const F4={kernelName:cf,inputsToSave:["segmentIds"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>L4(t,n)}}};function L4(t,e){const n=Ur(e,Re(e)),s=Rc(t,n);let r=Vo(e,ge(0,"int32"));const o=s.rank-r.rank;for(let a=0;a<o;++a)r=gn(r,a+1);r=xr(r,An(s.shape,"bool"));const i=Re(s);return vn(r,s,i)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const P4={kernelName:hf,gradFunc:t=>({x:()=>Re(t)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const z4=[BI,FB,LB,PB,zB,MB,BB,VB,WB,UB,GB,HB,qB,QB,ZB,JB,eV,tV,nV,sV,rV,oV,aV,iV,cV,hV,dV,pV,fV,mV,o4,gV,yV,xV,bV,wV,kV,vV,SV,CV,NV,$V,IV,TV,EV,DV,RV,AV,_V,LV,Iv,Iv,PV,BV,UV,GV,HV,jV,KV,qV,XV,YV,QV,ZV,JV,Tv,Tv,e4,t4,r4,i4,a4,l4,u4,c4,h4,d4,p4,f4,m4,g4,y4,x4,b4,w4,v4,k4,S4,Ev,Ev,Dv,Dv,C4,$4,N4,I4,T4,E4,D4,R4,A4,_4,O4,F4,P4];for(const t of z4)q_(t);/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.abs=function(){return this.throwIfDisposed(),Nt(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.acos=function(){return this.throwIfDisposed(),ON(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.acosh=function(){return this.throwIfDisposed(),FN(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.add=function(t){return this.throwIfDisposed(),Q(this,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.all=function(t,e){return this.throwIfDisposed(),Xx(this,t,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.any=function(t,e){return this.throwIfDisposed(),Id(this,t,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.argMax=function(t){return this.throwIfDisposed(),Aa(this,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.argMin=function(t){return this.throwIfDisposed(),LN(this,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.asScalar=function(){return this.throwIfDisposed(),C(this.size===1,()=>"The array must have only 1 element."),O(this,[])};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.asType=function(t){return this.throwIfDisposed(),ie(this,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.as1D=function(){return this.throwIfDisposed(),O(this,[this.size])};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.as2D=function(t,e){return this.throwIfDisposed(),O(this,[t,e])};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.as3D=function(t,e,n){return this.throwIfDisposed(),O(this,[t,e,n])};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.as4D=function(t,e,n,s){return this.throwIfDisposed(),O(this,[t,e,n,s])};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.as5D=function(t,e,n,s,r){return this.throwIfDisposed(),O(this,[t,e,n,s,r])};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.asin=function(){return this.throwIfDisposed(),PN(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.asinh=function(){return this.throwIfDisposed(),zN(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.atan=function(){return this.throwIfDisposed(),MN(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.atan2=function(t){return this.throwIfDisposed(),BN(this,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.atanh=function(){return this.throwIfDisposed(),VN(this)};K().prototype.avgPool=function(t,e,n,s){return this.throwIfDisposed(),ff(this,t,e,n,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.batchToSpaceND=function(t,e){return this.throwIfDisposed(),mf(this,t,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.batchNorm=function(t,e,n,s,r){return this.throwIfDisposed(),$c(this,t,e,n,s,r)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.broadcastTo=function(t){return this.throwIfDisposed(),ba(this,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.cast=function(t){return this.throwIfDisposed(),ie(this,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.ceil=function(){return this.throwIfDisposed(),KN(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.clipByValue=function(t,e){return this.throwIfDisposed(),zn(this,t,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.concat=function(t,e){return this.throwIfDisposed(),t instanceof et&&(t=[t]),ft([this,...t],e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.conv1d=function(t,e,n,s,r,o){return this.throwIfDisposed(),Qx(this,t,e,n,s,r,o)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.conv2dTranspose=function(t,e,n,s,r){return this.throwIfDisposed(),Jx(this,t,e,n,s,r)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.conv2d=function(t,e,n,s,r,o){return this.throwIfDisposed(),No(this,t,e,n,s,r,o)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.cos=function(){return this.throwIfDisposed(),gf(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.cosh=function(){return this.throwIfDisposed(),e1(this)};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the 'License');
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an 'AS IS' BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.cumprod=function(t,e,n){return this.throwIfDisposed(),Td(this,t,e,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.cumsum=function(t,e,n){return this.throwIfDisposed(),t1(this,t,e,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.depthToSpace=function(t,e){return this.throwIfDisposed(),t$(this,t,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.depthwiseConv2d=function(t,e,n,s,r,o){return this.throwIfDisposed(),Ic(this,t,e,n,s,r,o)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.dilation2d=function(t,e,n,s,r){return this.throwIfDisposed(),n$(this,t,e,n,s,r)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.divNoNan=function(t){return this.throwIfDisposed(),s$(this,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.div=function(t){return this.throwIfDisposed(),pe(this,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.dot=function(t){return this.throwIfDisposed(),r$(this,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.elu=function(){return this.throwIfDisposed(),Tc(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.equal=function(t){return this.throwIfDisposed(),Ys(this,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.erf=function(){return this.throwIfDisposed(),o$(this)};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.euclideanNorm=function(t,e){return this.throwIfDisposed(),l$(this,t,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.exp=function(){return this.throwIfDisposed(),Zn(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.expandDims=function(t){return this.throwIfDisposed(),gn(this,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.expm1=function(){return this.throwIfDisposed(),u$(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.fft=function(){return this.throwIfDisposed(),Ef(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.flatten=function(){return this.throwIfDisposed(),O(this,[this.size])};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.floor=function(){return this.throwIfDisposed(),Dc(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.floorDiv=function(t){return this.throwIfDisposed(),qx(this,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.gather=function(t,e){return this.throwIfDisposed(),Rc(this,t,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.greaterEqual=function(t){return this.throwIfDisposed(),Vo(this,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.greater=function(t){return this.throwIfDisposed(),Un(this,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.ifft=function(){return this.throwIfDisposed(),pu(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.irfft=function(){return this.throwIfDisposed(),w1(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.isFinite=function(){return this.throwIfDisposed(),c$(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.isInf=function(){return this.throwIfDisposed(),h$(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.isNaN=function(){return this.throwIfDisposed(),d$(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.leakyRelu=function(t){return this.throwIfDisposed(),xf(this,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.lessEqual=function(t){return this.throwIfDisposed(),Oi(this,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.less=function(t){return this.throwIfDisposed(),r1(this,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.localResponseNormalization=function(t,e,n,s){return this.throwIfDisposed(),p$(this,t,e,n,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.logSigmoid=function(){return this.throwIfDisposed(),f$(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.logSoftmax=function(t){return this.throwIfDisposed(),o1(this,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.logSumExp=function(t,e){return this.throwIfDisposed(),i1(this,t,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.log=function(){return this.throwIfDisposed(),Jn(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.log1p=function(){return this.throwIfDisposed(),bf(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.logicalAnd=function(t){return this.throwIfDisposed(),xr(this,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.logicalNot=function(){return this.throwIfDisposed(),wf(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.logicalOr=function(t){return this.throwIfDisposed(),a1(this,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.logicalXor=function(t){return this.throwIfDisposed(),m$(this,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.matMul=function(t,e,n){return this.throwIfDisposed(),Ie(this,t,e,n)};K().prototype.maxPool=function(t,e,n,s){return this.throwIfDisposed(),vf(this,t,e,n,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.max=function(t,e){return this.throwIfDisposed(),$s(this,t,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.maximum=function(t){return this.throwIfDisposed(),Ur(this,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.mean=function(t,e){return this.throwIfDisposed(),dt(this,t,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.min=function(t,e){return this.throwIfDisposed(),cu(this,t,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.minimum=function(t){return this.throwIfDisposed(),Ac(this,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.mirrorPad=function(t,e){return this.throwIfDisposed(),y$(this,t,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.mod=function(t){return this.throwIfDisposed(),x$(this,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.mul=function(t){return this.throwIfDisposed(),A(this,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.neg=function(){return this.throwIfDisposed(),st(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.norm=function(t,e,n){return this.throwIfDisposed(),Ec(this,t,e,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.notEqual=function(t){return this.throwIfDisposed(),Fa(this,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.oneHot=function(t,e=1,n=0){return this.throwIfDisposed(),u1(this,t,e,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.onesLike=function(){return this.throwIfDisposed(),es(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.pad=function(t,e){return this.throwIfDisposed(),Wo(this,t,e)};K().prototype.pool=function(t,e,n,s,r,o){return this.throwIfDisposed(),b$(this,t,e,n,s,r,o)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.pow=function(t){return this.throwIfDisposed(),$o(this,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.prelu=function(t){return this.throwIfDisposed(),Cf(this,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.prod=function(t,e){return this.throwIfDisposed(),w$(this,t,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.reciprocal=function(){return this.throwIfDisposed(),T$(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.relu=function(){return this.throwIfDisposed(),wr(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.relu6=function(){return this.throwIfDisposed(),d1(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.reshapeAs=function(t){return this.throwIfDisposed(),O(this,t.shape)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.reshape=function(t){return this.throwIfDisposed(),O(this,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.resizeBilinear=function(t,e,n){return this.throwIfDisposed(),j$(this,t,e,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.resizeNearestNeighbor=function(t,e,n){return this.throwIfDisposed(),K$(this,t,e,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.reverse=function(t){return this.throwIfDisposed(),Es(this,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.rfft=function(){return this.throwIfDisposed(),Df(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.round=function(){return this.throwIfDisposed(),p1(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.rsqrt=function(){return this.throwIfDisposed(),f1(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.selu=function(){return this.throwIfDisposed(),m1(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.separableConv2d=function(t,e,n,s,r,o){return this.throwIfDisposed(),g1(this,t,e,n,s,r,o)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.sigmoid=function(){return this.throwIfDisposed(),fr(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.sign=function(){return this.throwIfDisposed(),E$(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.sin=function(){return this.throwIfDisposed(),y1(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.sinh=function(){return this.throwIfDisposed(),x1(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.slice=function(t,e){return this.throwIfDisposed(),De(this,t,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.softmax=function(t){return this.throwIfDisposed(),Tf(this,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.softplus=function(){return this.throwIfDisposed(),Qa(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.spaceToBatchND=function(t,e){return this.throwIfDisposed(),Sf(this,t,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.split=function(t,e){return this.throwIfDisposed(),Ln(this,t,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.sqrt=function(){return this.throwIfDisposed(),en(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.square=function(){return this.throwIfDisposed(),Ve(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.squaredDifference=function(t){return this.throwIfDisposed(),v1(this,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.squeeze=function(t){return this.throwIfDisposed(),Li(this,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.stack=function(t,e){this.throwIfDisposed();const n=t instanceof et?[this,t]:[this,...t];return ts(n,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.step=function(t){return this.throwIfDisposed(),Za(this,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.stridedSlice=function(t,e,n,s,r,o,i,a){return this.throwIfDisposed(),D$(this,t,e,n,s,r,o,i,a)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.sub=function(t){return this.throwIfDisposed(),le(this,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.sum=function(t,e){return this.throwIfDisposed(),he(this,t,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.tan=function(){return this.throwIfDisposed(),R$(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.tanh=function(){return this.throwIfDisposed(),_a(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.tile=function(t){return this.throwIfDisposed(),vs(this,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.toBool=function(){return this.throwIfDisposed(),ie(this,"bool")};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.toFloat=function(){return this.throwIfDisposed(),ie(this,"float32")};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.toInt=function(){return this.throwIfDisposed(),ie(this,"int32")};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.topk=function(t,e){return this.throwIfDisposed(),_$(this,t,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.transpose=function(t){return this.throwIfDisposed(),Ee(this,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.unique=function(t){return this.throwIfDisposed(),O$(this,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.unsortedSegmentSum=function(t,e){return this.throwIfDisposed(),S1(this,t,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.unstack=function(t){return this.throwIfDisposed(),Ds(this,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.where=function(t,e){return this.throwIfDisposed(),vn(t,this,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.zerosLike=function(){return this.throwIfDisposed(),Re(this)};/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class rr extends Error{constructor(e){super(e),Object.setPrototypeOf(this,rr.prototype)}}class ks extends Error{constructor(e){super(e),Object.setPrototypeOf(this,ks.prototype)}}class L extends Error{constructor(e){super(e),Object.setPrototypeOf(this,L.prototype)}}class ve extends Error{constructor(e){super(e),Object.setPrototypeOf(this,ve.prototype)}}class ob extends Error{constructor(e){super(e),Object.setPrototypeOf(this,ob.prototype)}}/**
 * @license
 * Copyright 2022 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class WI{constructor(e){this.maxEntries=e||100,this.cache=new Map}get(e){let n;return this.cache.has(e)&&(n=this.cache.get(e),this.cache.delete(e),this.cache.set(e,n)),n}put(e,n){if(this.cache.has(e))this.cache.delete(e);else if(this.cache.size>=this.maxEntries){const s=this.cache.keys().next().value;this.cache.delete(s)}this.cache.set(e,n)}getMaxEntries(){return this.maxEntries}setMaxEntries(e){if(e<0)throw new Error(`The maxEntries of LRU caches must be at least 0, but got ${e}.`);if(this.maxEntries>e)for(let n=0;n<this.maxEntries-e;n++){const s=this.cache.keys().next().value;this.cache.delete(s)}this.maxEntries=e}}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function Ni(t,e){if(Array.isArray(t)){let n=[];for(let s=0;s<e;s++)n=n.concat(t);return n}else{const n=new Array(e);return n.fill(t),n}}function or(t,e){if(!t)throw new ob(e)}function Rv(t,e){let n=0;for(const s of t)s===e&&n++;return n}function yn(t){return t.length===1?t[0]:t}function qe(t){return Array.isArray(t)?t:[t]}function Nr(t){const n=t.replace(/(.)([A-Z][a-z0-9]+)/g,"$1_$2").replace(/([a-z])([A-Z])/g,"$1_$2").toLowerCase();return n[0]!=="_"?n:"private"+n}function ti(t){return t.length<=1||t.indexOf("_")===-1?t:t.replace(/[_]+(\w|$)/g,(e,n)=>n.toUpperCase())}let is={};function ib(t){if(t==null)return null;const e={};return e.className=t.getClassName(),e.config=t.getConfig(),e}function gy(t){if(!(t==null||typeof t!="object"))if(Array.isArray(t))t.forEach(e=>gy(e));else{const e=Object.keys(t);for(const n of e){const s=t[n];s!=null&&typeof s=="object"&&(!Array.isArray(s)&&s.type==="ndarray"&&typeof s.value=="number"?t[n]=s.value:gy(s))}}}function zc(t,e={},n={},s="object",r=!1){if(typeof t=="string"){const o=t;let i;if(o in n)i=n[o];else if(o in is)i=is[o];else if(i=e[o],i==null)throw new L(`Unknown ${s}: ${t}. This may be due to one of the following reasons:
1. The ${s} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.
2. The custom ${s} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);return i}else{const o=t;if(o.className==null||o.config==null)throw new L(`${s}: Improper config format: ${JSON.stringify(o)}.
'className' and 'config' must set.`);const i=o.className;let a,l;if(i in n?[a,l]=n[i]:i in is?[a,l]=is.className:i in e&&([a,l]=e[i]),a==null)throw new L(`Unknown ${s}: ${i}. This may be due to one of the following reasons:
1. The ${s} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.
2. The custom ${s} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);if(l!=null){const u={};for(const p of Object.keys(is))u[p]=is[p];for(const p of Object.keys(n))u[p]=n[p];const c=o.config;c.customObjects=u;const h=Object.assign({},is);for(const p of Object.keys(n))is[p]=n[p];gy(o.config);const d=l(a,o.config,n,r);return is=Object.assign({},h),d}else{const u=Object.assign({},is);for(const h of Object.keys(n))is[h]=n[h];const c=new a(o.config);return is=Object.assign({},u),c}}}function M4(t,e){return t<e?-1:t>e?1:0}function wh(t,e){return-1*M4(t,e)}function xo(t){if(t==null)return t;const e=[];for(const n of t)e.indexOf(n)===-1&&e.push(n);return e}function B4(t){if(t==null)throw new L(`Invalid value in obj: ${JSON.stringify(t)}`);for(const e in t)if(t.hasOwnProperty(e))return!1;return!0}function Pi(t,e,n){if(n!=null&&t.indexOf(n)<0)throw new L(`${n} is not a valid ${e}.  Valid values are ${t} or null/undefined.`)}function ab(t,e,n=0,s=1/0){return or(n>=0),or(s>=n),Array.isArray(t)&&t.length>=n&&t.length<=s&&t.every(r=>typeof r===e)}function Lt(t,e){Array.isArray(t)?(C(t.length>0,()=>`${e} is unexpectedly an empty array.`),t.forEach((n,s)=>Lt(n,`element ${s+1} of ${e}`))):C(Number.isInteger(t)&&t>0,()=>`Expected ${e} to be a positive integer, but got ${UI(t)}.`)}function UI(t){return t===null?"null":Array.isArray(t)?"["+t.map(e=>UI(e)).join(",")+"]":typeof t=="string"?`"${t}"`:`${t}`}function V4(t,e,n){let s=n!=null?n():mn(),r;return(...i)=>{const a=n!=null?n():mn();return a-s<e||(s=a,r=t(...i)),r}}function GI(t){return t==="relu"?"relu":t==="linear"?"linear":t==="elu"?"elu":null}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */let W4=0;function HI(){return W4++}const vh={};function Mf(t=""){return t in vh||(vh[t]=0),vh[t]+=1,t+vh[t].toString()}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const U4=["channelsFirst","channelsLast"],G4=["nearest","bilinear"],H4=["valid","same","causal"],j4=["max","avg"],K4=["sum","mul","concat","ave"];/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const Gi=new Map;function wt(t){Pi(U4,"DataFormat",t)}function q4(t){Pi(G4,"InterpolationFormat",t)}function os(t){Pi(H4,"PaddingMode",t)}function jI(t){Pi(j4,"PoolMode",t)}const Gl=[],Av="/";function ci(t,e){Gl.push(t);try{const n=e();return Gl.pop(),n}catch(n){throw Gl.pop(),n}}function X4(){return Gl.length===0?"":Gl.join(Av)+Av}function KI(t){if(!XI(t))throw new Error("Not a valid tensor name: '"+t+"'");return X4()+t}function qI(t){if(!XI(t))throw new Error("Not a valid tensor name: '"+t+"'");Gi.has(t)||Gi.set(t,0);const e=Gi.get(t);if(Gi.set(t,Gi.get(t)+1),e>0){const n=`${t}_${e}`;return Gi.set(n,1),n}else return t}const Y4=new RegExp(/^[A-Za-z0-9][-A-Za-z0-9\._\/]*$/);function XI(t){return!!t.match(Y4)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function Q4(t){return t===parseInt(t.toString(),10)}function bo(t,e,n){e==null&&(e=0),n==null&&(n=t.length);let s=1;for(let r=e;r<n;++r)s*=t[r];return s}function Pa(t){if(t.length===0)return Number.NaN;let e=Number.POSITIVE_INFINITY;for(let n=0;n<t.length;n++){const s=t[n];s<e&&(e=s)}return e}function Io(t){if(t.length===0)return Number.NaN;let e=Number.NEGATIVE_INFINITY;for(let n=0;n<t.length;n++){const s=t[n];s>e&&(e=s)}return e}function Qs(t,e){if(e<t)throw new L(`end (${e}) < begin (${t}) is forbidden.`);const n=[];for(let s=t;s<e;++s)n.push(s);return n}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */let Pm;function It(){return Pm==null&&(Pm=QO().epsilon()),Pm}function Zs(){return"channelsLast"}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function gr(t,e){return ie(t,e)}function Mc(t,e=-1){const n=t.shape.slice();return e<0&&(e=n.length+e+1),n.splice(e,0,1),O(t,n)}function Z4(t,e){return P(()=>{if(t.shape.length!==2)throw new L(`repeat() expects a rank-2 tensor, but received a rank-${t.shape.length} tensor.`);const n=Mc(t,1);return yy(n,[1,e,1])})}function J4(t){const e=[bo(t.shape)];return O(t,e)}function eW(t){if(t.rank<=1)throw new L(`batchFlatten requires a minimum rank of 2. Got rank: ${t.rank}.`);const e=[t.shape[0],bo(t.shape,1)];return O(t,e)}function hi(t,e,n){return P(()=>{switch(t.rank){case 1:return $f(t,e,n);case 2:return b1(t,[e,0],[n,t.shape[1]]);case 3:return If(t,[e,0,0],[n,t.shape[1],t.shape[2]]);case 4:return du(t,[e,0,0,0],[n,t.shape[1],t.shape[2],t.shape[3]]);case 5:return De(t,[e,0,0,0,0],[n,t.shape[1],t.shape[2],t.shape[3],t.shape[4]]);case 6:return De(t,[e,0,0,0,0,0],[n,t.shape[1],t.shape[2],t.shape[3],t.shape[4],t.shape[5]]);default:throw new L(`sliceAlongFirstAxis() received an unsupported tensor rank: ${t.rank}`)}})}function zm(t,e,n){return P(()=>{switch(t.rank){case 1:return $f(t,e,n);case 2:return b1(t,[0,e],[t.shape[0],n]);case 3:return If(t,[0,0,e],[t.shape[0],t.shape[1],n]);case 4:return du(t,[0,0,0,e],[t.shape[0],t.shape[1],t.shape[2],n]);default:throw new L(`sliceAlongLastAxis() received an unsupported tensor rank: ${t.rank}`)}})}function kh(t,e,n,s){return P(()=>{switch(t.rank){case 1:return $f(t,e,n);case 2:switch(s){case 1:return hi(t,e,n);case 2:return zm(t,e,n);default:throw new L(`The axis is not within the rank of the tensor ${s}`)}case 3:switch(s){case 1:return hi(t,e,n);case 2:return If(t,[0,e,0],[t.shape[0],n,t.shape[2]]);case 3:return zm(t,e,n);default:throw new L(`The axis is not within the rank of the tensor ${s}`)}case 4:switch(s){case 1:return hi(t,e,n);case 2:return du(t,[0,e,0,0],[t.shape[0],n,t.shape[2],t.shape[3]]);case 3:return du(t,[0,0,e,0],[t.shape[0],t.shape[1],n,t.shape[3]]);case 4:return zm(t,e,n);default:throw new L(`The axis is not within the rank of the tensor ${s}`)}default:throw new L(`sliceAlongLastAxis() received an unsupported tensor rank: ${t.rank}`)}})}function lb(t,e=-1){let n;return e<0&&(n=t[0].rank,n!==0?e=n:e=0),e===t[0].rank&&(e=-1),ft(t,e)}function _v(t,e){switch(t.rank){case 1:return qN([t,e]);case 2:return XN([t,e],0);case 3:return YN([t,e],0);case 4:return QN([t,e],0);default:throw new L(`concatAlongFirstAxis() received an unsupported tensor rank: ${t.rank}`)}}function yy(t,e){if(Array.isArray(e)||(e=[e]),t.rank!==e.length)throw new L(`The length of input n (${e.length}) does not match the number of dimensions in input x (${t.rank})`);return vs(t,e)}function Bf(t,e=0,n=1,s,r){return h1(t,e,n,s,r)}function yr(t,e,n,s){if(t.rank<2||e.rank<2)throw new ve(`dot requires both inputs to be rank >= 2 but got x shape = ${t.shape} and y shape = ${e.shape}`);if(e.rank>=3){const r=t.shape.slice(-1)[0],o=e.shape.slice(-2)[0];if(r!==o)throw new ve(`If rank y >= 3, then the second last dim of y must equal the last dim of x but got x shape = ${t.shape} and  y shape = ${e.shape}`)}if(t.rank===2&&e.rank===2)return dy({a:t,b:e,transposeA:!1,transposeB:!1,bias:s?xy(t.rank,s,Zs()):null,activation:n});{const r=t.shape.slice(),o=r.pop();t=O(t,[-1,o]);const i=e.shape.slice(),a=i.pop(),l=i.pop(),u=[...i,a],c=Array.from({length:e.rank},(f,m)=>m===0?e.rank-2:m<=e.rank-2?m-1:m);e=O(Ee(e,c),[l,-1]);const h=[...r,...u];return O(dy({a:t,b:e,transposeA:!1,transposeB:!1,bias:s?xy(t.rank,s,Zs()):null,activation:n}),h)}}function YI(t,e,n){return P(()=>(Array.isArray(e)?e=bn(e,"int32"):e=ie(e,"int32"),Rc(t,e,n)))}function Bc(t){return A(t,t)}function xy(t,e,n){const s=e.shape;if(e.rank!==1&&e.rank!==t)throw new L(`Unexpected bias dimensions: ${e.rank}; expected it to be 1 or ${t}`);if(t===5){if(n==="channelsFirst")return s.length===1?O(e,[1,s[0],1,1,1]):O(e,[1,s[3],s[0],s[1],s[2]]);if(n==="channelsLast")return s.length===1?O(e,[1,1,1,1,s[0]]):O(e,[1].concat(s))}else if(t===4){if(n==="channelsFirst")return s.length===1?O(e,[1,s[0],1,1]):O(e,[1,s[2],s[0],s[1]]);if(n==="channelsLast")return s.length===1?O(e,[1,1,1,s[0]]):O(e,[1].concat(s))}else if(t===3){if(n==="channelsFirst")return s.length===1?O(e,[1,s[0],1]):O(e,[1,s[1],s[0]]);if(n==="channelsLast")return s.length===1?O(e,[1,1,s[0]]):O(e,[1].concat(s))}else if(t<3)return e;throw new L(`Unsupported input rank by biasAdd: ${e.rank}`)}function tr(t,e,n){return P(()=>(n==null&&(n=Zs()),wt(n),Q(t,xy(t.rank,e,n))))}function tW(t,e=1){if(e!==1)throw new ve(`Support for alpha values other than 1 (${e}) is not implemented yet.`);return Tc(t)}function nW(t){return P(()=>pe(t,Q(Nt(t),1)))}function QI(t,e,n,s){return P(()=>M$(t,e,n,s))}function sW(t){return P(()=>{const e=Q(.5,A(.2,t));return zn(e,0,1)})}function Vc(t,e,n=!1){return n?t():e()}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const rW=["fanIn","fanOut","fanAvg"],oW=["normal","uniform","truncatedNormal"];/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function iW(t){Pi(rW,"FanMode",t)}function aW(t){Pi(oW,"Distribution",t)}class As extends el{fromConfigUsesCustomObjects(){return!1}getConfig(){return{}}}class ZI extends As{apply(e,n){return kt(e,n)}}ZI.className="Zeros";Z(ZI);class ub extends As{apply(e,n){return An(e,n)}}ub.className="Ones";Z(ub);class JI extends As{constructor(e){if(super(),typeof e!="object")throw new L(`Expected argument of type ConstantConfig but got ${e}`);if(e.value===void 0)throw new L(`config must have value set but got ${e}`);this.value=e.value}apply(e,n){return P(()=>A(ge(this.value),An(e,n)))}getConfig(){return{value:this.value}}}JI.className="Constant";Z(JI);class eT extends As{constructor(e){super(),this.DEFAULT_MINVAL=-.05,this.DEFAULT_MAXVAL=.05,this.minval=e.minval||this.DEFAULT_MINVAL,this.maxval=e.maxval||this.DEFAULT_MAXVAL,this.seed=e.seed}apply(e,n){return _c(e,this.minval,this.maxval,n,this.seed)}getConfig(){return{minval:this.minval,maxval:this.maxval,seed:this.seed}}}eT.className="RandomUniform";Z(eT);class tT extends As{constructor(e){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=e.mean||this.DEFAULT_MEAN,this.stddev=e.stddev||this.DEFAULT_STDDEV,this.seed=e.seed}apply(e,n){if(n=n||"float32",n!=="float32"&&n!=="int32")throw new ve(`randomNormal does not support dType ${n}.`);return Bf(e,this.mean,this.stddev,n,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}}tT.className="RandomNormal";Z(tT);class nT extends As{constructor(e){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=e.mean||this.DEFAULT_MEAN,this.stddev=e.stddev||this.DEFAULT_STDDEV,this.seed=e.seed}apply(e,n){if(n=n||"float32",n!=="float32"&&n!=="int32")throw new ve(`truncatedNormal does not support dType ${n}.`);return k1(e,this.mean,this.stddev,n,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}}nT.className="TruncatedNormal";Z(nT);class sT extends As{constructor(e){super(),this.gain=e.gain!=null?e.gain:1}apply(e,n){return P(()=>{if(e.length!==2||e[0]!==e[1])throw new L("Identity matrix initializer can only be used for 2D square matrices.");return A(this.gain,s1(e[0]))})}getConfig(){return{gain:this.gain}}}sT.className="Identity";Z(sT);function lW(t,e="channelsLast"){let n,s;if(wt(e),t.length===2)n=t[0],s=t[1];else if([3,4,5].indexOf(t.length)!==-1){if(e==="channelsFirst"){const r=bo(t,2);n=t[1]*r,s=t[0]*r}else if(e==="channelsLast"){const r=bo(t,0,t.length-2);n=t[t.length-2]*r,s=t[t.length-1]*r}}else{const r=bo(t);n=Math.sqrt(r),s=Math.sqrt(r)}return[n,s]}class Mn extends As{constructor(e){if(super(),e.scale<0)throw new L(`scale must be a positive float. Got: ${e.scale}`);this.scale=e.scale==null?1:e.scale,this.mode=e.mode==null?"fanIn":e.mode,iW(this.mode),this.distribution=e.distribution==null?"normal":e.distribution,aW(this.distribution),this.seed=e.seed}apply(e,n){const s=lW(e),r=s[0],o=s[1];let i=this.scale;if(this.mode==="fanIn"?i/=Math.max(1,r):this.mode==="fanOut"?i/=Math.max(1,o):i/=Math.max(1,(r+o)/2),this.distribution==="normal"){const a=Math.sqrt(i);if(n=n||"float32",n!=="float32"&&n!=="int32")throw new ve(`${this.getClassName()} does not support dType ${n}.`);return k1(e,0,a,n,this.seed)}else{const a=Math.sqrt(3*i);return _c(e,-a,a,n,this.seed)}}getConfig(){return{scale:this.scale,mode:this.mode,distribution:this.distribution,seed:this.seed}}}Mn.className="VarianceScaling";Z(Mn);class cb extends Mn{constructor(e){super({scale:1,mode:"fanAvg",distribution:"uniform",seed:e==null?null:e.seed})}getClassName(){return Mn.className}}cb.className="GlorotUniform";Z(cb);class hb extends Mn{constructor(e){super({scale:1,mode:"fanAvg",distribution:"normal",seed:e==null?null:e.seed})}getClassName(){return Mn.className}}hb.className="GlorotNormal";Z(hb);class db extends Mn{constructor(e){super({scale:2,mode:"fanIn",distribution:"normal",seed:e==null?null:e.seed})}getClassName(){return Mn.className}}db.className="HeNormal";Z(db);class pb extends Mn{constructor(e){super({scale:2,mode:"fanIn",distribution:"uniform",seed:e==null?null:e.seed})}getClassName(){return Mn.className}}pb.className="HeUniform";Z(pb);class fb extends Mn{constructor(e){super({scale:1,mode:"fanIn",distribution:"normal",seed:e==null?null:e.seed})}getClassName(){return Mn.className}}fb.className="LeCunNormal";Z(fb);class mb extends Mn{constructor(e){super({scale:1,mode:"fanIn",distribution:"uniform",seed:e==null?null:e.seed})}getClassName(){return Mn.className}}mb.className="LeCunUniform";Z(mb);class rT extends As{constructor(e){if(super(),this.DEFAULT_GAIN=1,this.gain=e.gain==null?this.DEFAULT_GAIN:e.gain,this.seed=e.seed,this.seed!=null)throw new ve("Random seed is not implemented for Orthogonal Initializer yet.")}apply(e,n){return P(()=>{if(e.length<2)throw new ve("Shape must be at least 2D.");e[0]*e[1]>2e3&&console.warn(`Orthogonal initializer is being called on a matrix with more than 2000 (${e[0]*e[1]}) elements: Slowness may result.`);const s=e[0]>e[1]?[e[1],e[0]]:e,r=Bf(s,0,1,"float32");let o=q$.gramSchmidt(r);return e[0]>e[1]&&(o=Ee(o)),A(this.gain,o)})}getConfig(){return{gain:this.gain,seed:this.seed}}}rT.className="Orthogonal";Z(rT);const Ov={constant:"Constant",glorotNormal:"GlorotNormal",glorotUniform:"GlorotUniform",heNormal:"HeNormal",heUniform:"HeUniform",identity:"Identity",leCunNormal:"LeCunNormal",leCunUniform:"LeCunUniform",ones:"Ones",orthogonal:"Orthogonal",randomNormal:"RandomNormal",randomUniform:"RandomUniform",truncatedNormal:"TruncatedNormal",varianceScaling:"VarianceScaling",zeros:"Zeros"};function Fv(t,e={}){return zc(t,gs.getMap().classNameMap,e,"initializer")}function lt(t){return ib(t)}function nt(t){if(typeof t=="string"){const e=t in Ov?Ov[t]:t;if(e==="GlorotNormal")return new hb;if(e==="GlorotUniform")return new cb;if(e==="HeNormal")return new db;if(e==="HeUniform")return new pb;if(e==="LeCunNormal")return new fb;if(e==="LeCunUniform")return new mb;{const n={};return n.className=e,n.config={},Fv(n)}}else return t instanceof As?t:Fv(t)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function by(t){return Array.isArray(t)&&Array.isArray(t[0])}function Ed(t){return t.length===0?[]:Array.isArray(t[0])?t:[t]}function be(t){let e;if(Array.isArray(t)){if(t.length!==1)throw new L(`Expected Tensor length to be 1; got ${t.length}`);e=t[0]}else e=t;return e}function Le(t){if(Array.isArray(t)&&Array.isArray(t[0])){if(t.length===1)return t=t,t[0];throw new L(`Expected exactly 1 Shape; got ${t.length}`)}else return t}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function Dd(t){let e=0;for(const n of t)n.shape.length===0?e+=1:e+=n.shape.reduce((s,r)=>s*r);return e}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const Lv="Variable";class uW{constructor(e,n="float32",s=Lv,r=!0,o=null){this.dtype=n==null?"float32":n,this.shape=e.shape,this.id=HI(),s=s==null?Lv:s,this.originalName=KI(s),this.name=qI(this.originalName),this.trainable_=r,this.constraint=o,this.val=F$(e,this.trainable_,this.name,this.dtype)}read(){return this.assertNotDisposed(),this.val}write(e){return this.assertNotDisposed(),cW(this.val,e),this.val.id!==e.id&&(this.val.assign(e),this.constraint!=null&&this.val.assign(this.constraint.apply(this.val))),this}dispose(){this.assertNotDisposed(),this.val.dispose()}assertNotDisposed(){if(this.val.isDisposed)throw new Error(`LayersVariable ${this.name} is already disposed.`)}get trainable(){return this.trainable_}set trainable(e){this.trainable_=e,this.val.trainable=e}}function cW(t,e){if(t.shape.toString()!==e.shape.toString())throw new Error("Shape mismatch: "+JSON.stringify(t.shape)+" vs. "+JSON.stringify(e.shape))}function wy(t){return t.map(e=>e.read())}function gb(t){t.forEach(e=>{e[0].write(e[1])})}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class Tt{constructor(e){this.dtype=e.dtype,this.shape=e.shape,e.shape!=null?this.ndim=e.shape.length:this.ndim=e.ndim,this.maxNDim=e.maxNDim,this.minNDim=e.minNDim,this.axes=e.axes||{}}}class ur{constructor(e,n,s,r,o,i,a){this.dtype=e,this.shape=n,this.sourceLayer=s,this.inputs=r,this.callArgs=o,this.outputTensorIndex=a,this.id=HI(),i!=null&&(this.originalName=KI(i),this.name=qI(this.originalName)),this.rank=n.length}}let hW=0;class Vf{constructor(e,n){this.callArgs=n,this.id=hW++,this.outboundLayer=e.outboundLayer,this.inboundLayers=e.inboundLayers,this.nodeIndices=e.nodeIndices,this.tensorIndices=e.tensorIndices,this.inputTensors=e.inputTensors,this.outputTensors=e.outputTensors,this.inputMasks=e.inputMasks,this.outputMasks=e.outputMasks,this.inputShapes=e.inputShapes,this.outputShapes=e.outputShapes;for(const s of e.inboundLayers)s!=null&&s.outboundNodes.push(this);e.outboundLayer.inboundNodes.push(this)}getConfig(){const e=[];for(const n of this.inboundLayers)n!=null?e.push(n.name):e.push(null);return{outboundLayer:this.outboundLayer?this.outboundLayer.name:null,inboundLayers:e,nodeIndices:this.nodeIndices,tensorIndices:this.tensorIndices}}}let dW=0;class Te extends el{constructor(e={}){super(),this._callHook=null,this._addedWeightNames=[],this._stateful=!1,this.id=dW++,this.activityRegularizer=null,this.inputSpec=null,this.supportsMasking=!1,this._trainableWeights=[],this._nonTrainableWeights=[],this._losses=[],this._updates=[],this._built=!1,this.inboundNodes=[],this.outboundNodes=[];let n=e.name;if(!n){const s=this.getClassName();n=Nr(s)+"_"+Mf(s)}if(this.name=n,this.trainable_=e.trainable==null?!0:e.trainable,e.inputShape!=null||e.batchInputShape!=null){let s;if(e.batchInputShape!=null)s=e.batchInputShape;else if(e.inputShape!=null){let o=null;e.batchSize!=null&&(o=e.batchSize),s=[o].concat(e.inputShape)}this.batchInputShape=s;let r=e.dtype;r==null&&(r=e.inputDType),r==null&&(r="float32"),this.dtype=r}e.weights!=null?this.initialWeights=e.weights:this.initialWeights=null,this._refCount=null,this.fastWeightInitDuringBuild=!1}static nodeKey(e,n){return e.name+"_ib-"+n.toString()}getNodeAtIndex(e,n){if(this.inboundNodes.length===0)throw new ks(`The layer has never been called and thus has no defined ${n}.`);if(this.inboundNodes.length<=e)throw new L(`Asked to get ${n} at node ${e}, but the layer has only ${this.inboundNodes.length} inbound nodes.`);return this.inboundNodes[e]}getInputAt(e){return yn(this.getNodeAtIndex(e,"input").inputTensors)}getOutputAt(e){return yn(this.getNodeAtIndex(e,"output").outputTensors)}get input(){if(this.inboundNodes.length>1)throw new rr(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer input" is ill-defined. Use \`getInputAt(nodeIndex)\` instead.`);if(this.inboundNodes.length===0)throw new rr(`Layer ${this.name} is not connected, no input to return.`);return yn(this.getNodeAtIndex(0,"input").inputTensors)}get output(){if(this.inboundNodes.length===0)throw new rr(`Layer ${this.name} has no inbound nodes.`);if(this.inboundNodes.length>1)throw new rr(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer output" is ill-defined. Use \`getOutputAt(nodeIndex)\` instead.`);return yn(this.getNodeAtIndex(0,"output").outputTensors)}get losses(){return this._losses}calculateLosses(){return this.losses.map(e=>e())}get updates(){return this._updates}get built(){return this._built}set built(e){this._built=e}get trainable(){return this.trainable_}set trainable(e){this._trainableWeights.forEach(n=>n.trainable=e),this.trainable_=e}get trainableWeights(){return this.trainable_?this._trainableWeights.filter(e=>e.trainable):[]}set trainableWeights(e){this._trainableWeights=e}get nonTrainableWeights(){return this.trainable?this._trainableWeights.filter(e=>!e.trainable).concat(this._nonTrainableWeights):this._trainableWeights.concat(this._nonTrainableWeights)}set nonTrainableWeights(e){this._nonTrainableWeights=e}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}get stateful(){return this._stateful}resetStates(){if(!this.stateful)throw new Error("Cannot call the resetStates() method of a non-stateful Layer object.")}assertInputCompatibility(e){if(e=qe(e),this.inputSpec==null||this.inputSpec.length===0)return;const n=qe(this.inputSpec);if(e.length!==n.length)throw new L(`Layer ${this.name} expects ${n.length} inputs, but it received ${e.length} input tensors. Input received: ${e}`);for(let s=0;s<e.length;s++){const r=e[s],o=n[s];if(o==null)continue;const i=r.rank;if(o.ndim!=null&&i!==o.ndim)throw new L(`Input ${s} is incompatible with layer ${this.name}: expected ndim=${o.ndim}, found ndim=${i}`);if(o.maxNDim!=null&&i>o.maxNDim)throw new L(`Input ${s} is incompatible with layer ${this.name}: expected max_ndim=${o.maxNDim}, found ndim=${i}`);if(o.minNDim!=null&&i<o.minNDim)throw new L(`Input ${s} is incompatible with layer ${this.name}: expected min_ndim=${o.minNDim}, found ndim=${i}.`);if(o.dtype!=null&&r.dtype!==o.dtype)throw new L(`Input ${s} is incompatible with layer ${this.name} : expected dtype=${o.dtype}, found dtype=${r.dtype}.`);if(o.axes){const a=r.shape;for(const l in o.axes){const u=Number(l),c=o.axes[l],h=u>=0?a[u]:a[a.length+u];if(c!=null&&[c,null].indexOf(h)===-1)throw new L(`Input ${s} is incompatible with layer ${this.name}: expected axis ${u} of input shape to have value ${c} but got shape ${a}.`)}}if(o.shape!=null)for(let a=0;a<o.shape.length;++a){const l=o.shape[a],u=r.shape[a];if(l!=null&&u!=null&&l!==u)throw new L(`Input ${s} is incompatible with layer ${this.name}: expected shape=${o.shape}, found shape=${r.shape}.`)}}}call(e,n){return e}invokeCallHook(e,n){this._callHook!=null&&this._callHook(e,n)}setCallHook(e){this._callHook=e}clearCallHook(){this._callHook=null}apply(e,n){n=n||{},this.assertNotDisposed();const s=qe(e);let r=!0;for(const i of s)if(!(i instanceof ur)){r=!1;break}let o=!0;for(const i of s)if(i instanceof ur){o=!1;break}if(r===o)throw new L("Arguments to apply() must be all SymbolicTensors or all Tensors");return ci(this.name,()=>{if(!this.built){this.assertInputCompatibility(e);const i=[];for(const a of qe(e))i.push(a.shape);this.build(yn(i)),this.built=!0,this.initialWeights&&this.setWeights(this.initialWeights),this._refCount===null&&o&&(this._refCount=1)}if(this.assertInputCompatibility(e),o){let i=this.call(e,n);const a=qe(i),l=[];for(let u of a)s.indexOf(u)!==-1&&(u=u.clone()),l.push(u);if(i=yn(l),this.activityRegularizer!=null)throw new ve("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return i}else{const i=pW(e),a=this.computeOutputShape(i);let l;const u=fW(e);if(this.warnOnIncompatibleInputShape(Array.isArray(e)?i[0]:i),a!=null&&a.length>0&&Array.isArray(a[0])?l=a.map((c,h)=>new ur(u,c,this,qe(e),n,this.name,h)):l=new ur(u,a,this,qe(e),n,this.name),this.addInboundNode(e,l,null,null,i,a,n),this._refCount++,this.activityRegularizer!=null)throw new ve("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return l}})}warnOnIncompatibleInputShape(e){if(this.batchInputShape!=null)if(e.length!==this.batchInputShape.length)console.warn(`The rank of the input tensor provided (shape: ${JSON.stringify(e)}) does not match that of the batchInputShape (${JSON.stringify(this.batchInputShape)}) of the layer ${this.name}`);else{let n=!1;this.batchInputShape.forEach((s,r)=>{s!=null&&e[r]!=null&&e[r]!==s&&(n=!0)}),n&&console.warn(`The shape of the input tensor (${JSON.stringify(e)}) does not match the expectation of layer ${this.name}: ${JSON.stringify(this.batchInputShape)}`)}}get outputShape(){if(this.inboundNodes==null||this.inboundNodes.length===0)throw new rr(`The layer ${this.name} has never been called and thus has no defined output shape.`);const e=[];for(const n of this.inboundNodes){const s=JSON.stringify(n.outputShapes);e.indexOf(s)===-1&&e.push(s)}if(e.length===1){const n=this.inboundNodes[0].outputShapes;return Array.isArray(n)&&Array.isArray(n[0])&&n.length===1?n[0]:n}else throw new rr(`The layer ${this.name} has multiple inbound nodes with different output shapes. Hence the notion of "output shape" is ill-defined for the layer.`)}countParams(){if(!this.built)throw new ks(`You tried to call countParams() on ${this.name}, but the layer is not built yet. Build it first by calling build(batchInputShape).`);return Dd(this.weights)}build(e){this.built=!0}getWeights(e=!1){return wy(e?this.trainableWeights:this.weights)}setWeights(e){P(()=>{const n=this.weights;if(n.length!==e.length)throw new L(`You called setWeights(weights) on layer "${this.name}" with a weight list of length ${e.length}, but the layer was expecting ${n.length} weights. Provided weights: ${e}...`);if(n.length===0)return;const s=[],r=wy(n);for(let o=0;o<r.length;++o){const i=r[o],a=n[o],l=e[o];if(!Ae(i.shape,l.shape))throw new L(`Layer weight shape ${i.shape} not compatible with provided weight shape ${l.shape}`);s.push([a,l])}gb(s)})}addWeight(e,n,s,r,o,i,a,l){if(this._addedWeightNames.indexOf(e)!==-1)throw new L(`Duplicate weight name ${e} for layer ${this.name}`);this._addedWeightNames.push(e),s==null&&(s="float32"),this.fastWeightInitDuringBuild&&(r=l!=null?l():nt("zeros"));const u=r.apply(n,s),c=new uW(u,s,e,i,a);return u.dispose(),o!=null&&this.addLoss(()=>o.apply(c.read())),i==null&&(i=!0),i?this._trainableWeights.push(c):this._nonTrainableWeights.push(c),c}setFastWeightInitDuringBuild(e){this.fastWeightInitDuringBuild=e}addLoss(e){e==null||Array.isArray(e)&&e.length===0||(e=qe(e),this._losses!==void 0&&this._losses!==null&&this.losses.push(...e))}computeOutputShape(e){return e}computeMask(e,n){if(!this.supportsMasking){if(n!=null)if(Array.isArray(n))n.forEach(s=>{if(s!=null)throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`)});else throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`);return null}return n}addInboundNode(e,n,s,r,o,i,a=null){const l=qe(e);n=qe(n),s=qe(s),r=qe(r),o=Ed(o),i=Ed(i);const u=[],c=[],h=[];for(const d of l)u.push(d.sourceLayer),c.push(d.nodeIndex),h.push(d.tensorIndex);new Vf({outboundLayer:this,inboundLayers:u,nodeIndices:c,tensorIndices:h,inputTensors:l,outputTensors:n,inputMasks:s,outputMasks:r,inputShapes:o,outputShapes:i},a);for(let d=0;d<n.length;d++)n[d].sourceLayer=this,n[d].nodeIndex=this.inboundNodes.length-1,n[d].tensorIndex=d}getConfig(){const e={name:this.name,trainable:this.trainable};return this.batchInputShape!=null&&(e.batchInputShape=this.batchInputShape),this.dtype!=null&&(e.dtype=this.dtype),e}disposeWeights(){return this.weights.forEach(e=>e.dispose()),this.weights.length}assertNotDisposed(){if(this._refCount===0)throw new Error(`Layer '${this.name}' is already disposed.`)}dispose(){if(!this.built)throw new Error(`Cannot dispose Layer ${this.name} because it has not been built yet.`);if(this._refCount===null)throw new Error(`Cannot dispose Layer ${this.name} because it has not been used yet.`);this.assertNotDisposed();let e=0;return--this._refCount===0&&(e=this.disposeWeights()),{refCountAfterDispose:this._refCount,numDisposedVariables:e}}}function pW(t){t=qe(t);const e=[];for(const n of t)e.push(n.shape);return yn(e)}function fW(t){return"float32"}function oT(t,e,n){if((e==null||n!=null&&n>0)&&(e=t.sourceLayer,n=t.nodeIndex),e.inboundNodes.length===0)return[t];{const s=e.inboundNodes[n];if(s.inboundLayers.length===0)return s.inputTensors;{const r=[];for(let o=0;o<s.inboundLayers.length;o++){const i=s.inputTensors[o],a=s.inboundLayers[o],l=s.nodeIndices[o],u=oT(i,a,l);for(const c of u)r.indexOf(c)===-1&&r.push(c)}return r}}}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class Wc extends Te{constructor(e){if(super({dtype:e.dtype,name:e.name!=null?e.name:Mf("input").toString()}),e.batchSize==null&&(e.batchSize=null),e.sparse==null&&(e.sparse=!1),this.trainable=!1,this.built=!0,this.sparse=e.sparse,e.inputShape!=null&&e.batchInputShape!=null)throw new L("Only provide the inputShape OR batchInputShape argument to inputLayer, not both at the same time.");let n=e.batchInputShape;if(n==null){if(e.inputShape==null)throw new L("An InputLayer should be passed either a `batchInputShape` or an `inputShape`.");n=[e.batchSize].concat(e.inputShape)}else if(e.batchSize!=null)throw new L("Cannot specify batchSize if batchInputShape is specified when creating an InputLayer.");const s=e.dtype||"float32";this.batchInputShape=n,this.dtype=s,this.inputSpec=[{shape:n}];const r=new ur(this.dtype,this.batchInputShape,this,[],{},this.name);r.nodeIndex=0,r.tensorIndex=0,new Vf({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:[r],outputTensors:[r],inputMasks:[null],outputMasks:[null],inputShapes:[n],outputShapes:[n]})}apply(e,n){throw new L(`Cannot pass any input to an InputLayer's apply() method. InputLayer name: ${this.name}`)}dispose(){return{refCountAfterDispose:this._refCount,numDisposedVariables:0}}getConfig(){return{batchInputShape:this.batchInputShape,dtype:this.dtype,sparse:this.sparse,name:this.name}}}Wc.className="InputLayer";Z(Wc);function mW(t){if(t.batchShape==null&&t.shape==null)throw new Error("Please provide to Input either a `shape` or a `batchShape` argument. Note that `shape` does not include the batch dimension.");if(t.batchShape!=null&&t.shape!=null)throw new L("Please provide either a `shape` or `batchShape` argument to Input, but not both.");let e=t.batchShape;t.shape!=null&&e==null&&(e=[null].concat(t.shape));let n=t.dtype;return n==null&&(n="float32"),new Wc({batchInputShape:e,name:t.name,dtype:n,sparse:t.sparse}).inboundNodes[0].outputTensors[0]}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function gW(t,e){if(t.dtype==null||t.dtype===e.dtype)return e;try{return ie(e,t.dtype)}catch{throw new L(`The dtype of the feed (${e.dtype}) can not be cast to the dtype of the key '${t.name}' (${t.dtype}).`)}}class oo{constructor(e){if(this.id2Value={},this.id2Mask={},this.name2Id={},e instanceof oo)for(const n in e.id2Value)this.id2Value[n]=e.id2Value[n],n in e.id2Mask&&(this.id2Mask[n]=e.id2Mask[n]);else{if(e==null)return;for(const n of e)this.add(n.key,n.value)}}add(e,n,s){if(this.id2Value[e.id]==null)this.id2Value[e.id]=gW(e,n),this.name2Id[e.name]=e.id,s!=null&&(this.id2Mask[e.id]=s);else throw new L(`Duplicate key: name=${e.name}, id=${e.id}`);return this}addFeed(e){this.add(e.key,e.value)}hasKey(e){return this.id2Value[e.id]!=null}names(){return Object.keys(this.name2Id)}getValue(e){if(e instanceof ur){if(this.id2Value[e.id]==null)throw new L(`Nonexistent key: ${e.name}`);return this.id2Value[e.id]}else{const n=this.name2Id[e];if(n==null)throw new L(`Feed dict has no SymbolicTensor name: ${e}`);return this.id2Value[n]}}getMask(e){if(e instanceof ur){if(this.id2Value[e.id]==null)throw new L(`Nonexistent key: ${e.name}`);return this.id2Mask[e.id]}else{const n=this.name2Id[e];if(n==null)throw new L(`Feed dict has no SymbolicTensor name: ${e}`);return this.id2Mask[n]}}disposeMasks(){this.id2Mask!=null&&Se(this.id2Mask)}}const Rd=new WI,Ad=new WI;function yW(t){Rd!=null&&Rd.setMaxEntries(t),Ad!=null&&Ad.setMaxEntries(t)}function Dl(t,e,n,s){const r=n==null?!1:n.training,o=Array.isArray(t),i=o?t:[t],a=i.map(f=>f.name),l=[],u=e.names();for(const f of a)u.indexOf(f)!==-1?l.push(e.getValue(f)):l.push(null);s!=null&&(s.maxNumTensors=-1/0,s.minNumTensors=1/0);const c=a.join(",")+"|"+e.names().sort().join(",");let h=Rd.get(c),d;if(h==null){const f=xW(i,e);h=f.sorted,d=f.recipientCounts,Rd.put(c,h),Ad.put(c,d)}d={},r||Object.assign(d,Ad.get(c));const p=new oo(e);for(let f=0;f<h.length;++f){if(s!=null){const T=uy().numTensors;T>s.maxNumTensors&&(s.maxNumTensors=T),T<s.minNumTensors&&(s.minNumTensors=T)}const m=h[f],y=m.sourceLayer;if(y instanceof Wc)continue;const g=[],x=[],b=[];let w=!1;for(const T of m.inputs){const E=p.getValue(T),F=p.getMask(T);g.push(E),x.push(F),F!=null&&(w=!0),r||(d[T.name]--,d[T.name]===0&&!e.hasKey(T)&&a.indexOf(T.name)===-1&&!E.isDisposed&&T.sourceLayer.stateful!==!0&&b.push(E))}w&&(n=n||{},n.mask=x[0]);const k=qe(y.apply(g,n));let S=null;y.supportsMasking&&(S=y.computeMask(g,x));const N=wW(m),$=Array.isArray(N)?N:[N];for(let T=0;T<$.length;++T){p.hasKey($[T])||p.add($[T],k[T],Array.isArray(S)?S[0]:S);const E=a.indexOf($[T].name);E!==-1&&(l[E]=k[T])}r||Se(b)}return p.disposeMasks(),o?l:l[0]}function xW(t,e){C(t!=null&&t.length>0,()=>"Expected at least one fetch, got none");let n=[],s={};if(t.length===1){const r=Pv(t[0],e);n=r.sorted,s=r.recipientMap}else{const r=new Set;for(const o of t){const{sorted:i,recipientMap:a}=Pv(o,e);for(const l of i)r.has(l.name)||(n.push(l),r.add(l.name));for(const l in a)s[l]==null&&(s[l]=new Set),a[l].forEach(u=>s[l].add(u))}}return{sorted:n,recipientCounts:bW(s)}}function bW(t){const e={};for(const n in t)e[n]=t[n].size;return e}function Pv(t,e){const n=new Set,s=[],r={};for(const a of e.names())n.add(a);const o=[],i=[];for(o.push(t);o.length>0;){const a=o[o.length-1];if(n.has(a.name)){o.pop();continue}const l=i[i.length-1]===o.length-1;if(a.inputs.length===0||l)o.pop(),s.push(a),n.add(a.name),l&&i.pop();else{i.push(o.length-1);for(const u of a.inputs)r[u.name]==null&&(r[u.name]=new Set),r[u.name].add(a.name),!n.has(u.name)&&o.push(u)}}return{sorted:s,recipientMap:r}}function wW(t){let e;if(t.sourceLayer.inboundNodes.length===1)e=t.sourceLayer.output;else{let n=null;for(let s=0;s<t.sourceLayer.inboundNodes.length;++s)for(const r of t.sourceLayer.inboundNodes[s].outputTensors)if(r.id===t.id){n=s;break}e=t.sourceLayer.getOutputAt(n)}return e}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const vW=U();vW.registerFlag("TOPOLOGICAL_SORT_CACHE_MAX_ENTRIES",()=>100,yW);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function yb(t,e){return P(()=>en(he(A(t,t),e,!0)))}class Uc extends el{getConfig(){return{}}}class iT extends Uc{constructor(e){super(),this.defaultMaxValue=2,this.defaultAxis=0,this.maxValue=e.maxValue!=null?e.maxValue:this.defaultMaxValue,this.axis=e.axis!=null?e.axis:this.defaultAxis}apply(e){return P(()=>{const n=yb(e,this.axis),s=zn(n,0,this.maxValue);return A(e,pe(s,Q(It(),n)))})}getConfig(){return{maxValue:this.maxValue,axis:this.axis}}}iT.className="MaxNorm";Z(iT);class aT extends Uc{constructor(e){super(),this.defaultAxis=0,this.axis=e.axis!=null?e.axis:this.defaultAxis}apply(e){return P(()=>pe(e,Q(It(),yb(e,this.axis))))}getConfig(){return{axis:this.axis}}}aT.className="UnitNorm";Z(aT);class lT extends Uc{apply(e){return wr(e)}}lT.className="NonNeg";Z(lT);class uT extends Uc{constructor(e){super(),this.defaultMinValue=0,this.defaultMaxValue=1,this.defaultRate=1,this.defaultAxis=0,this.minValue=e.minValue!=null?e.minValue:this.defaultMinValue,this.maxValue=e.maxValue!=null?e.maxValue:this.defaultMaxValue,this.rate=e.rate!=null?e.rate:this.defaultRate,this.axis=e.axis!=null?e.axis:this.defaultAxis}apply(e){return P(()=>{const n=yb(e,this.axis),s=Q(A(this.rate,zn(n,this.minValue,this.maxValue)),A(1-this.rate,n));return A(e,pe(s,Q(It(),n)))})}getConfig(){return{minValue:this.minValue,maxValue:this.maxValue,rate:this.rate,axis:this.axis}}}uT.className="MinMaxNorm";Z(uT);const zv={maxNorm:"MaxNorm",minMaxNorm:"MinMaxNorm",nonNeg:"NonNeg",unitNorm:"UnitNorm"};function Et(t){return ib(t)}function Mv(t,e={}){return zc(t,gs.getMap().classNameMap,e,"constraint")}function Dt(t){if(t==null)return null;if(typeof t=="string"){const n={className:t in zv?zv[t]:t,config:{}};return Mv(n)}else return t instanceof Uc?t:Mv(t)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */async function Xo(t){if(t==null)return;const e=[],n=[],s=[];for(const r in t){const o=t[r];if(typeof o!="number"){const i=o;e.push(i.data()),n.push(r),s.push(i)}}if(e.length>0){const r=await Promise.all(e);for(let o=0;o<r.length;++o)t[n[o]]=r[o][0];Se(s)}}function cT(t){if(t!=null)for(const e in t){const n=t[e];typeof n!="number"&&n.dispose()}}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */var Bv;(function(t){t[t.SILENT=0]="SILENT",t[t.VERBOSE=1]="VERBOSE"})(Bv||(Bv={}));const kW=125;class fu{constructor(){this.validationData=null}setParams(e){this.params=e}async onEpochBegin(e,n){}async onEpochEnd(e,n){}async onBatchBegin(e,n){}async onBatchEnd(e,n){}async onTrainBegin(e){}async onTrainEnd(e){}setModel(e){}}class SW{constructor(e,n=10){e==null&&(e=[]),this.callbacks=e,this.queueLength=n}append(e){this.callbacks.push(e)}setParams(e){for(const n of this.callbacks)n.setParams(e)}setModel(e){for(const n of this.callbacks)n.setModel(e)}async onEpochBegin(e,n){n==null&&(n={});for(const s of this.callbacks)await s.onEpochBegin(e,n)}async onEpochEnd(e,n){n==null&&(n={});for(const s of this.callbacks)await s.onEpochEnd(e,n)}async onBatchBegin(e,n){n==null&&(n={});for(const s of this.callbacks)await s.onBatchBegin(e,n)}async onBatchEnd(e,n){n==null&&(n={});for(const s of this.callbacks)await s.onBatchEnd(e,n)}async onTrainBegin(e){e==null&&(e={});for(const n of this.callbacks)await n.onTrainBegin(e)}async onTrainEnd(e){e==null&&(e={});for(const n of this.callbacks)await n.onTrainEnd(e)}}class CW extends fu{constructor(){super()}async onEpochBegin(e){this.seen=0,this.totals={}}async onBatchEnd(e,n){n==null&&(n={});const s=n.size==null?0:n.size;this.seen+=s;for(const r in n){const o=n[r];if(typeof o=="number")this.totals.hasOwnProperty(r)||(this.totals[r]=0),this.totals[r]=this.totals[r]+o*s;else{let i;r in this.totals?i=this.totals[r]:this.totals[r]=0;const a=P(()=>Q(this.totals[r],A(o,s)));this.totals[r]=a,i!=null&&i.dispose()}}}async onEpochEnd(e,n){if(n!=null)for(const s of this.params.metrics)this.totals[s]!=null&&(typeof this.totals[s]=="number"?n[s]=this.totals[s]/this.seen:P(()=>{const r=A(pe(1,this.seen),this.totals[s]);n[s]=r,this.totals[s].dispose(),Ft(n[s])}))}}class NW extends fu{async onTrainBegin(e){this.epoch=[],this.history={}}async onEpochEnd(e,n){n==null&&(n={}),this.epoch.push(e);for(const s in n)this.history[s]==null&&(this.history[s]=[]),this.history[s].push(n[s])}async syncData(){const e=[],n=[],s=[];for(const o in this.history){const i=this.history[o];for(let a=0;a<i.length;++a)if(typeof i[a]!="number"){const l=i[a];e.push(l.data()),n.push(o),s.push(a)}}const r=await Promise.all(e);for(let o=0;o<r.length;++o)this.history[n[o]][s[o]].dispose(),this.history[n[o]][s[o]]=r[o][0]}}class $W extends fu{constructor(e,n){if(super(),this.currentEpoch=0,this.nowFunc=e.nowFunc,this.nextFrameFunc=e.nextFrameFunc||mI,this.yieldEvery=n||"auto",this.yieldEvery==="auto"&&(this.yieldEvery=kW),this.yieldEvery==="never"&&e.onYield!=null)throw new Error("yieldEvery is `never` but you provided an `onYield` callback. Either change `yieldEvery` or remove the callback");Ug(this.yieldEvery)&&(this.maybeWait=V4(this.maybeWait.bind(this),this.yieldEvery,this.nowFunc)),this.trainBegin=e.onTrainBegin,this.trainEnd=e.onTrainEnd,this.epochBegin=e.onEpochBegin,this.epochEnd=e.onEpochEnd,this.batchBegin=e.onBatchBegin,this.batchEnd=e.onBatchEnd,this.yield=e.onYield}async maybeWait(e,n,s){const r=[];this.yield!=null&&(await Xo(s),r.push(this.yield(e,n,s))),r.push(this.nextFrameFunc()),await Promise.all(r)}async onEpochBegin(e,n){this.currentEpoch=e,this.epochBegin!=null&&(await Xo(n),await this.epochBegin(e,n))}async onEpochEnd(e,n){const s=[];this.epochEnd!=null&&(await Xo(n),s.push(this.epochEnd(e,n))),this.yieldEvery==="epoch"&&s.push(this.nextFrameFunc()),await Promise.all(s)}async onBatchBegin(e,n){this.batchBegin!=null&&(await Xo(n),await this.batchBegin(e,n))}async onBatchEnd(e,n){const s=[];this.batchEnd!=null&&(await Xo(n),s.push(this.batchEnd(e,n))),this.yieldEvery==="batch"?s.push(this.nextFrameFunc()):Ug(this.yieldEvery)&&s.push(this.maybeWait(this.currentEpoch,e,n)),await Promise.all(s)}async onTrainBegin(e){this.trainBegin!=null&&(await Xo(e),await this.trainBegin(e))}async onTrainEnd(e){this.trainEnd!=null&&(await Xo(e),await this.trainEnd(e))}}function hT(t,e){return t==null&&(t={}),t instanceof fu?[t]:Array.isArray(t)&&t[0]instanceof fu?t:qe(t).map(s=>new $W(s,e))}class us{constructor(){}static registerCallbackConstructor(e,n){C(e>=0&&Number.isInteger(e),()=>`Verbosity level is expected to be an integer >= 0, but got ${e}`),us.checkForDuplicate(n),us.constructors[e]==null&&(us.constructors[e]=[]),us.constructors[e].push(n)}static checkForDuplicate(e){for(const n in us.constructors)us.constructors[+n].forEach(r=>{if(r===e)throw new L("Duplicate callback constructor.")})}static clear(){us.constructors={}}static createCallbacks(e){const n=[];for(const s in us.constructors){const r=+s;e>=r&&n.push(...us.constructors[r])}return n.map(s=>new s)}}us.constructors={};function dT(t,e,n,s,r,o,i,a,l){const u=new NW,c=[new CW,...us.createCallbacks(e)];t!=null&&c.push(...t),c.push(u);const h=new SW(c);return h.setParams({epochs:n,initialEpoch:s,samples:r,steps:o,batchSize:i,verbose:e,doValidation:a,metrics:l}),{callbackList:h,history:u}}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function _r(t,e={},n=!1){return zc(t,gs.getMap().classNameMap,e,"layer",n)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function _d(t,e){return P(()=>{t.dtype!=="float32"&&(t=ie(t,"float32"));const n=he(Bc(t),e,!0),s=Ya(n.shape,It()),r=en(Ur(n,s));return pe(t,r)})}function Wf(t,e){return P(()=>dt(Bc(le(e,t)),-1))}function xb(t,e){return P(()=>dt(Nt(le(e,t)),-1))}function bb(t,e){return P(()=>{const n=le(t,e),s=zn(Nt(t),It(),Number.MAX_VALUE),r=Nt(pe(n,s));return A(100,dt(r,-1))})}function IW(t,e){return P(()=>{const n=zn(e,It(),Number.MAX_VALUE),s=Jn(Q(1,n)),r=zn(t,It(),Number.MAX_VALUE),o=Jn(Q(1,r));return dt(Bc(le(s,o)),-1)})}function TW(t,e){return P(()=>{const n=Ur(0,le(1,A(t,e)));return dt(Bc(n),-1)})}function EW(t,e){return P(()=>{const n=Ur(0,le(1,A(t,e)));return dt(n,-1)})}function DW(t,e){return P(()=>{const n=he(A(t,e),-1),s=$s(A(le(1,t),e),-1);return Ur(0,Q(1,le(s,n)))})}function RW(t,e){return P(()=>{const n=Math.log(2),s=le(e,t),r=le(Q(s,Qa(A(-2,s))),n);return dt(r,-1)})}function mu(t,e,n=!1){return P(()=>{if(n)e=Tf(e);else{const s=he(e,e.shape.length-1,!0);e=pe(e,s)}return e=zn(e,It(),1-It()),st(he(A(ie(t,"float32"),Jn(e)),e.shape.length-1))})}function Od(t,e,n=!1){return P(()=>{const s=ie(Dc(J4(t)),"int32");e=zn(e,It(),1-It());const r=e.shape,o=O(u1(s,r[r.length-1]),r);return mu(o,e,n)})}function AW(t,e){if(!Ae(t.shape,e.shape))throw new L(`logits and labels must have the same shape, but got shapes ${JSON.stringify(t.shape)} and ${JSON.stringify(e.shape)}`);return P(()=>{const n=wr(e),s=st(Nt(e));return Q(le(n,A(e,t)),bf(Zn(s)))})}function Uf(t,e){return P(()=>{let n;return n=zn(e,It(),1-It()),n=Jn(pe(n,le(1,n))),dt(AW(t,n),-1)})}function _W(t,e){return P(()=>{const n=zn(t,It(),1),s=zn(e,It(),1);return he(A(t,Jn(pe(n,s))),-1)})}function OW(t,e){return P(()=>{const n=Jn(Q(It(),e));return dt(le(e,A(t,n)),-1)})}function pT(t,e){return P(()=>{const n=_d(t,-1),s=_d(e,-1),r=A(n,s);return st(he(r,-1))})}const Fd={meanSquaredError:Wf,meanAbsoluteError:xb,meanAbsolutePercentageError:bb,meanSquaredLogarithmicError:IW,squaredHinge:TW,hinge:EW,categoricalHinge:DW,logcosh:RW,categoricalCrossentropy:mu,sparseCategoricalCrossentropy:Od,binaryCrossentropy:Uf,kullbackLeiblerDivergence:_W,poisson:OW,cosineProximity:pT};function Mm(t){if(typeof t=="string"){if(t in Fd)return Fd[t];let e=`Unknown loss ${t}`;throw t.toLowerCase().includes("softmaxcrossentropy")&&(e=`Unknown loss ${t}. Use "categoricalCrossentropy" as the string name for tf.losses.softmaxCrossEntropy`),new L(e)}else return t}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function fT(t,e){return P(()=>{const n=A(.5,es(e)),s=gr(Un(e,n),t.dtype);return dt(Ys(t,s),-1)})}function mT(t,e){return P(()=>gr(Ys(Aa(t,-1),Aa(e,-1)),"float32"))}function FW(t,e){return P(()=>ie(he(xr(Ys(t,1),Ys(e,1))),"float32"))}function LW(t,e){return P(()=>ie(he(xr(Ys(t,0),Ys(e,1))),"float32"))}function PW(t,e){return P(()=>{const n=FW(t,e),s=LW(t,e),r=Q(n,s);return ie(vn(Un(r,0),pe(n,r),0),"float32")})}function zW(t,e){return Uf(t,e)}function MW(t,e){return t.rank===e.rank&&(t=Li(t,[t.rank-1])),e=Aa(e,-1),e.dtype!==t.dtype&&(e=ie(e,t.dtype)),ie(Ys(t,e),"float32")}const BW=Wf,VW=Wf,WW=xb,UW=xb,GW=bb,HW=bb,gT=mu,jW=pT,yT=Od,Ld={binaryAccuracy:fT,categoricalAccuracy:mT,precision:PW,categoricalCrossentropy:gT,sparseCategoricalCrossentropy:yT,mse:BW,MSE:VW,mae:WW,MAE:UW,mape:GW,MAPE:HW,cosine:jW};function KW(t){if(typeof t=="string"&&t in Ld)return Ld[t];if(typeof t!="string"&&t!=null)return t;throw new L(`Unknown metric ${t}`)}function Sh(t){if(or(t!==null,`Unknown LossOrMetricFn ${t}`),typeof t=="string")return t;{let e;for(const n of Object.keys(Fd))if(Fd[n]===t){e=n;break}if(e!==void 0)return e;for(const n of Object.keys(Ld))if(Ld[n]===t){e=n;break}return e!==void 0?e:t.name}}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function qW(t){const e={Adagrad:()=>Ui.adagrad(.01),Adadelta:()=>Ui.adadelta(1,.95,It()),Adam:()=>Ui.adam(.001,.9,.999,It()),Adamax:()=>Ui.adamax(.002,.9,.999,It(),0),RMSProp:()=>Ui.rmsprop(.001,.9,0,It()),SGD:()=>Ui.sgd(.01)};if(e.adagrad=e.Adagrad,e.adadelta=e.Adadelta,e.adam=e.Adam,e.adamax=e.Adamax,e.rmsprop=e.RMSProp,e.sgd=e.SGD,t in e)return e[t]();throw new L(`Unknown Optimizer ${t}`)}/**
 * @license
 * Copyright 2019 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const Vv=1*1024*1024;function Wv(t,e,n=!1){if(t==null||typeof t!="object"||Object.getPrototypeOf(t)!==Object.prototype||!vy(t))throw new Error("User-defined metadata is expected to be a JSON object, but is not.");if(n){const s=JSON.stringify(t);s.length>Vv&&console.warn(`User-defined metadata of model "${e}" is too large in size (length=${s.length} when serialized). It is not recommended to store such large objects in user-defined metadata. Please make sure its serialized length is <= ${Vv}.`)}}function vy(t){if(t===null)return!0;if(typeof t=="object")if(Object.getPrototypeOf(t)===Object.prototype){const e=Object.keys(t);for(const n of e)if(typeof n!="string"||!vy(t[n]))return!1;return!0}else if(Array.isArray(t)){for(const e of t)if(!vy(e))return!1;return!0}else return!1;else{const e=typeof t;return e==="string"||e==="number"||e==="boolean"}}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function XW(t,e,n,s=console.log){const r=QW(t),o=["Layer (type)","Input Shape","Output shape","Param #"];r?(e=e||90,n=n||[.32,.61,.89,1]):(e=e||115,n=n||[.24,.48,.7,.8,1]),n[n.length-1]<=1&&(n=n.map(c=>Math.floor(e*c)));let i;if(!r){o.push("Receives inputs"),i=[];for(const c in t.nodesByDepth)i.push(...t.nodesByDepth[c])}s("_".repeat(e)),Pd(o,n,s),s("=".repeat(e));const a=t.layers;for(let c=0;c<a.length;++c)r?ZW(a[c],n,s):JW(a[c],n,i,s),s((c===a.length-1?"=":"_").repeat(e));t.checkTrainableWeightsConsistency();const l=YW(t),u=Dd(t.nonTrainableWeights);s(`Total params: ${l+u}`),s(`Trainable params: ${l}`),s(`Non-trainable params: ${u}`),s("_".repeat(e))}function YW(t){let e;return t.collectedTrainableWeights!=null?e=Dd(t.collectedTrainableWeights):e=Dd(t.trainableWeights),e}function QW(t){let e=!0;const n=[],s=[];for(const r in t.nodesByDepth)n.push(t.nodesByDepth[r]);for(const r of n){if(r.length>1||r.length===1&&r[0].inboundLayers.length>1){e=!1;break}s.push(...r)}if(e)for(const r of t.layers){let o=!1;for(const i of r.inboundNodes)if(s.indexOf(i)!==-1)if(o){e=!1;break}else o=!0;if(!e)break}return e}function Pd(t,e,n=console.log){let s="";for(let r=0;r<t.length;++r)r>0&&(s=s.slice(0,s.length-1)+" "),s+=t[r],s=s.slice(0,e[r]),s+=" ".repeat(e[r]-s.length);n(s)}function ZW(t,e,n){let s,r;try{r=t.inboundNodes.map(l=>JSON.stringify(l.inputShapes)).join(",")}catch{r="multiple"}try{s=JSON.stringify(t.outputShape)}catch{s="multiple"}const o=t.name,i=t.getClassName(),a=[`${o} (${i})`,r,s,t.countParams().toString()];Pd(a,e,n)}function JW(t,e,n,s){let r,o;try{o=t.inboundNodes.map(h=>JSON.stringify(h.inputShapes)).join(",")}catch{o="multiple"}try{r=JSON.stringify(t.outputShape)}catch{r="multiple"}const i=[];for(const h of t.inboundNodes)if(!(n!=null&&n.length>0&&n.indexOf(h)===-1))for(let d=0;d<h.inboundLayers.length;++d){const p=h.inboundLayers[d].name,f=h.nodeIndices[d],m=h.tensorIndices[d];i.push(`${p}[${f}][${m}]`)}const a=t.name,l=t.getClassName(),u=i.length===0?"":i[0],c=[`${a} (${l})`,o,r,t.countParams().toString(),u];Pd(c,e,s);for(let h=1;h<i.length;++h)Pd(["","","","",i[h]],e,s)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function xT(t,e,n){return(t==="inboundNodes"||t==="outputLayers"||t==="inputLayers")&&e===0&&typeof n=="string"}function ky(t,e){if(t===null)return null;if(typeof t=="string")return ti(t);if(typeof t=="number"||typeof t=="boolean")return t;if(t instanceof Array){const n=[],s=t.length;for(let r=0;r<s;++r){const o=t[r];xT(e,r,o)?n.push(o):n.push(ky(o,e))}return n}else{const n={};for(const s of Object.keys(t)){const r=t[s];if(s==="name"&&typeof r=="string")n[s]=r;else{const o=ti(s);n[o]=ky(r,o)}}return n}}function Sy(t,e){if(t==null)return null;if(typeof t=="string")return Nr(t);if(typeof t=="number"||typeof t=="boolean")return t;if(t instanceof Array){const n=[],s=t.length;for(let r=0;r<s;++r){const o=t[r];xT(e,r,o)?n.push(o):n.push(Sy(o,e))}return n}else{const n={};for(const s of Object.keys(t)){const r=t[s],o=Nr(s);(s==="name"||s==="className")&&typeof r=="string"?n[o]=r:n[o]=Sy(r,s)}return n}}/** @license See the LICENSE file. */const bT="4.2.0";/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class Ps extends Te{constructor(e){if(super({}),this.containerNodes=new Set,this.name=e.name,this.name==null){const x=this.getClassName().toLowerCase();this.name=Mf(x)}if(this.supportsMasking=!1,this.trainable_=!0,Array.isArray(e.inputs)?this.inputs=e.inputs.slice():this.inputs=[e.inputs],Array.isArray(e.outputs)?this.outputs=e.outputs.slice():this.outputs=[e.outputs],xo(this.inputs).length!==this.inputs.length)throw new L(`The list of inputs passed to the model is redundant. All inputs should only appear once. Found: ${this.inputs.map(x=>x.name)}`);xo(this.outputs).length!==this.outputs.length&&console.warn(`The list of outputs passed to the model is redundant. All outputs should only appear once. Found: ${this.outputs.map(x=>x.name)}`),this.inputLayers=[],this.inputLayersNodeIndices=[],this.inputLayersTensorIndices=[],this.outputLayers=[],this.outputLayersNodeIndices=[],this.outputLayersTensorIndices=[],this.layers=[],this.internalContainerRefs=[];for(const x of this.outputs){const b=x.sourceLayer,w=x.nodeIndex,k=x.tensorIndex;this.outputLayers.push(b),this.outputLayersNodeIndices.push(w),this.outputLayersTensorIndices.push(k)}for(const x of this.inputs){const b=x.sourceLayer,w=x.nodeIndex,k=x.tensorIndex;or(w===0,"input layer has >1 nodes"),or(k===0,"input layer has >1 tensors"),this.inputLayers.push(b),this.inputLayersNodeIndices.push(w),this.inputLayersTensorIndices.push(k)}this.inputNames=[],this.outputNames=[],this.feedInputShapes=[],this.feedInputNames=[],this.feedOutputNames=[];for(let x=0;x<this.inputLayers.length;x++){const b=this.inputLayers[x];if(!(b instanceof Wc))throw new TypeError(`Input layers to a LayersModel must be InputLayer objects. Received inputs: ${e.inputs}. Input ${x} (0-based) originates from layer type ${b.getClassName()}.`);this.inputNames.push(b.name),this.feedInputShapes.push(b.batchInputShape),this.feedInputNames.push(b.name)}for(const x of this.outputLayers)this.outputNames.push(x.name);this.internalInputShapes=this.inputs.map(x=>x.shape),this.internalOutputShapes=this.outputs.map(x=>x.shape);const n={},s={},r={},o={},i={},a=[],l=(x,b,w,k,S,N)=>{(k==null||S==null||N==null)&&(k=x.sourceLayer,S=x.nodeIndex,N=x.tensorIndex);const $=k.inboundNodes[S];if(w.indexOf($)!==-1)throw new ks(`The tensor ${x.name} at layer "${k.name}" is part of a cycle.`);if(b.indexOf($)!==-1)return;this.containerNodes.add(Ps.nodeKey(k,S)),k.id in i||(i[k.id]=Object.keys(i).length),w.indexOf($)===-1&&w.push($);const T=$.inboundLayers.length;for(let E=0;E<T;E++){const F=$.inputTensors[E],M=$.inboundLayers[E],B=$.nodeIndices[E],V=$.tensorIndices[E];l(F,b,w,M,B,V)}for(b.push($);w.indexOf($)>=0;)w.splice(w.indexOf($),1);a.push($)},u=[],c=[];for(const x of this.outputs)l(x,u,c);const h=a.slice().reverse();for(const x of h){s[x.id]=x,x.id in n||(n[x.id]=0);let b=n[x.id];const w=r[x.outboundLayer.id]==null?0:r[x.outboundLayer.id];b=Math.max(b,w),r[x.outboundLayer.id]=b,o[x.outboundLayer.id]=x.outboundLayer,n[x.id]=b;for(let k=0;k<x.inboundLayers.length;k++){const S=x.inboundLayers[k],N=x.nodeIndices[k],$=S.inboundNodes[N],T=n[$.id]==null?0:n[$.id];n[$.id]=Math.max(b+1,T),s[$.id]=$}}const d={};for(const x in n){const b=n[x];b in d||(d[b]=[]),d[b].push(s[x])}const p={};for(const x in r){const b=r[x];b in p||(p[b]=[]),p[b].push(o[x])}let f=Object.keys(p).map(x=>parseInt(x,10)).sort(wh);this.layers=[];for(const x of f){const b=p[x];b.sort((w,k)=>{const S=i[w.id],N=i[k.id];return S<N?-1:S>N?1:0});for(const w of b)w instanceof Ps&&this.internalContainerRefs.push(w),this.layers.push(w)}this.layersByDepth=p,f=Object.keys(d).map(x=>parseInt(x,10)).sort(wh);const m=this.inputs.slice(),y=[];for(const x of f)for(const b of d[x]){const w=b.outboundLayer;if(w!=null){for(const k of b.inputTensors)if(m.indexOf(k)===-1)throw new ks(`Graph disconnected: cannot obtain value for tensor ${k} at layer "${w.name}". The following previous layers were accessed without issue: ${y}`);for(const k of b.outputTensors)m.push(k);y.push(w.name)}}this.nodesByDepth=d;const g=this.layers.map(x=>x.name);for(const x of g){const b=g.filter(w=>w===x).length;if(b!==1)throw new ks(`The name "${x}" is used ${b} times in the model. All layer names should be unique. Layer names: `+JSON.stringify(g))}this.outboundNodes=[],this.inboundNodes=[],new Vf({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:this.inputs.map(x=>null),outputMasks:this.outputs.map(x=>null),inputShapes:this.inputs.map(x=>x.shape),outputShapes:this.outputs.map(x=>x.shape)}),this.built=!0,this._refCount=1}assertNotDisposed(){if(this._refCount===0)throw new Error(`Container '${this.name}' is already disposed.`)}dispose(){this.assertNotDisposed();const e={refCountAfterDispose:null,numDisposedVariables:0};if(--this._refCount===0){for(const n of this.layers)e.numDisposedVariables+=n.dispose().numDisposedVariables;for(const n of this.internalContainerRefs)e.numDisposedVariables+=n.dispose().numDisposedVariables}return e.refCountAfterDispose=this._refCount,e}get trainable(){return this.trainable_}set trainable(e){this.layers.forEach(n=>{n._trainableWeights.forEach(s=>s.trainable=e)}),this.trainable_=e}get trainableWeights(){if(this._trainableWeights.length>0)throw new L("Container instance unexpectedly contains _trainableWeights.The trainable weights of a Container are a union of the trainable weights of its consituent Layers. Its own _trainableWeights must remain an empty Array.");if(!this.trainable)return[];let e=[];for(const n of this.layers)e=e.concat(n.trainableWeights);return e}get nonTrainableWeights(){const e=[];for(const n of this.layers)e.push(...n.nonTrainableWeights);if(!this.trainable){const n=[];for(const s of this.layers)n.push(...s.trainableWeights);return n.concat(e)}return e}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}loadWeights(e,n=!0){const s={};let r=0;for(const i of this.layers)for(const a of i.weights){if(s[a.originalName]!=null)throw new L(`Duplicate weight name: ${a.originalName}`);s[a.originalName]=a,r++}const o=[];for(const i in e){let a=i;if(s[i]==null){const l=i.split("/");a=l.slice(0,-2).concat([l[l.length-1]]).join("/")}if(s[a]!=null)o.push([s[a],e[i]]);else if(n)throw new L(`Provided weight data has no target variable: ${i}`);delete s[a]}if(n){const i=[];for(const a in s)i.push(a);if(i.length>0)throw new L(`${i.length} of ${r} weights are not set: ${i}`)}gb(o)}updatedConfig(){const e=this.getConfig(),n={};return n.className=this.getClassName(),n.config=e,n.kerasVersion=`tfjs-layers ${bT}`,n.backend="TensorFlow.js",n}toJSON(e,n=!0){const s=Sy(this.updatedConfig());return n?JSON.stringify(s):s}call(e,n){return P(()=>{e=qe(e);const s=new oo;for(let r=0;r<this.inputs.length;++r)s.add(this.inputs[r],e[r]);return Dl(this.outputs,s,n)})}computeMask(e,n){return P(()=>{e=qe(e);let s;return n==null?s=Ni(null,e.length):s=qe(n),this.runInternalGraph(e,s)[1]})}computeOutputShape(e){const n=Ed(e);if(n.length!==this.inputLayers.length)throw new L(`Invalid inputShape argument ${e}: model has ${this.inputLayers.length} tensor inputs.`);const s={};for(let a=0;a<n.length;a++){const l=this.inputLayers[a],u=n[a],c=l.name+"_0_0";s[c]=u}const r=Object.keys(this.nodesByDepth).map(a=>parseInt(a,10)).sort(wh);if(r.length>1)for(const a of r){const l=this.nodesByDepth[a];for(const u of l){const c=u.outboundLayer;if(this.inputLayers.map(m=>m.id).indexOf(c.id)!==-1)continue;const h=[];for(let m=0;m<u.inboundLayers.length;m++){const y=u.inboundLayers[m],g=u.nodeIndices[m],x=u.tensorIndices[m],b=`${y.name}_${g}_${x}`,w=s[b];h.push(w)}const d=c.computeOutputShape(yn(h)),p=Ed(d),f=c.inboundNodes.indexOf(u);for(let m=0;m<p.length;m++){const y=`${c.name}_${f}_${m}`;s[y]=p[m]}}}const o=[],i=[];for(let a=0;a<this.outputLayers.length;a++){const l=this.outputLayers[a],u=this.outputLayersNodeIndices[a],c=this.outputLayersTensorIndices[a],h=`${l.name}_${u}_${c}`;i.push(h)}for(let a=0;a<i.length;a++){const l=i[a];or(l in s),o.push(s[l])}return yn(o)}runInternalGraph(e,n){n==null&&(n=Ni(null,e.length));const s={};for(let l=0;l<this.inputs.length;++l){const u=this.inputs[l],c=e[l],h=n[l];s[u.id]=[c,h]}const r=Object.keys(this.nodesByDepth).map(l=>parseInt(l,10)).sort(wh);for(const l of r){const u=this.nodesByDepth[l];for(const c of u){const h=c.outboundLayer,d=c.inputTensors,p=c.outputTensors,f=new Array;for(const m of d)m.id in s&&f.push(s[m.id]);if(f.length===d.length){let m={},y,g,x,b;if(c.callArgs!=null&&(m=c.callArgs),f.length===1){const[w,k]=f[0];m.mask==null&&(m.mask=k),x=qe(h.call(w,m)),b=qe(h.computeMask(w,k)),y=[w],g=[k]}else y=f.map(w=>w[0]),g=f.map(w=>w[1]),m.mask==null&&(m.mask=g),x=qe(h.call(y,m)),b=qe(h.computeMask(y,g));if(h.activityRegularizer)throw new ve("LayersModel invocation with concrete Tensor value(s) in the presence of activity regularizer(s) is not supported yet.");for(let w=0;w<p.length;++w){const k=p[w],S=x[w],N=b[w];s[k.id]=[S,N]}}}}const o=[],i=[],a=[];for(const l of this.outputs){or(l.id in s,`Could not compute output ${l.name} : ${l.id}`);const[u,c]=s[l.id];a.push(u.shape),o.push(u),i.push(c)}return[o,i,a]}buildNodeConversionMap(e){const n={};let s;for(const r of this.layers){s=r instanceof Ps?1:0;for(let o=0;o<r.inboundNodes.length;o++){const i=Ps.nodeKey(r,o);this.containerNodes.has(i)&&(n[i]=s,s+=1)}}return n}getLayer(e,n){if(n!=null){if(this.layers.length<=n)throw new L(`Was asked to retrieve layer at index ${n}, but model only has ${this.layers.length} layer(s).`);return this.layers[n]}else if(e==null)throw new L("Provide either a layer name or layer index");for(const s of this.layers)if(s.name===e)return s;throw new L(`No such layer: ${e}`)}calculateLosses(){return P(()=>{const e=[];for(const n of this.layers)for(let s=0;s<n.inboundNodes.length;++s){const r=Ps.nodeKey(n,s);this.containerNodes.has(r)&&e.push(...n.calculateLosses())}return e})}getConfig(){const e={name:this.name},n=this.buildNodeConversionMap(this.layers),s=[];for(const i of this.layers){const a=i.getClassName(),l=i.getConfig(),u=[];for(let h=0;h<i.inboundNodes.length;h++){const d=i.inboundNodes[h],p=Ps.nodeKey(i,h);let f={};if(this.containerNodes.has(p)){if(d.callArgs)try{JSON.stringify(d.callArgs),f=d.callArgs}catch{console.warn(`Layer ${i.name} was passed non-serializable keyword arguments: ${d.callArgs}. They will not be included in the serialized model (and thus will be missing at deserialization time).`),f={}}if(d.inboundLayers.length>0){const m=[];for(let y=0;y<d.inboundLayers.length;y++){const g=d.inboundLayers[y],x=d.nodeIndices[y],b=d.tensorIndices[y],w=Ps.nodeKey(g,x);let k=n[w];k==null&&(k=0),m.push([g.name,k,b,f])}u.push(m)}}}const c={};c.name=i.name,c.className=a,c.config=l,c.inboundNodes=u,s.push(c)}e.layers=s;const r=[];for(let i=0;i<this.inputLayers.length;i++){const a=this.inputLayers[i],l=this.inputLayersNodeIndices[i],u=Ps.nodeKey(a,l);if(!this.containerNodes.has(u))continue;let c=n[u];c==null&&(c=0);const h=this.inputLayersTensorIndices[i];r.push([a.name,c,h])}e.inputLayers=r;const o=[];for(let i=0;i<this.outputLayers.length;i++){const a=this.outputLayers[i],l=this.outputLayersNodeIndices[i],u=Ps.nodeKey(a,l);if(!this.containerNodes.has(u))continue;let c=n[u];c==null&&(c=0);const h=this.outputLayersTensorIndices[i];o.push([a.name,c,h])}return e.outputLayers=o,e}static fromConfig(e,n,s={},r=!1){const o={},i={};function a(y,g){y.name in i?i[y.name].push(g):i[y.name]=[g]}function l(y,g){const x=[];let b;for(const w of g){const k=w[0],S=w[1],N=w[2];if(b=w[3]==null?{}:w[3],!(k in o)){a(y,g);return}const $=o[k];if($.inboundNodes.length<=S){a(y,g);return}const T=$.inboundNodes[S];x.push(T.outputTensors[N])}x.length>0&&y.apply(yn(x),b)}function u(y){const g=y.name,x=_r(y,n.customObjects!=null?n.customObjects:{});x.setFastWeightInitDuringBuild(r),o[g]=x,y.inboundNodes.forEach(w=>{if(!(w instanceof Array))throw new L(`Corrupted configuration, expected array for nodeData: ${w}`);a(x,w)})}const c=n.name,h=n.layers;for(const y of h)u(y);for(;!B4(i);)for(const y of h){const g=o[y.name];if(g.name in i){const x=i[g.name];delete i[g.name];for(const b of x)l(g,b)}}const d=[],p=[],f=n.inputLayers;for(const y of f){const g=y[0],x=y[1],b=y[2];or(g in o);const k=o[g].inboundNodes[x].outputTensors;d.push(k[b])}const m=n.outputLayers;for(const y of m){const g=y[0],x=y[1],b=y[2];or(g in o);const k=o[g].inboundNodes[x].outputTensors;p.push(k[b])}return new e({inputs:d,outputs:p,name:c})}get stateful(){if(this._stateful)throw new L("Container instance unexpectedly has _stateful = true. The statefulness of a Container is determined by the Layers it contains. Its _stateful property must remain the default false.");for(const e of this.layers)if(e.stateful)return!0;return!1}resetStates(){P(()=>{this.layers.forEach(e=>{e.stateful&&e.resetStates()})})}}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function eU(t,e,n){const s=e.length;if(t==null||Array.isArray(t)&&t.length===0)return e.map(r=>null);if(s===1)return Array.isArray(t)&&t.length===1?t:typeof t=="object"&&e[0]in t?[t[e[0]]]:[t];if(Array.isArray(t)){if(t.length!==s)throw new Error(`Provided ${n} is an array of ${t.length} element(s), but the model has ${s} outputs. Make sure a set of weights is provided for each model output.`);return t}else if(typeof t=="object"&&Object.keys(t).length>0&&typeof t[Object.keys(t)[0]]=="object"){const r=[];return e.forEach(o=>{o in t?r.push(t[o]):r.push(null)}),r}else throw new Error(`The model has multiple (${s}) outputs, so ${n} must be either an array with ${s} elements or an object with ${e} keys. Provided ${n} not understood: ${JSON.stringify(t)}`)}function wT(t,e){return eU(t,e,"classWeight")}async function vT(t,e,n,s){if(e!=null||s!=null)throw new Error("Support sampleWeight is not implemented yet");if(n!=null){const r=P(()=>{if(t.shape.length===1)return Ar(t);if(t.shape.length===2){if(t.shape[1]>1)return Aa(t,1);if(t.shape[1]===1)return O(t,[t.shape[0]]);throw new Error(`Encountered unexpected last-dimension size (${t.shape[1]}) during handling of class weights. The size is expected to be >= 1.`)}else throw new Error(`Unexpected rank of target (y) tensor (${t.rank}) during handling of class weights. The rank is expected to be 1 or 2.`)}),o=Array.from(await r.data());Se(r);const i=[];return o.forEach(a=>{if(n[a]==null)throw new Error(`classWeight must contain all classes in the training data. The class ${a} exists in the data but not in classWeight`);i.push(n[a])}),bn(i,"float32")}else return null}function tU(t,e){return A(t,e)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const nU=32;function kT(t,e){let n,s;const r=e;n=r.xs,s=r.ys,C(n!=null&&s!=null,()=>`A Dataset iterator for fitDataset() is expected to generate objects of the form \`{xs: xVal, ys: yVal}\`, where the two values may be \`tf.Tensor\`, an array of Tensors, or a map of string to Tensor.  The provided Dataset instead generates ${e}`);const o=Uv("input",t.inputNames,n),i=Uv("output",t.outputNames,s),a=o[0].shape[0];C(o.length===t.inputs.length,()=>`LayersModel has ${t.inputs.length} inputs, but the dataset provides ${o.length} inputs.  (Expected input keys: ${JSON.stringify(t.inputNames)})`),C(i.length===t.outputs.length,()=>`LayersModel has ${t.outputs.length} outputs, but the dataset provides ${i.length} outputs.  (Expected output keys: ${JSON.stringify(t.outputNames)})`);for(let l=0;l<o.length;l++)C(o[l].shape[0]===a,()=>`Batch size mismatch: input ${t.inputNames[l]} has ${o[l].shape[0]}; expected  ${a} based on input ${t.inputNames[0]}.`);for(let l=0;l<i.length;l++)C(i[l].shape[0]===a,()=>`Batch size mismatch: output ${t.outputNames[l]} has ${i[l].shape[0]}; expected  ${a} based on input ${t.inputNames[0]}.`);return{xs:o,ys:i}}function Uv(t,e,n){if(n instanceof et)return[n];if(Array.isArray(n))return C(n.length===e.length,()=>`Received an array of ${n.length} Tensors, but expected ${e.length} to match the ${t} keys ${e}.`),n;{const s=[];for(const r of e){if(n[r]==null)throw new L(`The feature data generated by the dataset lacks the required ${t} key '${r}'.`);s.push(n[r])}return s}}function sU(t){if(t.length===3)throw new ve("Validation with sample weights is not implemented yet.");return{xs:t[0],ys:t[1]}}async function rU(t,e,n){const s=n.batchesPerEpoch!=null;if(C(t.optimizer!=null,()=>"You must compile a model before training/testing. Use LayersModel.compile(modelCompileConfig)."),C(n!=null,()=>"For fitDataset(), the 2nd argument (config) is required, but it is not provided in this call."),C(n.epochs!=null&&n.epochs>0&&Number.isInteger(n.epochs),()=>`For fitDataset(), config.epochs is expected to be a positive integer, but got ${n.epochs}`),C(!s||n.batchesPerEpoch>0&&Number.isInteger(n.batchesPerEpoch),()=>`For fitDataset(), config.batchesPerEpoch is expected to be a positive integer if specified, but got ${n.batchesPerEpoch}`),C(n.validationSplit==null,()=>"`validationSplit` is not supported by `fitDataset()`. Use validationData instead."),t.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");t.isTraining=!0;try{const r=n.validationData!=null;let o,i;if(r)if(Gv(n.validationData))C(n.validationBatches==null||n.validationBatches>0&&Number.isInteger(n.validationBatches),()=>`For fitDataset() with dataset-based validation, config.validationBatches is expected not to be provided, or to be a positive integer, but got ${n.validationBatches}`);else{const y=sU(n.validationData);o=y.xs,i=y.ys}const a=t.makeTrainFunction(),l=t.getDedupedMetricsNames();let u;r?u=l.slice().concat(l.map(y=>"val_"+y)):u=l.slice();const c=hT(n.callbacks,n.yieldEvery),h=n.verbose==null?1:n.verbose,{callbackList:d,history:p}=dT(c,h,n.epochs,null,null,oU(e,n),null,r,u);d.setModel(t),t.history=p,await d.onTrainBegin(),t.stopTraining_=!1;let f=n.initialEpoch==null?0:n.initialEpoch,m=await e.iterator();for(;f<n.epochs;){const y={};await d.onEpochBegin(f);let g=0,x=0;for(s||(m=await e.iterator());!s||g<n.batchesPerEpoch;){const b=await m.next();if(s&&b.done){console.warn(`You provided \`batchesPerEpoch\` as ${n.batchesPerEpoch}, but your dataset iterator ran out of data after ${g} batches; interrupting training. Make sure that your dataset can generate at least \`batchesPerEpoch * epochs\` batches (in this case, ${n.batchesPerEpoch*n.epochs} batches). You may need to use the repeat() function when building your dataset.`);break}if(b.value!=null){const{xs:w,ys:k}=kT(t,b.value),S={};S.batch=x,S.size=w[0].shape[0],await d.onBatchBegin(x,S);const N=[];if(n.classWeight!=null){const E=wT(n.classWeight,t.outputNames);for(let F=0;F<E.length;++F)N.push(await vT(k[F],null,E[F]))}const $=w.concat(k).concat(N),T=a($);Se($);for(let E=0;E<l.length;++E){const F=l[E],M=T[E];S[F]=M,Ft(M)}await d.onBatchEnd(x,S),cT(S),x++,g++}if(s?g>=n.batchesPerEpoch:b.done){if(r){let w;Gv(n.validationData)?w=qe(await t.evaluateDataset(n.validationData,{batches:n.validationBatches})):w=qe(t.evaluate(o,i,{batchSize:n.validationBatchSize==null?nU:n.validationBatchSize,verbose:0}));for(let k=0;k<t.metricsNames.length;++k)y[`val_${t.metricsNames[k]}`]=w[k]}break}if(t.stopTraining_)break}if(await d.onEpochEnd(f,y),f++,t.stopTraining_)break}return await d.onTrainEnd(),await t.history.syncData(),t.history}finally{t.isTraining=!1}}function oU(t,e){let n=null;return e.batchesPerEpoch!=null?n=e.batchesPerEpoch:Number.isFinite(t.size)&&(n=t.size),n}function Gv(t){return typeof t.iterator=="function"}function iU(t){return typeof t.next=="function"}async function aU(t,e,n){n=n||{};const s=n.batches!=null,r=t.testFunction;let o=[];if(n.verbose>0)throw new ve("Verbose mode is not implemented yet.");C(!s||n.batches>0&&Number.isInteger(n.batches),()=>`Test loop expects \`batches\` to be a positive integer, but received ${JSON.stringify(n.batches)}`);const i=iU(e)?e:await e.iterator();let a=0,l=0;for(;!s||l<n.batches;){const u=await i.next();if(o=P(()=>{if(u.value){const{xs:c,ys:h}=kT(t,u.value),d=c.concat(h),p=P(()=>r(d));if(Se(d),l===0)for(let m=0;m<p.length;++m)o.push(ge(0));const f=d[0].shape[0];for(let m=0;m<p.length;++m){const y=p[m],g=o[m];o[m]=P(()=>Q(o[m],A(f,y))),l>0&&Se(g)}Se(p),a+=f,++l}return o}),u.done){s&&console.warn(`Your dataset iterator ran out of data during evaluateDataset(). Interrupting evalution. Make sure that your dataset can generate at least \`batches\` batches (in this case, ${n.batches} batches). You may need to use the repeat() function when building your dataset.`);break}}for(let u=0;u<o.length;++u){const c=o[u];o[u]=pe(o[u],a),Se(c)}return yn(o)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function Bm(t){C(t>0&&Number.isInteger(t),()=>`batchSize is required to be a positive integer, but got ${t}`)}function vl(t,e,n){return t==null?[null]:Array.isArray(t)?t.map(s=>hi(s,e,n-e)):hi(t,e,n-e)}function Cy(t,e){return P(()=>t==null?null:Array.isArray(t)?t.map(n=>Cy(n,e)):YI(t,e.dtype==="int32"?e:ie(e,"int32")))}function Vm(t,e){const n=[];let s=0,r=null;for(;s<t;)r=s+e,r>=t&&(r=t),n.push([s,r]),s=r;return n}function ST(t){const e=[];t instanceof et&&(t=[t]);for(let n=0;n<t.length;++n){const s=t[n];if(s.rank===1)e.push(Mc(s,1));else{if(s.rank===0)throw new Error("Expected tensor to be at least 1D, but received a 0D tensor (scalar).");e.push(s)}}return e}function Ls(t,e){if(t==null)return;const n=[];if(e instanceof et)n.push(e.id);else if(Array.isArray(e))e.forEach(r=>n.push(r.id));else if(e!=null)for(const r in e){const o=e[r];n.push(o.id)}const s=[];if(t instanceof et)n.indexOf(t.id)===-1&&s.push(t);else if(Array.isArray(t))t.forEach(r=>{n.indexOf(r.id)===-1&&s.push(r)});else if(t!=null)for(const r in t){const o=t[r];n.indexOf(o.id)===-1&&s.push(o)}s.forEach(r=>{r.isDisposed||r.dispose()})}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function lU(t){return t instanceof et}function Ny(t){return Array.isArray(t)}function Hv(t){return!lU(t)&&!Ny(t)}function jv(t,e,n,s=!0,r=""){if(e==null||e.length===0){if(t!=null){let i=!1;if(Ny(t)&&t.length>0)i=!0;else if(Hv(t)){for(const a in t)if(t.hasOwnProperty(a)){i=!0;break}}else i=!0;if(i)throw new L(`Error when checking model ${r} expected no data, but got ${t}`)}return[]}if(t==null)return e.map(i=>null);let o;if(Hv(t)){t=t,o=[];for(const i of e){if(t[i]==null)throw new L(`No data provided for "${i}". Need data for each key in: ${e}`);o.push(t[i])}}else if(Ny(t)){if(t=t,t.length!==e.length)throw new L(`Error when checking model ${r}: the Array of Tensors that you are passing to your model is not the size the model expected. Expected to see ${e.length} Tensor(s), but instead got the following list of Tensor(s): ${t}`);o=t}else{if(t=t,e.length>1)throw new L(`The model ${r} expects ${e.length} Tensor(s), but only received one Tensor. Found: Tensor with shape ${t.shape}`);o=[t]}if(o=ST(o),n!=null)for(let i=0;i<e.length;++i){if(n[i]==null)continue;const a=o[i];if(a.shape.length!==n[i].length)throw new L(`Error when checking ${r}: expected ${e[i]} to have ${n[i].length} dimension(s). but got array with shape ${a.shape}`);for(let l=0;l<n[i].length;++l){if(l===0&&!s)continue;const u=a.shape[l],c=n[i][l];if(c!=null&&c>=0&&u!==c)throw new L(`${r} expected a batch of elements where each example has shape [${n[i].slice(1,n[i].length)}] (i.e.,tensor shape [*,${n[i].slice(1,n[i].length)}]) but the ${r} received an input with ${a.shape[0]} examples, each with shape [${a.shape.slice(1,a.shape.length)}] (tensor shape [${a.shape}])`)}}return o}function uU(t,e,n){const s=xo(t.map(o=>o.shape[0]));s.sort();const r=xo(e.map(o=>o.shape[0]));if(r.sort(),s.length>1)throw new L(`All input Tensors (x) should have the same number of samples. Got array shapes: ${JSON.stringify(t.map(o=>o.shape))}`);if(r.length>1)throw new L(`All target Tensors (y) should have the same number of samples. Got array shapes: ${JSON.stringify(e.map(o=>o.shape))}`);if(s.length>0&&r.length>0&&!Ae(s,r))throw new L(`Input Tensors should have the same number of samples as target Tensors. Found ${s[0]} input sample(s) and ${r[0]} target sample(s).`)}function cU(t,e,n){const s=[Wf,Uf,mu];for(let r=0;r<t.length;++r){const o=t[r],i=e[r],a=n[r];if(i!=null){if(i===mu&&o.shape[o.shape.length-1]===1)throw new L(`You are passing a target array of shape ${o.shape} while using a loss 'categorical_crossentropy'. 'categorical_crossentropy'expects targets to be binary matrices (1s and 0s) of shape [samples, classes].`);if(s.indexOf(i)!==-1){const l=o.shape.slice(1),u=a.slice(1);for(let c=0;c<l.length;++c){const h=l[c],d=u[c];if(d!=null&&h!==d)throw new L(`A target Tensor with shape ${o.shape} was passed for an output of shape ${a}, while using a loss function that expects targets to have the same shape as the output.`)}}}}}function Kv(t,e,n,s=!0,r=""){let o;if(Array.isArray(t)){if(t.length!==e.length)throw new L(`Error when checking model ${r}: the Array of Tensors that you are passing to your model is not the size the the model expected. Expected to see ${e.length} Tensor(s), but instead got ${t.length} Tensors(s).`);o=t}else{if(e.length>1)throw new L(`The model expects ${e.length} ${r} Tensors, but only received one Tensor. Found: array with shape ${JSON.stringify(t.shape)}.`);o=[t]}if(n!=null)for(let i=0;i<e.length;++i){if(n[i]==null)continue;const a=o[i];if(a.shape.length!==n[i].length)throw new L(`Error when checking ${r}: expected ${e[i]} to have ${n[i].length} dimension(s), but got array with shape ${JSON.stringify(a.shape)}`);for(let l=0;l<n[i].length;++l){if(l===0&&!s)continue;const u=a.shape[l],c=n[i][l];if(c!=null&&c!==u)throw new L(`Error when checking ${r}: expected ${e[i]} to have shape ${JSON.stringify(n[i])} but got array with shape ${JSON.stringify(a.shape)}.`)}}}function hU(t,e){if(t==null||Array.isArray(t)&&t.length===0)return e.map(s=>[]);let n;if(typeof t=="string"||typeof t=="function")n=[t];else if(Array.isArray(t)||typeof t=="object")n=t;else throw new TypeError(`Type of metrics argument not understood. Expected an string,function, Array, or Object, found: ${t}`);if(Array.isArray(n))return e.map(s=>n);{const s=[];for(const r of e){let o=n.hasOwnProperty(r)?n[r]:[];Array.isArray(o)||(o=[o]),s.push(o)}return s}}const dU="layers-model";class wa extends Ps{constructor(e){super(e),this.isTraining=!1}summary(e,n,s=console.log){if(!this.built)throw new L("This model has never been called, thus its weights have not been created yet. So no summary can be displayed. Build the model first (e.g., by calling it on some test data).");XW(this,e,n,s)}compile(e){if(e.loss==null&&(e.loss=[]),this.loss=e.loss,typeof e.optimizer=="string")this.optimizer_=qW(e.optimizer),this.isOptimizerOwned=!0;else{if(!(e.optimizer instanceof Uo))throw new L("User-defined optimizer must be an instance of tf.Optimizer.");this.optimizer_=e.optimizer,this.isOptimizerOwned=!1}let n=[];if(!Array.isArray(e.loss)&&typeof e.loss!="string"&&typeof e.loss!="function"){e.loss=e.loss;for(const i in e.loss)if(this.outputNames.indexOf(i)===-1)throw new L(`Unknown entry in loss dictionary: "${i}". Only expected the following keys: ${this.outputNames}`);for(const i of this.outputNames)e.loss[i]==null&&console.warn(`Output "${i}" is missing from loss dictionary. We assume this was done on purpose, and we will not be expecting data to be passed to ${i} during training`),n.push(Mm(e.loss[i]))}else if(Array.isArray(e.loss)){if(e.loss.length!==this.outputs.length)throw new L(`When passing an Array as loss, it should have one entry per model output. The model has ${this.outputs.length} output(s), but you passed loss=${e.loss}.`);n=e.loss.map(a=>Mm(a))}else{const i=Mm(e.loss);this.outputs.forEach(a=>{n.push(i)})}this.lossFunctions=n,this.feedOutputNames=[],this.feedOutputShapes=[],this.feedLossFns=[];for(let i=0;i<this.outputs.length;++i){const a=this.internalOutputShapes[i],l=this.outputNames[i];this.feedOutputNames.push(l),this.feedOutputShapes.push(a),this.feedLossFns.push(this.lossFunctions[i])}const s=[];this.metrics=e.metrics,this.metricsNames=["loss"],this.metricsTensors=[],ci("loss",()=>{for(let i=0;i<this.outputs.length;++i){if(s.indexOf(i)!==-1)continue;const a=this.lossFunctions[i];this.outputs.length>1&&(this.metricsTensors.push([a,i]),this.metricsNames.push(this.outputNames[i]+"_loss"))}});const r=hU(e.metrics,this.outputNames),o=(i,a,l)=>{this.outputNames.length>1&&(a=this.outputNames[i]+"_"+a),this.metricsNames.push(a),this.metricsTensors.push([l,i])};ci("metric",()=>{for(let i=0;i<this.outputs.length;++i){if(s.indexOf(i)!==-1)continue;const a=r[i];(u=>{const c="";let h,d,p;for(const f of u){if(typeof f=="string"&&["accuracy","acc","crossentropy","ce"].indexOf(f)!==-1){const y=this.internalOutputShapes[i];y[y.length-1]===1||this.lossFunctions[i]===Uf?["accuracy","acc"].indexOf(f)!==-1?d=fT:["crossentropy","ce"].indexOf(f)!==-1&&(d=zW):this.lossFunctions[i]===Od?["accuracy","acc"].indexOf(f)!==-1?d=MW:["crossentropy","ce"].indexOf(f)!==-1&&(d=yT):["accuracy","acc"].indexOf(f)!==-1?d=mT:["crossentropy","ce"].indexOf(f)!==-1&&(d=gT);let g;["accuracy","acc"].indexOf(f)!==-1?g="acc":["crossentropy","ce"].indexOf(f)!==-1&&(g="ce"),p=d,h=c+g}else p=KW(f),h=c+Sh(f);let m;ci(h,()=>{m=p}),o(i,h,m)}})(a)}}),this.collectedTrainableWeights=this.trainableWeights}checkTrainableWeightsConsistency(){this.collectedTrainableWeights!=null&&this.trainableWeights.length!==this.collectedTrainableWeights.length&&console.warn("Discrepancy between trainableweights and collected trainable weights. Did you set `model.trainable` without calling `model.compile()` afterwards?")}evaluate(e,n,s={}){const r=s.batchSize==null?32:s.batchSize;Bm(r);const o=!0,i=this.standardizeUserDataXY(e,n,o,r);try{const a=i[0].concat(i[1]);this.makeTestFunction();const l=this.testFunction,u=this.testLoop(l,a,r,s.verbose,s.steps);return yn(u)}finally{Ls(i[0],e),Ls(i[1],n)}}async evaluateDataset(e,n){return this.makeTestFunction(),aU(this,e,n)}checkNumSamples(e,n,s,r="steps"){let o;if(s!=null){if(o=null,n!=null)throw new L(`If ${r} is set, batchSize must be null or undefined.Got batchSize = ${n}`)}else if(e!=null)Array.isArray(e)?o=e[0].shape[0]:o=e.shape[0];else throw new L(`Either the input data should have a defined shape, or ${r} shoud be specified.`);return o}execute(e,n){if(Array.isArray(n)&&n.length===0)throw new L("`outputs` is an empty Array, which is not allowed.");const s=Array.isArray(n),r=s?n:[n],o=this.retrieveSymbolicTensors(r),i=new oo;if(e instanceof et&&(e=[e]),Array.isArray(e)){if(e.length!==this.inputs.length)throw new L(`The number of inputs provided (${e.length}) does not match the number of inputs of this model (${this.inputs.length}).`);for(let l=0;l<this.inputs.length;++l)i.add(this.inputs[l],e[l])}else for(const l of this.inputs){const u=e[l.name];if(u==null)throw new L(`No value is provided for the model's input ${l.name}`);i.add(l,u)}const a=Dl(o,i);return s?a:a[0]}retrieveSymbolicTensors(e){const n=Ni(null,e.length);let s=e.length;for(const r of this.layers){const o=Array.isArray(r.output)?r.output:[r.output],i=o.map(a=>a.name);for(let a=0;a<e.length;++a){const l=i.indexOf(e[a]);if(l!==-1&&(n[a]=o[l],s--),s===0)break}if(s===0)break}if(s>0){const r=[];throw n.forEach((o,i)=>{o==null&&r.push(e[i])}),new L(`Cannot find SymbolicTensors for output name(s): ${JSON.stringify(r)}`)}return n}predictLoop(e,n=32,s=!1){return P(()=>{const r=this.checkNumSamples(e);if(s)throw new ve("Verbose predictLoop() is not implemented yet.");const o=Vm(r,n),i=this.outputs.map(a=>[]);for(let a=0;a<o.length;++a)P(()=>{const u=o[a][0],c=o[a][1],h=vl(e,u,c),d=[];if(Array.isArray(h))for(let f=0;f<h.length;++f)d.push({key:this.inputs[f],value:h[f]});else d.push({key:this.inputs[0],value:h});const p=new oo(d);return Dl(this.outputs,p)}).forEach((u,c)=>i[c].push(u));return yn(i.map(a=>ft(a,0)))})}predict(e,n={}){const s=ST(e);Kv(s,this.inputNames,this.feedInputShapes,!1);try{const r=n.batchSize==null?32:n.batchSize;return Bm(r),this.predictLoop(s,r)}finally{Ls(s,e)}}predictOnBatch(e){Kv(e,this.inputNames,this.feedInputShapes,!0);const n=(Array.isArray(e)?e[0]:e).shape[0];return this.predictLoop(e,n)}standardizeUserDataXY(e,n,s=!0,r){if(this.optimizer_==null)throw new ks("You must compile a model before training/testing. Use LayersModel.compile(modelCompileArgs).");const o=[];for(let i=0;i<this.feedOutputShapes.length;++i){const a=this.feedOutputShapes[i];this.feedLossFns[i]===Od?o.push(a.slice(0,a.length-1).concat([1])):o.push(a)}if(e=jv(e,this.feedInputNames,this.feedInputShapes,!1,"input"),n=jv(n,this.feedOutputNames,o,!1,"target"),uU(e,n),cU(n,this.feedLossFns,this.feedOutputShapes),this.stateful&&r!=null&&r>0&&e[0].shape[0]%r!==0)throw new L(`In a stateful network, you should only pass inputs with a number of samples that is divisible by the batch size ${r}. Found: ${e[0].shape[0]} sample(s).`);return[e,n]}async standardizeUserData(e,n,s,r,o=!0,i){const[a,l]=this.standardizeUserDataXY(e,n,o,i);if(s!=null)throw new Error("sample weight is not supported yet.");let u=null;if(r!=null){const c=wT(r,this.outputNames);u=[];for(let h=0;h<c.length;++h)u.push(await vT(l[h],null,c[h]))}return[a,l,u]}testLoop(e,n,s,r=0,o){return P(()=>{const i=this.checkNumSamples(n,s,o,"steps"),a=[];if(r>0)throw new ve("Verbose mode is not implemented yet.");if(o!=null)throw new ve("steps mode in testLoop() is not implemented yet");{const l=Vm(i,s),u=bn(Qs(0,i));for(let c=0;c<l.length;++c){const h=l[c][0],d=l[c][1],p=hi(u,h,d-h),f=Cy(n,p),m=e(f);if(c===0)for(let y=0;y<m.length;++y)a.push(ge(0));for(let y=0;y<m.length;++y){const g=m[y];a[y]=Q(a[y],A(d-h,g))}}for(let c=0;c<a.length;++c)a[c]=pe(a[c],i)}return a})}getDedupedMetricsNames(){const e=this.metricsNames,n=[];for(let s=0;s<e.length;++s){const r=e[s];let o=r;if(Rv(e,r)>1){const i=Rv(e.slice(0,s),r);o+=`_${i}`}n.push(o)}return n}makeTrainFunction(){return e=>{const n=[],s=e.slice(0,this.inputs.length),r=e.slice(this.inputs.length,this.inputs.length+this.outputs.length),o=e.slice(this.inputs.length+this.outputs.length,this.inputs.length+this.outputs.length*2),i=[],a=()=>{const h=[];for(let m=0;m<this.inputs.length;++m)h.push({key:this.inputs[m],value:s[m]});const d=new oo(h),p=Dl(this.outputs,d,{training:!0});let f;for(let m=0;m<this.lossFunctions.length;++m){const y=this.lossFunctions[m];let g=y(r[m],p[m]);o[m]!=null&&(g=tU(g,o[m]));const x=dt(g);n.push(x),m===0?f=g:f=Q(f,g)}for(let m=0;m<this.metricsTensors.length;++m){let y;if(this.outputs.length>1&&m<this.outputs.length)y=n[m];else{const g=this.metricsTensors[m][0],x=this.metricsTensors[m][1];y=dt(g(r[x],p[x]))}Ft(y),i.push(y)}return f=dt(f),this.calculateLosses().forEach(m=>{f=Q(f,m)}),f},l=this.collectedTrainableWeights.map(h=>h.read()),u=!0;return[this.optimizer_.minimize(a,u,l)].concat(i)}}makeTestFunction(){this.testFunction=e=>P(()=>{const n=[];let s;const r=e.slice(0,this.inputs.length),o=e.slice(this.inputs.length,this.inputs.length+this.outputs.length),i=[];for(let u=0;u<this.inputs.length;++u)i.push({key:this.inputs[u],value:r[u]});const a=new oo(i),l=Dl(this.outputs,a);for(let u=0;u<this.lossFunctions.length;++u){const c=this.lossFunctions[u],h=dt(c(o[u],l[u]));u===0?s=h:s=Q(s,h),n.push(s)}for(let u=0;u<this.metricsTensors.length;++u){const c=this.metricsTensors[u][0],h=this.metricsTensors[u][1],d=dt(c(o[h],l[h]));n.push(d)}return n})}async fit(e,n,s={}){if(this.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");this.isTraining=!0;let r,o,i,a,l,u,c,h,d;try{const p=s.batchSize==null?32:s.batchSize;Bm(p);const f=!1,m=await this.standardizeUserData(e,n,s.sampleWeight,s.classWeight,f,p);r=m[0],o=m[1],d=m[2];let y=!1,g;if(s.validationData!=null&&s.validationData.length>0){if(y=!0,s.validationData.length===2)l=s.validationData[0],u=s.validationData[1];else throw s.validationData.length===3?new ve("validationData including sample weights is not supported yet."):new L(`When passing validation data, it must contain 2 (valX, valY) or 3 (valX, valY, valSampleWeight) items; ${s.validationData} is invalid.`);const T=!0,E=await this.standardizeUserData(l,u,null,null,T,p);c=E[0],h=E[1],g=c.concat(h)}else if(s.validationSplit!=null&&s.validationSplit>0&&s.validationSplit<1){y=!0;const T=Math.floor(r[0].shape[0]*(1-s.validationSplit)),E=r[0].shape[0];c=vl(r,T,E),i=r,r=vl(r,0,T),h=vl(o,T,E),a=o,o=vl(o,0,T),g=c.concat(h)}else s.validationSteps!=null&&(y=!0);const x=r.concat(o).concat(d);this.checkTrainableWeightsConsistency();const b=this.makeTrainFunction(),w=this.getDedupedMetricsNames();let k,S;y?(this.makeTestFunction(),k=this.testFunction,S=w.slice().concat(w.map(T=>"val_"+T))):(k=null,g=[],S=w.slice());const N=hT(s.callbacks,s.yieldEvery);return await this.fitLoop(b,x,w,p,s.epochs,s.verbose,N,k,g,s.shuffle,S,s.initialEpoch,null,null)}finally{this.isTraining=!1,Ls(r,e),Ls(o,n),Ls(i,e),Ls(a,n),Ls(c,l),Ls(h,u),d!=null&&Se(d)}}async fitLoop(e,n,s,r,o,i,a,l,u,c,h,d,p,f){r==null&&(r=32),o==null&&(o=1),c==null&&(c=!0),d==null&&(d=0);let m=!1;if(l!=null&&u!=null&&(m=!0),f!=null&&(m=!0,p==null))throw new L("Can only use `validationSteps` when doing step-wise training, i.e., `stepsPerEpoch` must be set.");const y=this.checkNumSamples(n,r,p,"steps_per_epoch");let g;y!=null&&(g=Qs(0,y)),i==null&&(i=1);const{callbackList:x,history:b}=dT(a,i,o,d,y,p,r,m,h);x.setModel(this),this.history=b,await x.onTrainBegin(),this.stopTraining_=!1;for(let w=d;w<o;++w){await x.onEpochBegin(w);const k={};if(p!=null)throw new ve("stepsPerEpoch mode is not implemented yet.");{if(c==="batch")throw new ve("batch shuffling is not implemneted yet");c&&A_(g);const S=bn(g),N=Vm(y,r);for(let $=0;$<N.length;++$){const T={};if(await x.onBatchBegin($,T),P(()=>{const E=N[$][0],F=N[$][1],M=hi(S,E,F-E);T.batch=$,T.size=F-E;const B=Cy(n,M),V=e(B);for(let W=0;W<s.length;++W){const G=s[W],q=V[W];T[G]=q,Ft(q)}if($===N.length-1&&m){const W=this.testLoop(l,u,r);for(let G=0;G<s.length;++G){const q=s[G],_=W[G];Ft(_),k["val_"+q]=_}}}),await x.onBatchEnd($,T),cT(T),this.stopTraining_)break}S.dispose()}if(await x.onEpochEnd(w,k),this.stopTraining_)break}return await x.onTrainEnd(),await this.history.syncData(),this.history}async fitDataset(e,n){return rU(this,e,n)}async trainOnBatch(e,n){const s=await this.standardizeUserData(e,n),r=s[0],o=s[1],a=this.makeTrainFunction()(r.concat(o)),l=[];for(const u of a){const c=await u.data();l.push(c[0])}return Se(a),Ls(s[0],e),Ls(s[1],n),yn(l)}getNamedWeights(e){const n=[],s=e!=null&&e.trainableOnly,r=s?this.trainableWeights:this.weights,o=this.getWeights(s);for(let i=0;i<r.length;++i)s&&!r[i].trainable||n.push({name:r[i].originalName,tensor:o[i]});return n}set stopTraining(e){this.stopTraining_=e}get stopTraining(){return this.stopTraining_}get optimizer(){return this.optimizer_}set optimizer(e){this.optimizer_!==e&&(this.optimizer_=e,this.isOptimizerOwned=!1)}dispose(){const e=super.dispose();if(e.refCountAfterDispose===0&&this.optimizer!=null&&this.isOptimizerOwned){const n=uy().numTensors;this.optimizer_.dispose(),e.numDisposedVariables+=n-uy().numTensors}return e}getLossIdentifiers(){let e;if(typeof this.loss=="string")e=Nr(this.loss);else if(Array.isArray(this.loss)){for(const n of this.loss)if(typeof n!="string")throw new Error("Serialization of non-string loss is not supported.");e=this.loss.map(n=>Nr(n))}else{const n=Object.keys(this.loss);e={};const s=this.loss;for(const r of n)if(typeof s[r]=="string")e[r]=Nr(s[r]);else throw new Error("Serialization of non-string loss is not supported.")}return e}getMetricIdentifiers(){if(typeof this.metrics=="string"||typeof this.metrics=="function")return[Nr(Sh(this.metrics))];if(Array.isArray(this.metrics))return this.metrics.map(e=>Nr(Sh(e)));{const e={};for(const n in this.metrics)e[n]=Nr(Sh(this.metrics[n]));return e}}getTrainingConfig(){return{loss:this.getLossIdentifiers(),metrics:this.getMetricIdentifiers(),optimizer_config:{class_name:this.optimizer.getClassName(),config:this.optimizer.getConfig()}}}loadTrainingConfig(e){if(e.weighted_metrics!=null)throw new Error("Loading weight_metrics is not supported yet.");if(e.loss_weights!=null)throw new Error("Loading loss_weights is not supported yet.");if(e.sample_weight_mode!=null)throw new Error("Loading sample_weight_mode is not supported yet.");const n=ky(e.optimizer_config),s=_r(n);let r;if(typeof e.loss=="string")r=ti(e.loss);else if(Array.isArray(e.loss))r=e.loss.map(i=>ti(i));else if(e.loss!=null){r={};for(const i in e.loss)r[i]=ti(e.loss[i])}let o;if(Array.isArray(e.metrics))o=e.metrics.map(i=>ti(i));else if(e.metrics!=null){o={};for(const i in e.metrics)o[i]=ti(e.metrics[i])}this.compile({loss:r,metrics:o,optimizer:s})}async save(e,n){if(typeof e=="string"){const u=CN(e);if(u.length===0)throw new L(`Cannot find any save handlers for URL '${e}'`);if(u.length>1)throw new L(`Found more than one (${u.length}) save handlers for URL '${e}'`);e=u[0]}if(e.save==null)throw new L("LayersModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");const s=await oy(this.getNamedWeights(n)),r=!1,o=null,a={modelTopology:this.toJSON(o,r),format:dU,generatedBy:`TensorFlow.js tfjs-layers v${bT}`,convertedBy:null};if((n==null?!1:n.includeOptimizer)&&this.optimizer!=null){a.trainingConfig=this.getTrainingConfig();const u="optimizer",{data:c,specs:h}=await oy(await this.optimizer.getWeights(),u);s.specs.push(...h),s.data=pf([s.data,c])}return this.userDefinedMetadata!=null&&(Wv(this.userDefinedMetadata,this.name,!0),a.userDefinedMetadata=this.userDefinedMetadata),a.weightData=s.data,a.weightSpecs=s.specs,e.save(a)}setUserDefinedMetadata(e){Wv(e,this.name),this.userDefinedMetadata=e}getUserDefinedMetadata(){return this.userDefinedMetadata}}wa.className="Model";Z(wa);class CT extends wa{}CT.className="Functional";Z(CT);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class gu extends wa{constructor(e){if(super({inputs:[],outputs:[]}),e=e||{},this.trainable=!0,this.built=!1,this.name=e.name!=null?e.name:Mf("sequential_"),e.layers!=null)for(const n of e.layers)this.add(n)}checkShape(e){if(e.inboundNodes[0].outputTensors[0].shape.some(s=>s<0))throw new L(`Negative dimension size caused by adding layer ${e.name} with input shape [${e.inboundNodes[0].inputTensors[0].shape}]`)}add(e){const n=e instanceof gu||e instanceof wa;let s;if(n){if(s=e,s.outputs.length!==1)throw new L("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");if(s.inputs.length!==1)throw new L("All layers in a Sequential model should have a single input tensor. For multi-input layers, use the functional API.")}if(this.outputs.length===0){if(e.inboundNodes.length===0){if(e.batchInputShape==null)throw new L("The first layer in a Sequential model must get an `inputShape` or `batchInputShape` argument.");const r=mW({batchShape:e.batchInputShape,dtype:e.dtype,name:e.name+"_input"});e.apply(r)}if(n)this.outputs=s.outputs,this.inputs=s.inputs;else{if(e.inboundNodes.length!==1)throw new L(`A layer added to a Sequential model must not already be connected somewhere else. LayersModel received layer ${e.name} which has ${e.inboundNodes.length} pre-existing inbound connections.`);if(e.inboundNodes[0].outputTensors.length!==1)throw new L("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(e),this.outputs=[e.inboundNodes[0].outputTensors[0]],this.inputs=oT(this.outputs[0])}this.inboundNodes=[],new Vf({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:Ni(null,this.inputs.length),outputMasks:[null],inputShapes:this.inputs.map(r=>r.shape),outputShapes:this.outputs[0].shape})}else{const r=e.apply(this.outputs[0]);if(Array.isArray(r))throw new TypeError("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(e),this.outputs=[r],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}this.layers.push(e),this.built=!1}pop(){if(this.layers.length===0)throw new TypeError("There are no layers in the model.");if(this.layers.pop(),this.layers.length===0)this.outputs=[],this.inboundNodes=[],this.outboundNodes=[];else{const e=this.layers.length-1;this.layers[e].outboundNodes=[],this.outputs=[this.layers[e].output],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}}call(e,n){return this.model==null&&this.build(),this.model.call(e,n)}build(e){if(Le(e),this.inputs.length===0||this.outputs.length===0)throw new TypeError("Sequential model cannot be built: model is empty. Add some layers first.");this.model=new wa({inputs:this.inputs,outputs:this.outputs[0],name:this.name+"_model"}),this.model.trainable=this.trainable,this.supportsMasking=this.model.supportsMasking,this.inputLayers=this.model.inputLayers,this.inputLayersNodeIndices=this.model.inputLayersNodeIndices,this.inputLayersTensorIndices=this.model.inputLayersTensorIndices,this.outputLayers=this.model.outputLayers,this.outputLayersNodeIndices=this.model.outputLayersNodeIndices,this.outputLayersTensorIndices=this.model.outputLayersTensorIndices,this.nodesByDepth=this.model.nodesByDepth,this.containerNodes=this.model.containerNodes,this.outputNames=this.model.outputNames,this.inputNames=this.model.inputNames,this.built=!0}countParams(){return this.built||this.build(),super.countParams()}summary(e,n,s=console.log){this.built||this.build(),super.summary(e,n,s)}setWeights(e){this.model==null&&this.build(),this.model.setWeights(e)}evaluate(e,n,s={}){if(!this.built)throw new ks("The model needs to be compiled before being used.");return this.model.evaluate(e,n,s)}async evaluateDataset(e,n){if(!this.built)throw new ks("The model needs to be compiled before being used.");return this.model.evaluateDataset(e,n)}predict(e,n={}){return this.model==null&&this.build(),this.model.predict(e,n)}predictOnBatch(e){return this.model==null&&this.build(),this.model.predictOnBatch(e)}compile(e){this.build(),this.model.compile(e),this.optimizer_=this.model.optimizer,this.isOptimizerOwned=this.model.isOptimizerOwned,this.loss=this.model.loss,this.metrics=this.model.metrics,this.metricsTensors=this.model.metricsTensors,this.metricsNames=this.model.metricsNames}get optimizer(){return this.model==null?void 0:this.model.optimizer}set optimizer(e){this.model.optimizer=e}async fit(e,n,s={}){if(!this.built)throw new ks("The model needs to be compiled before being used.");return this.model.fit(e,n,s)}async fitDataset(e,n){if(!this.built)throw new ks("The model needs to be compiled before being used.");return this.model.fitDataset(e,n)}async trainOnBatch(e,n){return this.model.trainOnBatch(e,n)}static fromConfig(e,n,s={},r=!1){let o,i={};if(n instanceof Array){if(n[0].className==null||n[0].className==="Merge")throw new L("Legacy serialization format not supported yet.");o=n}else C(n.layers!=null,()=>"When the config data for a Sequential model is not an Array, it must be an Object that contains the 'layers' field."),o=n.layers,delete n.layers,i=n;const a=new e(i);if(!(a instanceof gu))throw new ve(`Sequential.fromConfig called on non-Sequential input: ${a}`);for(const l of o){const c=_r(l,void 0,r);r&&c.setFastWeightInitDuringBuild(!0),a.add(c)}return a}set stopTraining(e){if(this.model==null)throw new L("Cannot set the stopTraining property of a sequential model before it is compiled.");this.model.stopTraining=e}get stopTraining(){if(this.model==null)throw new L("Cannot get the stopTraining property of a sequential model before it is compiled.");return this.model.stopTraining}getConfig(){const e=[];for(const n of this.layers){const s={};s.className=n.getClassName(),s.config=n.getConfig(),e.push(s)}return{name:this.name,layers:e}}}gu.className="Sequential";Z(gu);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class Nn extends el{getConfig(){return{}}}class NT extends Nn{apply(e,n=1){return tW(e,n)}}NT.className="elu";Z(NT);class $T extends Nn{apply(e){return m1(e)}}$T.className="selu";Z($T);class IT extends Nn{apply(e){return wr(e)}}IT.className="relu";Z(IT);class TT extends Nn{apply(e){return P(()=>Ac(6,wr(e)))}}TT.className="relu6";Z(TT);class ET extends Nn{apply(e){return e}}ET.className="linear";Z(ET);class DT extends Nn{apply(e){return fr(e)}}DT.className="sigmoid";Z(DT);class RT extends Nn{apply(e){return sW(e)}}RT.className="hardSigmoid";Z(RT);class AT extends Nn{apply(e){return Qa(e)}}AT.className="softplus";Z(AT);class _T extends Nn{apply(e){return nW(e)}}_T.className="softsign";Z(_T);class OT extends Nn{apply(e){return _a(e)}}OT.className="tanh";Z(OT);class wb extends Nn{apply(e,n=-1){return Tf(e,n)}}wb.className="softmax";Z(wb);class FT extends Nn{apply(e,n=-1){return o1(e,n)}}FT.className="logSoftmax";Z(FT);class LT extends Nn{apply(e,n=1){return P(()=>A(fr(A(e,n)),e))}}LT.className="swish";Z(LT);class PT extends Nn{apply(e){return P(()=>A(e,_a(Qa(e))))}}PT.className="mish";Z(PT);function To(t){return t.getClassName()}function Wm(t,e={}){return zc(t,gs.getMap().classNameMap,e,"activation")}function Eo(t){if(t==null){const e={};return e.className="linear",e.config={},Wm(e)}if(typeof t=="string"){const e={};return e.className=t,e.config={},Wm(e)}else return t instanceof Nn?t:Wm(t)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function pU(t){if(t!=null&&typeof t!="object")throw new Error(`Argument to L1L2 regularizer's constructor is expected to be an object, but received: ${t}`)}class zT extends el{}class MT extends zT{constructor(e){super(),pU(e),this.l1=e==null||e.l1==null?.01:e.l1,this.l2=e==null||e.l2==null?.01:e.l2,this.hasL1=this.l1!==0,this.hasL2=this.l2!==0}apply(e){return P(()=>{let n=kt([1]);return this.hasL1&&(n=Q(n,he(A(this.l1,Nt(e))))),this.hasL2&&(n=Q(n,he(A(this.l2,Bc(e))))),O(n,[])})}getConfig(){return{l1:this.l1,l2:this.l2}}static fromConfig(e,n){return new e({l1:n.l1,l2:n.l2})}}MT.className="L1L2";Z(MT);const qv={l1l2:"L1L2"};function We(t){return ib(t)}function Xv(t,e={}){return zc(t,gs.getMap().classNameMap,e,"regularizer")}function rt(t){if(t==null)return null;if(typeof t=="string"){const n={className:t in qv?qv[t]:t,config:{}};return Xv(n)}else return t instanceof zT?t:Xv(t)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class BT extends Te{constructor(e){super(e==null?{}:e),this.supportsMasking=!0,e!=null&&(this.maxValue=e.maxValue)}call(e,n){e=be(e);let s=wr(e);return this.maxValue!=null&&(s=zn(s,0,this.maxValue)),s}computeOutputShape(e){return e}getConfig(){const e={maxValue:this.maxValue},n=super.getConfig();return Object.assign(e,n),e}}BT.className="ReLU";Z(BT);class VT extends Te{constructor(e){super(e==null?{}:e),this.DEFAULT_ALPHA=.3,e==null&&(e={}),this.alpha=e.alpha==null?this.DEFAULT_ALPHA:e.alpha}call(e,n){const s=be(e);return xf(s,this.alpha)}computeOutputShape(e){return e}getConfig(){const e={alpha:this.alpha},n=super.getConfig();return Object.assign(e,n),e}}VT.className="LeakyReLU";Z(VT);class WT extends Te{constructor(e){if(super(e==null?{}:e),this.DEFAULT_ALPHA_INITIALIZER="zeros",e==null&&(e={}),this.supportsMasking=!0,this.alphaInitializer=nt(e.alphaInitializer||this.DEFAULT_ALPHA_INITIALIZER),this.alphaRegularizer=rt(e.alphaRegularizer),this.alphaConstraint=Dt(e.alphaConstraint),e.sharedAxes==null)this.sharedAxes=null;else if(Array.isArray(e.sharedAxes))this.sharedAxes=e.sharedAxes;else if(typeof e.sharedAxes=="number")this.sharedAxes=[e.sharedAxes];else throw new L(`Expected sharedAxes to be a number or an array of numbers, but got ${e.sharedAxes}`)}build(e){e=Le(e);const n=e.slice(1);if(this.sharedAxes!=null)for(const r of this.sharedAxes)n[r-1]=1;this.alpha=this.addWeight("alpha",n,"float32",this.alphaInitializer,this.alphaRegularizer,!0,this.alphaConstraint);const s={};if(this.sharedAxes!=null)for(let r=1;r<e.length;++r)s[r]=e[r];this.inputSpec=[new Tt({ndim:e.length,axes:s})],this.built=!0}call(e,n){return e=be(e),Cf(e,this.alpha.read())}getConfig(){const e={alphaInitializer:lt(this.alphaInitializer),alphaRegularizer:We(this.alphaRegularizer),alphaConstraint:Et(this.alphaConstraint),sharedAxes:this.sharedAxes},n=super.getConfig();return Object.assign(e,n),e}}WT.className="PReLU";Z(WT);class UT extends Te{constructor(e){if(super(e==null?{}:e),this.DEFAULT_ALPHA=1,e==null&&(e={}),e.alpha!=null&&e.alpha!==this.DEFAULT_ALPHA)throw new ve(`Non-default alpha value (${e.alpha}) is not supported by the ELU layer yet.`);this.alpha=e.alpha==null?this.DEFAULT_ALPHA:e.alpha}call(e,n){const s=be(e);return Tc(s)}computeOutputShape(e){return e}getConfig(){const e={alpha:this.alpha},n=super.getConfig();return Object.assign(e,n),e}}UT.className="ELU";Z(UT);class GT extends Te{constructor(e){super(e==null?{}:e),this.DEFAULT_THETA=1,e==null&&(e={}),this.theta=e.theta==null?this.DEFAULT_THETA:e.theta}call(e,n){const s=be(e);return A(s,ie(Un(s,this.theta),"float32"))}computeOutputShape(e){return e}getConfig(){const e={theta:this.theta},n=super.getConfig();return Object.assign(e,n),e}}GT.className="ThresholdedReLU";Z(GT);class HT extends Te{constructor(e){super(e==null?{}:e),this.DEFAULT_AXIS=1,e==null&&(e={}),this.softmax=new wb().apply,this.axis=e.axis==null?this.DEFAULT_AXIS:e.axis}call(e,n){const s=be(e);return this.softmax(s,this.axis)}computeOutputShape(e){return e}getConfig(){const e={axis:this.axis},n=super.getConfig();return Object.assign(e,n),e}}HT.className="Softmax";Z(HT);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function va(t,e,n){if(typeof t=="number")return Ni(t,e);if(t.length!==e)throw new L(`The ${n} argument must be an integer or tuple of ${e} integers. Received: ${t.length} elements.`);for(let s=0;s<e;++s){const r=t[s];if(!Q4(r))throw new L(`The ${n} argument must be an integer or tuple of ${e} integers. Received: ${JSON.stringify(t)} including a non-integer number ${r}`)}return t}function Ks(t,e,n,s,r=1){if(t==null)return t;const o=e+(e-1)*(r-1);let i;return n==="same"?i=t:i=t-o+1,Math.floor((i+s-1)/s)}function ir(t,e,n,s){if(t==null)return null;if(s==="valid")t=t*e+Io([n-e,0]);else if(s==="same")t=t*e;else throw new L(`Unsupport padding mode: ${s}.`);return t}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function vb(t,e){return P(()=>(wt(e),e==="channelsFirst"?Ee(t,[0,2,3,1]):t))}function jT(t,e){return P(()=>(wt(e),e==="channelsFirst"?Ee(t,[0,2,3,4,1]):t))}function fU(t,e,n,s=1,r="valid",o,i=1){return P(()=>{if(o==null&&(o=Zs()),wt(o),t.shape.length!==3)throw new L(`The input of a conv1dWithBias operation should be 3, but is ${t.shape.length} instead.`);if(e.shape.length!==3)throw new L(`The kernel for a conv1dWithBias operation should be 3, but is ${e.shape.length} instead`);if(n!=null&&n.shape.length!==1)throw new L(`The bias for a conv1dWithBias operation should be 1, but is ${e.shape.length} instead`);if(o==="channelsFirst"&&(t=Ee(t,[0,2,1])),r==="causal")throw new ve("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");let a=Qx(t,e,s,r==="same"?"same":"valid","NWC",i);return n!=null&&(a=tr(a,n)),a})}function Yv(t,e,n,s=[1,1],r="valid",o,i,a=null){return P(()=>{if(o==null&&(o=Zs()),wt(o),t.rank!==3&&t.rank!==4)throw new L(`conv2dWithBiasActivation expects input to be of rank 3 or 4, but received ${t.rank}.`);if(e.rank!==3&&e.rank!==4)throw new L(`conv2dWithBiasActivation expects kernel to be of rank 3 or 4, but received ${t.rank}.`);let l=vb(t,o);if(r==="causal")throw new ve("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");return l=V$({x:l,filter:e,strides:s,pad:r==="same"?"same":"valid",dilations:i,dataFormat:"NHWC",bias:n,activation:a}),o==="channelsFirst"&&(l=Ee(l,[0,3,1,2])),l})}function mU(t,e,n,s=[1,1,1],r="valid",o,i){return P(()=>{if(o==null&&(o=Zs()),wt(o),t.rank!==4&&t.rank!==5)throw new L(`conv3dWithBias expects input to be of rank 4 or 5, but received ${t.rank}.`);if(e.rank!==4&&e.rank!==5)throw new L(`conv3dWithBias expects kernel to be of rank 4 or 5, but received ${t.rank}.`);let a=jT(t,o);if(r==="causal")throw new ve("The support for CAUSAL padding mode in conv3dWithBias is not implemented yet.");return a=ZN(a,e,s,r==="same"?"same":"valid","NDHWC",i),n!=null&&(a=tr(a,n)),o==="channelsFirst"&&(a=Ee(a,[0,4,1,2,3])),a})}class Gf extends Te{constructor(e,n){if(super(n),this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",Gf.verifyArgs(n),this.rank=e,Lt(this.rank,"rank"),this.rank!==1&&this.rank!==2&&this.rank!==3)throw new ve(`Convolution layer for rank other than 1, 2, or 3 (${this.rank}) is not implemented yet.`);if(this.kernelSize=va(n.kernelSize,e,"kernelSize"),this.strides=va(n.strides==null?1:n.strides,e,"strides"),this.padding=n.padding==null?"valid":n.padding,os(this.padding),this.dataFormat=n.dataFormat==null?"channelsLast":n.dataFormat,wt(this.dataFormat),this.activation=Eo(n.activation),this.useBias=n.useBias==null?!0:n.useBias,this.biasInitializer=nt(n.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.biasConstraint=Dt(n.biasConstraint),this.biasRegularizer=rt(n.biasRegularizer),this.activityRegularizer=rt(n.activityRegularizer),this.dilationRate=va(n.dilationRate==null?1:n.dilationRate,e,"dilationRate"),this.rank===1&&Array.isArray(this.dilationRate)&&this.dilationRate.length!==1)throw new L(`dilationRate must be a number or an array of a single number for 1D convolution, but received ${JSON.stringify(this.dilationRate)}`);if(this.rank===2){if(typeof this.dilationRate=="number")this.dilationRate=[this.dilationRate,this.dilationRate];else if(this.dilationRate.length!==2)throw new L(`dilationRate must be a number or array of two numbers for 2D convolution, but received ${JSON.stringify(this.dilationRate)}`)}else if(this.rank===3){if(typeof this.dilationRate=="number")this.dilationRate=[this.dilationRate,this.dilationRate,this.dilationRate];else if(this.dilationRate.length!==3)throw new L(`dilationRate must be a number or array of three numbers for 3D convolution, but received ${JSON.stringify(this.dilationRate)}`)}}static verifyArgs(e){if(or("kernelSize"in e,"required key 'kernelSize' not in config"),typeof e.kernelSize!="number"&&!ab(e.kernelSize,"number",1,3))throw new L(`BaseConv expects config.kernelSize to be number or number[] with length 1, 2, or 3, but received ${JSON.stringify(e.kernelSize)}.`)}getConfig(){const e={kernelSize:this.kernelSize,strides:this.strides,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,activation:To(this.activation),useBias:this.useBias,biasInitializer:lt(this.biasInitializer),biasRegularizer:We(this.biasRegularizer),activityRegularizer:We(this.activityRegularizer),biasConstraint:Et(this.biasConstraint)},n=super.getConfig();return Object.assign(e,n),e}}class tl extends Gf{constructor(e,n){super(e,n),this.kernel=null,tl.verifyArgs(n),this.filters=n.filters,Lt(this.filters,"filters"),this.kernelInitializer=nt(n.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.kernelConstraint=Dt(n.kernelConstraint),this.kernelRegularizer=rt(n.kernelRegularizer)}build(e){e=Le(e);const n=this.dataFormat==="channelsFirst"?1:e.length-1;if(e[n]==null)throw new L(`The channel dimension of the input should be defined. Found ${e[n]}`);const s=e[n],r=this.kernelSize.concat([s,this.filters]);this.kernel=this.addWeight("kernel",r,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[{ndim:this.rank+2,axes:{[n]:s}}],this.built=!0}call(e,n){return P(()=>{e=be(e);let s;const r=this.bias==null?null:this.bias.read(),o=GI(this.activation.getClassName());if(o!=null&&this.rank===2)s=Yv(e,this.kernel.read(),r,this.strides,this.padding,this.dataFormat,this.dilationRate,o);else{if(this.rank===1)s=fU(e,this.kernel.read(),r,this.strides[0],this.padding,this.dataFormat,this.dilationRate[0]);else if(this.rank===2)s=Yv(e,this.kernel.read(),r,this.strides,this.padding,this.dataFormat,this.dilationRate);else if(this.rank===3)s=mU(e,this.kernel.read(),r,this.strides,this.padding,this.dataFormat,this.dilationRate);else throw new ve("convolutions greater than 3D are not implemented yet.");this.activation!=null&&(s=this.activation.apply(s))}return s})}computeOutputShape(e){e=Le(e);const n=[],s=this.dataFormat==="channelsLast"?e.slice(1,e.length-1):e.slice(2);for(let o=0;o<s.length;++o){const i=Ks(s[o],this.kernelSize[o],this.padding,this.strides[o],typeof this.dilationRate=="number"?this.dilationRate:this.dilationRate[o]);n.push(i)}let r=[e[0]];return this.dataFormat==="channelsLast"?(r=r.concat(n),r.push(this.filters)):(r.push(this.filters),r=r.concat(n)),r}getConfig(){const e={filters:this.filters,kernelInitializer:lt(this.kernelInitializer),kernelRegularizer:We(this.kernelRegularizer),kernelConstraint:Et(this.kernelConstraint)},n=super.getConfig();return Object.assign(e,n),e}static verifyArgs(e){if(!("filters"in e)||typeof e.filters!="number"||e.filters<1)throw new L(`Convolution layer expected config.filters to be a 'number' > 0 but got ${JSON.stringify(e.filters)}`)}}class Gc extends tl{constructor(e){super(2,e),Gc.verifyArgs(e)}getConfig(){const e=super.getConfig();return delete e.rank,e}static verifyArgs(e){if(typeof e.kernelSize!="number"&&!ab(e.kernelSize,"number",1,2))throw new L(`Conv2D expects config.kernelSize to be number or number[] with length 1 or 2, but received ${JSON.stringify(e.kernelSize)}.`)}}Gc.className="Conv2D";Z(Gc);class Hc extends tl{constructor(e){super(3,e),Hc.verifyArgs(e)}getConfig(){const e=super.getConfig();return delete e.rank,e}static verifyArgs(e){if(typeof e.kernelSize!="number"&&!(Array.isArray(e.kernelSize)&&(e.kernelSize.length===1||e.kernelSize.length===3)))throw new L(`Conv3D expects config.kernelSize to be number or [number, number, number], but received ${JSON.stringify(e.kernelSize)}.`)}}Hc.className="Conv3D";Z(Hc);class KT extends Gc{constructor(e){if(super(e),this.inputSpec=[new Tt({ndim:4})],this.padding!=="same"&&this.padding!=="valid")throw new L(`Conv2DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode ${this.padding}`)}build(e){if(e=Le(e),e.length!==4)throw new L("Input should have rank 4; Received input shape: "+JSON.stringify(e));const n=this.dataFormat==="channelsFirst"?1:e.length-1;if(e[n]==null)throw new L("The channel dimension of the inputs should be defined. Found `None`.");const s=e[n],r=this.kernelSize.concat([this.filters,s]);this.kernel=this.addWeight("kernel",r,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new Tt({ndim:4,axes:{[n]:s}})],this.built=!0}call(e,n){return P(()=>{let s=be(e);if(s.shape.length!==4)throw new L(`Conv2DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-${s.shape.length}`);const r=s.shape,o=r[0];let i,a;this.dataFormat==="channelsFirst"?(i=2,a=3):(i=1,a=2);const l=r[i],u=r[a],c=this.kernelSize[0],h=this.kernelSize[1],d=this.strides[0],p=this.strides[1],f=ir(l,d,c,this.padding),m=ir(u,p,h,this.padding),y=[o,f,m,this.filters];this.dataFormat!=="channelsLast"&&(s=Ee(s,[0,2,3,1]));let g=Jx(s,this.kernel.read(),y,this.strides,this.padding);return this.dataFormat!=="channelsLast"&&(g=Ee(g,[0,3,1,2])),this.bias!=null&&(g=tr(g,this.bias.read(),this.dataFormat)),this.activation!=null&&(g=this.activation.apply(g)),g})}computeOutputShape(e){e=Le(e);const n=e.slice();let s,r,o;this.dataFormat==="channelsFirst"?(s=1,r=2,o=3):(s=3,r=1,o=2);const i=this.kernelSize[0],a=this.kernelSize[1],l=this.strides[0],u=this.strides[1];return n[s]=this.filters,n[r]=ir(n[r],l,i,this.padding),n[o]=ir(n[o],u,a,this.padding),n}getConfig(){const e=super.getConfig();return delete e.dilationRate,e}}KT.className="Conv2DTranspose";Z(KT);class qT extends Hc{constructor(e){if(super(e),this.inputSpec=[new Tt({ndim:5})],this.padding!=="same"&&this.padding!=="valid")throw new L(`Conv3DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode ${this.padding}`)}build(e){if(e=Le(e),e.length!==5)throw new L("Input should have rank 5; Received input shape: "+JSON.stringify(e));const n=this.dataFormat==="channelsFirst"?1:e.length-1;if(e[n]==null)throw new L("The channel dimension of the inputs should be defined. Found `None`.");const s=e[n],r=this.kernelSize.concat([this.filters,s]);this.kernel=this.addWeight("kernel",r,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new Tt({ndim:5,axes:{[n]:s}})],this.built=!0}call(e,n){return P(()=>{let s=be(e);if(s.shape.length!==5)throw new L(`Conv3DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-${s.shape.length}`);const r=s.shape,o=r[0];let i,a,l;this.dataFormat==="channelsFirst"?(l=2,i=3,a=4):(l=1,i=2,a=3);const u=r[l],c=r[i],h=r[a],d=this.kernelSize[0],p=this.kernelSize[1],f=this.kernelSize[2],m=this.strides[0],y=this.strides[1],g=this.strides[2],x=ir(u,m,d,this.padding),b=ir(c,y,p,this.padding),w=ir(h,g,f,this.padding),k=[o,x,b,w,this.filters];this.dataFormat!=="channelsLast"&&(s=Ee(s,[0,2,3,4,1]));let S=e$(s,this.kernel.read(),k,this.strides,this.padding);return this.dataFormat!=="channelsLast"&&(S=Ee(S,[0,4,1,2,3])),this.bias!==null&&(S=tr(S,this.bias.read(),this.dataFormat)),this.activation!==null&&(S=this.activation.apply(S)),S})}computeOutputShape(e){e=Le(e);const n=e.slice();let s,r,o,i;this.dataFormat==="channelsFirst"?(s=1,r=2,o=3,i=4):(s=4,r=1,o=2,i=3);const a=this.kernelSize[0],l=this.kernelSize[1],u=this.kernelSize[2],c=this.strides[0],h=this.strides[1],d=this.strides[2];return n[s]=this.filters,n[r]=ir(n[r],c,a,this.padding),n[o]=ir(n[o],h,l,this.padding),n[i]=ir(n[i],d,u,this.padding),n}getConfig(){const e=super.getConfig();return delete e.dilationRate,e}}qT.className="Conv3DTranspose";Z(qT);class XT extends tl{constructor(e,n){if(super(e,n),this.DEFAULT_DEPTHWISE_INITIALIZER="glorotUniform",this.DEFAULT_POINTWISE_INITIALIZER="glorotUniform",this.depthwiseKernel=null,this.pointwiseKernel=null,n.filters==null)throw new L("The `filters` configuration field is required by SeparableConv, but is unspecified.");if(n.kernelInitializer!=null||n.kernelRegularizer!=null||n.kernelConstraint!=null)throw new L("Fields kernelInitializer, kernelRegularizer and kernelConstraint are invalid for SeparableConv2D. Use depthwiseInitializer, depthwiseRegularizer, depthwiseConstraint, pointwiseInitializer, pointwiseRegularizer and pointwiseConstraint instead.");if(n.padding!=null&&n.padding!=="same"&&n.padding!=="valid")throw new L(`SeparableConv${this.rank}D supports only padding modes: 'same' and 'valid', but received ${JSON.stringify(n.padding)}`);this.depthMultiplier=n.depthMultiplier==null?1:n.depthMultiplier,this.depthwiseInitializer=nt(n.depthwiseInitializer||this.DEFAULT_DEPTHWISE_INITIALIZER),this.depthwiseRegularizer=rt(n.depthwiseRegularizer),this.depthwiseConstraint=Dt(n.depthwiseConstraint),this.pointwiseInitializer=nt(n.depthwiseInitializer||this.DEFAULT_POINTWISE_INITIALIZER),this.pointwiseRegularizer=rt(n.pointwiseRegularizer),this.pointwiseConstraint=Dt(n.pointwiseConstraint)}build(e){if(e=Le(e),e.length<this.rank+2)throw new L(`Inputs to SeparableConv${this.rank}D should have rank ${this.rank+2}, but received input shape: ${JSON.stringify(e)}`);const n=this.dataFormat==="channelsFirst"?1:e.length-1;if(e[n]==null||e[n]<0)throw new L(`The channel dimension of the inputs should be defined, but found ${JSON.stringify(e[n])}`);const s=e[n],r=this.kernelSize.concat([s,this.depthMultiplier]),o=[];for(let a=0;a<this.rank;++a)o.push(1);o.push(s*this.depthMultiplier,this.filters);const i=!0;this.depthwiseKernel=this.addWeight("depthwise_kernel",r,"float32",this.depthwiseInitializer,this.depthwiseRegularizer,i,this.depthwiseConstraint),this.pointwiseKernel=this.addWeight("pointwise_kernel",o,"float32",this.pointwiseInitializer,this.pointwiseRegularizer,i,this.pointwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,i,this.biasConstraint):this.bias=null,this.inputSpec=[new Tt({ndim:this.rank+2,axes:{[n]:s}})],this.built=!0}call(e,n){return P(()=>{e=be(e);let s;if(this.rank===1)throw new ve("1D separable convolution is not implemented yet.");return this.rank===2&&(this.dataFormat==="channelsFirst"&&(e=Ee(e,[0,2,3,1])),s=g1(e,this.depthwiseKernel.read(),this.pointwiseKernel.read(),this.strides,this.padding,this.dilationRate,"NHWC")),this.useBias&&(s=tr(s,this.bias.read(),this.dataFormat)),this.activation!=null&&(s=this.activation.apply(s)),this.dataFormat==="channelsFirst"&&(s=Ee(s,[0,3,1,2])),s})}getConfig(){const e=super.getConfig();return delete e.rank,delete e.kernelInitializer,delete e.kernelRegularizer,delete e.kernelConstraint,e.depthwiseInitializer=lt(this.depthwiseInitializer),e.pointwiseInitializer=lt(this.pointwiseInitializer),e.depthwiseRegularizer=We(this.depthwiseRegularizer),e.pointwiseRegularizer=We(this.pointwiseRegularizer),e.depthwiseConstraint=Et(this.depthwiseConstraint),e.pointwiseConstraint=Et(this.pointwiseConstraint),e}}XT.className="SeparableConv";class YT extends XT{constructor(e){super(2,e)}}YT.className="SeparableConv2D";Z(YT);class Hf extends tl{constructor(e){super(1,e),Hf.verifyArgs(e),this.inputSpec=[{ndim:3}]}getConfig(){const e=super.getConfig();return delete e.rank,delete e.dataFormat,e}static verifyArgs(e){if(typeof e.kernelSize!="number"&&!ab(e.kernelSize,"number",1,1))throw new L(`Conv1D expects config.kernelSize to be number or number[] with length 1, but received ${JSON.stringify(e.kernelSize)}.`)}}Hf.className="Conv1D";Z(Hf);class QT extends Te{constructor(e){super(e),typeof e.cropping=="number"?this.cropping=[[e.cropping,e.cropping],[e.cropping,e.cropping]]:typeof e.cropping[0]=="number"?this.cropping=[[e.cropping[0],e.cropping[0]],[e.cropping[1],e.cropping[1]]]:this.cropping=e.cropping,this.dataFormat=e.dataFormat===void 0?"channelsLast":e.dataFormat,this.inputSpec=[{ndim:4}]}computeOutputShape(e){return this.dataFormat==="channelsFirst"?[e[0],e[1],e[2]-this.cropping[0][0]-this.cropping[0][1],e[3]-this.cropping[1][0]-this.cropping[1][1]]:[e[0],e[1]-this.cropping[0][0]-this.cropping[0][1],e[2]-this.cropping[1][0]-this.cropping[1][1],e[3]]}call(e,n){return P(()=>{if(e=be(e),this.dataFormat==="channelsLast"){const s=kh(e,this.cropping[0][0],e.shape[1]-this.cropping[0][0]-this.cropping[0][1],2);return kh(s,this.cropping[1][0],e.shape[2]-this.cropping[1][1]-this.cropping[1][0],3)}else{const s=kh(e,this.cropping[0][0],e.shape[2]-this.cropping[0][0]-this.cropping[0][1],3);return kh(s,this.cropping[1][0],e.shape[3]-this.cropping[1][1]-this.cropping[1][0],4)}})}getConfig(){const e={cropping:this.cropping,dataFormat:this.dataFormat},n=super.getConfig();return Object.assign(e,n),e}}QT.className="Cropping2D";Z(QT);class ZT extends Te{constructor(e){super(e),this.DEFAULT_SIZE=[2,2],this.inputSpec=[{ndim:4}],this.size=e.size==null?this.DEFAULT_SIZE:e.size,this.dataFormat=e.dataFormat==null?"channelsLast":e.dataFormat,wt(this.dataFormat),this.interpolation=e.interpolation==null?"nearest":e.interpolation,q4(this.interpolation)}computeOutputShape(e){if(this.dataFormat==="channelsFirst"){const n=e[2]==null?null:this.size[0]*e[2],s=e[3]==null?null:this.size[1]*e[3];return[e[0],e[1],n,s]}else{const n=e[1]==null?null:this.size[0]*e[1],s=e[2]==null?null:this.size[1]*e[2];return[e[0],n,s,e[3]]}}call(e,n){return P(()=>{let s=be(e);const r=s.shape;if(this.dataFormat==="channelsFirst"){s=Ee(s,[0,2,3,1]);const o=this.size[0]*r[2],i=this.size[1]*r[3],a=this.interpolation==="nearest"?Us.resizeNearestNeighbor(s,[o,i]):Us.resizeBilinear(s,[o,i]);return Ee(a,[0,3,1,2])}else{const o=this.size[0]*r[1],i=this.size[1]*r[2];return this.interpolation==="nearest"?Us.resizeNearestNeighbor(s,[o,i]):Us.resizeBilinear(s,[o,i])}})}getConfig(){const e={size:this.size,dataFormat:this.dataFormat,interpolation:this.interpolation},n=super.getConfig();return Object.assign(e,n),e}}ZT.className="UpSampling2D";Z(ZT);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function gU(t,e,n=[1,1],s="valid",r,o){return P(()=>{r==null&&(r=Zs()),wt(r);let i=vb(t,r);if(t.rank!==4)throw new L(`Input for depthwiseConv2d is required to be 4-D, but is instead ${t.rank}-D`);if(e.rank!==4)throw new L(`depthwiseKernel is required to be 4-D, but is instead ${e.rank}-D`);return i=Ic(i,e,n,s==="same"?"same":"valid","NHWC",o),r==="channelsFirst"&&(i=Ee(i,[0,3,1,2])),i})}class JT extends Gf{constructor(e){super(2,e),this.depthwiseKernel=null,this.depthMultiplier=e.depthMultiplier==null?1:e.depthMultiplier,this.depthwiseInitializer=nt(e.depthwiseInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.depthwiseConstraint=Dt(e.depthwiseConstraint),this.depthwiseRegularizer=rt(e.depthwiseRegularizer)}build(e){if(e=Le(e),e.length<4)throw new L(`Inputs to DepthwiseConv2D should have rank 4. Received input shape: ${JSON.stringify(e)}.`);const n=this.dataFormat==="channelsFirst"?1:3;if(e[n]==null||e[n]<0)throw new L(`The channel dimension of the inputs to DepthwiseConv2D should be defined, but is not (${e[n]}).`);const s=e[n],r=[this.kernelSize[0],this.kernelSize[1],s,this.depthMultiplier];this.depthwiseKernel=this.addWeight("depthwise_kernel",r,null,this.depthwiseInitializer,this.depthwiseRegularizer,!0,this.depthwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[s*this.depthMultiplier],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,n){return P(()=>{e=be(e);let s=gU(e,this.depthwiseKernel.read(),this.strides,this.padding,this.dataFormat,null);return this.useBias&&(s=tr(s,this.bias.read(),this.dataFormat)),this.activation!=null&&(s=this.activation.apply(s)),s})}computeOutputShape(e){e=Le(e);const n=this.dataFormat==="channelsFirst"?e[2]:e[1],s=this.dataFormat==="channelsFirst"?e[3]:e[2],r=this.dataFormat==="channelsFirst"?e[1]*this.depthMultiplier:e[3]*this.depthMultiplier,o=Ks(n,this.kernelSize[0],this.padding,this.strides[0]),i=Ks(s,this.kernelSize[1],this.padding,this.strides[1]);return this.dataFormat==="channelsFirst"?[e[0],r,o,i]:[e[0],o,i,r]}getConfig(){const e=super.getConfig();return e.depthMultiplier=this.depthMultiplier,e.depthwiseInitializer=lt(this.depthwiseInitializer),e.depthwiseRegularizer=We(this.depthwiseRegularizer),e.depthwiseConstraint=Et(this.depthwiseRegularizer),e}}JT.className="DepthwiseConv2D";Z(JT);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function e2(t,e,n,s){if(Array.isArray(t)){if(e!=null||n!=null)throw new L("When inputs is an array, neither initialState or constants should be provided");s!=null&&(n=t.slice(t.length-s,t.length),t=t.slice(0,t.length-s)),t.length>1&&(e=t.slice(1,t.length)),t=t[0]}function r(o){return o==null||Array.isArray(o)?o:[o]}return e=r(e),n=r(n),{inputs:t,initialState:e,constants:n}}function t2(t,e,n,s=!1,r,o,i=!1,a=!1){return P(()=>{const l=e.shape.length;if(l<3)throw new L(`Input should be at least 3D, but is ${l}D.`);const u=[1,0].concat(Qs(2,l));if(e=Ee(e,u),o!=null)throw new ve("The rnn() functoin of the deeplearn.js backend does not support constants yet.");i&&console.warn("Backend rnn(): the unroll = true option is not applicable to the imperative deeplearn.js backend."),r!=null&&(r=ie(ie(r,"bool"),"float32"),r.rank===l-1&&(r=gn(r,-1)),r=Ee(r,u)),s&&(e=Es(e,0),r!=null&&(r=Es(r,0)));const c=[];let h,d=n;const p=e.shape[0],f=Ds(e);let m;r!=null&&(m=Ds(r));for(let g=0;g<p;++g){const x=f[g],b=P(()=>t(x,d));if(r==null)h=b[0],d=b[1];else{const w=P(()=>{const k=m[g],S=le(es(k),k),N=Q(A(b[0],k),A(d[0],S)),$=d.map((T,E)=>Q(A(b[1][E],k),A(T,S)));return{output:N,newStates:$}});h=w.output,d=w.newStates}a&&c.push(h)}let y;return a&&(y=ts(c,1)),[h,y,d]})}class Go extends Te{constructor(e){super(e);let n;if(e.cell==null)throw new L("cell property is missing for the constructor of RNN.");if(Array.isArray(e.cell)?n=new Cb({cells:e.cell}):n=e.cell,n.stateSize==null)throw new L("The RNN cell should have an attribute `stateSize` (tuple of integers, one integer per RNN state).");this.cell=n,this.returnSequences=e.returnSequences==null?!1:e.returnSequences,this.returnState=e.returnState==null?!1:e.returnState,this.goBackwards=e.goBackwards==null?!1:e.goBackwards,this._stateful=e.stateful==null?!1:e.stateful,this.unroll=e.unroll==null?!1:e.unroll,this.supportsMasking=!0,this.inputSpec=[new Tt({ndim:3})],this.stateSpec=null,this.states_=null,this.numConstants=null,this.keptStates=[]}getStates(){if(this.states_==null){const e=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1;return Qs(0,e).map(n=>null)}else return this.states_}setStates(e){this.states_=e}computeOutputShape(e){by(e)&&(e=e[0]),e=e;let n=this.cell.stateSize;Array.isArray(n)||(n=[n]);const s=n[0];let r;if(this.returnSequences?r=[e[0],e[1],s]:r=[e[0],s],this.returnState){const o=[];for(const i of n)o.push([e[0],i]);return[r].concat(o)}else return r}computeMask(e,n){return P(()=>{Array.isArray(n)&&(n=n[0]);const s=this.returnSequences?n:null;if(this.returnState){const r=this.states.map(o=>null);return[s].concat(r)}else return s})}get states(){if(this.states_==null){const e=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1,n=[];for(let s=0;s<e;++s)n.push(null);return n}else return this.states_}set states(e){this.states_=e}build(e){if(this.numConstants!=null)throw new ve("Constants support is not implemented in RNN yet.");by(e)&&(e=e[0]),e=e;const n=this.stateful?e[0]:null,s=e.slice(2);this.inputSpec[0]=new Tt({shape:[n,null,...s]});const r=[e[0]].concat(e.slice(2));this.cell.build(r);let o;if(Array.isArray(this.cell.stateSize)?o=this.cell.stateSize:o=[this.cell.stateSize],this.stateSpec!=null){if(!Ae(this.stateSpec.map(i=>i.shape[i.shape.length-1]),o))throw new L(`An initialState was passed that is not compatible with cell.stateSize. Received stateSpec=${this.stateSpec}; However cell.stateSize is ${this.cell.stateSize}`)}else this.stateSpec=o.map(i=>new Tt({shape:[null,i]}));this.stateful&&this.resetStates()}resetStates(e,n=!1){P(()=>{if(!this.stateful)throw new rr("Cannot call resetStates() on an RNN Layer that is not stateful.");const s=this.inputSpec[0].shape[0];if(s==null)throw new L("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(this.states_==null)Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(r=>kt([s,r])):this.states_=[kt([s,this.cell.stateSize])];else if(e==null)Se(this.states_),this.keptStates!=null&&(Se(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(r=>kt([s,r])):this.states_[0]=kt([s,this.cell.stateSize]);else{if(Array.isArray(e)||(e=[e]),e.length!==this.states_.length)throw new L(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${e.length} state value(s). Input received: ${e}`);n===!0?this.keptStates.push(this.states_.slice()):Se(this.states_);for(let r=0;r<this.states_.length;++r){const o=e[r],i=Array.isArray(this.cell.stateSize)?this.cell.stateSize[r]:this.cell.stateSize,a=[s,i];if(!Ae(o.shape,a))throw new L(`State ${r} is incompatible with layer ${this.name}: expected shape=${a}, received shape=${o.shape}`);this.states_[r]=o}}this.states_=this.states_.map(r=>Ft(r.clone()))})}apply(e,n){let s=n==null?null:n.initialState,r=n==null?null:n.constants;n==null&&(n={});const o=e2(e,s,r,this.numConstants);e=o.inputs,s=o.initialState,r=o.constants;let i=[],a=[];if(s!=null){n.initialState=s,i=i.concat(s),this.stateSpec=[];for(const u of s)this.stateSpec.push(new Tt({shape:u.shape}));a=a.concat(this.stateSpec)}if(r!=null&&(n.constants=r,i=i.concat(r),this.numConstants=r.length),i[0]instanceof ur){const u=[e].concat(i),c=this.inputSpec.concat(a),h=this.inputSpec;this.inputSpec=c;const d=super.apply(u,n);return this.inputSpec=h,d}else return super.apply(e,n)}call(e,n){return P(()=>{const s=n==null?null:n.mask,r=n==null?null:n.training;let o=n==null?null:n.initialState;e=be(e),o==null&&(this.stateful?o=this.states_:o=this.getInitialState(e));const i=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1;if(o.length!==i)throw new L(`RNN Layer has ${i} state(s) but was passed ${o.length} initial state(s).`);this.unroll&&console.warn("Ignoring unroll = true for RNN layer, due to imperative backend.");const a={training:r},u=t2((f,m)=>{const y=this.cell.call([f].concat(m),a);return[y[0],y.slice(1)]},e,o,this.goBackwards,s,null,this.unroll,this.returnSequences),c=u[0],h=u[1],d=u[2];this.stateful&&this.resetStates(d,r);const p=this.returnSequences?h:c;return this.returnState?[p].concat(d):p})}getInitialState(e){return P(()=>{let n=kt(e.shape);return n=he(n,[1,2]),n=Mc(n),Array.isArray(this.cell.stateSize)?this.cell.stateSize.map(s=>s>1?yy(n,[1,s]):n):this.cell.stateSize>1?[yy(n,[1,this.cell.stateSize])]:[n]})}get trainableWeights(){return this.trainable?this.cell.trainableWeights:[]}get nonTrainableWeights(){return this.trainable?this.cell.nonTrainableWeights:this.cell.weights}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),this.cell!=null&&this.cell.setFastWeightInitDuringBuild(e)}getConfig(){const e=super.getConfig(),n={returnSequences:this.returnSequences,returnState:this.returnState,goBackwards:this.goBackwards,stateful:this.stateful,unroll:this.unroll};this.numConstants!=null&&(n.numConstants=this.numConstants);const s=this.cell.getConfig();return this.getClassName()===Go.className&&(n.cell={className:this.cell.getClassName(),config:s}),Object.assign(Object.assign(Object.assign({},s),e),n)}static fromConfig(e,n,s={}){const r=n.cell,o=_r(r,s);return new e(Object.assign(n,{cell:o}))}}Go.className="RNN";Z(Go);class jf extends Te{}class kb extends jf{constructor(e){super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=e.units,Lt(this.units,"units"),this.activation=Eo(e.activation==null?this.DEFAULT_ACTIVATION:e.activation),this.useBias=e.useBias==null?!0:e.useBias,this.kernelInitializer=nt(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=nt(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=nt(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=rt(e.kernelRegularizer),this.recurrentRegularizer=rt(e.recurrentRegularizer),this.biasRegularizer=rt(e.biasRegularizer),this.kernelConstraint=Dt(e.kernelConstraint),this.recurrentConstraint=Dt(e.recurrentConstraint),this.biasConstraint=Dt(e.biasConstraint),this.dropout=Pa([1,Io([0,e.dropout==null?0:e.dropout])]),this.recurrentDropout=Pa([1,Io([0,e.recurrentDropout==null?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){e=Le(e),this.kernel=this.addWeight("kernel",[e[e.length-1],this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,n){return P(()=>{if(e=e,e.length!==2)throw new L(`SimpleRNNCell expects 2 input Tensors, got ${e.length}.`);let s=e[1];e=e[0];const r=n.training==null?!1:n.training;0<this.dropout&&this.dropout<1&&this.dropoutMask==null&&(this.dropoutMask=Do({ones:()=>es(e),rate:this.dropout,training:r,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&this.recurrentDropoutMask==null&&(this.recurrentDropoutMask=Do({ones:()=>es(s),rate:this.recurrentDropout,training:r,dropoutFunc:this.dropoutFunc}));let o;const i=this.dropoutMask,a=this.recurrentDropoutMask;i!=null?o=yr(A(e,i),this.kernel.read()):o=yr(e,this.kernel.read()),this.bias!=null&&(o=tr(o,this.bias.read())),a!=null&&(s=A(s,a));let l=Q(o,yr(s,this.recurrentKernel.read()));return this.activation!=null&&(l=this.activation.apply(l)),[l,l]})}getConfig(){const e=super.getConfig(),n={units:this.units,activation:To(this.activation),useBias:this.useBias,kernelInitializer:lt(this.kernelInitializer),recurrentInitializer:lt(this.recurrentInitializer),biasInitializer:lt(this.biasInitializer),kernelRegularizer:We(this.kernelRegularizer),recurrentRegularizer:We(this.recurrentRegularizer),biasRegularizer:We(this.biasRegularizer),activityRegularizer:We(this.activityRegularizer),kernelConstraint:Et(this.kernelConstraint),recurrentConstraint:Et(this.recurrentConstraint),biasConstraint:Et(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout};return Object.assign(Object.assign({},e),n)}}kb.className="SimpleRNNCell";Z(kb);class n2 extends Go{constructor(e){e.cell=new kb(e),super(e)}call(e,n){return P(()=>{this.cell.dropoutMask!=null&&(Se(this.cell.dropoutMask),this.cell.dropoutMask=null),this.cell.recurrentDropoutMask!=null&&(Se(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const s=n==null?null:n.mask,r=n==null?null:n.training,o=n==null?null:n.initialState;return super.call(e,{mask:s,training:r,initialState:o})})}static fromConfig(e,n){return new e(n)}}n2.className="SimpleRNN";Z(n2);class Sb extends jf{constructor(e){if(super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",e.resetAfter)throw new L("GRUCell does not support reset_after parameter set to true.");this.units=e.units,Lt(this.units,"units"),this.activation=Eo(e.activation===void 0?this.DEFAULT_ACTIVATION:e.activation),this.recurrentActivation=Eo(e.recurrentActivation===void 0?this.DEFAULT_RECURRENT_ACTIVATION:e.recurrentActivation),this.useBias=e.useBias==null?!0:e.useBias,this.kernelInitializer=nt(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=nt(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=nt(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=rt(e.kernelRegularizer),this.recurrentRegularizer=rt(e.recurrentRegularizer),this.biasRegularizer=rt(e.biasRegularizer),this.kernelConstraint=Dt(e.kernelConstraint),this.recurrentConstraint=Dt(e.recurrentConstraint),this.biasConstraint=Dt(e.biasConstraint),this.dropout=Pa([1,Io([0,e.dropout==null?0:e.dropout])]),this.recurrentDropout=Pa([1,Io([0,e.recurrentDropout==null?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.implementation=e.implementation,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){e=Le(e);const n=e[e.length-1];this.kernel=this.addWeight("kernel",[n,this.units*3],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units*3],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[this.units*3],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,n){return P(()=>{if(e=e,e.length!==2)throw new L(`GRUCell expects 2 input Tensors (inputs, h, c), got ${e.length}.`);const s=n.training==null?!1:n.training;let r=e[1];e=e[0],0<this.dropout&&this.dropout<1&&this.dropoutMask==null&&(this.dropoutMask=Do({ones:()=>es(e),rate:this.dropout,training:s,count:3,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&this.recurrentDropoutMask==null&&(this.recurrentDropoutMask=Do({ones:()=>es(r),rate:this.recurrentDropout,training:s,count:3,dropoutFunc:this.dropoutFunc}));const o=this.dropoutMask,i=this.recurrentDropoutMask;let a,l,u;0<this.dropout&&this.dropout<1&&(e=A(e,o[0]));let c=yr(e,this.kernel.read());this.useBias&&(c=tr(c,this.bias.read())),0<this.recurrentDropout&&this.recurrentDropout<1&&(r=A(r,i[0]));const h=this.recurrentKernel.read(),[d,p]=Ln(h,[2*this.units,this.units],h.rank-1),f=yr(r,d),[m,y,g]=Ln(c,3,c.rank-1),[x,b]=Ln(f,2,f.rank-1);a=this.recurrentActivation.apply(Q(m,x)),l=this.recurrentActivation.apply(Q(y,b));const w=yr(A(l,r),p);u=this.activation.apply(Q(g,w));const k=Q(A(a,r),A(Q(1,st(a)),u));return[k,k]})}getConfig(){const e=super.getConfig(),n={units:this.units,activation:To(this.activation),recurrentActivation:To(this.recurrentActivation),useBias:this.useBias,kernelInitializer:lt(this.kernelInitializer),recurrentInitializer:lt(this.recurrentInitializer),biasInitializer:lt(this.biasInitializer),kernelRegularizer:We(this.kernelRegularizer),recurrentRegularizer:We(this.recurrentRegularizer),biasRegularizer:We(this.biasRegularizer),activityRegularizer:We(this.activityRegularizer),kernelConstraint:Et(this.kernelConstraint),recurrentConstraint:Et(this.recurrentConstraint),biasConstraint:Et(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation,resetAfter:!1};return Object.assign(Object.assign({},e),n)}}Sb.className="GRUCell";Z(Sb);class s2 extends Go{constructor(e){e.implementation===0&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),e.cell=new Sb(e),super(e)}call(e,n){return P(()=>{this.cell.dropoutMask!=null&&(Se(this.cell.dropoutMask),this.cell.dropoutMask=null),this.cell.recurrentDropoutMask!=null&&(Se(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const s=n==null?null:n.mask,r=n==null?null:n.training,o=n==null?null:n.initialState;return super.call(e,{mask:s,training:r,initialState:o})})}static fromConfig(e,n){return n.implmentation===0&&(n.implementation=1),new e(n)}}s2.className="GRU";Z(s2);class Kf extends jf{constructor(e){super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=e.units,Lt(this.units,"units"),this.activation=Eo(e.activation===void 0?this.DEFAULT_ACTIVATION:e.activation),this.recurrentActivation=Eo(e.recurrentActivation===void 0?this.DEFAULT_RECURRENT_ACTIVATION:e.recurrentActivation),this.useBias=e.useBias==null?!0:e.useBias,this.kernelInitializer=nt(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=nt(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=nt(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.unitForgetBias=e.unitForgetBias,this.kernelRegularizer=rt(e.kernelRegularizer),this.recurrentRegularizer=rt(e.recurrentRegularizer),this.biasRegularizer=rt(e.biasRegularizer),this.kernelConstraint=Dt(e.kernelConstraint),this.recurrentConstraint=Dt(e.recurrentConstraint),this.biasConstraint=Dt(e.biasConstraint),this.dropout=Pa([1,Io([0,e.dropout==null?0:e.dropout])]),this.recurrentDropout=Pa([1,Io([0,e.recurrentDropout==null?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.implementation=e.implementation,this.stateSize=[this.units,this.units],this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){var n;e=Le(e);const s=e[e.length-1];this.kernel=this.addWeight("kernel",[s,this.units*4],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units*4],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint);let r;if(this.useBias){if(this.unitForgetBias){const o=this.biasInitializer,i=this.units;r=new(n=class extends As{apply(l,u){const c=o.apply([i]),h=new ub().apply([i]),d=o.apply([i*2]);return _v(_v(c,h),d)}},n.className="CustomInit",n)}else r=this.biasInitializer;this.bias=this.addWeight("bias",[this.units*4],null,r,this.biasRegularizer,!0,this.biasConstraint)}else this.bias=null;this.built=!0}call(e,n){return P(()=>{const s=n.training==null?!1:n.training;if(e=e,e.length!==3)throw new L(`LSTMCell expects 3 input Tensors (inputs, h, c), got ${e.length}.`);let r=e[1];const o=e[2];e=e[0],0<this.dropout&&this.dropout<1&&this.dropoutMask==null&&(this.dropoutMask=Do({ones:()=>es(e),rate:this.dropout,training:s,count:4,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&this.recurrentDropoutMask==null&&(this.recurrentDropoutMask=Do({ones:()=>es(r),rate:this.recurrentDropout,training:s,count:4,dropoutFunc:this.dropoutFunc}));const i=this.dropoutMask,a=this.recurrentDropoutMask;let l,u,c,h;0<this.dropout&&this.dropout<1&&(e=A(e,i[0]));let d=yr(e,this.kernel.read());0<this.recurrentDropout&&this.recurrentDropout<1&&(r=A(r,a[0])),d=Q(d,yr(r,this.recurrentKernel.read())),this.useBias&&(d=tr(d,this.bias.read()));const[p,f,m,y]=Ln(d,4,d.rank-1);l=this.recurrentActivation.apply(p),u=this.recurrentActivation.apply(f),c=Q(A(u,o),A(l,this.activation.apply(m))),h=this.recurrentActivation.apply(y);const g=A(h,this.activation.apply(c));return[g,g,c]})}getConfig(){const e=super.getConfig(),n={units:this.units,activation:To(this.activation),recurrentActivation:To(this.recurrentActivation),useBias:this.useBias,kernelInitializer:lt(this.kernelInitializer),recurrentInitializer:lt(this.recurrentInitializer),biasInitializer:lt(this.biasInitializer),unitForgetBias:this.unitForgetBias,kernelRegularizer:We(this.kernelRegularizer),recurrentRegularizer:We(this.recurrentRegularizer),biasRegularizer:We(this.biasRegularizer),activityRegularizer:We(this.activityRegularizer),kernelConstraint:Et(this.kernelConstraint),recurrentConstraint:Et(this.recurrentConstraint),biasConstraint:Et(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation};return Object.assign(Object.assign({},e),n)}}Kf.className="LSTMCell";Z(Kf);class r2 extends Go{constructor(e){e.implementation===0&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),e.cell=new Kf(e),super(e)}call(e,n){return P(()=>{this.cell.dropoutMask!=null&&(Se(this.cell.dropoutMask),this.cell.dropoutMask=null),this.cell.recurrentDropoutMask!=null&&(Se(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const s=n==null?null:n.mask,r=n==null?null:n.training,o=n==null?null:n.initialState;return super.call(e,{mask:s,training:r,initialState:o})})}static fromConfig(e,n){return n.implmentation===0&&(n.implementation=1),new e(n)}}r2.className="LSTM";Z(r2);class Cb extends jf{constructor(e){super(e),this.cells=e.cells}get stateSize(){const e=[];for(const n of this.cells.slice().reverse())Array.isArray(n.stateSize)?e.push(...n.stateSize):e.push(n.stateSize);return e}call(e,n){return P(()=>{e=e;let s=e.slice(1);const r=[];for(const a of this.cells.slice().reverse())Array.isArray(a.stateSize)?r.push(s.splice(0,a.stateSize.length)):r.push(s.splice(0,1));r.reverse();const o=[];let i;for(let a=0;a<this.cells.length;++a){const l=this.cells[a];s=r[a],a===0?i=[e[0]].concat(s):i=[i[0]].concat(s),i=l.call(i,n),o.push(i.slice(1))}s=[];for(const a of o.slice().reverse())s.push(...a);return[i[0]].concat(s)})}build(e){by(e)&&(e=e[0]),e=e;let n;this.cells.forEach((s,r)=>{ci(`RNNCell_${r}`,()=>{s.build(e),Array.isArray(s.stateSize)?n=s.stateSize[0]:n=s.stateSize,e=[e[0],n]})}),this.built=!0}getConfig(){const e=super.getConfig(),n=o=>({className:o.getClassName(),config:o.getConfig()}),r={cells:this.cells.map(n)};return Object.assign(Object.assign({},e),r)}static fromConfig(e,n,s={}){const r=[];for(const o of n.cells)r.push(_r(o,s));return new e({cells:r})}get trainableWeights(){if(!this.trainable)return[];const e=[];for(const n of this.cells)e.push(...n.trainableWeights);return e}get nonTrainableWeights(){const e=[];for(const n of this.cells)e.push(...n.nonTrainableWeights);if(!this.trainable){const n=[];for(const s of this.cells)n.push(...s.trainableWeights);return n.concat(e)}return e}getWeights(){const e=[];for(const n of this.cells)e.push(...n.weights);return wy(e)}setWeights(e){const n=[];for(const s of this.cells){const r=s.weights.length,o=e.splice(r);for(let i=0;i<s.weights.length;++i)n.push([s.weights[i],o[i]])}gb(n)}}Cb.className="StackedRNNCells";Z(Cb);function Do(t){const{ones:e,rate:n,training:s=!1,count:r=1,dropoutFunc:o}=t,i=()=>o!=null?o(e(),n):QI(e(),n),a=()=>Vc(i,e,s);return!r||r<=1?Ft(a().clone()):Array(r).fill(void 0).map(a).map(u=>Ft(u.clone()))}/**
 * @license
 * Copyright 2020 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */var yU=globalThis&&globalThis.__rest||function(t,e){var n={};for(var s in t)Object.prototype.hasOwnProperty.call(t,s)&&e.indexOf(s)<0&&(n[s]=t[s]);if(t!=null&&typeof Object.getOwnPropertySymbols=="function")for(var r=0,s=Object.getOwnPropertySymbols(t);r<s.length;r++)e.indexOf(s[r])<0&&Object.prototype.propertyIsEnumerable.call(t,s[r])&&(n[s[r]]=t[s[r]]);return n};class o2 extends Go{constructor(e){if(e.unroll)throw new ve("Unrolling is not possible with convolutional RNNs.");if(Array.isArray(e.cell))throw new ve("It is not possible at the moment to stack convolutional cells.");super(e),this.inputSpec=[new Tt({ndim:5})]}call(e,n){return P(()=>{if(this.cell.dropoutMask!=null&&(Se(this.cell.dropoutMask),this.cell.dropoutMask=null),this.cell.recurrentDropoutMask!=null&&(Se(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null),n&&n.constants)throw new L("ConvRNN2D cell does not support constants");const s=n==null?null:n.mask,r=n==null?null:n.training,o=n==null?null:n.initialState;return super.call(e,{mask:s,training:r,initialState:o})})}computeOutputShape(e){let n=this.computeSingleOutputShape(e);return this.returnSequences||(n=[n[0],...n.slice(2)]),this.returnState&&(n=[n,...Array(2).fill([e[0],...n.slice(-3)])]),n}getInitialState(e){return P(()=>{const{stateSize:n}=this.cell,s=e.shape,r=this.computeSingleOutputShape(s),o=[r[0],...r.slice(2)],i=kt(o);return Array.isArray(n)?Array(n.length).fill(i):[i]})}resetStates(e,n=!1){P(()=>{if(!this.stateful)throw new rr("Cannot call resetStates() on an RNN Layer that is not stateful.");const s=this.inputSpec[0].shape,r=this.computeSingleOutputShape(s),o=[r[0],...r.slice(2)];if(s[0]==null)throw new L("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(this.getStates()==null)Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(()=>kt(o)):this.states_=[kt(o)];else if(e==null)Se(this.states_),this.keptStates!=null&&(Se(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(()=>kt(o)):this.states_[0]=kt(o);else{if(Array.isArray(e)||(e=[e]),e.length!==this.states_.length)throw new L(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${e.length} state value(s). Input received: ${e}`);n?this.keptStates.push(this.states_.slice()):Se(this.states_);for(let a=0;a<this.states_.length;++a){const l=e[a],u=o;if(!Ae(l.shape,u))throw new L(`State ${a} is incompatible with layer ${this.name}: expected shape=${u}, received shape=${l.shape}`);this.states_[a]=l}}this.states_=this.states_.map(a=>Ft(a.clone()))})}computeSingleOutputShape(e){const{dataFormat:n,filters:s,kernelSize:r,padding:o,strides:i,dilationRate:a}=this.cell,l=n==="channelsFirst",u=e[l?3:2],c=e[l?4:3],h=Ks(u,r[0],o,i[0],a[0]),d=Ks(c,r[1],o,i[1],a[1]);return[...e.slice(0,2),...l?[s,h,d]:[h,d,s]]}}o2.className="ConvRNN2D";class Nb extends Kf{constructor(e){const{filters:n,kernelSize:s,strides:r,padding:o,dataFormat:i,dilationRate:a}=e;super(Object.assign(Object.assign({},e),{units:n})),this.filters=n,Lt(this.filters,"filters"),this.kernelSize=va(s,2,"kernelSize"),this.kernelSize.forEach(l=>Lt(l,"kernelSize")),this.strides=va(r||1,2,"strides"),this.strides.forEach(l=>Lt(l,"strides")),this.padding=o||"valid",os(this.padding),this.dataFormat=i||"channelsLast",wt(this.dataFormat),this.dilationRate=va(a||1,2,"dilationRate"),this.dilationRate.forEach(l=>Lt(l,"dilationRate"))}build(e){var n;e=Le(e);const s=this.dataFormat==="channelsFirst"?1:e.length-1;if(e[s]==null)throw new L(`The channel dimension of the input should be defined. Found ${e[s]}`);const r=e[s],o=4,i=this.kernelSize.concat([r,this.filters*o]);this.kernel=this.addWeight("kernel",i,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint);const a=this.kernelSize.concat([this.filters,this.filters*o]);if(this.recurrentKernel=this.addWeight("recurrent_kernel",a,null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){let l;if(this.unitForgetBias){const u=this.biasInitializer,c=this.filters;l=new(n=class extends As{apply(d,p){const f=u.apply([c]),m=An([c]),y=u.apply([c*2]);return lb([f,m,y])}},n.className="CustomInit",n)}else l=this.biasInitializer;this.bias=this.addWeight("bias",[this.filters*o],null,l,this.biasRegularizer,!0,this.biasConstraint)}this.built=!0}call(e,n){return P(()=>{if(e.length!==3)throw new L(`ConvLSTM2DCell expects 3 input Tensors (inputs, h, c), got ${e.length}.`);const s=n.training||!1,r=e[0],o=e[1],i=e[2],a=4;0<this.dropout&&this.dropout<1&&this.dropoutMask==null&&(this.dropoutMask=Do({ones:()=>es(r),rate:this.dropout,training:s,count:a,dropoutFunc:this.dropoutFunc}));const l=this.dropoutMask,u=(j,X,Y)=>!X||!X[Y]?j:A(X[Y],j);let c=u(r,l,0),h=u(r,l,1),d=u(r,l,2),p=u(r,l,3);0<this.recurrentDropout&&this.recurrentDropout<1&&this.recurrentDropoutMask==null&&(this.recurrentDropoutMask=Do({ones:()=>es(o),rate:this.recurrentDropout,training:s,count:a,dropoutFunc:this.dropoutFunc}));const f=this.recurrentDropoutMask;let m=u(o,f,0),y=u(o,f,1),g=u(o,f,2),x=u(o,f,3);const b=3,[w,k,S,N]=Ln(this.kernel.read(),a,b),[$,T,E,F]=this.useBias?Ln(this.bias.read(),a):[null,null,null,null];c=this.inputConv(c,w,$,this.padding),h=this.inputConv(h,k,T,this.padding),d=this.inputConv(d,S,E,this.padding),p=this.inputConv(p,N,F,this.padding);const[M,B,V,W]=Ln(this.recurrentKernel.read(),a,b);m=this.recurrentConv(m,M),y=this.recurrentConv(y,B),g=this.recurrentConv(g,V),x=this.recurrentConv(x,W);const G=this.recurrentActivation.apply(Q(c,m)),q=this.recurrentActivation.apply(Q(h,y)),_=Q(A(q,i),A(G,this.activation.apply(Q(d,g)))),z=A(this.recurrentActivation.apply(Q(p,x)),this.activation.apply(_));return[z,z,_]})}getConfig(){const e=super.getConfig(),n=yU(e,["units"]),s={filters:this.filters,kernelSize:this.kernelSize,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,strides:this.strides};return Object.assign(Object.assign({},n),s)}inputConv(e,n,s,r){const o=No(e,n,this.strides,r||"valid",this.dataFormat==="channelsFirst"?"NCHW":"NHWC",this.dilationRate);return s?tr(o,s,this.dataFormat):o}recurrentConv(e,n){return No(e,n,1,"same",this.dataFormat==="channelsFirst"?"NCHW":"NHWC")}}Nb.className="ConvLSTM2DCell";Z(Nb);class i2 extends o2{constructor(e){const n=new Nb(e);super(Object.assign(Object.assign({},e),{cell:n}))}static fromConfig(e,n){return new e(n)}}i2.className="ConvLSTM2D";Z(i2);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class $b extends Te{constructor(e){super(e),this.rate=Math.max(Math.min(e.rate,1),0),this.noiseShape=e.noiseShape,this.seed=e.seed,this.supportsMasking=!0}getNoiseShape(e){if(this.noiseShape==null)return this.noiseShape;const n=e.shape,s=[];for(let r=0;r<this.noiseShape.length;++r)s.push(this.noiseShape[r]==null?n[r]:this.noiseShape[r]);return s}call(e,n){return P(()=>{this.invokeCallHook(e,n);const s=be(e);if(0<this.rate&&this.rate<1){const r=n.training==null?!1:n.training,o=this.getNoiseShape(s);return Vc(()=>QI(s,this.rate,o,this.seed),()=>s,r)}return e})}getConfig(){const e={rate:this.rate,noiseShape:this.noiseShape,seed:this.seed},n=super.getConfig();return Object.assign(e,n),e}dispose(){return super.dispose()}}$b.className="Dropout";Z($b);class a2 extends $b{constructor(e){super(e),this.inputSpec=[{ndim:3}]}getNoiseShape(e){const n=e.shape;return[n[0],1,n[2]]}}a2.className="SpatialDropout1D";Z(a2);class l2 extends Te{constructor(e){if(super(e),this.activation=null,this.useBias=!0,this.kernel=null,this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",e.batchInputShape==null&&e.inputShape==null&&e.inputDim!=null){let n=null;e.batchSize!=null&&(n=e.batchSize),this.batchInputShape=[n,e.inputDim]}this.units=e.units,Lt(this.units,"units"),this.activation=Eo(e.activation),e.useBias!=null&&(this.useBias=e.useBias),this.kernelInitializer=nt(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.biasInitializer=nt(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelConstraint=Dt(e.kernelConstraint),this.biasConstraint=Dt(e.biasConstraint),this.kernelRegularizer=rt(e.kernelRegularizer),this.biasRegularizer=rt(e.biasRegularizer),this.activityRegularizer=rt(e.activityRegularizer),this.supportsMasking=!0,this.inputSpec=[{minNDim:2}]}build(e){e=Le(e);const n=e[e.length-1];this.kernel==null&&(this.kernel=this.addWeight("kernel",[n,this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint))),this.inputSpec=[{minNDim:2,axes:{[-1]:n}}],this.built=!0}computeOutputShape(e){e=Le(e);const n=e.slice();return n[n.length-1]=this.units,n}call(e,n){return P(()=>{this.invokeCallHook(e,n);const s=be(e),r=GI(this.activation.getClassName());let o;return r!=null?o=yr(s,this.kernel.read(),r,this.bias?this.bias.read():null):(o=yr(s,this.kernel.read()),this.bias!=null&&(o=tr(o,this.bias.read())),this.activation!=null&&(o=this.activation.apply(o))),o})}getConfig(){const e={units:this.units,activation:To(this.activation),useBias:this.useBias,kernelInitializer:lt(this.kernelInitializer),biasInitializer:lt(this.biasInitializer),kernelRegularizer:We(this.kernelRegularizer),biasRegularizer:We(this.biasRegularizer),activityRegularizer:We(this.activityRegularizer),kernelConstraint:Et(this.kernelConstraint),biasConstraint:Et(this.biasConstraint)},n=super.getConfig();return Object.assign(e,n),e}}l2.className="Dense";Z(l2);class u2 extends Te{constructor(e){e=e||{},super(e),this.inputSpec=[{minNDim:3}],this.dataFormat=e.dataFormat}computeOutputShape(e){e=Le(e);for(const n of e.slice(1))if(n==null)throw new L(`The shape of the input to "Flatten" is not fully defined (got ${e.slice(1)}). Make sure to pass a complete "input_shape" or "batch_input_shape" argument to the first layer in your model.`);return[e[0],bo(e,1)]}call(e,n){return P(()=>{this.invokeCallHook(e,n);let s=be(e);if(this.dataFormat==="channelsFirst"&&s.rank>1){const r=[0];for(let o=2;o<s.rank;++o)r.push(o);r.push(1),s=Ee(s,r)}return eW(s)})}getConfig(){const e={};this.dataFormat!=null&&(e.dataFormat=this.dataFormat);const n=super.getConfig();return Object.assign(e,n),e}}u2.className="Flatten";Z(u2);class c2 extends Te{constructor(e){super(e),this.supportsMasking=!0,this.activation=Eo(e.activation)}call(e,n){return P(()=>{this.invokeCallHook(e,n);const s=be(e);return this.activation.apply(s)})}getConfig(){const e={activation:To(this.activation)},n=super.getConfig();return Object.assign(e,n),e}}c2.className="Activation";Z(c2);class h2 extends Te{constructor(e){super(e),this.n=e.n,this.inputSpec=[{ndim:2}]}computeOutputShape(e){return[e[0],this.n,e[1]]}call(e,n){return P(()=>(e=be(e),Z4(e,this.n)))}getConfig(){const e={n:this.n},n=super.getConfig();return Object.assign(e,n),e}}h2.className="RepeatVector";Z(h2);class d2 extends Te{constructor(e){super(e),this.targetShape=e.targetShape;for(let n=0;n<this.targetShape.length;++n)this.isUnknown(this.targetShape[n])&&(this.targetShape[n]=null)}isUnknown(e){return e<0||e==null}fixUnknownDimension(e,n){const s="Total size of new array must be unchanged.",r=n.slice();let o=1,i=null;for(let l=0;l<r.length;++l){const u=r[l];if(this.isUnknown(u))if(i===null)i=l;else throw new L("Can only specifiy one unknown dimension.");else o*=u}const a=bo(e);if(i!==null){if(o===0||a%o!==0)throw new L(s);r[i]=a/o}else if(a!==o)throw new L(s);return r}computeOutputShape(e){let n=!1;for(let s=0;s<e.length;++s)if(this.isUnknown(e[s])){n=!0;break}return n?e.slice(0,1).concat(this.targetShape):e.slice(0,1).concat(this.fixUnknownDimension(e.slice(1),this.targetShape))}call(e,n){return P(()=>{this.invokeCallHook(e,n);const s=be(e),r=s.shape,o=r.slice(0,1).concat(this.fixUnknownDimension(r.slice(1),this.targetShape));return O(s,o)})}getConfig(){const e={targetShape:this.targetShape},n=super.getConfig();return Object.assign(e,n),e}}d2.className="Reshape";Z(d2);class p2 extends Te{constructor(e){if(super(e),e.dims==null)throw new Error("Required configuration field `dims` is missing during Permute constructor call.");if(!Array.isArray(e.dims))throw new Error(`Permute constructor requires \`dims\` to be an Array, but received ${e.dims} instead.`);const n=Qs(1,e.dims.length+1);if(!Ae(e.dims.slice().sort(),n))throw new Error("Invalid permutation `dims`: "+JSON.stringify(e.dims)+" `dims` must contain consecutive integers starting from 1.");this.dims=e.dims,this.dimsIncludingBatch=[0].concat(this.dims),this.inputSpec=[new Tt({ndim:this.dims.length+1})]}computeOutputShape(e){e=Le(e);const n=e.slice();return this.dims.forEach((s,r)=>{n[r+1]=e[s]}),n}call(e,n){return Ee(be(e),this.dimsIncludingBatch)}getConfig(){const e={dims:this.dims},n=super.getConfig();return Object.assign(e,n),e}}p2.className="Permute";Z(p2);class f2 extends Te{constructor(e){super(e==null?{}:e),this.supportsMasking=!0,e!=null?this.maskValue=e.maskValue==null?0:e.maskValue:this.maskValue=0}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),n={maskValue:this.maskValue};return Object.assign(n,e),n}computeMask(e,n){const s=be(e),r=-1;return Id(Fa(s,this.maskValue),r)}call(e,n){return P(()=>{this.invokeCallHook(e,n);const s=be(e),r=-1,o=!0,i=Id(Fa(s,this.maskValue),r,o);return A(s,ie(i,s.dtype))})}}f2.className="Masking";Z(f2);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class m2 extends Te{constructor(e){if(super(e),this.embeddings=null,this.DEFAULT_EMBEDDINGS_INITIALIZER="randomUniform",e.batchInputShape==null&&e.inputShape==null){let n=null;e.batchSize!=null&&(n=e.batchSize),e.inputLength==null?this.batchInputShape=[n,null]:this.batchInputShape=[n].concat(qe(e.inputLength))}this.inputDim=e.inputDim,Lt(this.inputDim,"inputDim"),this.outputDim=e.outputDim,Lt(this.outputDim,"outputDim"),this.embeddingsInitializer=nt(e.embeddingsInitializer||this.DEFAULT_EMBEDDINGS_INITIALIZER),this.embeddingsRegularizer=rt(e.embeddingsRegularizer),this.activityRegularizer=rt(e.activityRegularizer),this.embeddingsConstraint=Dt(e.embeddingsConstraint),this.maskZero=e.maskZero,this.supportsMasking=e.maskZero,this.inputLength=e.inputLength}build(e){this.embeddings=this.addWeight("embeddings",[this.inputDim,this.outputDim],this.dtype,this.embeddingsInitializer,this.embeddingsRegularizer,!0,this.embeddingsConstraint),this.built=!0}warnOnIncompatibleInputShape(e){}computeMask(e,n){return P(()=>this.maskZero?(e=be(e),Fa(e,Re(e))):null)}computeOutputShape(e){if(e=Le(e),this.inputLength==null)return[...e,this.outputDim];const n=qe(this.inputLength);if(n.length!==e.length-1)throw new L(`"inputLength" is ${this.inputLength}, but received input shape has shape ${e}`);{let s=0;for(let r=0;r<n.length;++r){const o=n[r],i=e[r+1];if(o!=null&&i!=null&&o!==i)throw new L(`"inputLength" is ${this.inputLength}, but received input shape has shape ${e}`);o==null&&(n[s]=i),s++}}return[e[0],...n,this.outputDim]}call(e,n){return P(()=>{this.invokeCallHook(e,n);let s=be(e);s.dtype!=="int32"&&(s=gr(s,"int32"));const r=YI(this.embeddings.read(),O(s,[s.size]));return O(r,Le(this.computeOutputShape(s.shape)))})}getConfig(){const e={inputDim:this.inputDim,outputDim:this.outputDim,embeddingsInitializer:lt(this.embeddingsInitializer),embeddingsRegularizer:We(this.embeddingsRegularizer),activityRegularizer:We(this.activityRegularizer),embeddingsConstraint:Et(this.embeddingsConstraint),maskZero:this.maskZero,inputLength:this.inputLength},n=super.getConfig();return Object.assign(e,n),e}}m2.className="Embedding";Z(m2);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class zi extends Te{constructor(e){super(e||{}),this.supportsMasking=!0}mergeFunction(e){throw new ve}computeElementwiseOpOutputShape(e,n){if(e==null||n==null)return null;if(e.length<n.length)return this.computeElementwiseOpOutputShape(n,e);if(n.length===0)return e;const s=e.slice(0,e.length-n.length);for(let r=0;r<n.length;++r){const o=e[e.length-n.length+r],i=n[r];if(o==null||i==null||o<0||i<0)s.push(null);else if(o===1)s.push(i);else if(i===1)s.push(o);else{if(o!==i)throw new L("Operands could not be broadcast together with shapes "+JSON.stringify(e)+" "+JSON.stringify(n));s.push(o)}}return s}build(e){if(Array.isArray(e)&&!Array.isArray(e[0])&&(e=[Le(e)]),e=e,e.length<2)throw new L(`A merge layer should be called on an Array of at least 2 inputs. Got ${e.length} input(s).`);let n=[];for(const o of e)o!=null&&o[0]!==null&&n.push(o[0]);if(n=xo(n),n.length>1)throw new L(`Can not merge tensors with different batch sizes. Got tensors with shapes: ${JSON.stringify(e)}.`);let s=e[0]==null?null:e[0].slice(1);for(let o=1;o<e.length;++o){const i=e[o]==null?null:e[o].slice(1);s=this.computeElementwiseOpOutputShape(s,i)}const r=e.map(o=>o.length);e.indexOf(null)===-1&&xo(r).length===1?this.reshapeRequired=!1:this.reshapeRequired=!0}call(e,n){return P(()=>{if(e=e,this.reshapeRequired){const s=[],r=e.map(o=>o.rank);if(r.indexOf(null)===-1){const o=Io(r);for(let i of e){const a=i.rank;for(let l=0;l<o-a;++l)i=Mc(i,1);s.push(i)}return this.mergeFunction(s)}else{let o=!1;for(const l of e){const u=l.rank;if(u==null){const c=l.shape,h=c[0],d=c.slice(1).concat([h]);let p=O(l,[h].concat(bo(c.slice(1))));p=Ee(p,[1,0]),p=O(p,d),s.push(p),o=!0}else if(u>1){const c=Qs(1,u).concat([0]);s.push(Ee(l,c)),o=!0}else s.push(l)}let i=this.mergeFunction(s);const a=i.rank;if(o){if(a==null){const l=i.shape,u=l.length,c=l[u-1],h=[c].concat(l.slice(0,l.length-1));i=O(Ee(O(i,[-1,c]),[1,0]),h)}else if(a>1){const l=[a-1].concat(Qs(0,a-1));i=Ee(i,l)}}return i}}else return this.mergeFunction(e)})}computeOutputShape(e){e=e;let n;e[0]==null?n=null:n=e[0].slice(1);for(let r=1;r<e.length;++r){const o=e[r]==null?null:e[r].slice(1);n=this.computeElementwiseOpOutputShape(n,o)}let s=[];for(const r of e)r!=null&&r[0]!==null&&s.push(r[0]);return s=xo(s),s.length===1?n=s.concat(n):n=[null].concat(n),n}computeMask(e,n){return P(()=>{if(n==null)return null;if(!Array.isArray(n))throw new L("`mask` should be an Array");if(!Array.isArray(e))throw new L("`inputs` should be an Array");if(n.length!==e.length)throw new L(`The Array 'inputs' and 'mask' are expected to have the same length, but have different lengths (${e.length} vs ${n.length})`);if(n.every(r=>r==null))return null;n=n.map(r=>r==null?r:gn(r,0));let s=n[0];for(let r=1;r<n.length-1;++r)s=xr(s,n[r]);return s})}}class g2 extends zi{constructor(e){super(e)}mergeFunction(e){return P(()=>{let n=e[0].clone();for(let s=1;s<e.length;++s)n=Q(n,e[s]);return n})}}g2.className="Add";Z(g2);class y2 extends zi{constructor(e){super(e)}mergeFunction(e){return P(()=>{let n=e[0].clone();for(let s=1;s<e.length;++s)n=A(n,e[s]);return n})}}y2.className="Multiply";Z(y2);class x2 extends zi{constructor(e){super(e)}mergeFunction(e){return P(()=>{let n=e[0].clone();for(let s=1;s<e.length;++s)n=Q(n,e[s]);return A(1/e.length,n)})}}x2.className="Average";Z(x2);class b2 extends zi{constructor(e){super(e)}mergeFunction(e){return P(()=>{let n=e[0];for(let s=1;s<e.length;++s)n=Ur(n,e[s]);return n})}}b2.className="Maximum";Z(b2);class w2 extends zi{constructor(e){super(e)}mergeFunction(e){return P(()=>{let n=e[0];for(let s=1;s<e.length;++s)n=Ac(n,e[s]);return n})}}w2.className="Minimum";Z(w2);class v2 extends zi{constructor(e){super(e),this.DEFAULT_AXIS=-1,e==null&&(e={}),this.axis=e.axis==null?this.DEFAULT_AXIS:e.axis,this.supportsMasking=!0,this.reshapeRequired=!1}build(e){if(!(Array.isArray(e)&&Array.isArray(e[0]))||e.length===1)throw new L("A `Concatenate` layer should be called on a list of at least 2 inputs");e=e;let n=!0;for(const r of e)if(r!=null){n=!1;break}if(n)return;const s=[];for(let r=0;r<e.length;++r){const o=e[r].slice();o.splice(this.axis,1);let i=!1;for(const a of s)if(Ae(a,o)){i=!0;break}i||s.push(o)}if(s.length>1)throw new L("A `Concatenate` layer requires inputs with matching shapes except for the concat axis. Got input shapes: "+JSON.stringify(e))}mergeFunction(e){return P(()=>lb(e,this.axis))}computeOutputShape(e){if(!(Array.isArray(e)&&Array.isArray(e[0])))throw new L("A `Concatenate` layer should be called on a list of inputs.");const n=e,s=n[0].slice(),r=this.axis<0?s.length+this.axis:this.axis;for(const o of n.slice(1)){if(s[r]==null||o[r]==null){s[r]=null;break}s[r]+=o[r]}return s}computeMask(e,n){if(n==null)return null;if(!Array.isArray(n))throw new L("`mask` should be an array for Concatenate");if(!Array.isArray(e))throw new L("`inputs` should be an array for Concatenate");if(n.length!==e.length)throw new L(`Mismatch in the length of mask (${n.length}) and the legnth of inputs (${e.length})`);return P(()=>{let s=!0;if(n.forEach(i=>{if(i!=null){s=!1;return}}),s)return null;const r=[];for(let i=0;i<e.length;++i)n[i]==null?r.push(ie(es(e[i]),"bool")):n[i].rank<e[i].rank?r.push(gn(n[i],-1)):r.push(n[i]);const o=ft(r,this.axis);return Xx(o,-1,!1)})}getConfig(){const e={axis:this.axis},n=super.getConfig();return Object.assign(e,n),e}}v2.className="Concatenate";Z(v2);function kl(t,e){for(;t<0;)t+=e;return t}function xU(t,e,n){if(t.shape.length>3||e.shape.length>3)throw new ve("batchDot is not implemented for tensors of 4D or higher rank yet");if(C(t.shape.length>=2,()=>`batchDot requires the rank of x to be >= 2, but got ${t.shape.length}`),C(t.shape.length>=2,()=>`batchDot requires the rank of y to be >= 2, but got ${e.shape.length}`),typeof n=="number"&&(n=[n,n]),t.dtype==="complex64"||e.dtype==="complex64")throw new ve("batchDot is not implemented for complex64-type Tensors yet.");const s=t.shape.length,r=e.shape.length;n==null&&(n=[s-1,r-2]);const o=n;return P(()=>{let i;if(s>r){i=s-r;const l=[];for(let u=0;u<i;++u)l.push(1);e=O(e,e.shape.concat(l))}else if(r>s){i=r-s;const l=[];for(let u=0;u<i;++u)l.push(1);t=O(t,t.shape.concat(l))}else i=0;let a;if(t.shape.length===2&&e.shape.length===2)o[0]===o[1]?a=he(A(t,e),o[0]):a=he(A(Ee(t,[1,0]),e),o[1]);else{const l=o[0]!==t.shape.length-1,u=o[1]===e.shape.length-1;a=Ie(t,e,l,u)}if(i>0){let l;s>r?l=s+r-3:l=s-1;const u=[];for(let c=l;c<l+i;++c)u.push(c);a=Li(a,u)}return a.shape.length===1&&(a=gn(a,1)),a})}class k2 extends zi{constructor(e){super(e),this.axes=e.axes,this.normalize=e.normalize==null?!1:e.normalize,this.supportsMasking=!0,this.reshapeRequired=!1}build(e){C(Array.isArray(e)&&e.length===2&&Array.isArray(e[0])&&Array.isArray(e[1]),()=>"A `Dot` layer should be called on a list of exactly 2 inputs.");const n=e[0],s=e[1];if(n.length>3||s.length>3)throw new ve("Dot layer does not support tensors of 4D or higher rank yet.");const r=this.interpretAxes(n,s);if(n[r[0]]!==s[r[1]])throw new L(`Dimension incompatibility: ${n[r[0]]} !== ${s[r[1]]}`)}mergeFunction(e){if(e.length!==2)throw new L(`A \`Dot\` layer must be called on exactly 2 inputs, but received ${e.length} input(s).`);let n=e[0],s=e[1],r;return Array.isArray(this.axes)?r=this.axes.map((o,i)=>kl(o,e[i].shape.length)):r=[kl(this.axes,n.shape.length),kl(this.axes,s.shape.length)],this.normalize&&(n=_d(n,r[0]),s=_d(s,r[1])),xU(n,s,r)}interpretAxes(e,n){let s;return Array.isArray(this.axes)?s=this.axes:s=[kl(this.axes,e.length),kl(this.axes,n.length)],s}computeOutputShape(e){C(Array.isArray(e)&&e.length===2&&Array.isArray(e[0])&&Array.isArray(e[1]),()=>"A `Dot` layer should be called on a list of exactly 2 inputs.");const n=e[0].slice(),s=e[1].slice();if(n.length>3||s.length>3)throw new ve("Dot layer does not support tensors of 4D or higher rank yet.");const r=this.interpretAxes(n,s);n.splice(r[0],1),s.splice(r[1],1),s.splice(0,1);const o=n.concat(s);return o.length===1&&o.push(1),o}computeMask(e,n){return null}getConfig(){const e={axes:this.axes,normalize:this.normalize},n=super.getConfig();return Object.assign(e,n),e}}k2.className="Dot";Z(k2);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class S2 extends Te{constructor(e){super(e),this.supportsMasking=!0,this.stddev=e.stddev}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),n={stddev:this.stddev};return Object.assign(n,e),n}call(e,n){return P(()=>{this.invokeCallHook(e,n);const s=be(e);return Vc(()=>Q(Bf(s.shape,0,this.stddev),s),()=>s,n.training||!1)})}}S2.className="GaussianNoise";Z(S2);class C2 extends Te{constructor(e){super(e),this.supportsMasking=!0,this.rate=e.rate}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),n={rate:this.rate};return Object.assign(n,e),n}call(e,n){return P(()=>{this.invokeCallHook(e,n);const s=be(e);return this.rate>0&&this.rate<1?Vc(()=>{const o=Math.sqrt(this.rate/(1-this.rate));return A(s,Bf(s.shape,1,o))},()=>s,n.training||!1):s})}}C2.className="GaussianDropout";Z(C2);class N2 extends Te{constructor(e){super(e),this.supportsMasking=!0,this.rate=e.rate,this.noiseShape=e.noiseShape}_getNoiseShape(e){return this.noiseShape||be(e).shape}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),n={rate:this.rate};return Object.assign(n,e),n}call(e,n){return P(()=>{if(this.rate<1&&this.rate>0){const s=this._getNoiseShape(e);return Vc(()=>{const o=be(e),i=1.6732632423543772,a=1.0507009873554805,l=-i*a;let u=Vo(_c(s),this.rate);u=gr(u,"float32");const c=((1-this.rate)*(1+this.rate*l**2))**-.5,h=-c*l*this.rate,d=Q(A(o,u),A(Q(u,-1),l));return Q(A(d,c),h)},()=>be(e),n.training||!1)}return e})}}N2.className="AlphaDropout";Z(N2);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function yu(t,e,n,s,r,o=.001){let i;if(t.rank===2)i=UN(t,e,n,s,r,o);else if(t.rank===3)i=GN(t,e,n,s,r,o);else if(t.rank===4)i=HN(t,e,n,s,r,o);else throw new ve(`batchNormalization is not implemented for array of rank ${t.rank} yet`);return i}function bU(t,e,n,s,r=.001){return P(()=>{const o=kf(t,s),i=o.mean,a=o.variance;return[yu(t,i,a,n,e,r),i,a]})}function wU(t,e,n,s,r=.001){return P(()=>{const o=kf(t,s),i=o.mean,a=o.variance,l=[];for(const f of Qs(0,t.rank))s.indexOf(f)!==-1?l.push(1):l.push(t.shape[f]);const u=O(i,l),c=O(a,l),h=e==null?null:O(e,l),d=n==null?null:O(n,l);return[yu(t,u,c,d,h,r),i,a]})}function vU(t,e,n,s,r=.001){return Ae(s.slice().sort(),Qs(0,t.rank-1))?bU(t,e,n,s,r):wU(t,e,n,s,r)}class $2 extends Te{constructor(e){e==null&&(e={}),super(e),this.supportsMasking=!0,this.axis=e.axis==null?-1:e.axis,this.momentum=e.momentum==null?.99:e.momentum,this.epsilon=e.epsilon==null?.001:e.epsilon,this.center=e.center==null?!0:e.center,this.scale=e.scale==null?!0:e.scale,this.betaInitializer=nt(e.betaInitializer||"zeros"),this.gammaInitializer=nt(e.gammaInitializer||"ones"),this.movingMeanInitializer=nt(e.movingMeanInitializer||"zeros"),this.movingVarianceInitializer=nt(e.movingVarianceInitializer||"ones"),this.betaConstraint=Dt(e.betaConstraint),this.gammaConstraint=Dt(e.gammaConstraint),this.betaRegularizer=rt(e.betaRegularizer),this.gammaRegularizer=rt(e.gammaRegularizer)}build(e){e=Le(e);const n=this.axis>=0?this.axis:this.axis+e.length,s=e[n];if(s==null)throw new L(`Axis ${n} of input tensor should have a defined dimension but the layer received an input with shape ${JSON.stringify(e)}.`);this.inputSpec=[new Tt({ndim:e.length,axes:{[n]:s}})];const r=[s];this.scale&&(this.gamma=this.addWeight("gamma",r,null,this.gammaInitializer,this.gammaRegularizer,!0,this.gammaConstraint)),this.center&&(this.beta=this.addWeight("beta",r,null,this.betaInitializer,this.betaRegularizer,!0,this.betaConstraint)),this.movingMean=this.addWeight("moving_mean",r,null,this.movingMeanInitializer,null,!1),this.movingVariance=this.addWeight("moving_variance",r,null,this.movingVarianceInitializer,null,!1),this.built=!0}call(e,n){return P(()=>{const s=n.training==null?!1:n.training,r=be(e),o=r.shape,i=o.length,a=Qs(0,i),l=this.axis>=0?this.axis:this.axis+i;a.splice(l,1);const u=Ni(1,i);u[l]=o[l];const c=a.slice();c.sort();const h=!Ae(c,Qs(0,i).slice(0,i-1)),d=()=>{if(h){const x=O(this.movingMean.read(),u),b=O(this.movingVariance.read(),u),w=this.center?O(this.beta.read(),u):null,k=this.scale?O(this.gamma.read(),u):null;return yu(r,x,b,w,k,this.epsilon)}else return yu(r,this.movingMean.read(),this.movingVariance.read(),this.beta==null?null:this.beta.read(),this.gamma==null?null:this.gamma.read(),this.epsilon)};if(!s)return d();const[p,f,m]=vU(r,this.gamma.read(),this.beta.read(),a,this.epsilon),y=(x,b,w)=>{P(()=>{const k=1-w,S=x.read(),N=A(le(S,b),k);x.write(le(S,N))})};return(()=>{y(this.movingMean,f,this.momentum),y(this.movingVariance,m,this.momentum)})(),p})}getConfig(){const e={axis:this.axis,momentum:this.momentum,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:lt(this.betaInitializer),gammaInitializer:lt(this.gammaInitializer),movingMeanInitializer:lt(this.movingMeanInitializer),movingVarianceInitializer:lt(this.movingVarianceInitializer),betaRegularizer:We(this.betaRegularizer),gammaRegularizer:We(this.gammaRegularizer),betaConstraint:Et(this.betaConstraint),gammaConstraint:Et(this.gammaConstraint)},n=super.getConfig();return Object.assign(e,n),e}}$2.className="BatchNormalization";Z($2);class I2 extends Te{constructor(e){if(e==null&&(e={}),super(e),this.axis=e.axis==null?-1:e.axis,typeof this.axis=="number"){if(!Number.isInteger(this.axis))throw new Error(`Expected axis to be an integer, but received ${this.axis}`)}else if(Array.isArray(this.axis)){for(const n of this.axis)if(!Number.isInteger(n))throw new Error(`Expected axis to be an array of integers, but received ${JSON.stringify(this.axis)}`)}else throw new Error(`Expected axis to be an integer or an array of integers, but received ${JSON.stringify(this.axis)}`);this.epsilon=e.epsilon==null?.001:e.epsilon,this.center=e.center==null?!0:e.center,this.scale=e.scale==null?!0:e.scale,this.betaInitializer=nt(e.betaInitializer||"zeros"),this.gammaInitializer=nt(e.gammaInitializer||"ones"),this.betaRegularizer=rt(e.betaRegularizer),this.gammaRegularizer=rt(e.gammaRegularizer),this.supportsMasking=!0}build(e){e=Le(e);const n=e.length;typeof this.axis=="number"&&(this.axis=[this.axis]);for(let o=0;o<this.axis.length;++o)this.axis[o]<0&&(this.axis[o]+=n);for(const o of this.axis)if(o<0||o>=n)throw new Error(`Invalid axis: ${o}`);if(this.axis.length!==xo(this.axis).length)throw new Error(`Found duplicate axes in: ${this.axis}`);const s=this.axis.map(o=>e[o]),r=!0;this.scale?this.gamma=this.addWeight("gamma",s,"float32",this.gammaInitializer,this.gammaRegularizer,r):this.gamma=null,this.center?this.beta=this.addWeight("beta",s,"float32",this.betaInitializer,this.betaRegularizer,r):this.beta=null,this.built=!0}call(e,n){const s=be(e),r=s.shape,o=r.length;return P(()=>{let{mean:a,variance:l}=kf(s,this.axis,!0);const u=Ni(1,o);for(const m of this.axis)u[m]=r[m];const c=m=>m!=null&&m.shape.length!==o?O(m,u):m;let h=this.scale?c(this.gamma.read()):null,d=this.center?c(this.beta.read()):null;const p=[],f=[];for(let m=0;m<o;++m)this.axis.indexOf(m)!==-1?(p.push(r[m]),f.push(1)):(p.push(1),f.push(r[m]));return a=vs(a,p),l=vs(l,p),h!=null&&(h=vs(h,f)),d!=null&&(d=vs(d,f)),yu(s,a,l,d,h,this.epsilon)})}getConfig(){const e={axis:this.axis,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:lt(this.betaInitializer),gammaInitializer:lt(this.gammaInitializer),betaRegularizer:We(this.betaRegularizer),gammaRegularizer:We(this.gammaRegularizer)},n=super.getConfig();return Object.assign(e,n),e}}I2.className="LayerNormalization";Z(I2);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function kU(t,e,n){return P(()=>{if(t.rank!==4)throw new L(`temporalPadding expects input tensor to be 4-D, but received a ${t.rank}-D tensor.`);if(e==null&&(e=[[1,1],[1,1]]),e.length!==2||e[0].length!==2||e[1].length!==2)throw new L("spatial2dPadding expects `padding` to be an Array of two Arrays, each of which is an Array of two integers.");if(n==null&&(n=Zs()),n!=="channelsLast"&&n!=="channelsFirst")throw new L(`Unknown data format: ${n}. Supported data formats are 'channelsLast' and 'channelsFirst.`);let s;return n==="channelsFirst"?s=[[0,0],[0,0],e[0],e[1]]:s=[[0,0],e[0],e[1],[0,0]],Wo(t,s)})}class T2 extends Te{constructor(e){if(e==null&&(e={}),super(e),this.dataFormat=e.dataFormat==null?Zs():e.dataFormat,e.padding==null)this.padding=[[1,1],[1,1]];else if(typeof e.padding=="number")this.padding=[[e.padding,e.padding],[e.padding,e.padding]];else{if(e.padding=e.padding,e.padding.length!==2)throw new L(`ZeroPadding2D expects padding to be a length-2 array, but received a length-${e.padding.length} array.`);let n,s;if(typeof e.padding[0]=="number")n=[e.padding[0],e.padding[0]],s=[e.padding[1],e.padding[1]];else{if(e.padding=e.padding,e.padding[0].length!==2)throw new L(`ZeroPadding2D expects height padding to be a length-2 array, but received a length-${e.padding[0].length} array.`);if(n=e.padding[0],e.padding[1].length!==2)throw new L(`ZeroPadding2D expects width padding to be a length-2 array, but received a length-${e.padding[1].length} array.`);s=e.padding[1]}this.padding=[n,s]}this.inputSpec=[new Tt({ndim:4})]}computeOutputShape(e){e=Le(e);let n,s;return this.dataFormat==="channelsFirst"?(e[2]!=null&&e[2]>=0?n=e[2]+this.padding[0][0]+this.padding[0][1]:n=null,e[3]!=null&&e[3]>=0?s=e[3]+this.padding[1][0]+this.padding[1][1]:s=null,[e[0],e[1],n,s]):(e[1]!=null&&e[1]>=0?n=e[1]+this.padding[0][0]+this.padding[0][1]:n=null,e[2]!=null&&e[2]>=0?s=e[2]+this.padding[1][0]+this.padding[1][1]:s=null,[e[0],n,s,e[3]])}call(e,n){return P(()=>kU(be(e),this.padding,this.dataFormat))}getConfig(){const e={padding:this.padding,dataFormat:this.dataFormat},n=super.getConfig();return Object.assign(e,n),e}}T2.className="ZeroPadding2D";Z(T2);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function qf(t,e,n,s,r,o){return P(()=>{wt(r),jI(o),os(s),n==null&&(n=[1,1]),s==null&&(s="valid"),r==null&&(r=Zs()),o==null&&(o="max"),t=vb(t,r);let i;const a=s==="same"?"same":"valid";return o==="max"?i=vf(t,e,n,a):i=ff(t,e,n,a),r==="channelsFirst"&&(i=Ee(i,[0,3,1,2])),i})}function E2(t,e,n,s,r,o){return P(()=>{wt(r),jI(o),os(s),n==null&&(n=[1,1,1]),s==null&&(s="valid"),r==null&&(r=Zs()),o==null&&(o="max"),t=jT(t,r);let i;const a=s==="same"?"same":"valid";return o==="max"?i=g$(t,e,n,a):i=WN(t,e,n,a),r==="channelsFirst"&&(i=Ee(i,[0,4,1,2,3])),i})}class D2 extends Te{constructor(e){if(e.poolSize==null&&(e.poolSize=2),super(e),typeof e.poolSize=="number")this.poolSize=[e.poolSize];else if(Array.isArray(e.poolSize)&&e.poolSize.length===1&&typeof e.poolSize[0]=="number")this.poolSize=e.poolSize;else throw new L(`poolSize for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(e.poolSize)}`);if(Lt(this.poolSize,"poolSize"),e.strides==null)this.strides=this.poolSize;else if(typeof e.strides=="number")this.strides=[e.strides];else if(Array.isArray(e.strides)&&e.strides.length===1&&typeof e.strides[0]=="number")this.strides=e.strides;else throw new L(`strides for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(e.strides)}`);Lt(this.strides,"strides"),this.padding=e.padding==null?"valid":e.padding,os(this.padding),this.inputSpec=[new Tt({ndim:3})]}computeOutputShape(e){e=Le(e);const n=Ks(e[1],this.poolSize[0],this.padding,this.strides[0]);return[e[0],n,e[2]]}call(e,n){return P(()=>{this.invokeCallHook(e,n),e=Mc(be(e),2);const s=this.poolingFunction(be(e),[this.poolSize[0],1],[this.strides[0],1],this.padding,"channelsLast");return Li(s,[2])})}getConfig(){const e={poolSize:this.poolSize,padding:this.padding,strides:this.strides},n=super.getConfig();return Object.assign(e,n),e}}class R2 extends D2{constructor(e){super(e)}poolingFunction(e,n,s,r,o){return wt(o),os(r),qf(e,n,s,r,o,"max")}}R2.className="MaxPooling1D";Z(R2);class A2 extends D2{constructor(e){super(e)}poolingFunction(e,n,s,r,o){return wt(o),os(r),qf(e,n,s,r,o,"avg")}}A2.className="AveragePooling1D";Z(A2);class _2 extends Te{constructor(e){if(e.poolSize==null&&(e.poolSize=[2,2]),super(e),this.poolSize=Array.isArray(e.poolSize)?e.poolSize:[e.poolSize,e.poolSize],e.strides==null)this.strides=this.poolSize;else if(Array.isArray(e.strides)){if(e.strides.length!==2)throw new L(`If the strides property of a 2D pooling layer is an Array, it is expected to have a length of 2, but received length ${e.strides.length}.`);this.strides=e.strides}else this.strides=[e.strides,e.strides];Lt(this.poolSize,"poolSize"),Lt(this.strides,"strides"),this.padding=e.padding==null?"valid":e.padding,this.dataFormat=e.dataFormat==null?"channelsLast":e.dataFormat,wt(this.dataFormat),os(this.padding),this.inputSpec=[new Tt({ndim:4})]}computeOutputShape(e){e=Le(e);let n=this.dataFormat==="channelsFirst"?e[2]:e[1],s=this.dataFormat==="channelsFirst"?e[3]:e[2];return n=Ks(n,this.poolSize[0],this.padding,this.strides[0]),s=Ks(s,this.poolSize[1],this.padding,this.strides[1]),this.dataFormat==="channelsFirst"?[e[0],e[1],n,s]:[e[0],n,s,e[3]]}call(e,n){return P(()=>(this.invokeCallHook(e,n),this.poolingFunction(be(e),this.poolSize,this.strides,this.padding,this.dataFormat)))}getConfig(){const e={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},n=super.getConfig();return Object.assign(e,n),e}}class O2 extends _2{constructor(e){super(e)}poolingFunction(e,n,s,r,o){return wt(o),os(r),qf(e,n,s,r,o,"max")}}O2.className="MaxPooling2D";Z(O2);class F2 extends _2{constructor(e){super(e)}poolingFunction(e,n,s,r,o){return wt(o),os(r),qf(e,n,s,r,o,"avg")}}F2.className="AveragePooling2D";Z(F2);class L2 extends Te{constructor(e){if(e.poolSize==null&&(e.poolSize=[2,2,2]),super(e),this.poolSize=Array.isArray(e.poolSize)?e.poolSize:[e.poolSize,e.poolSize,e.poolSize],e.strides==null)this.strides=this.poolSize;else if(Array.isArray(e.strides)){if(e.strides.length!==3)throw new L(`If the strides property of a 3D pooling layer is an Array, it is expected to have a length of 3, but received length ${e.strides.length}.`);this.strides=e.strides}else this.strides=[e.strides,e.strides,e.strides];Lt(this.poolSize,"poolSize"),Lt(this.strides,"strides"),this.padding=e.padding==null?"valid":e.padding,this.dataFormat=e.dataFormat==null?"channelsLast":e.dataFormat,wt(this.dataFormat),os(this.padding),this.inputSpec=[new Tt({ndim:5})]}computeOutputShape(e){e=Le(e);let n=this.dataFormat==="channelsFirst"?e[2]:e[1],s=this.dataFormat==="channelsFirst"?e[3]:e[2],r=this.dataFormat==="channelsFirst"?e[4]:e[3];return n=Ks(n,this.poolSize[0],this.padding,this.strides[0]),s=Ks(s,this.poolSize[1],this.padding,this.strides[1]),r=Ks(r,this.poolSize[2],this.padding,this.strides[2]),this.dataFormat==="channelsFirst"?[e[0],e[1],n,s,r]:[e[0],n,s,r,e[4]]}call(e,n){return P(()=>(this.invokeCallHook(e,n),this.poolingFunction(be(e),this.poolSize,this.strides,this.padding,this.dataFormat)))}getConfig(){const e={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},n=super.getConfig();return Object.assign(e,n),e}}class P2 extends L2{constructor(e){super(e)}poolingFunction(e,n,s,r,o){return wt(o),os(r),E2(e,n,s,r,o,"max")}}P2.className="MaxPooling3D";Z(P2);class z2 extends L2{constructor(e){super(e)}poolingFunction(e,n,s,r,o){return wt(o),os(r),E2(e,n,s,r,o,"avg")}}z2.className="AveragePooling3D";Z(z2);class M2 extends Te{constructor(e){super(e),this.inputSpec=[new Tt({ndim:3})]}computeOutputShape(e){return[e[0],e[2]]}call(e,n){throw new ve}}class B2 extends M2{constructor(e){super(e||{})}call(e,n){return P(()=>{const s=be(e);return dt(s,1)})}}B2.className="GlobalAveragePooling1D";Z(B2);class V2 extends M2{constructor(e){super(e||{})}call(e,n){return P(()=>{const s=be(e);return $s(s,1)})}}V2.className="GlobalMaxPooling1D";Z(V2);class W2 extends Te{constructor(e){super(e),this.dataFormat=e.dataFormat==null?"channelsLast":e.dataFormat,wt(this.dataFormat),this.inputSpec=[new Tt({ndim:4})]}computeOutputShape(e){return e=e,this.dataFormat==="channelsLast"?[e[0],e[3]]:[e[0],e[1]]}call(e,n){throw new ve}getConfig(){const e={dataFormat:this.dataFormat},n=super.getConfig();return Object.assign(e,n),e}}class U2 extends W2{call(e,n){return P(()=>{const s=be(e);return this.dataFormat==="channelsLast"?dt(s,[1,2]):dt(s,[2,3])})}}U2.className="GlobalAveragePooling2D";Z(U2);class G2 extends W2{call(e,n){return P(()=>{const s=be(e);return this.dataFormat==="channelsLast"?$s(s,[1,2]):$s(s,[2,3])})}}G2.className="GlobalMaxPooling2D";Z(G2);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class H2 extends Te{constructor(e){super(e),this.layer=e.layer}build(e){this.built=!0}get trainable(){return this.layer!=null?this.layer.trainable:!1}set trainable(e){this.layer!=null&&(this.layer.trainable=e)}get trainableWeights(){return this.layer.trainableWeights}get nonTrainableWeights(){return this.layer.nonTrainableWeights}get updates(){return this.layer._updates}get losses(){return this.layer.losses}getWeights(){return this.layer.getWeights()}setWeights(e){this.layer.setWeights(e)}getConfig(){const e={layer:{className:this.layer.getClassName(),config:this.layer.getConfig()}},n=super.getConfig();return Object.assign(e,n),e}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),this.layer!=null&&this.layer.setFastWeightInitDuringBuild(e)}static fromConfig(e,n,s={}){const r=n.layer,o=_r(r,s);delete n.layer;const i={layer:o};return Object.assign(i,n),new e(i)}}class j2 extends H2{constructor(e){super(e),this.supportsMasking=!0}build(e){if(e=Le(e),e.length<3)throw new L(`TimeDistributed layer expects an input shape >= 3D, but received input shape ${JSON.stringify(e)}`);this.inputSpec=[{shape:e}];const n=[e[0]].concat(e.slice(2));this.layer.built||(this.layer.build(n),this.layer.built=!0),super.build(e)}computeOutputShape(e){e=Le(e);const n=[e[0]].concat(e.slice(2)),s=this.layer.computeOutputShape(n),r=e[1];return[s[0],r].concat(s.slice(1))}call(e,n){return P(()=>(e=be(e),t2((i,a)=>[be(this.layer.call(i,n)),[]],e,[],!1,null,null,!1,!0)[1]))}}j2.className="TimeDistributed";Z(j2);function SU(t){Pi(K4,"BidirectionalMergeMode",t)}const CU="concat";class K2 extends H2{constructor(e){super(e);const n=e.layer.getConfig(),s={};s.className=e.layer.getClassName(),s.config=n,this.forwardLayer=_r(s),n.goBackwards=n.goBackwards!==!0;const r={};if(r.className=e.layer.getClassName(),r.config=n,this.backwardLayer=_r(r),this.forwardLayer.name="forward_"+this.forwardLayer.name,this.backwardLayer.name="backward_"+this.backwardLayer.name,this.mergeMode=e.mergeMode===void 0?CU:e.mergeMode,SU(this.mergeMode),e.weights)throw new ve("weights support is not implemented for Bidirectional layer yet.");this._stateful=e.layer.stateful,this.returnSequences=e.layer.returnSequences,this.returnState=e.layer.returnState,this.supportsMasking=!0,this._trainable=!0,this.inputSpec=e.layer.inputSpec,this.numConstants=null}get trainable(){return this._trainable}set trainable(e){this._trainable=e,this.forwardLayer!=null&&(this.forwardLayer.trainable=e),this.backwardLayer!=null&&(this.backwardLayer.trainable=e)}getWeights(){return this.forwardLayer.getWeights().concat(this.backwardLayer.getWeights())}setWeights(e){const n=e.length,s=Math.floor(n/2);this.forwardLayer.setWeights(e.slice(0,s)),this.backwardLayer.setWeights(e.slice(s))}computeOutputShape(e){let n=this.forwardLayer.computeOutputShape(e);Array.isArray(n)&&Array.isArray(n[0])||(n=[n]),n=n;let s,r,o;return this.returnState&&(o=n.slice(1)),s=n[0],s=s,this.mergeMode==="concat"?(s[s.length-1]*=2,r=[s]):this.mergeMode==null?r=[s,s.slice()]:r=[s],this.returnState?this.mergeMode==null?r.concat(o).concat(o.slice()):[s].concat(o).concat(o.slice()):yn(r)}apply(e,n){let s=n==null?null:n.initialState,r=n==null?null:n.constants;n==null&&(n={});const o=e2(e,s,r,this.numConstants);if(e=o.inputs,s=o.initialState,r=o.constants,Array.isArray(e)&&(s=e.slice(1),e=e[0]),(s==null||s.length===0)&&r==null)return super.apply(e,n);const i=[],a=[];if(s!=null){const u=s.length;if(u%2>0)throw new L("When passing `initialState` to a Bidrectional RNN, the state should be an Array containing the states of the underlying RNNs.");n.initialState=s,i.push(...s);const c=s.map(h=>new Tt({shape:h.shape}));this.forwardLayer.stateSpec=c.slice(0,u/2),this.backwardLayer.stateSpec=c.slice(u/2),a.push(...c)}if(r!=null)throw new ve("Support for constants in Bidirectional layers is not implemented yet.");const l=i[0]instanceof ur;for(const u of i)if(u instanceof ur!==l)throw new L("The initial state of a Bidirectional layer cannot be specified as a mix of symbolic and non-symbolic tensors");if(l){const u=[e].concat(i),c=this.inputSpec.concat(a),h=this.inputSpec;this.inputSpec=c;const d=super.apply(u,n);return this.inputSpec=h,d}else return super.apply(e,n)}call(e,n){return P(()=>{const s=n.initialState;let r,o;if(s==null)r=this.forwardLayer.call(e,n),o=this.backwardLayer.call(e,n);else{const l=s.slice(0,s.length/2),u=s.slice(s.length/2);r=this.forwardLayer.call(e,Object.assign(n,{initialState:l})),o=this.backwardLayer.call(e,Object.assign(n,{initialState:u}))}let i;this.returnState&&(Array.isArray(r)&&(i=r.slice(1).concat(o.slice(1))),r=r[0],o=o[0]),this.returnSequences&&(o=Es(o,1));let a;return this.mergeMode==="concat"?a=lb([r,o]):this.mergeMode==="sum"?a=Q(r,o):this.mergeMode==="ave"?a=A(.5,Q(r,o)):this.mergeMode==="mul"?a=A(r,o):this.mergeMode==null&&(a=[r,o]),this.returnState?this.mergeMode==null?a.concat(i):[a].concat(i):a})}resetStates(e){this.forwardLayer.resetStates(),this.backwardLayer.resetStates()}build(e){ci(this.forwardLayer.name,()=>{this.forwardLayer.build(e)}),ci(this.backwardLayer.name,()=>{this.backwardLayer.build(e)}),this.built=!0}computeMask(e,n){Array.isArray(n)&&(n=n[0]);let s;if(this.returnSequences?this.mergeMode==null?s=[n,n]:s=n:this.mergeMode==null?s=[null,null]:s=null,this.returnState){const o=this.forwardLayer.states.map(i=>null);return Array.isArray(s)?s.concat(o).concat(o):[s].concat(o).concat(o)}else return s}get trainableWeights(){return this.forwardLayer.trainableWeights.concat(this.backwardLayer.trainableWeights)}get nonTrainableWeights(){return this.forwardLayer.nonTrainableWeights.concat(this.backwardLayer.nonTrainableWeights)}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),this.forwardLayer!=null&&this.forwardLayer.setFastWeightInitDuringBuild(e),this.backwardLayer!=null&&this.backwardLayer.setFastWeightInitDuringBuild(e)}getConfig(){const e={mergeMode:this.mergeMode},n=super.getConfig();return Object.assign(e,n),e}static fromConfig(e,n){const s=_r(n.layer);if(delete n.layer,n.numConstants!=null)throw new ve("Deserialization of a Bidirectional layer with numConstants present is not supported yet.");const r=n;return r.layer=s,new e(r)}}K2.className="Bidirectional";Z(K2);/**
 * @license
 * Copyright 2022 CodeSmith LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class q2 extends Te{constructor(e){super(e),this.scale=e.scale,e.offset?this.offset=e.offset:this.offset=0}getConfig(){const e={scale:this.scale,offset:this.offset},n=super.getConfig();return Object.assign(e,n),e}call(e,n){return P(()=>(e=be(e),e.dtype!=="float32"&&(e=gr(e,"float32")),Q(A(e,this.scale),this.offset)))}}q2.className="Rescaling";Z(q2);/**
 * @license
 * Copyright 2022 CodeSmith LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const{resizeBilinear:NU,cropAndResize:$U}=Us;class X2 extends Te{constructor(e){super(e),this.height=e.height,this.width=e.width}centerCrop(e,n,s,r,o,i,a,l){return P(()=>{let u,c=!1;const h=n/i,d=s/a,p=(r+n)/i,f=(o+s)/a,m=[h,d,p,f],y=[];e.rank===3?(c=!0,u=ts([e])):u=e;for(let k=0;k<u.shape[0];k++)y.push(m);const g=js(y,[y.length,4]),x=La(0,y.length,1,"int32"),w=$U(u,g,x,[r,o],"nearest");return gr(c?be(Ds(w)):w,l)})}upsize(e,n,s,r){return P(()=>{const o=NU(e,[n,s]);return gr(o,r)})}call(e,n){return P(()=>{const s=be(e),r=s.dtype,o=s.shape,i=o[o.length-3],a=o[o.length-2];let l=0;i!==this.height&&(l=Math.floor((i-this.height)/2));let u=0;return a!==this.width&&(u=Math.floor((a-this.width)/2),u===0&&(u=1)),l>=0&&u>=0?this.centerCrop(s,l,u,this.height,this.width,i,a,r):this.upsize(e,this.height,this.width,r)})}getConfig(){const e={height:this.height,width:this.width},n=super.getConfig();return Object.assign(e,n),e}computeOutputShape(e){e=Le(e);const n=e.length-3,s=e.length-2;return e[n]=this.height,e[s]=this.width,e}}X2.className="CenterCrop";Z(X2);/**
 * @license
 * Copyright 2022 CodeSmith LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function IU(t,e,n,s){let r=be(t);if(r.dtype!=="int32"&&(r=gr(r,"int32")),e==="int")return r;const o=r.shape;if(r.rank===0&&(r=gn(r,-1)),e==="oneHot"&&r.shape[r.shape.length-1]!==1&&(r=gn(r,-1)),r.rank>2)throw new L(`When outputMode is not int, maximum output rank is 2 Received outputMode ${e} and input shape ${o} which would result in output rank ${r.rank}.`);const i=["multiHot","oneHot"].includes(e),a=r;let l;if(typeof s<"u"&&e==="count"?l=hy(a,s,n,i):l=hy(a,[],n,i),e!=="tfIdf")return l;if(s)return A(l,s);throw new L("When outputMode is 'tfIdf', weights must be provided.")}/**
 * @license
 * Copyright 2022 CodeSmith LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class Y2 extends Te{constructor(e){super(e),this.numTokens=e.numTokens,e.outputMode?this.outputMode=e.outputMode:this.outputMode="multiHot"}getConfig(){const e={numTokens:this.numTokens,outputMode:this.outputMode},n=super.getConfig();return Object.assign(e,n),e}computeOutputShape(e){return e=Le(e),e==null?[this.numTokens]:this.outputMode==="oneHot"&&e[e.length-1]!==1?(e.push(this.numTokens),e):(e[e.length-1]=this.numTokens,e)}call(e,n){return P(()=>{e=be(e),e.dtype!=="int32"&&(e=gr(e,"int32"));let s;if(typeof n.countWeights<"u"){if(this.outputMode!=="count")throw new L(`countWeights is not used when outputMode !== count.
              Received countWeights=${n.countWeights}`);s=be(n.countWeights)}const r=$s(e),o=cu(e),i=Un(this.numTokens,r).bufferSync().get(0),a=Vo(o,0).bufferSync().get(0);if(!(i&&a))throw new L(`Input values must be between 0 < values <= numTokens with numTokens=${this.numTokens}`);return IU(e,this.outputMode,this.numTokens,s)})}}Y2.className="CategoryEncoding";Z(Y2);/**
 * @license
 * Copyright 2022 CodeSmith LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const TU=["bilinear","nearest"],Qv=new Set(TU);class Q2 extends Te{constructor(e){if(super(e),this.height=e.height,this.width=e.width,e.interpolation)if(Qv.has(e.interpolation))this.interpolation=e.interpolation;else throw new L(`Invalid interpolation parameter: ${e.interpolation} is not implemented`);else this.interpolation="bilinear";this.cropToAspectRatio=Boolean(e.cropToAspectRatio)}computeOutputShape(e){e=Le(e);const n=e[2];return[this.height,this.width,n]}getConfig(){const e={height:this.height,width:this.width,interpolation:this.interpolation,cropToAspectRatio:this.cropToAspectRatio},n=super.getConfig();return Object.assign(e,n),e}call(e,n){return P(()=>{const s=[this.height,this.width];if(this.interpolation==="bilinear")return Us.resizeBilinear(e,s,!this.cropToAspectRatio);if(this.interpolation==="nearest")return Us.resizeNearestNeighbor(e,s,!this.cropToAspectRatio);throw new Error(`Interpolation is ${this.interpolation} but only ${[...Qv]} are supported`)})}}Q2.className="Resizing";Z(Q2);/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const EU=U();EU.registerFlag("KEEP_INTERMEDIATE_TENSORS",()=>!1,t=>{t&&console.warn("Keep intermediate tensors is ON. This will print the values of all intermediate tensors during model inference. Not all models support this mode. For details, check e2e/benchmarks/ model_config.js. This significantly impacts performance.")});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */var ls;(function(t){t[t.DT_INVALID=0]="DT_INVALID",t[t.DT_FLOAT=1]="DT_FLOAT",t[t.DT_DOUBLE=2]="DT_DOUBLE",t[t.DT_INT32=3]="DT_INT32",t[t.DT_UINT8=4]="DT_UINT8",t[t.DT_INT16=5]="DT_INT16",t[t.DT_INT8=6]="DT_INT8",t[t.DT_STRING=7]="DT_STRING",t[t.DT_COMPLEX64=8]="DT_COMPLEX64",t[t.DT_INT64=9]="DT_INT64",t[t.DT_BOOL=10]="DT_BOOL",t[t.DT_QINT8=11]="DT_QINT8",t[t.DT_QUINT8=12]="DT_QUINT8",t[t.DT_QINT32=13]="DT_QINT32",t[t.DT_BFLOAT16=14]="DT_BFLOAT16",t[t.DT_QINT16=15]="DT_QINT16",t[t.DT_QUINT16=16]="DT_QUINT16",t[t.DT_UINT16=17]="DT_UINT16",t[t.DT_COMPLEX128=18]="DT_COMPLEX128",t[t.DT_HALF=19]="DT_HALF",t[t.DT_RESOURCE=20]="DT_RESOURCE",t[t.DT_VARIANT=21]="DT_VARIANT",t[t.DT_UINT32=22]="DT_UINT32",t[t.DT_UINT64=23]="DT_UINT64",t[t.DT_FLOAT_REF=101]="DT_FLOAT_REF",t[t.DT_DOUBLE_REF=102]="DT_DOUBLE_REF",t[t.DT_INT32_REF=103]="DT_INT32_REF",t[t.DT_UINT8_REF=104]="DT_UINT8_REF",t[t.DT_INT16_REF=105]="DT_INT16_REF",t[t.DT_INT8_REF=106]="DT_INT8_REF",t[t.DT_STRING_REF=107]="DT_STRING_REF",t[t.DT_COMPLEX64_REF=108]="DT_COMPLEX64_REF",t[t.DT_INT64_REF=109]="DT_INT64_REF",t[t.DT_BOOL_REF=110]="DT_BOOL_REF",t[t.DT_QINT8_REF=111]="DT_QINT8_REF",t[t.DT_QUINT8_REF=112]="DT_QUINT8_REF",t[t.DT_QINT32_REF=113]="DT_QINT32_REF",t[t.DT_BFLOAT16_REF=114]="DT_BFLOAT16_REF",t[t.DT_QINT16_REF=115]="DT_QINT16_REF",t[t.DT_QUINT16_REF=116]="DT_QUINT16_REF",t[t.DT_UINT16_REF=117]="DT_UINT16_REF",t[t.DT_COMPLEX128_REF=118]="DT_COMPLEX128_REF",t[t.DT_HALF_REF=119]="DT_HALF_REF",t[t.DT_RESOURCE_REF=120]="DT_RESOURCE_REF",t[t.DT_VARIANT_REF=121]="DT_VARIANT_REF",t[t.DT_UINT32_REF=122]="DT_UINT32_REF",t[t.DT_UINT64_REF=123]="DT_UINT64_REF"})(ls||(ls={}));var Zv;(function(t){(function(e){e[e.LEGACY=0]="LEGACY",e[e.V1=1]="V1",e[e.V2=2]="V2"})(t.CheckpointFormatVersion||(t.CheckpointFormatVersion={}))})(Zv||(Zv={}));/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const DU={};function Z2(t){return DU[t]}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function v(t,e,n,s,r){const o=e.inputParams[t];if(o&&o.inputIndexStart!==void 0){const a=o.inputIndexStart,l=o.inputIndexEnd===0?void 0:o.inputIndexEnd===void 0?a+1:o.inputIndexEnd;if(o.type==="tensor")return an(e.inputNames[o.inputIndexStart],n,s,r);if(o.type==="tensors")return e.inputNames.slice(a,l).map(d=>an(d,n,s,r));const u=an(e.inputNames.slice(a)[0],n,s,r),c=u.dataSync();return o.type==="number"?c[0]:Ns(u.shape,c)}const i=e.attrParams[t];return i&&i.value}function an(t,e,n,s){const[r,o]=In(t);if(s!=null){const a=s.getHashTableHandleByName(r);if(a!=null)return a}const i=n.currentContextIds.find(a=>!!e[zd(r,a)]);return i!==void 0?e[zd(r,i)][o]:void 0}function RU(t,e,n){return e[zd(t,n.currentContextId)]}function $r(t,e){const[n,s,r]=In(t);return[zd(n,e&&e.currentContextId),s,r]}function zd(t,e){return e?`${t}-${e}`:t}function In(t){const e=t.split(":");if(e.length===1)return[t,0,void 0];const n=e[0],s=e.length===3?e[1]:void 0,r=Number(e[e.length-1]);return[n,r,s]}function jh(t,e,n){let s=v("pad",t,e,n);if(s==="explicit"){s=v("explicitPaddings",t,e,n);const r=[[0,0],[0,0],[0,0],[0,0]];for(let o=0;o<4;o++)r[o][0]=s[o*2],r[o][1]=s[o*2+1];return r}return s}function Ir(t){return t.kept?t:Ar(t)}/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const AU=[{tfOpName:"Add",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddV2",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddN",category:"arithmetic",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"BiasAdd",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"Sub",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"RealDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Div",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"DivNoNan",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mul",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Maximum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Minimum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Pow",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SquaredDifference",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorMod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],_U=Object.freeze(Object.defineProperty({__proto__:null,json:AU},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const OU=[{tfOpName:"Abs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan2",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Ceil",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ClipByValue",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"clipValueMin",type:"number"},{start:2,name:"clipValueMax",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Complex",category:"basic_math",inputs:[{start:0,name:"real",type:"tensor"},{start:1,name:"imag",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ComplexAbs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Elu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Exp",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Floor",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Imag",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Neg",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Real",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Prelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"alpha",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu6",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Selu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sigmoid",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Rsqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Square",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sign",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Round",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Expm1",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log1p",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Reciprocal",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Softplus",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Erf",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Prod",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axes",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool",notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LeakyRelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"alpha",name:"alpha",type:"number",defaultValue:.2},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"IsNan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],FU=Object.freeze(Object.defineProperty({__proto__:null,json:OU},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const LU=[{tfOpName:"EmptyTensorList",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"maxNumElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"LoopCond",category:"control",inputs:[{start:0,name:"pred",type:"tensor"}]},{tfOpName:"Switch",category:"control",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"pred",type:"tensor"}]},{tfOpName:"Merge",category:"control",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"Enter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"frame_name",name:"frameName",type:"string"},{tfName:"is_constant",name:"isConstant",type:"bool"}]},{tfOpName:"Exit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NextIteration",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayV3",category:"control",inputs:[{start:0,name:"size",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"dynamic_size",name:"dynamicSize",type:"bool"},{tfName:"clear_after_read",name:"clearAfterRead",type:"bool"},{tfName:"identical_element_shapes",name:"identicalElementShapes",type:"bool"},{tfName:"tensor_array_name",name:"name",type:"string"}]},{tfOpName:"TensorArrayWriteV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayReadV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayGatherV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"}]},{tfOpName:"TensorArrayScatterV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArrayConcatV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape_except0",name:"elementShapeExcept0",type:"shape",notSupported:!0}]},{tfOpName:"TensorArraySplitV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"tensor",type:"tensor"},{start:2,name:"lengths",type:"number[]"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArraySizeV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}]},{tfOpName:"TensorArrayCloseV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"}]},{tfOpName:"StatelessIf",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"If",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"StatelessWhile",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"While",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"TensorListScatter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListScatterV2",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"},{start:3,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGather",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListSetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListReserve",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListFromTensor",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListStack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"},{tfName:"num_elements",name:"numElements",type:"dtype"}]},{tfOpName:"TensorListSplit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"},{start:2,name:"lengths",type:"number[]"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListConcat",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}],attrs:[{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListConcatV2",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}],attrs:[{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPopBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPushBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListLength",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}]},{tfOpName:"TensorListResize",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"size",type:"number"}]}],PU=Object.freeze(Object.defineProperty({__proto__:null,json:LU},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const zU=[{tfOpName:"AvgPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[],notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPoolWithArgmax",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"include_batch_in_index",name:"includeBatchInIndex",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AvgPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Conv1D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"stride",name:"stride",type:"number"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NWC"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"dilation",name:"dilation",type:"number",defaultValue:1}]},{tfOpName:"Conv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"useCudnnOnGpu",name:"useCudnnOnGpu",type:"bool"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"_FusedConv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"use_cudnn_on_gpu",name:"useCudnnOnGpu",type:"bool",defaultValue:!0},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"leakyrelu_alpha",name:"leakyreluAlpha",type:"number",defaultValue:.2}]},{tfOpName:"Conv2DBackpropInput",category:"convolution",inputs:[{start:2,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:0,name:"outputShape",type:"number[]"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]",notSupported:!0}]},{tfOpName:"DepthwiseConv2d",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"DepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"FusedDepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]}]},{tfOpName:"Conv3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"Dilation2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"rates",name:"dilations",type:"number[]"},{tfName:"padding",name:"pad",type:"string"}]}],MU=Object.freeze(Object.defineProperty({__proto__:null,json:zU},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const BU=[{tfOpName:"Fill",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"},{start:1,name:"value",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"LinSpace",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"num",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"OneHot",category:"creation",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"depth",type:"number"},{start:2,name:"onValue",type:"number",defaultValue:1},{start:3,name:"offValue",type:"number",defaultValue:0}],attrs:[{tfName:"axis",name:"axis",type:"number",notSupported:!0},{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"Ones",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"OnesLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"RandomStandardNormal",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"RandomUniform",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"minval",name:"minval",type:"number",defaultValue:0},{tfName:"maxval",name:"maxval",type:"number",defaultValue:1},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"Range",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"step",type:"number",defaultValue:0}],attrs:[{tfName:"Tidx",name:"dtype",type:"dtype"}]},{tfOpName:"TruncatedNormal",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"means",name:"mean",type:"number",defaultValue:0},{tfName:"stddev",name:"stdDev",type:"number",defaultValue:1},{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"Zeros",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"ZerosLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"Multinomial",category:"creation",inputs:[{start:0,name:"logits",type:"tensor"},{start:1,name:"numSamples",type:"number"}],attrs:[{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number"},{tfName:"T",name:"dtype",type:"dtype"},{tfName:"output_dtype",name:"output_dtype",type:"dtype"}]}],VU=Object.freeze(Object.defineProperty({__proto__:null,json:BU},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const WU=[{tfOpName:"NonMaxSuppressionV2",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV3",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV4",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"T_threshold",name:"threshold",type:"dtype",notSupported:!0},{tfName:"pad_to_max_output_size",name:"padToMaxOutputSize",type:"bool"}]},{tfOpName:"NonMaxSuppressionV5",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"},{start:5,name:"softNmsSigma",type:"number"}]},{tfOpName:"Where",category:"dynamic",inputs:[{start:0,name:"condition",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ListDiff",category:"dynamic",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],UU=Object.freeze(Object.defineProperty({__proto__:null,json:WU},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const GU=[{tfOpName:"LowerBound",category:"evaluation",inputs:[{start:0,name:"sortedSequence",type:"tensor"},{start:1,name:"values",type:"tensor"}]},{tfOpName:"TopKV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"k",type:"number"}],attrs:[{tfName:"sorted",name:"sorted",type:"bool"}]},{tfOpName:"UpperBound",category:"evaluation",inputs:[{start:0,name:"sortedSequence",type:"tensor"},{start:1,name:"values",type:"tensor"}]},{tfOpName:"Unique",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"UniqueV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]}],HU=Object.freeze(Object.defineProperty({__proto__:null,json:GU},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const jU=[{tfOpName:"PlaceholderWithDefault",category:"graph",inputs:[{start:0,name:"default",type:"tensor"}],attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Placeholder",category:"graph",attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Const",category:"graph"},{tfOpName:"Identity",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IdentityN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Snapshot",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Rank",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Size",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Shape",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"ShapeN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Print",category:"graph",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"data",type:"tensors"}],attrs:[{tfName:"message",name:"message",type:"string"},{tfName:"first_n",name:"firstN",type:"number",notSupported:!0},{tfName:"summarize",name:"summarize",type:"number",defaultValue:3}]},{tfOpName:"NoOp",category:"graph",inputs:[]},{tfOpName:"StopGradient",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"FakeQuantWithMinMaxVars",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"min",name:"min",type:"number"},{tfName:"max",name:"max",type:"number"}]}],KU=Object.freeze(Object.defineProperty({__proto__:null,json:jU},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const qU=[{tfOpName:"HashTable",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"HashTableV2",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"LookupTableImport",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableImportV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFind",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFindV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableSize",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]},{tfOpName:"LookupTableSizeV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]},{tfOpName:"InitializeTable",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}]},{tfOpName:"InitializeTableV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}]}],XU=Object.freeze(Object.defineProperty({__proto__:null,json:qU},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const YU=[{tfOpName:"ResizeBilinear",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ResizeNearestNeighbor",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"CropAndResize",category:"image",inputs:[{start:0,name:"image",type:"tensor"},{start:1,name:"boxes",type:"tensor"},{start:2,name:"boxInd",type:"tensor"},{start:3,name:"cropSize",type:"number[]"}],attrs:[{tfName:"method",name:"method",type:"string"},{tfName:"extrapolation_value",name:"extrapolationValue",type:"number"}]},{tfOpName:"ImageProjectiveTransformV3",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"transforms",type:"tensor"},{start:2,name:"outputShape",type:"number[]"},{start:3,name:"fillValue",type:"number"}],attrs:[{tfName:"interpolation",name:"interpolation",type:"string"},{tfName:"fill_mode",name:"fillMode",type:"string"}]}],QU=Object.freeze(Object.defineProperty({__proto__:null,json:YU},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ZU=[{tfOpName:"Equal",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NotEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Greater",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"GreaterEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Less",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LessEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalAnd",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalNot",category:"logical",inputs:[{start:0,name:"a",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalOr",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Select",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SelectV2",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],JU=Object.freeze(Object.defineProperty({__proto__:null,json:ZU},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const eG=[{tfOpName:"_FusedMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"leakyrelu_alpha",name:"leakyreluAlpha",type:"number",defaultValue:.2},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMulV2",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Transpose",category:"matrices",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"perm",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Einsum",category:"matrices",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"equation",name:"equation",type:"string"},{tfName:"N",name:"n",type:"number",defaultValue:2},{tfName:"T",name:"dtype",type:"dtype"}]}],tG=Object.freeze(Object.defineProperty({__proto__:null,json:eG},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const nG=[{tfOpName:"EuclideanNorm",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool",defaultValue:!1}]},{tfOpName:"FusedBatchNorm",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV2",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV3",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"LRN",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"depth_radius",name:"radius",type:"number",defaultValue:5},{tfName:"bias",name:"bias",type:"number",defaultValue:1},{tfName:"alpha",name:"alpha",type:"number",defaultValue:1},{tfName:"beta",name:"beta",type:"number",defaultValue:.5}]},{tfOpName:"Softmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"LogSoftmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"SparseToDense",category:"normalization",inputs:[{start:0,name:"sparseIndices",type:"tensor"},{start:1,name:"outputShape",type:"number[]"},{start:2,name:"sparseValues",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",defaultValue:!0,notSupported:!0}]}],sG=Object.freeze(Object.defineProperty({__proto__:null,json:nG},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const rG=[{tfOpName:"Bincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}]},{tfOpName:"DenseBincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}],attrs:[{tfName:"binary_output",name:"binaryOutput",type:"bool"}]},{tfOpName:"Max",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Mean",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Min",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Sum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"All",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Any",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"ArgMax",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"ArgMin",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"Prod",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Cumprod",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}],attrs:[{tfName:"exclusive",name:"exclusive",type:"bool"},{tfName:"reverse",name:"reverse",type:"bool"}]},{tfOpName:"Cumsum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}],attrs:[{tfName:"exclusive",name:"exclusive",type:"bool"},{tfName:"reverse",name:"reverse",type:"bool"}]}],oG=Object.freeze(Object.defineProperty({__proto__:null,json:rG},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const iG=[{tfOpName:"ConcatV2",category:"slice_join",inputs:[{start:0,end:-1,name:"tensors",type:"tensors"},{start:-1,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"Concat",category:"slice_join",inputs:[{start:1,end:0,name:"tensors",type:"tensors"},{start:0,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"GatherV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"axis",type:"number",defaultValue:0}],attrs:[{tfName:"batch_dims",name:"batchDims",type:"number",defaultValue:0}]},{tfOpName:"Gather",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",notSupported:!0}]},{tfOpName:"Reverse",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"dims",type:"bool[]"}]},{tfOpName:"ReverseV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}]},{tfOpName:"Slice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"size",type:"number[]"}]},{tfOpName:"StridedSlice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"end",type:"number[]"},{start:3,name:"strides",type:"number[]"}],attrs:[{tfName:"begin_mask",name:"beginMask",type:"number",defaultValue:0},{tfName:"end_mask",name:"endMask",type:"number",defaultValue:0},{tfName:"new_axis_mask",name:"newAxisMask",type:"number",defaultValue:0},{tfName:"ellipsis_mask",name:"ellipsisMask",type:"number",defaultValue:0},{tfName:"shrink_axis_mask",name:"shrinkAxisMask",type:"number",defaultValue:0}]},{tfOpName:"Pack",category:"slice_join",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0}]},{tfOpName:"Unpack",category:"slice_join",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0},{tfName:"num",name:"num",type:"number",defaultValue:0,notSupported:!0}]},{tfOpName:"Tile",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"reps",type:"number[]"}]},{tfOpName:"Split",category:"slice_join",inputs:[{start:0,name:"axis",type:"number",defaultValue:0},{start:1,name:"x",type:"tensor"}],attrs:[{tfName:"num_split",name:"numOrSizeSplits",type:"number",defaultValue:1}]},{tfOpName:"SplitV",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"numOrSizeSplits",type:"number[]"},{start:2,name:"axis",type:"number",defaultValue:0}]},{tfOpName:"ScatterNd",category:"slice_join",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"shape",type:"number[]"}]},{tfOpName:"GatherNd",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}]},{tfOpName:"SparseToDense",category:"slice_join",inputs:[{start:0,name:"sparseIndices",type:"tensor"},{start:1,name:"outputShape",type:"number[]"},{start:2,name:"sparseValues",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",defaultValue:!1,notSupported:!0}]}],aG=Object.freeze(Object.defineProperty({__proto__:null,json:iG},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const lG=[{tfOpName:"SparseFillEmptyRows",category:"sparse",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"denseShape",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}]},{tfOpName:"SparseReshape",category:"sparse",inputs:[{start:0,name:"inputIndices",type:"tensor"},{start:1,name:"inputShape",type:"tensor"},{start:2,name:"newShape",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SparseSegmentMean",category:"sparse",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"segmentIds",type:"tensor"}]},{tfOpName:"SparseSegmentSum",category:"sparse",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"segmentIds",type:"tensor"}]}],uG=Object.freeze(Object.defineProperty({__proto__:null,json:lG},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const cG=[{tfOpName:"FFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"RFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]},{tfOpName:"IRFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]}],hG=Object.freeze(Object.defineProperty({__proto__:null,json:cG},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const dG=[{tfOpName:"StringNGrams",category:"string",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"dataSplits",type:"tensor"}],attrs:[{tfName:"separator",name:"separator",type:"string"},{tfName:"ngram_widths",name:"nGramWidths",type:"number[]"},{tfName:"left_pad",name:"leftPad",type:"string"},{tfName:"right_pad",name:"rightPad",type:"string"},{tfName:"pad_width",name:"padWidth",type:"number"},{tfName:"preserve_short_sequences",name:"preserveShortSequences",type:"bool"}],outputs:["ngrams","ngrams_splits"]},{tfOpName:"StringSplit",category:"string",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"delimiter",type:"tensor"}],attrs:[{tfName:"skip_empty",name:"skipEmpty",type:"bool"}],outputs:["indices","values","shape"]},{tfOpName:"StringToHashBucketFast",category:"string",inputs:[{start:0,name:"input",type:"tensor"}],attrs:[{tfName:"num_buckets",name:"numBuckets",type:"number"}]}],pG=Object.freeze(Object.defineProperty({__proto__:null,json:dG},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const fG=[{tfOpName:"Cast",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"SrcT",name:"sdtype",type:"dtype",notSupported:!0},{tfName:"DstT",name:"dtype",type:"dtype"}]},{tfOpName:"ExpandDims",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"MirrorPad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"mode",name:"mode",type:"string"}]},{tfOpName:"Pad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"constant_value",name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"PadV2",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"},{start:2,name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"Reshape",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}]},{tfOpName:"Squeeze",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"axis",tfDeprecatedName:"squeeze_dims",name:"axis",type:"number[]"}]},{tfOpName:"SpaceToBatchND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"paddings",type:"number[]"}]},{tfOpName:"BatchToSpaceND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"crops",type:"number[]"}]},{tfOpName:"DepthToSpace",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"block_size",name:"blockSize",type:"number"},{tfName:"data_format",name:"dataFormat",type:"string"}]},{tfOpName:"BroadcastTo",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}],attrs:[]},{tfOpName:"BroadcastArgs",category:"transformation",inputs:[{start:0,name:"s0",type:"tensor"},{start:1,name:"s1",type:"tensor"}],attrs:[]}],mG=Object.freeze(Object.defineProperty({__proto__:null,json:fG},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Jv{constructor(){const e=[_U,FU,PU,MU,VU,UU,HU,KU,XU,QU,JU,tG,sG,oG,aG,uG,hG,pG,mG],n=[].concat(...e.map(s=>s.json));this.opMappers=n.reduce((s,r)=>(s[r.tfOpName]=r,s),{})}static get Instance(){return this._instance||(this._instance=new this)}transformGraph(e,n={}){const s=e.node,r=[],o=[],i=[],a=s.reduce((m,y)=>(m[y.name]=this.mapNode(y),y.op.startsWith("Placeholder")?r.push(m[y.name]):y.op==="Const"?o.push(m[y.name]):(y.input==null||y.input.length===0)&&i.push(m[y.name]),m),{});let l=[];const u=[];let c={},h={};n!=null&&(c=this.mapSignatureEntries(n.inputs),h=this.mapSignatureEntries(n.outputs));const d=Object.keys(a);d.forEach(m=>{const y=a[m];y.inputNames.forEach((g,x)=>{const[b,,w]=$r(g),k=a[b];if(k.outputs!=null){const S=k.outputs.indexOf(w);if(S!==-1){const N=`${b}:${S}`;y.inputNames[x]=N}}y.inputs.push(k),k.children.push(y)})}),Object.keys(h).length===0?d.forEach(m=>{const y=a[m];y.children.length===0&&u.push(y)}):Object.keys(h).forEach(m=>{const[y]=$r(m),g=a[y];g!=null&&(g.signatureKey=h[m],u.push(g))}),Object.keys(c).length>0?Object.keys(c).forEach(m=>{const[y]=$r(m),g=a[y];g&&(g.signatureKey=c[m],l.push(g))}):l=r;let p={};e.library!=null&&e.library.function!=null&&(p=e.library.function.reduce((m,y)=>(m[y.signature.name]=this.mapFunction(y),m),{}));const f={nodes:a,inputs:l,outputs:u,weights:o,placeholders:r,signature:n,functions:p};return i.length>0&&(f.initNodes=i),f}mapSignatureEntries(e){return Object.keys(e||{}).reduce((n,s)=>(n[e[s].name]=s,n),{})}mapNode(e){const n=Z2(e.op)||this.opMappers[e.op]||{};e.attr==null&&(e.attr={});const s={name:e.name,op:e.op,category:n.category,inputNames:(e.input||[]).map(r=>r.startsWith("^")?r.slice(1):r),inputs:[],children:[],inputParams:{},attrParams:{},rawAttrs:e.attr,outputs:n.outputs};return n.inputs!=null&&(s.inputParams=n.inputs.reduce((r,o)=>(r[o.name]={type:o.type,inputIndexStart:o.start,inputIndexEnd:o.end},r),{})),n.attrs!=null&&(s.attrParams=n.attrs.reduce((r,o)=>{const i=o.type;let a;switch(o.type){case"string":a=$y(e.attr,o.tfName,o.defaultValue),a===void 0&&!!o.tfDeprecatedName&&(a=$y(e.attr,o.tfDeprecatedName,o.defaultValue));break;case"string[]":a=_y(e.attr,o.tfName,o.defaultValue),a===void 0&&!!o.tfDeprecatedName&&(a=_y(e.attr,o.tfDeprecatedName,o.defaultValue));break;case"number":a=Ty(e.attr,o.tfName,o.defaultValue||0),a===void 0&&!!o.tfDeprecatedName&&(a=Ty(e.attr,o.tfDeprecatedName,o.defaultValue));break;case"number[]":a=Ay(e.attr,o.tfName,o.defaultValue),a===void 0&&!!o.tfDeprecatedName&&(a=Ay(e.attr,o.tfDeprecatedName,o.defaultValue));break;case"bool":a=Iy(e.attr,o.tfName,o.defaultValue),a===void 0&&!!o.tfDeprecatedName&&(a=Iy(e.attr,o.tfDeprecatedName,o.defaultValue));break;case"bool[]":a=Fy(e.attr,o.tfName,o.defaultValue),a===void 0&&!!o.tfDeprecatedName&&(a=Fy(e.attr,o.tfDeprecatedName,o.defaultValue));break;case"shape":a=Ry(e.attr,o.tfName,o.defaultValue),a===void 0&&!!o.tfDeprecatedName&&(a=Ry(e.attr,o.tfDeprecatedName,o.defaultValue));break;case"shape[]":a=Oy(e.attr,o.tfName,o.defaultValue),a===void 0&&!!o.tfDeprecatedName&&(a=Oy(e.attr,o.tfDeprecatedName,o.defaultValue));break;case"dtype":a=Ey(e.attr,o.tfName,o.defaultValue),a===void 0&&!!o.tfDeprecatedName&&(a=Ey(e.attr,o.tfDeprecatedName,o.defaultValue));break;case"dtype[]":a=Dy(e.attr,o.tfName,o.defaultValue),a===void 0&&!!o.tfDeprecatedName&&(a=Dy(e.attr,o.tfDeprecatedName,o.defaultValue));break;case"func":a=ek(e.attr,o.tfName,o.defaultValue),a===void 0&&!!o.tfDeprecatedName&&(a=ek(e.attr,o.tfDeprecatedName,o.defaultValue));break;case"tensor":case"tensors":break;default:throw new Error(`Unsupported param type: ${o.type} for op: ${e.op}`)}return r[o.name]={value:a,type:i},r},{})),s}mapFunction(e){const n=e.nodeDef,s=[],r=[];let o={};n!=null&&(o=n.reduce((h,d)=>(h[d.name]=this.mapNode(d),d.op==="Const"&&r.push(h[d.name]),h),{}));const i=[],a=[];e.signature.inputArg.forEach(h=>{const[d]=$r(h.name),p={name:d,op:"Placeholder",inputs:[],inputNames:[],category:"graph",inputParams:{},attrParams:{dtype:{value:Ib(h.type),type:"dtype"}},children:[]};p.signatureKey=h.name,i.push(p),o[d]=p}),Object.keys(o).forEach(h=>{const d=o[h];d.inputNames.forEach((p,f)=>{const[m,,y]=$r(p),g=o[m];if(g.outputs!=null){const x=g.outputs.indexOf(y);if(x!==-1){const b=`${m}:${x}`;d.inputNames[f]=b}}d.inputs.push(g),g.children.push(d)})});const u=e.ret;e.signature.outputArg.forEach(h=>{const[d,p]=$r(u[h.name]),f=o[d];f!=null&&(f.defaultOutput=p,a.push(f))});const c=this.mapArgsToSignature(e);return{nodes:o,inputs:i,outputs:a,weights:r,placeholders:s,signature:c}}mapArgsToSignature(e){return{methodName:e.signature.name,inputs:e.signature.inputArg.reduce((n,s)=>(n[s.name]=this.mapArgToTensorInfo(s),n),{}),outputs:e.signature.outputArg.reduce((n,s)=>(n[s.name]=this.mapArgToTensorInfo(s,e.ret),n),{})}}mapArgToTensorInfo(e,n){let s=e.name;return n!=null&&(s=n[s]),{name:s,dtype:e.type}}}function gG(t){const e=U().global;if(typeof e.atob<"u")return e.atob(t);if(typeof Buffer<"u")return new Buffer(t,"base64").toString();throw new Error("Unable to decode base64 in this environment. Missing built-in atob() or Buffer()")}function J2(t,e){const n=Array.isArray(t)?String.fromCharCode.apply(null,t):gG(t);return e?n:n.toLowerCase()}function $y(t,e,n,s=!1){const r=t[e];return r!=null?J2(r.s,s):n}function Iy(t,e,n){const s=t[e];return s?s.b:n}function Ty(t,e,n){const s=t[e]||{},r=s.i!=null?s.i:s.f!=null?s.f:n;return typeof r=="number"?r:parseInt(r,10)}function Ib(t){switch(typeof t=="string"&&(t=ls[t]),t){case ls.DT_FLOAT:case ls.DT_HALF:return"float32";case ls.DT_INT32:case ls.DT_INT64:case ls.DT_INT8:case ls.DT_UINT8:return"int32";case ls.DT_BOOL:return"bool";case ls.DT_DOUBLE:return"float32";case ls.DT_STRING:return"string";default:return null}}function ek(t,e,n){const s=t[e];return s&&s.func?s.func.name:n}function Ey(t,e,n){const s=t[e];return s&&s.type?Ib(s.type):n}function Dy(t,e,n){const s=t[e];return s&&s.list&&s.list.type?s.list.type.map(r=>Ib(r)):n}function eE(t){if(!t.unknownRank)return t.dim!=null?t.dim.map(e=>typeof e.size=="number"?e.size:parseInt(e.size,10)):[]}function Ry(t,e,n){const s=t[e];return s&&s.shape?eE(s.shape):n}function Ay(t,e,n){const s=t[e];return s?((s.list.f&&s.list.f.length?s.list.f:s.list.i)||[]).map(r=>typeof r=="number"?r:parseInt(r,10)):n}function _y(t,e,n,s=!1){const r=t[e];return r&&r.list&&r.list.s?r.list.s.map(o=>J2(o,s)):n}function Oy(t,e,n){const s=t[e];return s&&s.list&&s.list.shape?s.list.shape.map(r=>eE(r)):n}function Fy(t,e,n){const s=t[e];return s&&s.list&&s.list.b?s.list.b:n}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class yG{constructor(e,n,s){this.node=e,this.tensorMap=n,this.context=s,this.inputs=[],this.attrs={},this.inputs=e.inputNames.map(r=>this.getInput(r)),e.rawAttrs!=null&&(this.attrs=Object.keys(e.rawAttrs).reduce((r,o)=>(r[o]=this.getAttr(o),r),{}))}getInput(e){return an(e,this.tensorMap,this.context)}getAttr(e,n){const s=this.node.rawAttrs[e];if(s.tensor!=null)return an(e,this.tensorMap,this.context);if(s.i!=null||s.f!=null)return Ty(this.node.rawAttrs,e,n);if(s.s!=null)return $y(this.node.rawAttrs,e,n);if(s.b!=null)return Iy(this.node.rawAttrs,e,n);if(s.shape!=null)return Ry(this.node.rawAttrs,e,n);if(s.type!=null)return Ey(this.node.rawAttrs,e,n);if(s.list!=null){if(s.list.i!=null||s.list.f!=null)return Ay(this.node.rawAttrs,e,n);if(s.list.s!=null)return _y(this.node.rawAttrs,e,n);if(s.list.shape!=null)return Oy(this.node.rawAttrs,e,n);if(s.list.b!=null)return Fy(this.node.rawAttrs,e,n);if(s.list.type!=null)return Dy(this.node.rawAttrs,e,n)}return n}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const qt=Object.freeze(Object.defineProperty({__proto__:null,abs:Nt,acos:ON,acosh:FN,add:Q,addN:iF,all:Xx,any:Id,argMax:Aa,argMin:LN,asin:PN,asinh:zN,atan:MN,atan2:BN,atanh:VN,avgPool:ff,avgPool3d:WN,basicLSTMCell:EF,batchToSpaceND:mf,batchNorm:$c,batchNorm2d:UN,batchNorm3d:GN,batchNorm4d:HN,bincount:jN,broadcastArgs:zF,broadcastTo:ba,buffer:Ce,cast:ie,ceil:KN,clipByValue:zn,clone:Ar,complex:So,concat:ft,concat1d:qN,concat2d:XN,concat3d:YN,concat4d:QN,conv1d:Qx,conv2d:No,conv2dTranspose:Jx,conv3d:ZN,conv3dTranspose:e$,cos:gf,cosh:e1,cumprod:Td,cumsum:t1,denseBincount:hy,depthToSpace:t$,depthwiseConv2d:Ic,diag:aL,dilation2d:n$,div:pe,divNoNan:s$,dot:r$,einsum:mL,elu:Tc,equal:Ys,erf:o$,euclideanNorm:l$,exp:Zn,expandDims:gn,expm1:u$,eye:s1,fill:Ya,floor:Dc,floorDiv:qx,gather:Rc,greater:Un,greaterEqual:Vo,imag:yf,isFinite:c$,isInf:h$,isNaN:d$,leakyRelu:xf,less:r1,lessEqual:Oi,linspace:WL,localResponseNormalization:p$,log:Jn,log1p:bf,logSigmoid:f$,logSoftmax:o1,logSumExp:i1,logicalAnd:xr,logicalNot:wf,logicalOr:a1,logicalXor:m$,lowerBound:r3,matMul:Ie,max:$s,maxPool:vf,maxPool3d:g$,maxPoolWithArgmax:l3,maximum:Ur,mean:dt,meshgrid:h3,min:cu,minimum:Ac,mirrorPad:y$,mod:x$,moments:kf,mul:A,multiRNNCell:y3,multinomial:b3,neg:st,notEqual:Fa,oneHot:u1,ones:An,onesLike:es,outerProduct:C3,pad:Wo,pad1d:I3,pad2d:E3,pad3d:R3,pad4d:_3,pool:b$,pow:$o,prelu:Cf,print:AN,prod:w$,raggedGather:V3,raggedRange:U3,raggedTensorToTensor:H3,rand:K3,randomGamma:iP,randomNormal:h1,randomStandardNormal:uP,randomUniform:_c,range:La,real:hu,reciprocal:T$,relu:wr,relu6:d1,reshape:O,reverse:Es,reverse1d:yP,reverse2d:bP,reverse3d:vP,reverse4d:SP,round:p1,rsqrt:f1,scalar:ge,selu:m1,separableConv2d:g1,setdiff1dAsync:EP,sigmoid:fr,sign:E$,sin:y1,sinh:x1,slice:De,slice1d:$f,slice2d:b1,slice3d:If,slice4d:du,softmax:Tf,softplus:Qa,spaceToBatchND:Sf,fft:Ef,ifft:pu,irfft:w1,rfft:Df,split:Ln,sqrt:en,square:Ve,squaredDifference:v1,squeeze:Li,stack:ts,step:Za,stridedSlice:D$,sub:le,sum:he,tan:R$,tanh:_a,tensor:js,tensor1d:bn,tensor2d:Ul,tensor3d:A$,tensor4d:XP,tensor5d:YP,tensor6d:QP,tile:vs,topk:_$,truncatedNormal:k1,unique:O$,unsortedSegmentSum:S1,unstack:Ds,upperBound:sz,variable:F$,where:vn,whereAsync:L$,zeros:kt,zerosLike:Re,op:D,OP_SCOPE_SUFFIX:bN,booleanMaskAsync:iz,transpose:Ee,norm:Ec,movingAverage:uz,scatterND:hz,searchSorted:l1,sparseToDense:fz,gatherND:gz,dropout:M$,enclosingPowerOfTwo:B$,cosineWindow:N1,inTopKAsync:wz,image:Us,linalg:q$,losses:tB,spectral:JM,fused:Tz,signal:eB,sparse:nB,string:sB},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const xG=(t,e,n,s=qt)=>{switch(t.op){case"BiasAdd":case"AddV2":case"Add":return[s.add(v("a",t,e,n),v("b",t,e,n))];case"AddN":return[s.addN(v("tensors",t,e,n))];case"FloorMod":case"Mod":return[s.mod(v("a",t,e,n),v("b",t,e,n))];case"Mul":return[s.mul(v("a",t,e,n),v("b",t,e,n))];case"RealDiv":case"Div":return[s.div(v("a",t,e,n),v("b",t,e,n))];case"DivNoNan":return[s.divNoNan(v("a",t,e,n),v("b",t,e,n))];case"FloorDiv":return[s.floorDiv(v("a",t,e,n),v("b",t,e,n))];case"Sub":return[s.sub(v("a",t,e,n),v("b",t,e,n))];case"Minimum":return[s.minimum(v("a",t,e,n),v("b",t,e,n))];case"Maximum":return[s.maximum(v("a",t,e,n),v("b",t,e,n))];case"Pow":return[s.pow(v("a",t,e,n),v("b",t,e,n))];case"SquaredDifference":return[s.squaredDifference(v("a",t,e,n),v("b",t,e,n))];default:throw TypeError(`Node type ${t.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const bG=(t,e,n,s=qt)=>{switch(t.op){case"Abs":case"ComplexAbs":return[s.abs(v("x",t,e,n))];case"Acos":return[s.acos(v("x",t,e,n))];case"Acosh":return[s.acosh(v("x",t,e,n))];case"Asin":return[s.asin(v("x",t,e,n))];case"Asinh":return[s.asinh(v("x",t,e,n))];case"Atan":return[s.atan(v("x",t,e,n))];case"Atan2":return[s.atan2(v("x",t,e,n),v("y",t,e,n))];case"Atanh":return[s.atanh(v("x",t,e,n))];case"Ceil":return[s.ceil(v("x",t,e,n))];case"Complex":return[s.complex(v("real",t,e,n),v("imag",t,e,n))];case"Cos":return[s.cos(v("x",t,e,n))];case"Cosh":return[s.cosh(v("x",t,e,n))];case"Elu":return[s.elu(v("x",t,e,n))];case"Erf":return[s.erf(v("x",t,e,n))];case"Exp":return[s.exp(v("x",t,e,n))];case"Expm1":return[s.expm1(v("x",t,e,n))];case"Floor":return[s.floor(v("x",t,e,n))];case"Log":return[s.log(v("x",t,e,n))];case"Log1p":return[s.log1p(v("x",t,e,n))];case"Imag":return[s.imag(v("x",t,e,n))];case"Neg":return[s.neg(v("x",t,e,n))];case"Reciprocal":return[s.reciprocal(v("x",t,e,n))];case"Real":return[s.real(v("x",t,e,n))];case"Relu":return[s.relu(v("x",t,e,n))];case"Round":return[s.round(v("x",t,e,n))];case"Selu":return[s.selu(v("x",t,e,n))];case"Sigmoid":return[s.sigmoid(v("x",t,e,n))];case"Sin":return[s.sin(v("x",t,e,n))];case"Sign":return[s.sign(v("x",t,e,n))];case"Sinh":return[s.sinh(v("x",t,e,n))];case"Softplus":return[s.softplus(v("x",t,e,n))];case"Sqrt":return[s.sqrt(v("x",t,e,n))];case"Square":return[s.square(v("x",t,e,n))];case"Tanh":return[s.tanh(v("x",t,e,n))];case"Tan":return[s.tan(v("x",t,e,n))];case"ClipByValue":return[s.clipByValue(v("x",t,e,n),v("clipValueMin",t,e,n),v("clipValueMax",t,e,n))];case"Relu6":return[s.relu6(v("x",t,e,n))];case"Rsqrt":return[s.rsqrt(an(t.inputNames[0],e,n))];case"Prod":return[s.prod(v("x",t,e,n),v("axes",t,e,n))];case"LeakyRelu":return[s.leakyRelu(v("x",t,e,n),v("alpha",t,e,n))];case"Prelu":return[s.prelu(v("x",t,e,n),v("alpha",t,e,n))];case"IsNan":return[s.isNaN(an(t.inputNames[0],e,n))];default:throw TypeError(`Node type ${t.op} is not implemented`)}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hs(t,e,n=""){if(!(typeof t=="number"||typeof e=="number")){C(t.length===e.length,()=>n+` Shapes ${t} and ${e} must match`);for(let s=0;s<t.length;s++){const r=t[s],o=e[s];C(r<0||o<0||r===o,()=>n+` Shapes ${t} and ${e} must match`)}}}function tk(t){return!(typeof t=="number"||t.some(e=>e<0))}function Sl(t,e,n){let s=Ly(t,n);const r=!tk(s);if(r&&e.length===0)throw new Error(`Tried to calculate elements of an empty list with non-fully-defined elementShape: ${s}`);if(r&&e.forEach(o=>{s=Ly(o.shape,s)}),!tk(s))throw new Error(`Non-fully-defined elementShape: ${s}`);return s}function Ly(t,e){if(typeof t=="number")return e;if(typeof e=="number")return t;if(t.length!==e.length)throw new Error(`Incompatible ranks during merge: ${t} vs. ${e}`);const n=[];for(let s=0;s<t.length;++s){const r=t[s],o=e[s];if(r>=0&&o>=0&&r!==o)throw new Error(`Incompatible shape during merge: ${t} vs. ${e}`);n[s]=r>=0?r:o}return n}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class wG{constructor(e,n,s,r,o,i,a){this.name=e,this.dtype=n,this.maxSize=s,this.elementShape=r,this.identicalElementShapes=o,this.dynamicSize=i,this.clearAfterRead=a,this.tensors=[],this.closed_=!1,this.idTensor=ge(0),Ft(this.idTensor)}get id(){return this.idTensor.id}get closed(){return this.closed_}clearAndClose(e){this.tensors.forEach(n=>{(e==null||!e.has(n.tensor.id))&&n.tensor.dispose()}),this.tensors=[],this.closed_=!0,this.idTensor.dispose()}size(){return this.tensors.length}read(e){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(e<0||e>=this.size())throw new Error(`Tried to read from index ${e}, but array size is: ${this.size()}`);const n=this.tensors[e];if(n.cleared)throw new Error(`TensorArray ${this.name}: Could not read index ${e} twice because it was cleared after a previous read (perhaps try setting clear_after_read = false?).`);return this.clearAfterRead&&(n.cleared=!0),n.read=!0,n.tensor}readMany(e){return e.map(n=>this.read(n))}write(e,n){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(e<0||!this.dynamicSize&&e>=this.maxSize)throw new Error(`Tried to write to index ${e}, but array is not resizeable and size is: ${this.maxSize}`);const s=this.tensors[e]||{};if(n.dtype!==this.dtype)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e},
          because the value dtype is ${n.dtype}, but TensorArray dtype is ${this.dtype}.`);if(this.size()===0&&(this.elementShape==null||this.elementShape.length===0)&&(this.elementShape=n.shape),hs(this.elementShape,n.shape,`TensorArray ${this.name}: Could not write to TensorArray index ${e}.`),s.read)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e}, because it has already been read.`);if(s.written)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e}, because it has already been written.`);s.tensor=n,Ft(n),s.written=!0,this.tensors[e]=s}writeMany(e,n){if(e.length!==n.length)throw new Error(`TensorArray ${this.name}: could not write multiple tensors,because the index size: ${e.length} is not the same as tensors size: ${n.length}.`);e.forEach((s,r)=>this.write(s,n[r]))}gather(e,n){if(!!n&&n!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but gather requested dtype ${n}`);if(e)e=e.slice(0,this.size());else{e=[];for(let r=0;r<this.size();r++)e.push(r)}if(e.length===0)return js([],[0].concat(this.elementShape));const s=this.readMany(e);return hs(this.elementShape,s[0].shape,"TensorArray shape mismatch: "),ts(s,0)}concat(e){if(!!e&&e!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but concat requested dtype ${e}`);if(this.size()===0)return js([],[0].concat(this.elementShape));const n=[];for(let r=0;r<this.size();r++)n.push(r);const s=this.readMany(n);return hs(this.elementShape,s[0].shape,`TensorArray shape mismatch: tensor array shape (${this.elementShape}) vs first tensor shape (${s[0].shape})`),ft(s,0)}scatter(e,n){if(n.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${n.dtype}`);if(e.length!==n.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${e.length} vs. ${n.shape[0]}`);const s=Math.max(...e);if(!this.dynamicSize&&s>=this.maxSize)throw new Error(`Max index must be < array size (${s}  vs. ${this.maxSize})`);this.writeMany(e,Ds(n,0))}split(e,n){if(n.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${n.dtype}`);let s=0;const r=e.map(l=>(s+=l,s));if(s!==n.shape[0])throw new Error(`Expected sum of lengths to be equal to
          tensor.shape[0], but sum of lengths is
        ${s}, and tensor's shape is: ${n.shape}`);if(!this.dynamicSize&&e.length!==this.maxSize)throw new Error(`TensorArray's size is not equal to the size of lengths (${this.maxSize} vs. ${e.length}), and the TensorArray is not marked as dynamically resizeable`);const o=s===0?0:n.size/s,i=[];P(()=>{n=O(n,[1,s,o]);for(let l=0;l<e.length;++l){const c=[0,l===0?0:r[l-1],0],h=[1,e[l],o];i[l]=O(De(n,c,h),this.elementShape)}return i});const a=[];for(let l=0;l<e.length;l++)a[l]=l;this.writeMany(a,i)}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class $i{constructor(e,n,s,r=-1){this.tensors=e,this.elementShape=n,this.elementDtype=s,e!=null&&e.forEach(o=>{if(s!==o.dtype)throw new Error(`Invalid data types; op elements ${s}, but list elements ${o.dtype}`);hs(n,o.shape,"TensorList shape mismatch: "),Ft(o)}),this.idTensor=ge(0),this.maxNumElements=r,Ft(this.idTensor)}get id(){return this.idTensor.id}copy(){return new $i([...this.tensors],this.elementShape,this.elementDtype)}clearAndClose(e){this.tensors.forEach(n=>{(e==null||!e.has(n.id))&&n.dispose()}),this.tensors.length=0,this.idTensor.dispose()}size(){return this.tensors.length}stack(e,n,s=-1){if(n!==this.elementDtype)throw new Error(`Invalid data types; op elements ${n}, but list elements ${this.elementDtype}`);if(s!==-1&&this.tensors.length!==s)throw new Error(`Operation expected a list with ${s} elements but got a list with ${this.tensors.length} elements.`);hs(e,this.elementShape,"TensorList shape mismatch: ");const r=Sl(this.elementShape,this.tensors,e);return P(()=>{const o=this.tensors.map(i=>O(i,r));return ts(o,0)})}popBack(e,n){if(n!==this.elementDtype)throw new Error(`Invalid data types; op elements ${n}, but list elements ${this.elementDtype}`);if(this.size()===0)throw new Error("Trying to pop from an empty list.");const s=Sl(this.elementShape,this.tensors,e),r=this.tensors.pop();return r.kept=!1,hs(r.shape,e,"TensorList shape mismatch: "),O(r,s)}pushBack(e){if(e.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${e.dtype}, but list elements ${this.elementDtype}`);if(hs(e.shape,this.elementShape,"TensorList shape mismatch: "),this.maxNumElements===this.size())throw new Error("Trying to push element into a full list.");Ft(e),this.tensors.push(e)}resize(e){if(e<0)throw new Error(`TensorListResize expects size to be non-negative. Got: ${e}`);if(this.maxNumElements!==-1&&e>this.maxNumElements)throw new Error(`TensorListResize input size ${e} is greater maxNumElement ${this.maxNumElements}.`);const n=new $i([],this.elementShape,this.elementDtype,this.maxNumElements);n.tensors.length=e;for(let s=0;s<Math.min(this.tensors.length,e);++s)n.tensors[s]=this.tensors[s];return n}getItem(e,n,s){if(s!==this.elementDtype)throw new Error(`Invalid data types; op elements ${s}, but list elements ${this.elementDtype}`);if(e<0||e>this.tensors.length)throw new Error(`Trying to access element ${e} in a list with ${this.tensors.length} elements.`);if(this.tensors[e]==null)throw new Error(`element at index ${e} is null.`);hs(this.tensors[e].shape,n,"TensorList shape mismatch: ");const r=Sl(this.elementShape,this.tensors,n);return O(this.tensors[e],r)}setItem(e,n){if(n.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${n.dtype}, but list elements ${this.elementDtype}`);if(e<0||this.maxNumElements!==-1&&e>=this.maxNumElements)throw new Error(`Trying to set element ${e} in a list with max ${this.maxNumElements} elements.`);hs(this.elementShape,n.shape,"TensorList shape mismatch: "),Ft(n),this.tensors[e]!=null&&(this.tensors[e].kept=!1),this.tensors[e]=n}gather(e,n,s){if(n!==this.elementDtype)throw new Error(`Invalid data types; op elements ${n}, but list elements ${this.elementDtype}`);hs(this.elementShape,s,"TensorList shape mismatch: "),e=e.slice(0,this.size());const r=Sl(this.elementShape,this.tensors,s);return e.length===0?js([],[0].concat(r)):P(()=>{const o=e.map(i=>O(this.tensors[i],r));return ts(o,0)})}concat(e,n){if(!!e&&e!==this.elementDtype)throw new Error(`TensorList dtype is ${this.elementDtype} but concat requested dtype ${e}`);hs(this.elementShape,n,"TensorList shape mismatch: ");const s=Sl(this.elementShape,this.tensors,n);return this.size()===0?js([],[0].concat(s)):P(()=>{const r=this.tensors.map(o=>O(o,s));return ft(r,0)})}}function vG(t,e,n){const s=t.dtype;if(t.shape.length<1)throw new Error(`Tensor must be at least a vector, but saw shape: ${t.shape}`);if(t.dtype!==n)throw new Error(`Invalid data types; op elements ${t.dtype}, but list elements ${n}`);const r=t.shape.slice(1);hs(r,e,"TensorList shape mismatch: ");const o=Ds(t);return new $i(o,e,s)}function kG(t,e,n,s){return new $i([],t,e,s)}function SG(t,e,n,s){if(e.length!==t.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${e.length} vs. ${t.shape[0]}`);const r=Math.max(...e);if(s!=null&&s!==-1&&r>=s)throw new Error(`Max index must be < array size (${r}  vs. ${s})`);const o=new $i([],n,t.dtype,s),i=Ds(t,0);return e.forEach((a,l)=>{o.setItem(a,i[l])}),o}function CG(t,e,n){let s=0;const r=e.map(c=>(s+=c,s));if(s!==t.shape[0])throw new Error(`Expected sum of lengths to be equal to
          tensor.shape[0], but sum of lengths is
        ${s}, and tensor's shape is: ${t.shape}`);const o=t.shape.slice(1),i=Ly(o,n),a=s===0?0:t.size/s,l=P(()=>{const c=[];t=O(t,[1,s,a]);for(let h=0;h<e.length;++h){const p=[0,h===0?0:r[h-1],0],f=[1,e[h],a];c[h]=O(De(t,p,f),i)}return t.dispose(),c}),u=new $i([],n,t.dtype,e.length);for(let c=0;c<l.length;c++)u.setItem(c,l[c]);return u}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const NG=async(t,e,n)=>{switch(t.op){case"If":case"StatelessIf":{const s=v("thenBranch",t,e,n),r=v("elseBranch",t,e,n),o=v("cond",t,e,n),i=v("args",t,e,n);return(await o.data())[0]?n.functionMap[s].executeFunctionAsync(i,n.tensorArrayMap,n.tensorListMap):n.functionMap[r].executeFunctionAsync(i,n.tensorArrayMap,n.tensorListMap)}case"While":case"StatelessWhile":{const s=v("body",t,e,n),r=v("cond",t,e,n),o=v("args",t,e,n),i=await n.functionMap[r].executeFunctionAsync(o,n.tensorArrayMap,n.tensorListMap),a=o.map(c=>c.id);let l=await i[0].data();i.forEach(c=>{!c.kept&&a.indexOf(c.id)===-1&&c.dispose()});let u=o;for(;l[0];){const c=u;u=await n.functionMap[s].executeFunctionAsync(u,n.tensorArrayMap,n.tensorListMap);const h=u.map(p=>p.id);c.forEach(p=>{!p.kept&&a.indexOf(p.id)===-1&&h.indexOf(p.id)===-1&&p.dispose()});const d=await n.functionMap[r].executeFunctionAsync(u,n.tensorArrayMap,n.tensorListMap);l=await d[0].data(),d.forEach(p=>{!p.kept&&a.indexOf(p.id)===-1&&h.indexOf(p.id)===-1&&p.dispose()})}return u}case"LoopCond":{const s=v("pred",t,e,n);return[Ir(s)]}case"Switch":{const s=v("pred",t,e,n);let r=v("data",t,e,n);return r.kept||(r=Ir(r)),(await s.data())[0]?[void 0,r]:[r,void 0]}case"Merge":{const s=t.inputNames.find(r=>an(r,e,n)!==void 0);if(s){const r=an(s,e,n);return[Ir(r)]}return}case"Enter":{const s=v("frameName",t,e,n),r=v("tensor",t,e,n);return n.enterFrame(s),[Ir(r)]}case"Exit":{const s=v("tensor",t,e,n);return n.exitFrame(),[Ir(s)]}case"NextIteration":{const s=v("tensor",t,e,n);return n.nextIteration(),[Ir(s)]}case"TensorArrayV3":{const s=v("size",t,e,n),r=v("dtype",t,e,n),o=v("elementShape",t,e,n),i=v("dynamicSize",t,e,n),a=v("clearAfterRead",t,e,n),l=v("identicalElementShapes",t,e,n),u=v("name",t,e,n),c=new wG(u,r,s,o,l,i,a);return n.addTensorArray(c),[c.idTensor,ge(1)]}case"TensorArrayWriteV3":{const s=v("tensorArrayId",t,e,n),r=v("index",t,e,n),o=v("tensor",t,e,n),i=n.getTensorArray(s.id);return i.write(r,o),[i.idTensor]}case"TensorArrayReadV3":{const s=v("tensorArrayId",t,e,n),r=v("index",t,e,n);return[n.getTensorArray(s.id).read(r)]}case"TensorArrayGatherV3":{const s=v("tensorArrayId",t,e,n),r=v("indices",t,e,n),o=v("dtype",t,e,n);return[n.getTensorArray(s.id).gather(r,o)]}case"TensorArrayScatterV3":{const s=v("tensorArrayId",t,e,n),r=v("indices",t,e,n),o=v("tensor",t,e,n),i=n.getTensorArray(s.id);return i.scatter(r,o),[i.idTensor]}case"TensorArrayConcatV3":{const s=v("tensorArrayId",t,e,n),r=n.getTensorArray(s.id),o=v("dtype",t,e,n);return[r.concat(o)]}case"TensorArraySplitV3":{const s=v("tensorArrayId",t,e,n),r=v("tensor",t,e,n),o=v("lengths",t,e,n),i=n.getTensorArray(s.id);return i.split(o,r),[i.idTensor]}case"TensorArraySizeV3":{const s=v("tensorArrayId",t,e,n),r=n.getTensorArray(s.id);return[ge(r.size(),"int32")]}case"TensorArrayCloseV3":{const s=v("tensorArrayId",t,e,n),r=n.getTensorArray(s.id);return r.clearAndClose(),[r.idTensor]}case"TensorListSetItem":{const s=v("tensorListId",t,e,n),r=v("index",t,e,n),o=v("tensor",t,e,n),i=n.getTensorList(s.id);return i.setItem(r,o),[i.idTensor]}case"TensorListGetItem":{const s=v("tensorListId",t,e,n),r=v("index",t,e,n),o=v("elementShape",t,e,n),i=v("elementDType",t,e,n);return[n.getTensorList(s.id).getItem(r,o,i)]}case"TensorListScatterV2":case"TensorListScatter":{const s=v("indices",t,e,n),r=v("tensor",t,e,n),o=v("elementShape",t,e,n),i=v("numElements",t,e,n),a=SG(r,s,o,i);return n.addTensorList(a),[a.idTensor]}case"TensorListReserve":case"EmptyTensorList":{const s=v("elementShape",t,e,n),r=v("elementDType",t,e,n);let o;t.op==="TensorListReserve"?o="numElements":o="maxNumElements";const i=v(o,t,e,n),a=t.op==="TensorListReserve"?-1:i,l=kG(s,r,i,a);return n.addTensorList(l),[l.idTensor]}case"TensorListGather":{const s=v("tensorListId",t,e,n),r=v("indices",t,e,n),o=v("elementShape",t,e,n),i=v("elementDType",t,e,n);return[n.getTensorList(s.id).gather(r,i,o)]}case"TensorListStack":{const s=v("tensorListId",t,e,n),r=v("elementShape",t,e,n),o=v("elementDType",t,e,n),i=v("numElements",t,e,n);return[n.getTensorList(s.id).stack(r,o,i)]}case"TensorListFromTensor":{const s=v("tensor",t,e,n),r=v("elementShape",t,e,n),o=v("elementDType",t,e,n),i=vG(s,r,o);return n.addTensorList(i),[i.idTensor]}case"TensorListConcat":case"TensorListConcatV2":{const s=v("tensorListId",t,e,n),r=n.getTensorList(s.id),o=v("dtype",t,e,n),i=v("elementShape",t,e,n);return[r.concat(o,i)]}case"TensorListPushBack":{const s=v("tensorListId",t,e,n),r=v("tensor",t,e,n),o=n.getTensorList(s.id);return o.pushBack(r),[o.idTensor]}case"TensorListPopBack":{const s=v("tensorListId",t,e,n),r=v("elementShape",t,e,n),o=v("elementDType",t,e,n);return[n.getTensorList(s.id).popBack(r,o)]}case"TensorListSplit":{const s=v("tensor",t,e,n),r=v("elementShape",t,e,n),o=v("lengths",t,e,n),i=CG(s,o,r);return n.addTensorList(i),[i.idTensor]}case"TensorListLength":{const s=v("tensorListId",t,e,n),r=n.getTensorList(s.id);return[ge(r.size(),"int32")]}case"TensorListResize":{const s=v("tensorListId",t,e,n),r=v("size",t,e,n),i=n.getTensorList(s.id).resize(r);return n.addTensorList(i),[i.idTensor]}default:throw TypeError(`Node type ${t.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nk(t,e,n){const[s,r]=v("fusedOps",t,e,n),o=s==="biasadd",i=!o,a=r==="prelu",l=s==="fusedbatchnorm",u=v("numArgs",t,e,n);if(o){if(a&&u!==2)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!a&&o&&u!==1)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd must have one extra argument: bias.")}if(l)throw new Error("FusedConv2d and DepthwiseConv2d with FusedBatchNorm is not supported");const c=v("strides",t,e,n),h=jh(t,e,n),d=v("dataFormat",t,e,n).toUpperCase(),p=v("dilations",t,e,n);let[f,m]=v("args",t,e,n);i&&(m=f,f=void 0);const y=v("leakyreluAlpha",t,e,n);return{stride:c,pad:h,dataFormat:d,dilations:p,biasArg:f,preluArg:m,activationFunc:r,leakyreluAlpha:y}}const $G=(t,e,n,s=qt)=>{switch(t.op){case"Conv1D":{const r=v("stride",t,e,n),o=v("pad",t,e,n),i=v("dataFormat",t,e,n).toUpperCase(),a=v("dilation",t,e,n);return[s.conv1d(v("x",t,e,n),v("filter",t,e,n),r,o,i,a)]}case"Conv2D":{const r=v("strides",t,e,n),o=jh(t,e,n),i=v("dataFormat",t,e,n).toUpperCase(),a=v("dilations",t,e,n);return[s.conv2d(v("x",t,e,n),v("filter",t,e,n),[r[1],r[2]],o,i,[a[1],a[2]])]}case"_FusedConv2D":{const{stride:r,pad:o,dataFormat:i,dilations:a,biasArg:l,preluArg:u,activationFunc:c,leakyreluAlpha:h}=nk(t,e,n);return[s.fused.conv2d({x:v("x",t,e,n),filter:v("filter",t,e,n),strides:[r[1],r[2]],pad:o,dataFormat:i,dilations:[a[1],a[2]],bias:l,activation:c,preluActivationWeights:u,leakyreluAlpha:h})]}case"FusedDepthwiseConv2dNative":{const{stride:r,pad:o,dataFormat:i,dilations:a,biasArg:l,preluArg:u,activationFunc:c,leakyreluAlpha:h}=nk(t,e,n);return[s.fused.depthwiseConv2d({x:v("x",t,e,n),filter:v("filter",t,e,n),strides:[r[1],r[2]],pad:o,dataFormat:i,dilations:[a[1],a[2]],bias:l,activation:c,preluActivationWeights:u,leakyreluAlpha:h})]}case"Conv2DBackpropInput":case"Conv2dTranspose":{const r=v("outputShape",t,e,n),o=v("strides",t,e,n),i=jh(t,e,n);return[s.conv2dTranspose(v("x",t,e,n),v("filter",t,e,n),r,[o[1],o[2]],i)]}case"DepthwiseConv2dNative":case"DepthwiseConv2d":{const r=v("strides",t,e,n),o=jh(t,e,n),i=v("dilations",t,e,n),a=v("dataFormat",t,e,n).toUpperCase();return[s.depthwiseConv2d(v("input",t,e,n),v("filter",t,e,n),[r[1],r[2]],o,a,[i[1],i[2]])]}case"Conv3D":{const r=v("strides",t,e,n),o=v("pad",t,e,n),i=v("dataFormat",t,e,n).toUpperCase(),a=v("dilations",t,e,n);return[s.conv3d(v("x",t,e,n),v("filter",t,e,n),[r[1],r[2],r[3]],o,i,[a[1],a[2],a[3]])]}case"AvgPool":{const r=v("strides",t,e,n),o=v("pad",t,e,n),i=v("kernelSize",t,e,n);return[s.avgPool(v("x",t,e,n),[i[1],i[2]],[r[1],r[2]],o)]}case"MaxPool":{const r=v("strides",t,e,n),o=v("pad",t,e,n),i=v("kernelSize",t,e,n);return[s.maxPool(v("x",t,e,n),[i[1],i[2]],[r[1],r[2]],o)]}case"MaxPoolWithArgmax":{const r=v("strides",t,e,n),o=v("pad",t,e,n),i=v("kernelSize",t,e,n),a=v("includeBatchInIndex",t,e,n),{result:l,indexes:u}=s.maxPoolWithArgmax(v("x",t,e,n),[i[1],i[2]],[r[1],r[2]],o,a);return[l,u]}case"AvgPool3D":{const r=v("strides",t,e,n),o=v("pad",t,e,n),i=v("kernelSize",t,e,n);return[s.avgPool3d(v("x",t,e,n),[i[1],i[2],i[3]],[r[1],r[2],r[3]],o)]}case"MaxPool3D":{const r=v("strides",t,e,n),o=v("pad",t,e,n),i=v("kernelSize",t,e,n);return[s.maxPool3d(v("x",t,e,n),[i[1],i[2],i[3]],[r[1],r[2],r[3]],o)]}case"Dilation2D":{const r=v("strides",t,e,n),o=v("pad",t,e,n),i=v("dilations",t,e,n),a=r[1],l=r[2],u=i[1],c=i[2];return[s.dilation2d(v("x",t,e,n),v("filter",t,e,n),[a,l],o,[u,c],"NHWC")]}default:throw TypeError(`Node type ${t.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const IG=(t,e,n,s=qt)=>{switch(t.op){case"Fill":{const r=v("shape",t,e,n),o=v("dtype",t,e,n),i=v("value",t,e,n);return[s.fill(r,i,o)]}case"LinSpace":{const r=v("start",t,e,n),o=v("stop",t,e,n),i=v("num",t,e,n);return[s.linspace(r,o,i)]}case"Multinomial":{const r=v("logits",t,e,n),o=v("numSamples",t,e,n),i=v("seed",t,e,n);return[s.multinomial(r,o,i)]}case"OneHot":{const r=v("indices",t,e,n),o=v("depth",t,e,n),i=v("onValue",t,e,n),a=v("offValue",t,e,n),l=v("dtype",t,e,n);return[s.oneHot(r,o,i,a,l)]}case"Ones":return[s.ones(v("shape",t,e,n),v("dtype",t,e,n))];case"OnesLike":return[s.onesLike(v("x",t,e,n))];case"RandomStandardNormal":return[s.randomStandardNormal(v("shape",t,e,n),v("dtype",t,e,n),v("seed",t,e,n))];case"RandomUniform":return[s.randomUniform(v("shape",t,e,n),v("minval",t,e,n),v("maxval",t,e,n),v("dtype",t,e,n))];case"Range":{const r=v("start",t,e,n),o=v("stop",t,e,n),i=v("step",t,e,n);return[s.range(r,o,i,v("dtype",t,e,n))]}case"TruncatedNormal":{const r=v("shape",t,e,n),o=v("mean",t,e,n),i=v("stdDev",t,e,n),a=v("seed",t,e,n);return[s.truncatedNormal(r,o,i,v("dtype",t,e,n),a)]}case"Zeros":return[s.zeros(v("shape",t,e,n),v("dtype",t,e,n))];case"ZerosLike":return[s.zerosLike(v("x",t,e,n))];default:throw TypeError(`Node type ${t.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Um(t,e,n){const s=v("boxes",t,e,n),r=v("scores",t,e,n),o=v("maxOutputSize",t,e,n),i=v("iouThreshold",t,e,n),a=v("scoreThreshold",t,e,n),l=v("softNmsSigma",t,e,n);return{boxes:s,scores:r,maxOutputSize:o,iouThreshold:i,scoreThreshold:a,softNmsSigma:l}}const TG=async(t,e,n,s,r=qt)=>{switch(t.op){case"NonMaxSuppressionV5":{const{boxes:o,scores:i,maxOutputSize:a,iouThreshold:l,scoreThreshold:u,softNmsSigma:c}=Um(t,e,n),h=await r.image.nonMaxSuppressionWithScoreAsync(o,i,a,l,u,c);return[h.selectedIndices,h.selectedScores]}case"NonMaxSuppressionV4":{const{boxes:o,scores:i,maxOutputSize:a,iouThreshold:l,scoreThreshold:u}=Um(t,e,n),c=v("padToMaxOutputSize",t,e,n),h=await r.image.nonMaxSuppressionPaddedAsync(o,i,a,l,u,c);return[h.selectedIndices,h.validOutputs]}case"NonMaxSuppressionV3":case"NonMaxSuppressionV2":{const{boxes:o,scores:i,maxOutputSize:a,iouThreshold:l,scoreThreshold:u}=Um(t,e,n);return[await r.image.nonMaxSuppressionAsync(o,i,a,l,u)]}case"Where":{const o=r.cast(v("condition",t,e,n),"bool"),i=[await r.whereAsync(o)];return o.dispose(),i}case"ListDiff":return r.setdiff1dAsync(v("x",t,e,n),v("y",t,e,n));default:throw TypeError(`Node type ${t.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const EG=(t,e,n,s=qt)=>{switch(t.op){case"LowerBound":{const r=v("sortedSequence",t,e,n),o=v("values",t,e,n);return[s.lowerBound(r,o)]}case"TopKV2":{const r=v("x",t,e,n),o=v("k",t,e,n),i=v("sorted",t,e,n),a=s.topk(r,o,i);return[a.values,a.indices]}case"UpperBound":{const r=v("sortedSequence",t,e,n),o=v("values",t,e,n);return[s.upperBound(r,o)]}case"Unique":{const r=v("x",t,e,n),o=s.unique(r);return[o.values,o.indices]}case"UniqueV2":{const r=v("x",t,e,n),o=v("axis",t,e,n),i=s.unique(r,o);return[i.values,i.indices]}default:throw TypeError(`Node type ${t.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const DG=(t,e,n,s=qt)=>{switch(t.op){case"Const":return e[t.name];case"PlaceholderWithDefault":const r=v("default",t,e,n);return[an(t.name,e,n)||r];case"Placeholder":return[an(t.name,e,n)];case"Identity":case"StopGradient":case"FakeQuantWithMinMaxVars":{const c=v("x",t,e,n);return[Ir(c)]}case"IdentityN":return v("x",t,e,n).map(c=>Ir(c));case"Snapshot":const o=v("x",t,e,n);return[Ir(o)];case"Shape":return[s.tensor1d(v("x",t,e,n).shape,"int32")];case"ShapeN":return v("x",t,e,n).map(c=>s.tensor1d(c.shape));case"Size":return[s.scalar(v("x",t,e,n).size,"int32")];case"Rank":return[s.scalar(v("x",t,e,n).rank,"int32")];case"NoOp":return[s.scalar(1)];case"Print":const i=v("x",t,e,n),a=v("data",t,e,n),l=v("message",t,e,n),u=v("summarize",t,e,n);console.warn("The graph has a tf.print() operation,usually used for debugging, which slows down performance."),console.log(l);for(let c=0;c<a.length;c++)console.log(Array.prototype.slice.call(a[c].dataSync()).slice(0,u));return[i];default:throw TypeError(`Node type ${t.op} is not implemented`)}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class RG{constructor(e,n){this.keyDType=e,this.valueDType=n,this.handle=ge(0),this.tensorMap=new Map,Ft(this.handle)}get id(){return this.handle.id}clearAndClose(){this.tensorMap.forEach(e=>e.dispose()),this.tensorMap.clear(),this.handle.dispose()}size(){return this.tensorMap.size}tensorSize(){return ge(this.size(),"int32")}async import(e,n){this.checkKeyAndValueTensor(e,n);const s=await e.data();return this.tensorMap.forEach(r=>r.dispose()),this.tensorMap.clear(),P(()=>{const r=Ds(n),o=s.length,i=r.length;C(o===i,()=>`The number of elements doesn't match, keys has ${o} elements, the values has ${i} elements.`);for(let a=0;a<o;a++){const l=s[a],u=r[a];Ft(u),this.tensorMap.set(l,u)}return this.handle})}async find(e,n){this.checkKeyAndValueTensor(e,n);const s=await e.data();return P(()=>{const r=[];for(let o=0;o<s.length;o++){const i=s[o],a=this.findWithDefault(i,n);r.push(a)}return ts(r)})}findWithDefault(e,n){const s=this.tensorMap.get(e);return s!=null?s:n}checkKeyAndValueTensor(e,n){if(e.dtype!==this.keyDType)throw new Error(`Expect key dtype ${this.keyDType}, but got ${e.dtype}`);if(n.dtype!==this.valueDType)throw new Error(`Expect value dtype ${this.valueDType}, but got ${n.dtype}`)}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const AG=async(t,e,n,s)=>{switch(t.op){case"HashTable":case"HashTableV2":{const r=s.getHashTableHandleByName(t.name);if(r!=null)return[r];{const o=v("keyDType",t,e,n),i=v("valueDType",t,e,n),a=new RG(o,i);return s.addHashTable(t.name,a),[a.handle]}}case"InitializeTable":case"InitializeTableV2":case"LookupTableImport":case"LookupTableImportV2":{const r=v("tableHandle",t,e,n,s),o=v("keys",t,e,n),i=v("values",t,e,n);return[await s.getHashTableById(r.id).import(o,i)]}case"LookupTableFind":case"LookupTableFindV2":{const r=v("tableHandle",t,e,n,s),o=v("keys",t,e,n),i=v("defaultValue",t,e,n);return[await s.getHashTableById(r.id).find(o,i)]}case"LookupTableSize":case"LookupTableSizeV2":{const r=v("tableHandle",t,e,n,s);return[s.getHashTableById(r.id).tensorSize()]}default:throw TypeError(`Node type ${t.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const _G=(t,e,n,s=qt)=>{switch(t.op){case"ResizeBilinear":{const r=v("images",t,e,n),o=v("size",t,e,n),i=v("alignCorners",t,e,n),a=v("halfPixelCenters",t,e,n);return[s.image.resizeBilinear(r,[o[0],o[1]],i,a)]}case"ResizeNearestNeighbor":{const r=v("images",t,e,n),o=v("size",t,e,n),i=v("alignCorners",t,e,n),a=v("halfPixelCenters",t,e,n);return[s.image.resizeNearestNeighbor(r,[o[0],o[1]],i,a)]}case"CropAndResize":{const r=v("image",t,e,n),o=v("boxes",t,e,n),i=v("boxInd",t,e,n),a=v("cropSize",t,e,n),l=v("method",t,e,n),u=v("extrapolationValue",t,e,n);return[s.image.cropAndResize(r,o,i,a,l,u)]}case"ImageProjectiveTransformV3":{const r=v("images",t,e,n),o=v("transforms",t,e,n),i=v("outputShape",t,e,n),a=v("fillValue",t,e,n),l=v("interpolation",t,e,n),u=v("fillMode",t,e,n);return[s.image.transform(r,o,l.toLowerCase(),u.toLowerCase(),a,i)]}default:throw TypeError(`Node type ${t.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const OG=(t,e,n,s=qt)=>{switch(t.op){case"Equal":return[s.equal(v("a",t,e,n),v("b",t,e,n))];case"NotEqual":return[s.notEqual(v("a",t,e,n),v("b",t,e,n))];case"Greater":return[s.greater(v("a",t,e,n),v("b",t,e,n))];case"GreaterEqual":return[s.greaterEqual(v("a",t,e,n),v("b",t,e,n))];case"Less":return[s.less(v("a",t,e,n),v("b",t,e,n))];case"LessEqual":return[s.lessEqual(v("a",t,e,n),v("b",t,e,n))];case"LogicalAnd":return[s.logicalAnd(v("a",t,e,n),v("b",t,e,n))];case"LogicalNot":return[s.logicalNot(v("a",t,e,n))];case"LogicalOr":return[s.logicalOr(v("a",t,e,n),v("b",t,e,n))];case"Select":case"SelectV2":return[s.where(v("condition",t,e,n),v("a",t,e,n),v("b",t,e,n))];default:throw TypeError(`Node type ${t.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const FG=(t,e,n,s=qt)=>{switch(t.op){case"BatchMatMul":case"BatchMatMulV2":case"MatMul":return[s.matMul(v("a",t,e,n),v("b",t,e,n),v("transposeA",t,e,n),v("transposeB",t,e,n))];case"Einsum":return[s.einsum(v("equation",t,e,n),...v("tensors",t,e,n))];case"Transpose":return[s.transpose(v("x",t,e,n),v("perm",t,e,n))];case"_FusedMatMul":const[r,o]=v("fusedOps",t,e,n),i=r==="biasadd",a=o==="prelu",l=v("numArgs",t,e,n),u=v("leakyreluAlpha",t,e,n);if(i){if(a&&l!==2)throw new Error("Fused MatMul with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!a&&l!==1)throw new Error("Fused MatMul with BiasAdd must have one extra argument: bias.")}const[c,h]=v("args",t,e,n);return[s.fused.matMul({a:v("a",t,e,n),b:v("b",t,e,n),transposeA:v("transposeA",t,e,n),transposeB:v("transposeB",t,e,n),bias:c,activation:o,preluActivationWeights:h,leakyreluAlpha:u})];default:throw TypeError(`Node type ${t.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const LG=(t,e,n,s=qt)=>{switch(t.op){case"EuclideanNorm":return[s.euclideanNorm(v("x",t,e,n),v("axis",t,e,n),v("keepDims",t,e,n))];case"FusedBatchNorm":case"FusedBatchNormV2":return[s.batchNorm(v("x",t,e,n),v("mean",t,e,n),v("variance",t,e,n),v("offset",t,e,n),v("scale",t,e,n),v("epsilon",t,e,n))];case"FusedBatchNormV3":return[s.batchNorm(v("x",t,e,n),v("mean",t,e,n),v("variance",t,e,n),v("offset",t,e,n),v("scale",t,e,n),v("epsilon",t,e,n))];case"LRN":return[s.localResponseNormalization(v("x",t,e,n),v("radius",t,e,n),v("bias",t,e,n),v("alpha",t,e,n),v("beta",t,e,n))];case"Softmax":return[s.softmax(v("x",t,e,n))];case"LogSoftmax":return[s.logSoftmax(v("x",t,e,n))];case"SparseToDense":return[s.sparseToDense(v("sparseIndices",t,e,n),v("outputShape",t,e,n),v("sparseValues",t,e,n),v("defaultValue",t,e,n))];default:throw TypeError(`Node type ${t.op} is not implemented`)}};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const PG=(t,e,n,s=qt)=>{switch(t.op){case"RaggedGather":{const{outputNestedSplits:r,outputDenseValues:o}=s.raggedGather(v("paramsNestedSplits",t,e,n),v("paramsDenseValues",t,e,n),v("indices",t,e,n),v("outputRaggedRank",t,e,n));return r.concat(o)}case"RaggedRange":{const{rtNestedSplits:r,rtDenseValues:o}=s.raggedRange(v("starts",t,e,n),v("limits",t,e,n),v("splits",t,e,n));return[r,o]}case"RaggedTensorToTensor":return[s.raggedTensorToTensor(v("shape",t,e,n),v("values",t,e,n),v("defaultValue",t,e,n),v("rowPartitionTensors",t,e,n),v("rowPartitionTypes",t,e,n))];default:throw TypeError(`Node type ${t.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const zG=(t,e,n,s=qt)=>{switch(t.op){case"Max":{const a=v("axis",t,e,n),l=v("keepDims",t,e,n);return[s.max(v("x",t,e,n),a,l)]}case"Mean":{const a=v("axis",t,e,n),l=v("keepDims",t,e,n);return[s.mean(v("x",t,e,n),a,l)]}case"Min":{const a=v("axis",t,e,n),l=v("keepDims",t,e,n);return[s.min(v("x",t,e,n),a,l)]}case"Sum":{const a=v("axis",t,e,n),l=v("keepDims",t,e,n);return[s.sum(v("x",t,e,n),a,l)]}case"All":{const a=v("axis",t,e,n),l=v("keepDims",t,e,n);return[s.all(v("x",t,e,n),a,l)]}case"Any":{const a=v("axis",t,e,n),l=v("keepDims",t,e,n);return[s.any(v("x",t,e,n),a,l)]}case"ArgMax":{const a=v("axis",t,e,n);return[s.argMax(v("x",t,e,n),a)]}case"ArgMin":{const a=v("axis",t,e,n);return[s.argMin(v("x",t,e,n),a)]}case"Prod":{const a=v("axis",t,e,n),l=v("keepDims",t,e,n);return[s.prod(v("x",t,e,n),a,l)]}case"Cumprod":{const a=v("axis",t,e,n),l=v("exclusive",t,e,n),u=v("reverse",t,e,n);return[s.cumprod(v("x",t,e,n),a,l,u)]}case"Cumsum":{const a=v("axis",t,e,n),l=v("exclusive",t,e,n),u=v("reverse",t,e,n);return[s.cumsum(v("x",t,e,n),a,l,u)]}case"Bincount":const r=v("x",t,e,n),o=v("weights",t,e,n),i=v("size",t,e,n);return[s.bincount(r,o,i)];case"DenseBincount":{const a=v("x",t,e,n),l=v("weights",t,e,n),u=v("size",t,e,n),c=v("binaryOutput",t,e,n);return[s.denseBincount(a,l,u,c)]}default:throw TypeError(`Node type ${t.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const MG=(t,e,n,s=qt)=>{switch(t.op){case"ConcatV2":case"Concat":{const r=v("n",t,e,n),o=v("axis",t,e,n);let i=v("tensors",t,e,n);return i=i.slice(0,r),[s.concat(i,o)]}case"Gather":{const r=v("x",t,e,n),o=v("indices",t,e,n);return[s.gather(r,s.cast(o,"int32"),0)]}case"GatherV2":{const r=v("axis",t,e,n),o=v("batchDims",t,e,n),i=v("x",t,e,n),a=v("indices",t,e,n);return[s.gather(i,s.cast(a,"int32"),r,o)]}case"Reverse":{const r=v("dims",t,e,n),o=[];for(let a=0;a<r.length;a++)r[a]&&o.push(a);const i=v("x",t,e,n);return[s.reverse(i,o)]}case"ReverseV2":{const r=v("axis",t,e,n),o=v("x",t,e,n);return[s.reverse(o,r)]}case"Slice":{const r=v("begin",t,e,n),o=v("size",t,e,n);return[s.slice(v("x",t,e,n),r,o)]}case"StridedSlice":{const r=v("begin",t,e,n),o=v("end",t,e,n),i=v("strides",t,e,n),a=v("beginMask",t,e,n),l=v("endMask",t,e,n),u=v("ellipsisMask",t,e,n),c=v("newAxisMask",t,e,n),h=v("shrinkAxisMask",t,e,n),d=v("x",t,e,n);return[s.stridedSlice(d,r,o,i,a,l,u,c,h)]}case"Pack":return P(()=>{const r=v("axis",t,e,n),o=v("tensors",t,e,n),i=o[0].shape,a=s.squeeze(o[0]).shape,l=o.map(u=>{const c=Ae(u.shape,i);if(!c&&!Ae(s.squeeze(u).shape,a))throw new Error("the input tensors shape does not match");return c?u:s.reshape(u,i)});return[s.stack(l,r)]});case"Unpack":{const r=v("axis",t,e,n),o=v("tensor",t,e,n);return s.unstack(o,r)}case"Tile":{const r=v("reps",t,e,n);return[s.tile(v("x",t,e,n),r)]}case"Split":case"SplitV":{const r=v("axis",t,e,n),o=v("numOrSizeSplits",t,e,n),i=v("x",t,e,n);return s.split(i,o,r)}case"ScatterNd":{const r=v("indices",t,e,n),o=v("values",t,e,n),i=v("shape",t,e,n);return[s.scatterND(r,o,i)]}case"GatherNd":{const r=v("x",t,e,n),o=v("indices",t,e,n);return[s.gatherND(r,o)]}case"SparseToDense":{const r=v("sparseIndices",t,e,n),o=v("outputShape",t,e,n),i=v("sparseValues",t,e,n),a=v("defaultValue",t,e,n);return[s.sparseToDense(r,i,o,i.dtype===a.dtype?a:s.cast(a,i.dtype))]}default:throw TypeError(`Node type ${t.op} is not implemented`)}};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const BG=(t,e,n,s=qt)=>{switch(t.op){case"SparseFillEmptyRows":{const{outputIndices:r,outputValues:o,emptyRowIndicator:i,reverseIndexMap:a}=s.sparse.sparseFillEmptyRows(v("indices",t,e,n),v("values",t,e,n),v("denseShape",t,e,n),v("defaultValue",t,e,n));return[r,o,i,a]}case"SparseReshape":{const{outputIndices:r,outputShape:o}=s.sparse.sparseReshape(v("inputIndices",t,e,n),v("inputShape",t,e,n),v("newShape",t,e,n));return[r,o]}case"SparseSegmentMean":return[s.sparse.sparseSegmentMean(v("data",t,e,n),v("indices",t,e,n),v("segmentIds",t,e,n))];case"SparseSegmentSum":return[s.sparse.sparseSegmentSum(v("data",t,e,n),v("indices",t,e,n),v("segmentIds",t,e,n))];default:throw TypeError(`Node type ${t.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const VG=(t,e,n,s=qt)=>{switch(t.op){case"FFT":return[s.fft(v("x",t,e,n))];case"IFFT":return[s.ifft(v("x",t,e,n))];case"RFFT":return[s.rfft(v("x",t,e,n))];case"IRFFT":return[s.irfft(v("x",t,e,n))];default:throw TypeError(`Node type ${t.op} is not implemented`)}};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const WG=(t,e,n,s=qt)=>{switch(t.op){case"StringNGrams":{const{nGrams:r,nGramsSplits:o}=s.string.stringNGrams(v("data",t,e,n),v("dataSplits",t,e,n),v("separator",t,e,n),v("nGramWidths",t,e,n),v("leftPad",t,e,n),v("rightPad",t,e,n),v("padWidth",t,e,n),v("preserveShortSequences",t,e,n));return[r,o]}case"StringSplit":{const{indices:r,values:o,shape:i}=s.string.stringSplit(v("input",t,e,n),v("delimiter",t,e,n),v("skipEmpty",t,e,n));return[r,o,i]}case"StringToHashBucketFast":return[s.string.stringToHashBucketFast(v("input",t,e,n),v("numBuckets",t,e,n))];default:throw TypeError(`Node type ${t.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const UG=(t,e,n,s=qt)=>{switch(t.op){case"Cast":return[s.cast(v("x",t,e,n),v("dtype",t,e,n))];case"ExpandDims":{const r=v("axis",t,e,n);return[s.expandDims(v("x",t,e,n),r)]}case"Squeeze":{const r=v("axis",t,e,n);return[s.squeeze(v("x",t,e,n),r)]}case"Reshape":return[s.reshape(v("x",t,e,n),v("shape",t,e,n))];case"MirrorPad":return[s.mirrorPad(v("x",t,e,n),v("padding",t,e,n),v("mode",t,e,n))];case"PadV2":case"Pad":return[s.pad(v("x",t,e,n),v("padding",t,e,n),v("constantValue",t,e,n))];case"SpaceToBatchND":{const r=v("blockShape",t,e,n),o=v("paddings",t,e,n);return[s.spaceToBatchND(v("x",t,e,n),r,o)]}case"BatchToSpaceND":{const r=v("blockShape",t,e,n),o=v("crops",t,e,n);return[s.batchToSpaceND(v("x",t,e,n),r,o)]}case"DepthToSpace":{const r=v("blockSize",t,e,n),o=v("dataFormat",t,e,n).toUpperCase();return[s.depthToSpace(v("x",t,e,n),r,o)]}case"BroadcastTo":return[s.broadcastTo(v("x",t,e,n),v("shape",t,e,n))];case"BroadcastArgs":return[s.broadcastArgs(v("s0",t,e,n),v("s1",t,e,n))];default:throw TypeError(`Node type ${t.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sk(t,e,n,s,r=P){const o=((i,a,l)=>{switch(i.category){case"arithmetic":return r(()=>xG(i,a,l));case"basic_math":return r(()=>bG(i,a,l));case"control":return NG(i,a,l);case"convolution":return r(()=>$G(i,a,l));case"creation":return r(()=>IG(i,a,l));case"dynamic":return TG(i,a,l);case"evaluation":return r(()=>EG(i,a,l));case"image":return r(()=>_G(i,a,l));case"graph":return r(()=>DG(i,a,l));case"logical":return r(()=>OG(i,a,l));case"matrices":return r(()=>FG(i,a,l));case"normalization":return r(()=>LG(i,a,l));case"ragged":return r(()=>PG(i,a,l));case"reduction":return r(()=>zG(i,a,l));case"slice_join":return r(()=>MG(i,a,l));case"sparse":return r(()=>BG(i,a,l));case"spectral":return r(()=>VG(i,a,l));case"string":return r(()=>WG(i,a,l));case"transformation":return r(()=>UG(i,a,l));case"hash_table":return AG(i,a,l,s);case"custom":const u=Z2(i.op);if(u&&u.customExecutor)return u.customExecutor(new yG(i,a,l));throw TypeError(`Custom op ${i.op} is not registered.`);default:throw TypeError(`Unknown op '${i.op}'. File an issue at https://github.com/tensorflow/tfjs/issues so we can add it, or register a custom execution with tf.registerOp()`)}})(t,e,n);return xi(o)?o.then(i=>[].concat(i)):[].concat(o)}class rk{constructor(e={},n={},s={},r={}){this.weightMap=e,this.tensorArrayMap=n,this.tensorListMap=s,this.functionMap=r,this.rootContext={id:0,frameName:"",iterationId:0},this.contexts=[this.rootContext],this.lastId=0,this.generateCurrentContextIds()}newFrame(e,n){return{id:e,frameName:n,iterationId:0}}set currentContext(e){this.contexts!==e&&(this.contexts=e,this.generateCurrentContextIds())}get currentContext(){return this.contexts}get currentContextId(){return this._currentContextIds[0]}get currentContextIds(){return this._currentContextIds}generateCurrentContextIds(){const e=[];for(let n=0;n<this.contexts.length-1;n++){const s=this.contexts.slice(0,this.contexts.length-n);e.push(this.contextIdforContexts(s))}e.push(""),this._currentContextIds=e}contextIdforContexts(e){return e?e.map(n=>n.id===0&&n.iterationId===0?"":`${n.frameName}-${n.iterationId}`).join("/"):""}enterFrame(e){this.contexts&&(this.lastId++,this.contexts=this.contexts.slice(),this.contexts.push(this.newFrame(this.lastId,e)),this._currentContextIds.unshift(this.contextIdforContexts(this.contexts)))}exitFrame(){if(this.contexts&&this.contexts.length>1)this.contexts=this.contexts.slice(),this.contexts.splice(-1),this.currentContextIds.shift();else throw new Error("Cannot exit frame, the context is empty")}nextIteration(){if(this.contexts&&this.contexts.length>0){this.contexts=this.contexts.slice(),this.lastId++;const e=Object.assign({},this.contexts[this.contexts.length-1]);e.iterationId+=1,e.id=this.lastId,this.contexts.splice(-1,1,e),this._currentContextIds.splice(0,1,this.contextIdforContexts(this.contexts))}else throw new Error("Cannot increase frame iteration, the context is empty")}getWeight(e){return this.weightMap[e]}addTensorArray(e){this.tensorArrayMap[e.id]=e}getTensorArray(e){return this.tensorArrayMap[e]}addTensorList(e){this.tensorListMap[e.id]=e}getTensorList(e){return this.tensorListMap[e]}dispose(e){for(const n in this.tensorArrayMap)this.tensorArrayMap[n].clearAndClose(e);for(const n in this.tensorListMap)this.tensorListMap[n].clearAndClose(e)}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ok(t,e,n,s){const r=new Set,o=[];let i=null,a=null;const l=new Set,u=Object.keys(t).map(d=>In(d)[0]);let c=[];s!=null&&(c=s.map(d=>In(d.name)[0]));const h=[...e];for(;h.length>0;){const d=h.pop();if((tE(d)||qG(d)||XG(d))&&i==null&&(i=d,a=i.children.map(p=>p.name).filter(p=>r.has(p))),r.add(d.name),n[d.name]==null&&u.indexOf(d.name)===-1&&c.indexOf(d.name)===-1){if(d.inputs.length===0){o.push(d.name);continue}d.inputs.forEach(p=>{l.has(p.name)||(l.add(p.name),h.push(p))})}}return{inputs:t,outputs:e,usedNodes:r,missingInputs:o,dynamicNode:i,syncInputs:a}}function GG(t,e,n){const{usedNodes:s,inputs:r}=n,o=[],i=Object.keys(r).map(c=>In(c)[0]).map(c=>t.nodes[c]),a=t.initNodes;i.forEach(c=>{s.has(c.name)&&o.push(c)}),t.weights.forEach(c=>{s.has(c.name)&&o.push(c)}),a!=null&&a.forEach(c=>{s.has(c.name)&&o.push(c)});const l=new Set,u=[];for(;o.length>0;){const c=o.pop();l.add(c.name),e[c.name]||u.push(c),c.children.forEach(h=>{!l.has(h.name)&&s.has(h.name)&&h.inputs.every(d=>l.has(d.name))&&o.push(h)})}return u}const HG=["Switch","Merge","Enter","Exit","NextIteration","StatelessIf","StatelessWhile","if","While"],jG=["NonMaxSuppressionV2","NonMaxSuppressionV3","NonMaxSuppressionV5","Where"],KG=["HashTable","HashTableV2","LookupTableImport","LookupTableImportV2","LookupTableFind","LookupTableFindV2","LookupTableSize","LookupTableSizeV2"];function tE(t){return HG.indexOf(t.op)>=0}function qG(t){return jG.indexOf(t.op)>=0}function XG(t){return KG.indexOf(t.op)>=0}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Md{constructor(e,n){this.graph=e,this.parent=n,this.compiledMap=new Map,this._weightMap={},this.SEPERATOR=",",this._functions={},this._functionExecutorMap={},this.keepIntermediateTensors=!1,this._outputs=e.outputs,this._inputs=e.inputs,this._initNodes=e.initNodes,this._signature=e.signature,this._functions=e.functions,e.functions!=null&&Object.keys(e.functions).forEach(s=>{this._functionExecutorMap[s]=new Md(e.functions[s],this)})}get weightIds(){return this.parent?this.parent.weightIds:this._weightIds}get functionExecutorMap(){return this.parent?this.parent.functionExecutorMap:this._functionExecutorMap}get weightMap(){return this.parent?this.parent.weightMap:this._weightMap}set weightMap(e){const n=Object.keys(e).map(s=>e[s].map(r=>r.id));this._weightIds=[].concat(...n),this._weightMap=e}set resourceManager(e){this._resourceManager=e}get inputs(){return this._inputs.map(e=>({name:e.name,shape:e.attrParams.shape?e.attrParams.shape.value:void 0,dtype:e.attrParams.dtype?e.attrParams.dtype.value:void 0}))}get outputs(){return this._outputs.map(e=>({name:e.name,shape:e.attrParams.shape?e.attrParams.shape.value:void 0,dtype:e.attrParams.dtype?e.attrParams.dtype.value:void 0}))}get inputNodes(){return this._inputs.map(e=>e.signatureKey||e.name)}get outputNodes(){return this._outputs.map(e=>{const n=e.signatureKey||e.name;return e.defaultOutput?`${n}:${e.defaultOutput}`:n})}get functions(){return Object.keys(this._functions).reduce((e,n)=>(e[n]=this._functions[n].signature,e),{})}getCompilationKey(e,n){const s=e.map(o=>o.name).sort(),r=n.map(o=>o.name).sort();return s.join(this.SEPERATOR)+"--"+r.join(this.SEPERATOR)}compile(e,n){const s=ok(e,n,this.weightMap,this._initNodes),{missingInputs:r,dynamicNode:o,syncInputs:i}=s;if(o!=null)throw new Error(`This execution contains the node '${o.name}', which has the dynamic op '${o.op}'. Please use model.executeAsync() instead. Alternatively, to avoid the dynamic ops, specify the inputs [${i}]`);if(r.length>0){const a=n.map(u=>u.name),l=Object.keys(e);throw new Error(`Cannot compute the outputs [${a}] from the provided inputs [${l}]. Missing the following inputs: [${r}]`)}return GG(this.graph,this.weightMap,s)}cloneAndKeepTensor(e){if(e==null)return null;const n=e.clone();return Ft(n),n}cloneTensorList(e){return e?e.map(s=>this.cloneAndKeepTensor(s)):null}cloneTensorMap(e){return Object.fromEntries(Object.entries(e).map(([n,s])=>[n,this.cloneTensorList(s)]))}execute(e,n){this.disposeIntermediateTensors(),e=this.mapInputs(e);const s=Object.keys(e).sort();this.checkInputs(e),this.checkInputShapeAndType(e),n=this.mapOutputs(n),this.checkOutputs(n);const r=s.map(h=>this.graph.nodes[In(h)[0]]),o=n.map(h=>In(h)[0]);let i=o.map(h=>this.graph.nodes[h]);i.length===0&&(i=this._outputs);const a=this.getCompilationKey(r,i);let l=this.compiledMap.get(a);l==null&&(l=this.compile(e,i),this.compiledMap.set(a,l));try{this.keepIntermediateTensors=U().getBool("KEEP_INTERMEDIATE_TENSORS")}catch(h){this.keepIntermediateTensors=!1,console.warn(h.message)}const u={},c={};return P(()=>{const h=new rk(this.weightMap,u,c,this.functionExecutorMap),d=Object.assign({},this.weightMap);this.keepIntermediateTensors&&(this.clonedTensorsMap=this.cloneTensorMap(this.weightMap)),Object.keys(e).forEach(m=>{const[y,g]=In(m),x=[];x[g]=e[m],d[y]=x,this.keepIntermediateTensors&&(this.clonedTensorsMap[y]=this.cloneTensorList(x))});const p=this.getFrozenTensorIds(d),f={};for(let m=0;m<l.length;m++){const y=l[m];if(!d[y.name]){const g=sk(y,d,h,this._resourceManager);if(xi(g))throw new Error(`The execution of the op '${y.op}' returned a promise. Please use model.executeAsync() instead.`);d[y.name]=g,this.keepIntermediateTensors&&(this.clonedTensorsMap[y.name]=this.cloneTensorList(g)),this.checkTensorForDisposal(y.name,y,d,h,p,o,f)}}return this.parent==null&&h.dispose(p),n.map(m=>an(m,d,h))})}getFrozenTensorIds(e){const n=[].concat.apply([],Object.keys(e).map(s=>e[s]).map(s=>s.map(r=>r.id)));return new Set(n)}checkTensorForDisposal(e,n,s,r,o,i,a){n.category==="control"||i.indexOf(e)!==-1||(s[e].forEach(l=>{l!=null&&(a[l.id]=(a[l.id]||0)+n.children.length)}),n.inputs.forEach(l=>{if(l.category!=="control"){const u=RU(l.name,s,r);u!=null&&u.forEach(c=>{if(c&&!c.kept&&!o.has(c.id)){const h=a[c.id];h===1?(c.dispose(),delete a[c.id]):h!=null&&a[c.id]--}})}}))}async executeAsync(e,n){return this._executeAsync(e,n)}disposeIntermediateTensors(){!this.clonedTensorsMap||(Object.values(this.clonedTensorsMap).forEach(e=>{for(const n of e)n&&!n.isDisposed&&n.dispose()}),this.clonedTensorsMap=null)}getIntermediateTensors(){return this.clonedTensorsMap}async _executeAsync(e,n,s=!1,r={},o={}){this.disposeIntermediateTensors(),s||(e=this.mapInputs(e),this.checkInputs(e),this.checkInputShapeAndType(e),n=this.mapOutputs(n),this.checkOutputs(n));try{this.keepIntermediateTensors=U().getBool("KEEP_INTERMEDIATE_TENSORS")}catch(d){this.keepIntermediateTensors=!1,console.warn(d.message)}const i=new rk(this.weightMap,r,o,this.functionExecutorMap);this.keepIntermediateTensors&&(this.clonedTensorsMap=this.cloneTensorMap(this.weightMap));const a=await this.executeWithControlFlow(e,i,n,s),l=n.map(d=>an(d,a,i)),u=l.map(d=>d.id),c=Object.keys(e).map(d=>e[d].id),h=new Set([...u,...c,...this.weightIds]);return Object.values(a).forEach(d=>{d.forEach(p=>{p&&!p.isDisposed&&!h.has(p.id)&&p.dispose()})}),this.parent==null&&i.dispose(h),l}async executeFunctionAsync(e,n,s){const r=e.reduce((o,i,a)=>(o[this.inputs[a].name]=i,o),{});return this._executeAsync(r,this.outputNodes,!0,n,s)}async executeWithControlFlow(e,n,s,r){const o=Object.keys(e),i=o.map(b=>this.graph.nodes[In(b)[0]]),a=s.map(b=>In(b)[0]);let l=a.map(b=>this.graph.nodes[b]);l.length===0&&(l=this._outputs);const{usedNodes:u,missingInputs:c,dynamicNode:h,syncInputs:d}=ok(e,l,this.weightMap,this._initNodes),p=[...i,...this.graph.weights,...this._initNodes||[]].map(b=>({node:b,contexts:n.currentContext})),f=Object.assign({},this.weightMap);Object.keys(e).forEach(b=>{const[w,k]=In(b),S=[];S[k]=e[b],f[w]=S});const m={},y=this.getFrozenTensorIds(f),g={};for(;p.length>0;){const b=this.processStack(i,p,n,f,g,y,a,m,u);await Promise.all(b)}h==null&&!r&&console.warn("This model execution did not contain any nodes with control flow or dynamic output shapes. You can use model.execute() instead.");const x=l.filter(b=>!tE(b)&&!an(b.name,f,n)).map(b=>b.name);if(x.length>0){let b="";throw h!=null&&(b=`Alternatively, to avoid the dynamic ops, use model.execute() and specify the inputs [${d}]`),new Error(`Cannot compute the outputs [${x}] from the provided inputs [${o}]. Consider providing the following inputs: [${c}]. ${b}`)}return f}processStack(e,n,s,r,o,i,a,l,u){const c=[];for(;n.length>0;){const h=n.pop();s.currentContext=h.contexts;let d="";if(h.node.op==="Enter"&&v("isConstant",h.node,r,s)&&([d]=$r(h.node.name,s)),r[h.node.name]==null){const p=sk(h.node,r,s,this._resourceManager);d||([d]=$r(h.node.name,s));const f=s.currentContext;xi(p)?c.push(p.then(m=>(r[d]=m,this.keepIntermediateTensors&&(this.clonedTensorsMap[d]=this.cloneTensorList(m)),s.currentContext=f,this.checkTensorForDisposal(d,h.node,r,s,i,a,l),this.processChildNodes(h.node,n,s,r,o,u),m))):(r[d]=p,this.keepIntermediateTensors&&(this.clonedTensorsMap[d]=this.cloneTensorList(p)),this.checkTensorForDisposal(d,h.node,r,s,i,a,l),this.processChildNodes(h.node,n,s,r,o,u))}else this.processChildNodes(h.node,n,s,r,o,u)}return c}processChildNodes(e,n,s,r,o,i){e.children.forEach(a=>{const[l]=$r(a.name,s);o[l]||!i.has(a.name)||(a.op==="Merge"?a.inputNames.some(u=>!!an(u,r,s))&&(o[l]=!0,n.push({contexts:s.currentContext,node:a})):a.inputNames.every(u=>!!an(u,r,s))&&(o[l]=!0,n.push({contexts:s.currentContext,node:a})))})}dispose(){Object.keys(this.weightMap).forEach(e=>this.weightMap[e].forEach(n=>n.dispose()))}checkInputShapeAndType(e){Object.keys(e).forEach(n=>{const s=e[n],[r]=In(n),o=this.graph.nodes[r];if(o.attrParams.shape&&o.attrParams.shape.value){const i=o.attrParams.shape.value,a=i.length===s.shape.length&&s.shape.every((l,u)=>i[u]===-1||i[u]===l);C(a,()=>`The shape of dict['${o.name}'] provided in model.execute(dict) must be [${i}], but was [${s.shape}]`)}o.attrParams.dtype&&o.attrParams.dtype.value&&C(s.dtype===o.attrParams.dtype.value,()=>`The dtype of dict['${o.name}'] provided in model.execute(dict) must be ${o.attrParams.dtype.value}, but was ${s.dtype}`)})}mapInputs(e){var n,s;const r={};for(const o in e){const i=(s=(n=this._signature)===null||n===void 0?void 0:n.inputs)===null||s===void 0?void 0:s[o];i!=null?r[i.name]=e[o]:r[o]=e[o]}return r}checkInputs(e){const n=Object.keys(e).filter(s=>{const[r]=In(s);return this.graph.nodes[r]==null});if(n.length>0)throw new Error(`The dict provided in model.execute(dict) has keys: [${n}] that are not part of graph`)}mapOutputs(e){return e.map(n=>{var s,r;const o=(r=(s=this._signature)===null||s===void 0?void 0:s.outputs)===null||r===void 0?void 0:r[n];return o!=null?o.name:n},{})}checkOutputs(e){e.forEach(n=>{const[s]=In(n);if(!this.graph.nodes[s])throw new Error(`The output '${n}' is not found in the graph`)})}}class YG{constructor(e={},n={}){this.hashTableNameToHandle=e,this.hashTableMap=n}addHashTable(e,n){this.hashTableNameToHandle[e]=n.handle,this.hashTableMap[n.id]=n}getHashTableHandleByName(e){return this.hashTableNameToHandle[e]}getHashTableById(e){return this.hashTableMap[e]}dispose(){for(const e in this.hashTableMap)this.hashTableMap[e].clearAndClose(),delete this.hashTableMap[e];for(const e in this.hashTableNameToHandle)this.hashTableNameToHandle[e].dispose(),delete this.hashTableNameToHandle[e]}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const QG="?tfjs-format=file",ZG="model.json";class JG{constructor(e,n={},s=iI){this.modelUrl=e,this.loadOptions=n,this.version="n/a",this.io=s,n==null&&(this.loadOptions={}),this.resourceManager=new YG}get modelVersion(){return this.version}get inputNodes(){return this.executor.inputNodes}get outputNodes(){return this.executor.outputNodes}get inputs(){return this.executor.inputs}get outputs(){return this.executor.outputs}get weights(){return this.executor.weightMap}get metadata(){return this.artifacts.userDefinedMetadata}get modelSignature(){return this.signature}get modelStructuredOutputKeys(){return this.structuredOutputKeys}findIOHandler(){const e=this.modelUrl;if(e.load!=null)this.handler=e;else if(this.loadOptions.requestInit!=null)this.handler=this.io.browserHTTPRequest(e,this.loadOptions);else{const n=this.io.getLoadHandlers(e,this.loadOptions);if(n.length===0)n.push(this.io.browserHTTPRequest(e,this.loadOptions));else if(n.length>1)throw new Error(`Found more than one (${n.length}) load handlers for URL '${[e]}'`);this.handler=n[0]}}load(){if(this.findIOHandler(),this.handler.load==null)throw new Error("Cannot proceed with model loading because the IOHandler provided does not have the `load` method implemented.");const e=this.handler.load();return xi(e)?e.then(n=>this.loadSync(n)):this.loadSync(e)}loadSync(e){this.artifacts=e;const n=this.artifacts.modelTopology;let s=this.artifacts.signature;if(this.artifacts.userDefinedMetadata!=null){const o=this.artifacts.userDefinedMetadata;o.signature!=null&&(s=o.signature),o.structuredOutputKeys!=null&&(this.structuredOutputKeys=o.structuredOutputKeys)}this.signature=s,this.version=`${n.versions.producer}.${n.versions.minConsumer}`;const r=this.io.decodeWeights(this.artifacts.weightData,this.artifacts.weightSpecs);if(this.executor=new Md(Jv.Instance.transformGraph(n,this.signature)),this.executor.weightMap=this.convertTensorMapToTensorsMap(r),this.executor.resourceManager=this.resourceManager,e.modelInitializer!=null&&e.modelInitializer.node!=null){const o=Jv.Instance.transformGraph(e.modelInitializer);this.initializer=new Md(o),this.initializer.weightMap=this.executor.weightMap,this.initializer.resourceManager=this.resourceManager,this.initializerSignature=e.initializerSignature}return!0}async save(e,n){if(typeof e=="string"){const s=this.io.getSaveHandlers(e);if(s.length===0)throw new Error(`Cannot find any save handlers for URL '${e}'`);if(s.length>1)throw new Error(`Found more than one (${s.length}) save handlers for URL '${e}'`);e=s[0]}if(e.save==null)throw new Error("GraphModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");return e.save(this.artifacts)}addStructuredOutputNames(e){if(this.structuredOutputKeys){const n=e instanceof et?[e]:e,s={};return n.forEach((r,o)=>s[this.structuredOutputKeys[o]]=r),s}return e}predict(e,n){const s=this.execute(e,this.outputNodes);return this.addStructuredOutputNames(s)}async predictAsync(e,n){const s=await this.executeAsync(e,this.outputNodes);return this.addStructuredOutputNames(s)}normalizeInputs(e){var n;if(!(e instanceof et)&&!Array.isArray(e)){const o=(n=this.signature)===null||n===void 0?void 0:n.inputs;if(o!=null)for(const i in o){const a=o[i];a.resourceId!=null&&(e[i]=this.resourceIdToCapturedInput[a.resourceId])}return e}e=Array.isArray(e)?e:[e];const s=Object.keys(this.resourceIdToCapturedInput).length;if(e.length+s!==this.inputNodes.length)throw new Error(`Input tensor count mismatch, the graph model has ${this.inputNodes.length-s} non-resource placeholders, while there are ${e.length} input tensors provided.`);let r=0;return this.inputNodes.reduce((o,i)=>{var a,l,u;const c=(u=(l=(a=this.signature)===null||a===void 0?void 0:a.inputs)===null||l===void 0?void 0:l[i])===null||u===void 0?void 0:u.resourceId;return c!=null?o[i]=this.resourceIdToCapturedInput[c]:o[i]=e[r++],o},{})}normalizeOutputs(e){return e=e||this.outputNodes,Array.isArray(e)?e:[e]}executeInitializerGraph(){return this.initializer==null?[]:this.initializerSignature==null?this.initializer.execute({},[]):this.initializer.execute({},Object.keys(this.initializerSignature.outputs))}async executeInitializerGraphAsync(){return this.initializer==null?[]:this.initializerSignature==null?this.initializer.executeAsync({},[]):this.initializer.executeAsync({},Object.keys(this.initializerSignature.outputs))}setResourceIdToCapturedInput(e){if(this.resourceIdToCapturedInput={},this.initializerSignature){const n=this.initializerSignature.outputs,s=Object.keys(n);for(let r=0;r<s.length;r++){const o=s[r],i=n[o];this.resourceIdToCapturedInput[i.resourceId]=e[r]}}}execute(e,n){this.resourceIdToCapturedInput==null&&this.setResourceIdToCapturedInput(this.executeInitializerGraph()),e=this.normalizeInputs(e),n=this.normalizeOutputs(n);const s=this.executor.execute(e,n);return s.length>1?s:s[0]}async executeAsync(e,n){this.resourceIdToCapturedInput==null&&this.setResourceIdToCapturedInput(await this.executeInitializerGraphAsync()),e=this.normalizeInputs(e),n=this.normalizeOutputs(n);const s=await this.executor.executeAsync(e,n);return s.length>1?s:s[0]}getIntermediateTensors(){return this.executor.getIntermediateTensors()}disposeIntermediateTensors(){this.executor.disposeIntermediateTensors()}convertTensorMapToTensorsMap(e){return Object.keys(e).reduce((n,s)=>(n[s]=[e[s]],n),{})}dispose(){this.executor.dispose(),this.initializer&&(this.initializer.dispose(),this.resourceIdToCapturedInput&&Se(this.resourceIdToCapturedInput)),this.resourceManager.dispose()}}async function eH(t,e={},n=iI){if(t==null)throw new Error("modelUrl in loadGraphModel() cannot be null. Please provide a url or an IOHandler that loads the model");e==null&&(e={}),e.fromTFHub&&typeof t=="string"&&(t=tH(t));const s=new JG(t,e,n);return await s.load(),s}function tH(t){return t.endsWith("/")||(t=t+"/"),`${t}${ZG}${QG}`}/** @license See the LICENSE file. *//**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */var ik;(function(t){t[t.FAIL=0]="FAIL",t[t.SHORTEST=1]="SHORTEST",t[t.LONGEST=2]="LONGEST"})(ik||(ik={}));/** @license See the LICENSE file. *//**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ce(t,e){Array.isArray(t)||(t=[t]),t.forEach(n=>{n!=null&&C(n.dtype!=="complex64",()=>`${e} does not support complex64 tensors in the CPU backend.`)})}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const nH=C1;class Xf extends P0{constructor(){super(),this.blockSize=48,this.firstUse=!0,this.data=new QC(this,cs())}nextDataId(){return Xf.nextDataId++}write(e,n,s){this.firstUse&&(this.firstUse=!1,U().get("IS_NODE")&&jn(`
============================
Hi, looks like you are running TensorFlow.js in Node.js. To speed things up dramatically, install our node backend, visit https://github.com/tensorflow/tfjs-node for more details. 
============================`));const r={id:this.nextDataId()};return this.data.set(r,{values:e,dtype:s,refCount:1}),r}makeTensorInfo(e,n,s){let r;if(n==="string"&&s!=null&&s.length>0&&Iu(s[0])){const o=s.map(i=>yo(i));r=this.write(o,e,n)}else r=this.write(s,e,n);return{dataId:r,shape:e,dtype:n}}refCount(e){return this.data.has(e)?this.data.get(e).refCount:0}incRef(e){const n=this.data.get(e);n.refCount++}decRef(e){if(this.data.has(e)){const n=this.data.get(e);n.refCount--}}move(e,n,s,r,o){this.data.set(e,{values:n,dtype:r,refCount:o})}numDataIds(){return this.data.numDataIds()}async read(e){return this.readSync(e)}readSync(e){const{dtype:n,complexTensorInfos:s}=this.data.get(e);if(n==="complex64"){const r=this.readSync(s.real.dataId),o=this.readSync(s.imag.dataId);return Mr(r,o)}return z_(this.data.get(e).values,n)}bufferSync(e){const n=this.readSync(e.dataId);if(e.dtype==="string")try{const s=n.map(r=>ko(r));return Ce(e.shape,e.dtype,s)}catch{throw new Error("Failed to decode encoded string bytes into utf-8")}return Ce(e.shape,e.dtype,n)}makeOutput(e,n,s){return cs().makeTensorFromTensorInfo(this.makeTensorInfo(n,s,e),this)}disposeData(e,n=!1){if(this.data.has(e)){if(this.data.get(e).refCount--,!n&&this.data.get(e).refCount>0)return!1;const{complexTensorInfos:s}=this.data.get(e);s!=null&&(this.disposeData(s.real.dataId,!0),this.disposeData(s.imag.dataId,!0)),this.data.delete(e)}return!0}disposeIntermediateTensorInfo(e){this.disposeData(e.dataId)}async time(e){const n=mn();return e(),{kernelMs:mn()-n}}memory(){return{unreliable:!0,reasons:["The reported memory is an upper bound. Due to automatic garbage collection, the true allocated memory may be less."]}}where(e){ce([e],"where");const n=this.readSync(e.dataId);return nH(e.shape,n)}dispose(){}floatPrecision(){return 32}epsilon(){return super.epsilon()}}Xf.nextDataId=0;/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nE(t){const e=new Float32Array(t.length);for(let n=0;n<t.length;++n)e[n]=Math.abs(t[n]);return e}const sH=t=>{const{x:e}=t.inputs,n=t.backend;ce(e,"abs");let s=new Float32Array(H(e.shape));const r=n.data.get(e.dataId).values;return s=nE(r),n.makeOutput(s,e.shape,e.dtype)},rH={kernelName:cp,backendName:"cpu",kernelFunc:sH};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ct(t){return(e,n,s,r,o)=>{const i=we(e,n),a=i.length,l=me(i),u=H(i),c=zt(o,u),h=e.length,d=n.length,p=me(e),f=me(n),m=Oa(e,i),y=Oa(n,i);if(m.length+y.length===0)for(let g=0;g<c.length;++g)c[g]=t(s[g%s.length],r[g%r.length]);else for(let g=0;g<c.length;++g){const x=qa(g,a,l),b=x.slice(-h);m.forEach(N=>b[N]=0);const w=pr(b,h,p),k=x.slice(-d);y.forEach(N=>k[N]=0);const S=pr(k,d,f);c[g]=t(s[w],r[S])}return[c,i]}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function En(t){const{inputs:e,backend:n}=t,{real:s,imag:r}=e,o=n.data.get(s.dataId).values,i=n.data.get(r.dataId).values,a=n.makeTensorInfo(s.shape,"complex64"),l=n.data.get(a.dataId);return l.complexTensorInfos={real:n.makeTensorInfo(s.shape,"float32",o),imag:n.makeTensorInfo(r.shape,"float32",i)},a}const oH={kernelName:K0,backendName:"cpu",kernelFunc:En};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Bd(t,e,n="float32"){if(n==="complex64"){const r=Bd(t,e,"float32"),o=Bd(t,e,"float32");return En({inputs:{real:r,imag:o},backend:t})}const s=Jt(H(e),n);return t.makeTensorInfo(e,n,s)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function br(t){const{inputs:e,backend:n}=t,{x:s}=e;return n.incRef(s.dataId),{dataId:s.dataId,shape:s.shape,dtype:s.dtype}}const iH={kernelName:Xu,backendName:"cpu",kernelFunc:br};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ii(t){const{inputs:e,backend:n}=t,{input:s}=e,r=n.data.get(s.dataId).complexTensorInfos.real,o=n.data.get(r.dataId).values;return n.makeTensorInfo(r.shape,r.dtype,o)}const aH={kernelName:Nx,backendName:"cpu",kernelFunc:Ii};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sE(t,e,n,s){if(s==="int32"){const r=Int32Array.from(t);return[e,"int32",r]}if(s==="bool"){const r=_i([0],n),[o,i]=Ct((a,l)=>a!==l?1:0)(e,[],t,r,"bool");return[i,"bool",o]}throw new Error(`Error in Cast: failed to cast ${n} to ${s}`)}function Ro(t){const{inputs:e,backend:n,attrs:s}=t,{x:r}=e,{dtype:o}=s;if(o==="complex64"){if(r.dtype==="complex64")return br({inputs:{x:r},backend:n});const c=Bd(n,r.shape,r.dtype),h=Ro({inputs:{x:r},backend:n,attrs:{dtype:"float32"}}),d=En({inputs:{real:h,imag:c},backend:n});return n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(h),d}if(r.dtype==="complex64"){const c=Ii({inputs:{input:r},backend:n}),h=Ro({inputs:{x:c},backend:n,attrs:{dtype:o}});return n.disposeIntermediateTensorInfo(c),h}if(!JC(r.dtype,o)){const c=br({inputs:{x:r},backend:n});return{dataId:c.dataId,shape:c.shape,dtype:o}}const i=n.data.get(r.dataId).values,[a,l,u]=sE(i,r.shape,r.dtype,o);return n.makeTensorInfo(a,l,u)}const lH={kernelName:Lu,backendName:"cpu",kernelFunc:Ro};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Vt(t,e,n,s){return n==null?({inputs:r,backend:o})=>{const{a:i,b:a}=r,l=o;ce([i,a],t);const u=l.data.get(i.dataId).values,c=l.data.get(a.dataId).values,h=i.dtype==="string"?Ci(u):u,d=i.dtype==="string"?Ci(c):c,p=s||i.dtype,[f,m]=e(i.shape,a.shape,h,d,p);return l.makeTensorInfo(m,p,f)}:({inputs:r,backend:o})=>{const{a:i,b:a}=r,l=o;if(i.dtype==="complex64"||a.dtype==="complex64"){const u=Ro({inputs:{x:i},backend:l,attrs:{dtype:"complex64"}}),c=l.data.get(u.dataId),h=c.complexTensorInfos.real,d=c.complexTensorInfos.imag,p=l.data.get(h.dataId).values,f=l.data.get(d.dataId).values,m=Ro({inputs:{x:a},backend:l,attrs:{dtype:"complex64"}}),y=l.data.get(m.dataId),g=y.complexTensorInfos.real,x=y.complexTensorInfos.imag,b=l.data.get(g.dataId).values,w=l.data.get(x.dataId).values,[k,S,N]=n(i.shape,a.shape,p,f,b,w),$=l.makeTensorInfo(N,"float32",k),T=l.makeTensorInfo(N,"float32",S),E=En({inputs:{real:$,imag:T},backend:l});return l.disposeIntermediateTensorInfo(u),l.disposeIntermediateTensorInfo(m),l.disposeIntermediateTensorInfo($),l.disposeIntermediateTensorInfo(T),E}else{const u=l.data.get(i.dataId).values,c=l.data.get(a.dataId).values,h=s||i.dtype,[d,p]=e(i.shape,a.shape,u,c,h);return l.makeTensorInfo(p,h,d)}}}function Tb(t){return(e,n,s,r,o,i)=>{const a=we(e,n),l=H(a),u=a.length,c=me(a),h=zt("float32",l),d=zt("float32",l),p=Oa(e,a),f=Oa(n,a),m=Mr(s,r),y=Mr(o,i),g=e.length,x=me(e),b=n.length,w=me(n);if(p.length+f.length===0)for(let k=0;k<h.length;k++){const S=k%m.length,N=k%y.length,$=t(m[S*2],m[S*2+1],y[N*2],y[N*2+1]);h[k]=$.real,d[k]=$.imag}else for(let k=0;k<h.length;k++){const S=qa(k,u,c),N=S.slice(-g);p.forEach(M=>N[M]=0);const $=pr(N,g,x),T=S.slice(-b);f.forEach(M=>T[M]=0);const E=pr(T,b,w),F=t(m[$*2],m[$*2+1],y[E*2],y[E*2+1]);h[k]=F.real,d[k]=F.imag}return[h,d,a]}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const rE=Ct((t,e)=>t+e),uH=Tb((t,e,n,s)=>({real:t+n,imag:e+s})),za=Vt(Xa,rE,uH),cH={kernelName:Xa,backendName:"cpu",kernelFunc:za};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Eb(t,e,n,s,r){const o=H(s),i=Jt(r,n);for(let a=0;a<t.length;a++){const l=t[a];if(l<0)throw new Error("Input x must be non-negative!");l>=r||(o>0?i[l]+=e[a]:i[l]+=1)}return i}function oE(t,e,n,s=!1){const r=t.shape[0],o=t.shape[1],i=Ce([r,n],e.dtype);for(let a=0;a<r;a++)for(let l=0;l<o;l++){const u=t.get(a,l);if(u<0)throw new Error("Input x must be non-negative!");u>=n||(s?i.set(1,a,u):e.size>0?i.set(i.get(a,u)+e.get(a,l),a,u):i.set(i.get(a,u)+1,a,u))}return i}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ho(t){return(e,n,s)=>{const r=zt(n,e.length);for(let o=0;o<e.length;++o)r[o]=t(e[o],s);return r}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ze(t,e,n){return({inputs:s,attrs:r,backend:o})=>{const{x:i}=s;if(ce(i,t),i.dtype==="string"||n==="string")throw new Error("unaryKernelFunc does not support string input/output");const a=o,l=a.data.get(i.dataId).values,u=H(i.shape),c=n||i.dtype,h=St(c,u);for(let d=0;d<u;++d)h[d]=e(l[d],r);return a.makeTensorInfo(i.shape,c,h)}}function nl(t,e,n){return({inputs:s,attrs:r,backend:o})=>{const{x:i}=s;if(ce(i,t),i.dtype==="string"||n==="string")throw new Error("unaryKernelFunc does not support string input/output");const a=o,l=a.data.get(i.dataId).values,u=n||i.dtype,c=e(l,u,r);return a.makeTensorInfo(i.shape,u,c)}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const iE=Ho(t=>Math.ceil(t)),hH=nl(Pu,iE),dH={kernelName:Pu,backendName:"cpu",kernelFunc:hH};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function aE(t,e,n,s){const r=St(n,H(e));if(s&&n!=="string"){let o=0;t.forEach(i=>{const a=H(i.shape);r.set(i.vals,o),o+=a})}else{let o=0;t.forEach(i=>{const a=n==="string"?Ci(i.vals):i.vals;let l=0;for(let u=0;u<i.shape[0];++u){const c=u*e[1]+o;for(let h=0;h<i.shape[1];++h)r[c+h]=a[l++]}o+=i.shape[1]})}return r}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const lE=Ct((t,e)=>t===e?1:0),uE=Vt($p,lE,null,"bool"),pH={kernelName:$p,backendName:"cpu",kernelFunc:uE};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const cE=Ho(t=>Math.exp(t)),hE=nl(Gu,cE,"float32"),fH={kernelName:Gu,backendName:"cpu",kernelFunc:hE};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const dE=Ho(t=>Math.expm1(t)),mH=nl(Hu,dE),gH={kernelName:Hu,backendName:"cpu",kernelFunc:mH};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const pE=Ho(t=>Math.floor(t)),yH=nl(ju,pE),xH={kernelName:ju,backendName:"cpu",kernelFunc:yH};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fE(t,e,n,s,r,o,i,a,l){const u=Ce([s,o],n);for(let c=0;c<s;c++){const h=[];let d=0;for(let p=0;p<r;p++){const f=t[c*r+p];d+=f*i[p],h.push(f)}if(d<0||d>=l/o)throw new Error(`Invalid indices: ${h} does not index into ${a}`);for(let p=0;p<o;p++)u.values[c*o+p]=e.get(...e.indexToLoc(d*o+p))}return u}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mE(t,e,n){const s=Ce(n,t.dtype);for(let r=0;r<s.size;++r){const i=s.indexToLoc(r).slice(),a=i[0],l=i[2],u=e.locToIndex([a,l]);i[2]=e.values[u];const c=t.locToIndex(i);0<=c&&c<t.values.length&&(s.values[r]=t.values[c])}return s}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const gE=Ct((t,e)=>t>e?1:0),bH=Vt(Dp,gE,null,"bool"),wH={kernelName:Dp,backendName:"cpu",kernelFunc:bH};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const yE=Ct((t,e)=>t>=e?1:0),vH=Vt(qu,yE,null,"bool"),kH={kernelName:qu,backendName:"cpu",kernelFunc:vH};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const xE=Ct((t,e)=>t<e?1:0),SH=Vt(Ap,xE,null,"bool"),CH={kernelName:Ap,backendName:"cpu",kernelFunc:SH};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const bE=Ct((t,e)=>t<=e?1:0),NH=Vt(_p,bE,null,"bool"),$H={kernelName:_p,backendName:"cpu",kernelFunc:NH};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wE(t,e,n){const s=(e-t)/(n-1),r=Jt(n,"float32");r[0]=t;for(let o=1;o<r.length;o++)r[o]=r[o-1]+s;return r}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const vE=Ho(t=>Math.log(t)),IH=nl(Ju,vE),TH={kernelName:Ju,backendName:"cpu",kernelFunc:IH};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function kE(t,e,n,s){const r=zt(s,H(n));for(let o=0;o<r.length;++o){const i=o*e;let a=t[i];for(let l=0;l<e;++l){const u=t[i+l];(Number.isNaN(u)||u>a)&&(a=u)}r[o]=a}return r}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const SE=Ct((t,e)=>Math.max(t,e)),EH=Vt(tc,SE),DH={kernelName:tc,backendName:"cpu",kernelFunc:EH};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const CE=Ct((t,e)=>Math.min(t,e)),RH=Vt(nc,CE),AH={kernelName:nc,backendName:"cpu",kernelFunc:RH};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Db=Ct((t,e)=>t*e),_H=Tb((t,e,n,s)=>({real:t*n-e*s,imag:t*s+e*n})),Yf=Vt(rc,Db,_H),OH={kernelName:rc,backendName:"cpu",kernelFunc:Yf};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function NE(t,e,n){const s=Lo(-1,n);return Db([],e,s,t,n)}function FH(t){const{inputs:e,backend:n}=t,{x:s}=e;ce(s,"neg");const r=n.data.get(s.dataId).values,[o,i]=NE(r,s.shape,s.dtype);return n.makeTensorInfo(i,s.dtype,o)}const LH={kernelName:Gp,backendName:"cpu",kernelFunc:FH};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $E=Ct((t,e)=>t!==e?1:0),PH=Vt(Hp,$E,null,"bool"),zH={kernelName:Hp,backendName:"cpu",kernelFunc:PH};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Rb(t,e,n,s,r){const o=e.length,i=H(e),a=me(e),l=me(r),u=zt(n,H(r));for(let c=0;c<i;++c){const h=qa(c,o,a),d=new Array(h.length);for(let f=0;f<d.length;f++)d[f]=h[s[f]];const p=pr(d,o,l);u[p]=t[c]}return u}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function kn(t){const{inputs:e,attrs:n,backend:s}=t,{x:r}=e,{perm:o}=n;ce(r,"transpose");const i=r.shape.length,a=new Array(i);for(let h=0;h<a.length;h++)a[h]=r.shape[o[h]];const l=s.data.get(r.dataId).values,u=Rb(l,r.shape,r.dtype,o,a);return{dataId:s.write(u,a,r.dtype),shape:a,dtype:r.dtype}}const MH={kernelName:ga,backendName:"cpu",kernelFunc:kn};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function IE(t,e,n,s){const[r,o]=Bt(t,s),i=Pn(e,"int32"),a=Jt(H(r),i),l=H(o);for(let u=0;u<a.length;++u){const c=u*l;let h=1;for(let d=0;d<l;++d)h*=n[c+d];a[u]=h}return{outVals:a,outShape:r,outDtype:i}}function BH(t){const{inputs:e,backend:n,attrs:s}=t,{x:r}=e,{axis:o,keepDims:i}=s;ce(r,"prod");const a=r.shape.length,l=$e(o,r.shape),u=ut(l,a);let c=l,h=r;const d=[];u!=null&&(h=kn({inputs:{x:r},backend:n,attrs:{perm:u}}),d.push(h),c=bt(c.length,a));const p=n.data.get(h.dataId).values,{outVals:f,outShape:m,outDtype:y}=IE(h.shape,h.dtype,p,c);let g=m;return i&&(g=xt(m,l)),d.forEach(x=>n.disposeIntermediateTensorInfo(x)),n.makeTensorInfo(g,y,f)}const VH={kernelName:Qp,backendName:"cpu",kernelFunc:BH};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function WH(t,e,n){t.forEach((s,r)=>{if(s<0||s>=n){const o=qa(r,e.length,me(e)).join(",");throw new Error(`indices[${o}] = ${s} is not in [0, ${n})`)}})}function UH(t,e){for(let n=0;n<t.length;++n){const s=t[n],r=n===t.length-1?e:t[n+1].length;if(s.length===0)throw new Error("Ragged splits may not be empty");if(s[0]<0)throw new Error("Ragged splits must be non-negative");if(s[s.length-1]>r)throw new Error("Ragged splits must not point past values");for(let o=1;o<s.length;++o)if(s[o-1]>s[o])throw new Error("Ragged splits must be sorted in ascending order")}}function GH(t,e,n,s){const r=[];let o=0;const i=e.length-1+n.length,a=new Array(i).fill(null).map(()=>[0]);UH(n,s);let l=1;for(let u=0;u<e.length-1;++u){l*=e[u];const c=e[u+1];for(let h=1;h<l+1;++h)a[u].push(h*c)}for(let u=0;u<t.length;++u){let c=t[u],h=t[u]+1;for(let d=0;d<n.length;++d){const p=n[d],f=d+e.length-1;if(f>=0){const m=a[f],y=m[m.length-1]-p[c];for(let g=c;g<h;++g)a[f].push(p[g+1]+y)}c=p[c],h=p[h]}h!==c&&(r.push([c,h]),o+=h-c)}return{outSplits:a,valueSlices:r,numValues:o}}function HH(t){const e=[];for(let n=0;n<t.length;++n){const s=t[n].length,r=St("int32",s);e.push(r),t[n].forEach((o,i)=>r[i]=o)}return e}function ak(t,e){const n=t.slice(0,e);for(;n.length<e;)n.push(1);for(let s=e;s<t.length;s++)n[e-1]*=t[s];return n}function jH(t,e,n,s,r,o){const i=ak(e,2)[1],a=ak(o,2)[1];let l=0;for(const u of n)for(let c=u[0];c<u[1];++c){for(let h=0;h<s;++h)r[l*a+h]=t[c*i+h];++l}}function KH(t,e,n,s,r){const o=e.slice();o[0]=r;const i=St(n,H(o)),a=t.length,l=a===0?0:a/e[0];return jH(t,e,s,l,i,o),[i,o]}function TE(t,e,n,s,r,o,i,a){if(t.length===0)throw new Error("paramsNestedSplits must be non empty");if(e[0].length===0)throw new Error("Split tensors must not be scalars");const l=e[0][0]-1;if(WH(o,i,l),s.length===0)throw new Error("params.rank must be nonzero");const u=s[0],{outSplits:c,valueSlices:h,numValues:d}=GH(o,i,t,u),p=HH(c),f=KH(n,s,r,h,d);return[p,f[0],f[1]]}/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const lk=2147483647;function EE(t,e,n,s,r,o,i){if(e.length>1)throw new Error("starts must be a scalar or vector");if(r.length>1)throw new Error("limits must be a scalar or vector");if(i.length>1)throw new Error("deltas must be a scalar or vector");const a=e.length===0,l=r.length===0,u=i.length===0,c=[];a||c.push(e[0]),l||c.push(r[0]),u||c.push(i[0]);for(let y=1;y<c.length;++y)if(c[y]!==c[y-1])throw new Error("starts, limits, and deltas must have the same shape");const h=c.length===0?1:c[0],d=St("int32",h+1);d[0]=0;for(let y=0;y<h;++y){const g=a?t[0]:t[y],x=l?s[0]:s[y],b=u?o[0]:o[y];if(b===0)throw new Error("Requires delta != 0");let w;if(b>0&&x<g||b<0&&x>g)w=0;else if(w=Math.ceil(Math.abs((x-g)/b)),w>lk)throw new Error(`Requires ((limit - start) / delta) <= ${lk}`);d[y+1]=d[y]+w}const p=d[h],f=St(n,p);let m=0;for(let y=0;y<h;++y){const g=d[y+1]-d[y];let x=a?t[0]:t[y];const b=u?o[0]:o[y];for(let w=0;w<g;++w)f[m++]=x,x+=b}return[d,f]}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var as=Ws;class Vd{constructor(e,n,s,r,o,i,a,l,u,c){this.shape=e,this.shapeShape=n,this.values=s,this.valuesShape=r,this.valuesDType=o,this.defaultValue=i,this.defaultValueShape=a,this.rowPartitionValues=l,this.rowPartitionValuesShapes=u,this.rowPartitionTypes=yI(c),this.raggedRank=xI(this.rowPartitionTypes)}getRowPartitionTypeByDimension(e){return this.rowPartitionTypes[0]===as.FIRST_DIM_SIZE?this.rowPartitionTypes[e+1]:this.rowPartitionTypes[e]}getRowPartitionTensor(e){return this.rowPartitionTypes[0]===as.FIRST_DIM_SIZE?this.rowPartitionValues[e+1]:this.rowPartitionValues[e]}getMaxWidth(e){const n=this.getRowPartitionTensor(e-1);switch(this.getRowPartitionTypeByDimension(e-1)){case as.VALUE_ROWIDS:return Vd.getMaxWidthValueRowID(n);case as.ROW_SPLITS:return Vd.getMaxWidthRowSplit(n);default:throw new Error(`Cannot handle partition type ${as[this.getRowPartitionTypeByDimension(e-1)]}`)}}static getMaxWidthRowSplit(e){const n=e.length;if(n===0||n===1)return 0;let s=0;for(let r=0;r<n-1;++r){const o=e[r+1]-e[r];o>s&&(s=o)}return s}static getMaxWidthValueRowID(e){const n=e.length;if(n===0)return 0;let s=0,r=e[0],o=0;for(let i=1;i<n;++i){const a=e[i];a!==r&&(r=a,o=Math.max(i-s,o),s=i)}return Math.max(n-s,o)}tensorShapeFromTensor(e,n,s=!0){if(n.length===0){if(e[0]===-1)return[];throw new Error("The only valid scalar shape tensor is the fully unknown shape specified as -1.")}return ck(e,s)}calculateOutputSize(e){const n=this.valuesShape,s=this.defaultValueShape;bI(s,n);const r=this.tensorShapeFromTensor(this.shape,this.shapeShape),i=gI(this.raggedRank,r,n);i[0]<0&&(i[0]=e);for(let a=1;a<=this.raggedRank;++a)i[a]<0&&(i[a]=this.getMaxWidth(a));return i}calculateFirstParentOutputIndex(e,n,s){const r=Math.min(e,s),o=[];let i=0;for(let a=0;a<r;++a,i+=n)o.push(i);for(let a=r;a<e;++a)o.push(-1);return C(o.length===e,()=>"Final length of result must be equal to firstDimension."),o}calculateOutputIndexRowSplit(e,n,s,r){const o=e.length,i=[];for(let a=0;a<o-1;++a){const l=e[a+1]-e[a];let u=Math.min(r,l),c=n[a];c===-1&&(u=0);for(let h=0;h<u;++h)i.push(c),c+=s;for(let h=0;h<l-u;++h)i.push(-1)}if(o>0&&i.length!==e[o-1])throw new Error("Invalid row split size.");return i}calculateOutputIndexValueRowID(e,n,s,r){const o=e.length,i=[];if(o===0)return[];let a=0,l=e[0];if(l>=n.length)throw new Error(`Got currentValueRowId=${l}, which is not less than ${n.length}`);let u=n[l];i.push(u);for(let c=1;c<o;++c){const h=e[c];if(h===l)u>=0&&(++a,a<r?u+=s:u=-1);else{if(a=0,l=h,h>=n.length)throw new Error(`Got nextValueRowId=${h} which is not less than ${n.length}`);u=n[h]}i.push(u)}if(i.length!==e.length)throw new Error("Invalid row ids.");return i}calculateOutputIndex(e,n,s,r){const o=this.getRowPartitionTensor(e),i=this.getRowPartitionTypeByDimension(e);switch(i){case as.VALUE_ROWIDS:return this.calculateOutputIndexValueRowID(o,n,s,r);case as.ROW_SPLITS:if(o.length-1>n.length)throw new Error(`Row partition size is greater than output size: ${o.length-1} > ${n.length}`);return this.calculateOutputIndexRowSplit(o,n,s,r);default:throw new Error(`Unsupported partition type: ${as[i]}`)}}getFirstDimensionSize(){const e=this.rowPartitionValues[0];if(this.rowPartitionTypes.length===0)throw new Error("No row_partition_types given.");const n=this.rowPartitionTypes[0];switch(n){case as.FIRST_DIM_SIZE:return e[0];case as.VALUE_ROWIDS:throw new Error("Cannot handle VALUE_ROWIDS in first dimension.");case as.ROW_SPLITS:return this.rowPartitionValuesShapes[0][0]-1;default:throw new Error(`Cannot handle type ${as[n]}`)}}compute(){if(this.rowPartitionValues[0].length<=0)throw new Error("Invalid first partition input. Tensor requires at least one element.");const n=this.getFirstDimensionSize(),s=this.calculateOutputSize(n),r=new Array(this.raggedRank+1);r[r.length-1]=1;for(let l=r.length-2;l>=0;--l)r[l]=r[l+1]*s[l+1];const o=ck(s,!1),i=St(this.valuesDType,H(o));if(r[0]*s[0]>0){let l=this.calculateFirstParentOutputIndex(n,r[0],s[0]);for(let u=1;u<=this.raggedRank;++u)l=this.calculateOutputIndex(u-1,l,r[u],s[u]);this.setOutput(this.raggedRank,l,i,o)}return[o,i]}setOutput(e,n,s,r){if(s.length===0)return;const o=this.values,i=s;let a=r.slice();a=a.slice(e+1);const l=H(a),u=n.length;let c=this.defaultValue;if(c.length!==l&&c.length!==1){const f=this.defaultValueShape;P(()=>{const m=O(c,f);c=ba(m,a).dataSync()})}let h=0,d=0,p=0;for(let f=0;f<=u;++f){let m=f<u?n[f]:-1;if(m===p){++p;continue}if(d<p){const y=o.subarray(h*l),g=i.subarray(d*l),x=(p-d)*l;uk(g,y,x)}if(f>=u){const y=s.length;m=Math.floor(y/l)}if(m>p)if(this.defaultValue.length===1)i.subarray(p*l,m*l).fill(this.defaultValue[0]),p=m;else for(;m>p;){const y=i.slice(p*l);uk(y,c,l),++p}m<0?(h=f+1,d=p):(h=f,d=p,p=d+1)}}}function uk(t,e,n){for(let s=0;s<n;s++)t[s]=e[s]}function ck(t,e){const n=[];for(let s of t){if(s<0){if(!e)throw new Error(`Dimension ${s} must be >= 0`);if(s<-1)throw new Error(`Dimension ${s} must be >= -1`);s=-1}n.push(s)}return n}function DE(t,e,n,s,r,o,i,a,l,u){return new Vd(t,e,n,s,r,o,i,a,l,u).compute()}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function RE(t,e,n,s){const r=t===e,o=t<e&&n<0,i=e<t&&n>1;if(r||o||i)return Jt(0,s);const a=Math.abs(Math.ceil((e-t)/n)),l=Jt(a,s);e<t&&n===1&&(n=-1),l[0]=t;for(let u=1;u<l.length;u++)l[u]=l[u-1]+n;return l}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const AE=Ho(t=>1/Math.sqrt(t)),qH=nl(cc,AE),XH={kernelName:cc,backendName:"cpu",kernelFunc:qH};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function la(t,e,n,s,r,o,i,a,l,u){const c=[s/r,r],h=t.values,d=e.values;if(s===0)return Ce(n,e.dtype);const p=Ce(c,e.dtype);typeof l=="string"||typeof l=="number"?p.values.fill(l):typeof l=="boolean"&&p.values.fill(+l);for(let f=0;f<o;f++){const m=[];let y=0;for(let g=0;g<i;g++){const x=h[f*i+g];m.push(x),y+=x*a[g]}if(y<0||y>=s/r)throw new Error(`Invalid indices: ${m} does not index into ${n}`);for(let g=0;g<r;g++)u?p.values[y*r+g]+=d[f*r+g]:p.values[y*r+g]=e.rank===0?d[0]:d[f*r+g]}return p}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const YH=Ho(t=>1/(1+Math.exp(-t))),_E=ze(mc,t=>1/(1+Math.exp(-t))),QH={kernelName:mc,backendName:"cpu",kernelFunc:_E};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function OE(t,e,n,s,r){const o=P1(s,e,n),i=H(n),a=me(s);if(o){const h=z1(e,a);return r==="string"?t.slice(h,h+i):t.subarray(h,h+i)}const l=r==="string"?Ci(t):t,u=Ce(s,r,l),c=Ce(n,r);for(let h=0;h<c.size;++h){const d=c.indexToLoc(h),p=d.map((f,m)=>f+e[m]);c.set(u.get(...p),...d)}return r==="string"?MI(c.values):c.values}function Ti(t){const{inputs:e,backend:n,attrs:s}=t,{x:r}=e,{begin:o,size:i}=s;ce(r,"slice");const[a,l]=Ff(r,o,i);F1(r,a,l);const u=n.data.get(r.dataId).values,c=OE(u,a,l,r.shape,r.dtype);return n.makeTensorInfo(l,r.dtype,c)}const ZH={kernelName:sf,backendName:"cpu",kernelFunc:Ti};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function FE(t,e,n,s,r,o,i){const a=e[0],l=o[0],u=new Array(l),c=new Array(a),h=e[1];if(l===0){if(a!==0)throw new Error($I(a));const y=St(n,0),g=St(r,0);return[y,[0,h],g,u,c]}let d=!0,p=0;const f=new Array(l).fill(0);for(let y=0;y<a;++y){const g=t[y*h];if(g<0)throw new Error(II(y,g));if(g>=l)throw new Error(TI(y,g,l));++f[g],d=d&&g>=p,p=g}let m=!0;for(let y=0;y<l;++y){const g=f[y]===0;u[y]=g,m=m&&!g,f[y]=Math.max(f[y],1),y>0&&(f[y]+=f[y-1])}if(m&&d){const y=t,g=s;for(let x=0;x<a;++x)c[x]=x;return[y,[a,h],g,u,c]}else{const y=f[l-1],g=St(n,y*h),x=St(r,y),b=new Array(l).fill(0);for(let w=0;w<a;++w){const k=t[w*h],S=b[k],N=(k===0?0:f[k-1])+S;b[k]++;for(let $=0;$<h;++$)g[N*h+$]=t[w*h+$];x[N]=s[w],c[w]=N}for(let w=0;w<l;++w)if(b[w]===0){const S=w===0?0:f[w-1];g[S*h+0]=w;for(let N=1;N<h;++N)g[S*h+N]=0;x[S]=i}return[g,[y,h],x,u,c]}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function LE(t,e,n,s,r){const o=H(s),i=e[0],a=r.length,l=[];let u=1,c=-1;for(let y=0;y<a;++y){const g=r[y];if(g===-1){if(c!==-1)throw new Error(EI(c,y));c=y,l.push(1)}else{if(g<0)throw new Error(DI(y,g));u*=g,l.push(g)}}if(c!==-1){if(u<=0)throw new Error(RI());const y=Math.trunc(o/u);if(u*y!==o)throw new Error(AI(s,l));l[c]=y}if(H(l)!==o)throw new Error(_I(s,l));const d=s.length,p=[];if(d>0){p[d-1]=1;for(let y=d-2;y>=0;--y)p[y]=p[y+1]*s[y+1]}const f=[];if(a>0){f[a-1]=1;for(let y=a-2;y>=0;--y)f[y]=f[y+1]*l[y+1]}const m=St(n,i*a);for(let y=0;y<i;++y){let g=0;for(let x=0;x<d;++x)g+=t[y*d+x]*p[x];for(let x=0;x<a;++x)m[y*a+x]=Math.trunc(g/f[x]),g%=f[x]}return[m,[i,a],l]}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ab(t,e,n,s,r,o=!1,i=0){const a=s.length,l=[e[0],t.length/e[0]],u=l[1],h=a>0?r[a-1]+1:0;if(h<0)throw new Error(my());const d=e.slice();d[0]=h;const p=d.reduce((b,w)=>b*w,1),f=St(n,p);if(a===0)return h>0&&f.fill(i),[f,d];if(h<=0)throw new Error(my());let m=0,y=1,g=0,x=r[m];for(;;){let b=0;if(y<a){if(b=r[y],x===b){++y;continue}if(x>=b)throw new Error(OI())}if(x<0||x>=h)throw new Error(FI(x,h));x>g&&f.fill(i,g*u,x*u);for(let w=m;w<y;++w){const k=s[w];if(k<0||k>=l[0])throw new Error(LI(w,s[w],l[0]));for(let S=0;S<u;S++)f[x*u+S]+=t[k*u+S]}if(o)for(let w=0;w<u;w++)f[x*u+w]/=y-m;if(m=y,++y,g=x+1,x=b,y>a)break}return g<h&&f.fill(i,g*u,h*u),[f,d]}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const JH=Ho(t=>Math.sqrt(t)),ej=ze(yc,t=>Math.sqrt(t)),tj={kernelName:yc,backendName:"cpu",kernelFunc:ej};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const PE=Ct((t,e)=>{const n=t-e;return n*n}),nj=Vt(xc,PE),sj={kernelName:xc,backendName:"cpu",kernelFunc:nj};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zE(t,e,n,s){const r=Ce(t,e.dtype);for(let o=0;o<r.size;o++){const i=r.indexToLoc(o),a=new Array(i.length);for(let l=0;l<a.length;l++)a[l]=i[l]*n[l]+s[l];r.set(e.get(...a),...i)}return r}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class rj{constructor(e,n,s,r,o,i){this.separator=yo(e),this.nGramWidths=n,this.leftPad=yo(s),this.rightPad=yo(r),this.padWidth=o,this.preserveShort=i}getPadWidth(e){return Math.min(this.padWidth<0?e-1:this.padWidth,e-1)}getNumNGrams(e,n){const s=this.getPadWidth(n);return Math.max(0,e+2*s-n+1)}createNGrams(e,n,s,r,o,i){for(let a=0;a<o;++a){const l=this.getPadWidth(i),u=Math.max(0,l-a),c=Math.max(0,l-(o-(a+1))),h=i-(u+c),d=n+(u>0?0:a-l);let p=0;p+=u*this.leftPad.length;for(let x=0;x<h;++x)p+=e[d+x].length;p+=c*this.rightPad.length;const f=u+c+h-1;p+=f*this.separator.length,s[r+a]=new Uint8Array(p);const m=s[r+a];let y=0;const g=x=>x.forEach(b=>m[y++]=b);for(let x=0;x<u;++x)g(this.leftPad),g(this.separator);for(let x=0;x<h-1;++x)g(e[d+x]),g(this.separator);if(h>0){g(e[d+h-1]);for(let x=0;x<c;++x)g(this.separator),g(this.rightPad)}else{for(let x=0;x<c-1;++x)g(this.rightPad),g(this.separator);g(this.rightPad)}}}compute(e,n){const s=e.length,r=n.length;if(r>0){let l=n[0];if(l!==0)throw new Error(`First split value must be 0, got ${l}`);for(let u=1;u<r;++u){let c=n[u]>=l;if(c=c&&n[u]<=s,!c)throw new Error(`Invalid split value ${n[u]}, must be in [${l}, ${s}]`);l=n[u]}if(l!==s)throw new Error(`Last split value must be data size. Expected ${s}, got ${l}`)}const o=r-1,i=St("int32",r);if(s===0||r===0){const l=new Array(s);for(let u=0;u<=o;++u)i[u]=0;return[l,i]}i[0]=0;for(let l=1;l<=o;++l){const u=n[l]-n[l-1];let c=0;this.nGramWidths.forEach(h=>{c+=this.getNumNGrams(u,h)}),this.preserveShort&&u>0&&c===0&&(c=1),i[l]=i[l-1]+c}const a=new Array(i[o]);for(let l=0;l<o;++l){const u=n[l];let c=i[l];if(this.nGramWidths.forEach(h=>{const d=n[l+1]-n[l],p=this.getNumNGrams(d,h);this.createNGrams(e,u,a,c,p,h),c+=p}),this.preserveShort&&c===i[l]){const h=n[l+1]-n[l];if(h===0)continue;const d=h+2*this.padWidth,p=1;this.createNGrams(e,u,a,c,p,d)}}return[a,i]}}function ME(t,e,n,s,r,o,i,a){return new rj(n,s,r,o,i,a).compute(t,e)}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function oj(t,e,n,s){if(!t.length)return;if(e.length===0){for(let o=0;o<t.length;++o)s.push(t.subarray(o,o+1));return}if(e.length===1){const o=e[0];let i=t.indexOf(o);for(;i!==-1;){const a=t.subarray(0,i);(!n||a.length!==0)&&s.push(a),t=t.subarray(i+1),i=t.indexOf(o)}(!n||t.length!==0)&&s.push(t);return}let r=0;for(let o=0;o<t.length+1;o++)if(o===t.length||e.indexOf(t[o])!==-1){const i=t.subarray(r,o);(!n||i.length!==0)&&s.push(i),r=o+1}}function BE(t,e,n){const s=t.length,r=[];let o=0,i=0;const a=new Array(s);for(let d=0;d<s;++d){const p=r.length;oj(t[d],e,n,r);const f=r.length-p;a[d]=f,o+=f,i=Math.max(i,f)}const l=St("int32",o*2),u=new Array(o),c=[s,i];let h=0;for(let d=0;d<s;++d)for(let p=0;p<a[d];++p)l[h*2]=d,l[h*2+1]=p,u[h]=r[h],++h;return[l,u,c]}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function VE(t,e){const n=St("int32",t.length);for(let s=0;s<t.length;++s)n[s]=tO(t[s]).modulo(e).getLowBitsUnsigned();return n}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const WE=Ct((t,e)=>t-e),ij=Tb((t,e,n,s)=>({real:t-n,imag:e-s})),_b=Vt(bc,WE,ij),aj={kernelName:bc,backendName:"cpu",kernelFunc:_b};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function UE(t,e){const n=new Array(t.rank);for(let r=0;r<n.length;r++)n[r]=t.shape[r]*e[r];const s=Ce(n,t.dtype);for(let r=0;r<s.values.length;++r){const o=s.indexToLoc(r),i=new Array(t.rank);for(let l=0;l<i.length;l++)i[l]=o[l]%t.shape[l];const a=t.locToIndex(i);s.values[r]=t.values[a]}return s}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Rl=(t,e)=>{const n=e.value-t.value;return n===0?t.index-e.index:n};function GE(t,e,n=0,s=t.length-1){for(;s>n;){if(s-n>600){const a=s-n+1,l=e-n+1,u=Math.log(a),c=.5*Math.exp(2*u/3),h=.5*Math.sqrt(u*c*(a-c)/a)*Math.sign(l-a/2),d=Math.max(n,Math.floor(e-l*c/a+h)),p=Math.min(s,Math.floor(e+(a-l)*c/a+h));GE(t,e,d,p)}const r=t[e];let o=n,i=s;for(ji(t,n,e),Rl(t[s],r)>0&&ji(t,n,s);o<i;){for(ji(t,o,i),o++,i--;Rl(t[o],r)<0;)o=o+1;for(;Rl(t[i],r)>0;)i=i-1}Rl(t[n],r)===0?ji(t,n,i):(i=i+1,ji(t,i,s)),i<=e&&(n=i+1),e<=i&&(s=i-1)}}function HE(t,e,n,s,r){const o=e[e.length-1],[i,a]=[t.length/o,o],l=zt(n,i*s),u=zt("int32",i*s);for(let h=0;h<i;h++){const d=h*a,p=t.subarray(d,d+a);let f=new Array(p.length);p.forEach((x,b)=>f[b]={value:x,index:b}),s<f.length&&(GE(f,s),f=f.slice(0,s)),r&&f.sort(Rl);const m=h*s,y=l.subarray(m,m+s),g=u.subarray(m,m+s);for(let x=0;x<s;x++)y[x]=f[x].value,g[x]=f[x].index}const c=e.slice();return c[c.length-1]=s,[Ce(c,n,l),Ce(c,"int32",u)]}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jE(t,e,n,s){const r=$e(e,n)[0],o=[1,n[0],1];for(let f=0;f<r;f++)o[0]*=n[f];o[1]=n[r];for(let f=r+1;f<n.length;f++)o[2]*=n[f];const i={},a=new Int32Array(n[r]),l=new Pt(o,s,t),u=[],c=o[0]===1&&o[2]===1;for(let f=0;f<n[r];f++){let m;if(c)m=t[f].toString();else{const y=[];for(let g=0;g<o[0];g++)for(let x=0;x<o[2];x++)y.push(l.get(g,f,x));m=y.join(",")}if(i[m]!==void 0)a[f]=i[m];else{const y=Object.keys(i).length;i[m]=y,a[f]=y,u.push(f)}}const h=o.slice();h[1]=Object.keys(i).length;const d=new Pt(h,s);u.forEach((f,m)=>{for(let y=0;y<o[0];y++)for(let g=0;g<o[2];g++)d.set(l.get(y,f,g),y,m,g)});const p=n.slice();return p[r]=h[1],{outputValues:d.values,outputShape:p,indices:a}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const lj=Object.freeze(Object.defineProperty({__proto__:null,simpleAbsImpl:nE,addImpl:rE,bincountImpl:Eb,bincountReduceImpl:oE,castImpl:sE,ceilImpl:iE,concatImpl:aE,equalImpl:lE,expImpl:cE,expm1Impl:dE,floorImpl:pE,gatherNdImpl:fE,gatherV2Impl:mE,greaterImpl:gE,greaterEqualImpl:yE,lessImpl:xE,lessEqualImpl:bE,linSpaceImpl:wE,logImpl:vE,maxImpl:kE,maximumImpl:SE,minimumImpl:CE,multiplyImpl:Db,negImpl:NE,notEqualImpl:$E,prodImpl:IE,raggedGatherImpl:TE,raggedRangeImpl:EE,raggedTensorToTensorImpl:DE,rangeImpl:RE,rsqrtImpl:AE,scatterImpl:la,sigmoidImpl:YH,sliceImpl:OE,sparseFillEmptyRowsImpl:FE,sparseReshapeImpl:LE,sparseSegmentReductionImpl:Ab,sqrtImpl:JH,squaredDifferenceImpl:PE,stridedSliceImpl:zE,stringNGramsImpl:ME,stringSplitImpl:BE,stringToHashBucketFastImpl:VE,subImpl:WE,tileImpl:UE,topKImpl:HE,transposeImpl:Rb,uniqueImpl:jE},Symbol.toStringTag,{value:"Module"}));/** @license See the LICENSE file. *//**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */_N("cpu",()=>new Xf,1);/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const KE=ze(Wu,t=>t>=0?t:Math.exp(t)-1),uj={kernelName:Wu,backendName:"cpu",kernelFunc:KE};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qE(t){const{inputs:e,backend:n,attrs:s}=t,{x:r}=e,{alpha:o}=s;ce([r],"leakyRelu");const i=H(r.shape),a=n.data.get(r.dataId).values,l=zt("float32",i);for(let u=0;u<a.length;u++)l[u]=a[u]<0?o*a[u]:a[u];return n.makeTensorInfo(r.shape,"float32",l)}const cj={kernelName:Rp,backendName:"cpu",kernelFunc:qE};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const hj=Ct((t,e)=>t<0?e*t:t);function XE(t){const{inputs:e,backend:n}=t,{x:s,alpha:r}=e;ce([s,r],"prelu");const o=n.data.get(s.dataId).values,i=n.data.get(r.dataId).values,[a,l]=hj(s.shape,r.shape,o,i,"float32");return n.makeTensorInfo(l,"float32",a)}const dj={kernelName:Yp,backendName:"cpu",kernelFunc:XE};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const YE=ze(ac,t=>Math.max(0,t)),pj={kernelName:ac,backendName:"cpu",kernelFunc:YE};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const QE=ze(lc,t=>Math.min(Math.max(0,t),6)),fj={kernelName:lc,backendName:"cpu",kernelFunc:QE};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Wd(t,e,n,s,r){if(n==="linear")return br({inputs:{x:e},backend:t});if(n==="relu")return YE({inputs:{x:e},backend:t});if(n==="elu")return KE({inputs:{x:e},backend:t});if(n==="relu6")return QE({inputs:{x:e},backend:t});if(n==="prelu")return XE({inputs:{x:e,alpha:s},backend:t});if(n==="leakyrelu")return qE({inputs:{x:e},backend:t,attrs:{alpha:r}});if(n==="sigmoid")return _E({inputs:{x:e},backend:t});throw new Error(`Activation ${n} has not been implemented for the CPU backend.`)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function je(t){const{inputs:e,backend:n,attrs:s}=t,{x:r}=e,{shape:o}=s,i=H(r.shape),a=ZC(o,i),l=H(a);C(i===l,()=>`The new shape (${a}) has ${l} elements and the old shape (${r.shape}) has ${i} elements. The new shape and old shape must have the same number of elements.`),n.incRef(r.dataId);const u=n.data.get(r.dataId);if(u.complexTensorInfos!=null){const c=u.complexTensorInfos.real,h=u.complexTensorInfos.imag;c.shape=a,h.shape=a}return{dataId:r.dataId,shape:a,dtype:r.dtype}}const mj={kernelName:Zp,backendName:"cpu",kernelFunc:je};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ZE(t){const{inputs:e,backend:n,attrs:s}=t,{a:r,b:o}=e,{transposeA:i,transposeB:a}=s;ce([r,o],"matMul");const l=r.shape.length,u=o.shape.length,c=i?r.shape[l-2]:r.shape[l-1],h=a?o.shape[u-1]:o.shape[u-2],d=i?r.shape[l-1]:r.shape[l-2],p=a?o.shape[u-2]:o.shape[u-1],f=r.shape.slice(0,-2),m=o.shape.slice(0,-2),y=H(f),g=H(m),b=we(r.shape.slice(0,-2),o.shape.slice(0,-2)).concat([d,p]);C(c===h,()=>`Error in matMul: inner shapes (${c}) and (${h}) of Tensors with shapes ${r.shape} and ${o.shape} and transposeA=${i} and transposeB=${a} must match.`);const w=i?[y,c,d]:[y,d,c],k=a?[g,p,h]:[g,h,p],S=je({inputs:{x:r},backend:n,attrs:{shape:w}}),N=je({inputs:{x:o},backend:n,attrs:{shape:k}}),$=i?S.shape[1]:S.shape[2],T=i?S.shape[2]:S.shape[1],E=a?N.shape[1]:N.shape[2],F=Math.max(y,g),M=n.data.get(S.dataId).values,B=n.data.get(N.dataId).values,V=me(S.shape),W=me(N.shape),[G,q,_]=i?[V[0],1,V[1]]:[V[0],V[1],1],[z,j,X]=a?[1,W[1],W[0]]:[W[1],1,W[0]],Y=T*E,J=Ce([F,T,E],S.dtype),ne=J.values,te=n.blockSize;for(let re=0;re<F;re++){const de=re%y,xe=re%g;for(let ye=0;ye<T;ye+=te){const ke=Math.min(ye+te,T);for(let Ne=0;Ne<E;Ne+=te){const Pe=Math.min(Ne+te,E);for(let Ue=0;Ue<$;Ue+=te){const ct=Math.min(Ue+te,$);for(let Ge=ye;Ge<ke;Ge++)for(let Me=Ne;Me<Pe;Me++){let ot=0;for(let Ze=Ue;Ze<ct;Ze++){const vr=M[de*G+Ge*q+Ze*_],Wt=B[Ze*z+Me*j+xe*X];ot+=vr*Wt}ne[re*Y+(Ge*E+Me)]+=ot}}}}}return n.disposeIntermediateTensorInfo(S),n.disposeIntermediateTensorInfo(N),n.makeTensorInfo(b,J.dtype,J.values)}const gj={kernelName:gp,backendName:"cpu",kernelFunc:ZE};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yj(t){const{inputs:e,backend:n,attrs:s}=t,{a:r,b:o,bias:i,preluActivationWeights:a}=e,{transposeA:l,transposeB:u,activation:c,leakyreluAlpha:h}=s;let d,p,f;const m=[];d=ZE({inputs:{a:r,b:o},attrs:{transposeA:l,transposeB:u},backend:n}),i&&(p=za({inputs:{a:d,b:i},backend:n}),m.push(d),d=p),c&&(f=Wd(n,d,c,a,h),m.push(d),d=f);for(const g of m)n.disposeIntermediateTensorInfo(g);return d}const xj={kernelName:bd,backendName:"cpu",kernelFunc:yj};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const bj=ze(Eu,t=>Math.acos(t)),wj={kernelName:Eu,backendName:"cpu",kernelFunc:bj};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const vj=ze(Du,t=>Math.acosh(t)),kj={kernelName:Du,backendName:"cpu",kernelFunc:vj};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Sj(t){const{inputs:e,backend:n}=t,s=e;ce(e,"addN");const r=s.map(a=>n.data.get(a.dataId).values),o=Ce(s[0].shape,s[0].dtype),i=o.values;for(let a=0;a<s.length;a++){const l=r[a];for(let u=0;u<i.length;u++)i[u]+=l[u]}return n.makeTensorInfo(o.shape,o.dtype,o.values)}const Cj={kernelName:hp,backendName:"cpu",kernelFunc:Sj};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Nj(t){const{inputs:e,backend:n,attrs:s}=t,{x:r}=e,{axis:o,keepDims:i}=s;ce(r,"all");const a=$e(o,r.shape);let l=a;const u=ut(l,r.shape.length);let c=r;u!=null&&(c=kn({inputs:{x:r},backend:n,attrs:{perm:u}}),l=bt(l.length,r.shape.length)),Kt("all",l,c.shape.length);const[h,d]=Bt(c.shape,l),p=H(d),f=Jt(H(h),c.dtype),m=n.data.get(c.dataId).values;for(let g=0;g<f.length;++g){const x=g*p;let b=m[x];for(let w=0;w<p;++w){const k=m[x+w];b=b&&k}f[g]=b}u!=null&&n.disposeIntermediateTensorInfo(c);const y=n.makeTensorInfo(h,c.dtype,f);if(i){const g=xt(h,a),x=je({inputs:{x:y},backend:n,attrs:{shape:g}});return n.disposeIntermediateTensorInfo(y),x}return y}const $j={kernelName:V0,backendName:"cpu",kernelFunc:Nj};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ij(t){const{inputs:e,backend:n,attrs:s}=t,{x:r}=e,{axis:o,keepDims:i}=s;ce(r,"any");const a=$e(o,r.shape);let l=a;const u=ut(l,r.shape.length);let c=r;u!=null&&(c=kn({inputs:{x:r},backend:n,attrs:{perm:u}}),l=bt(l.length,r.shape.length)),Kt("any",l,c.shape.length);const[h,d]=Bt(c.shape,l),p=H(d),f=Jt(H(h),c.dtype),m=n.data.get(c.dataId).values;for(let g=0;g<f.length;++g){const x=g*p;let b=m[x];for(let w=0;w<p;++w){const k=m[x+w];b=b||k}f[g]=b}u!=null&&n.disposeIntermediateTensorInfo(c);const y=n.makeTensorInfo(h,c.dtype,f);if(i){const g=xt(h,a),x=je({inputs:{x:y},backend:n,attrs:{shape:g}});return n.disposeIntermediateTensorInfo(y),x}return y}const Tj={kernelName:W0,backendName:"cpu",kernelFunc:Ij};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ej(t){const{inputs:e,backend:n,attrs:s}=t,{x:r}=e,{axis:o}=s;ce(r,"argMax");let i=$e(o,r.shape);const a=ut(i,r.shape.length);let l=r;const u=[];a!=null&&(l=kn({inputs:{x:r},backend:n,attrs:{perm:a}}),u.push(l),i=bt(i.length,l.shape.length)),i=[i[0]],Kt("argMax",i,l.shape.length);const[c,h]=Bt(l.shape,i),d=H(c),p=Jt(d,"int32"),f=H(h),m=n.data.get(l.dataId).values;for(let y=0;y<p.length;++y){const g=y*f;let x=m[g],b=0;for(let w=0;w<f;++w){const k=m[g+w];k>x&&(x=k,b=w)}p[y]=b}return u.forEach(y=>n.disposeIntermediateTensorInfo(y)),n.makeTensorInfo(c,"int32",p)}const Dj={kernelName:dp,backendName:"cpu",kernelFunc:Ej};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Rj(t){const{inputs:e,backend:n,attrs:s}=t,{x:r}=e,{axis:o}=s;ce(r,"argMin");let i=$e(o,r.shape);const a=ut(i,r.shape.length);let l=r;const u=[];a!=null&&(l=kn({inputs:{x:r},backend:n,attrs:{perm:a}}),u.push(l),i=bt(i.length,l.shape.length)),i=[i[0]],Kt("argMin",i,l.shape.length);const[c,h]=Bt(l.shape,i),d=H(c),p=Jt(d,"int32"),f=H(h),m=n.data.get(l.dataId).values;for(let y=0;y<p.length;++y){const g=y*f;let x=m[g],b=0;for(let w=0;w<f;++w){const k=m[g+w];k<x&&(x=k,b=w)}p[y]=b}return u.forEach(y=>n.disposeIntermediateTensorInfo(y)),n.makeTensorInfo(c,"int32",p)}const Aj={kernelName:pp,backendName:"cpu",kernelFunc:Rj};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const _j=ze(Ru,t=>Math.asin(t)),Oj={kernelName:Ru,backendName:"cpu",kernelFunc:_j};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Fj=ze(Au,t=>Math.asinh(t)),Lj={kernelName:Au,backendName:"cpu",kernelFunc:Fj};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Pj=ze(_u,t=>Math.atan(t)),zj={kernelName:_u,backendName:"cpu",kernelFunc:Pj};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Mj=Ct((t,e)=>Math.atan2(t,e)),Bj=Vt(Fu,Mj),Vj={kernelName:Fu,backendName:"cpu",kernelFunc:Bj};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Wj=ze(Ou,t=>Math.atanh(t)),Uj={kernelName:Ou,backendName:"cpu",kernelFunc:Wj};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ob(t,e,n,s,r,o){const i=r.strideHeight,a=r.strideWidth,l=r.dilationHeight,u=r.dilationWidth,c=r.effectiveFilterHeight,h=r.effectiveFilterWidth,d=r.padInfo.top,p=r.padInfo.left,f=o==="max"?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,m=Ce(r.outShape,n),y=m.values,g=r.outShape[1]*r.outShape[2]*r.outShape[3],x=r.outShape[2]*r.outShape[3],b=r.outShape[3];for(let w=0;w<r.batchSize;++w){const k=w*g,S=w*s[0];for(let N=0;N<r.inChannels;++N)for(let $=0;$<r.outHeight;++$){const T=$*i-d,E=Math.max(0,T),F=Math.min(r.inHeight,c+T),M=k+$*x;for(let B=0;B<r.outWidth;++B){const V=B*a-p,W=Math.max(0,V),G=Math.min(r.inWidth,h+V);let q=f,_=0,z=0;for(let X=E;X<F;X+=l){const Y=S+X*s[1];for(let J=W;J<G;J+=u){const ne=Y+J*s[2],te=t[ne+N];o==="max"&&te>q?q=te:o==="avg"&&(_+=te,z++)}if(isNaN(q))break}const j=M+B*b+N;y[j]=o==="avg"?_/z:q}}}return m}function JE(t,e,n,s,r=!1,o=!1){const i=Ce(s.outShape,"int32"),a=s.strideHeight,l=s.strideWidth,u=s.dilationHeight,c=s.dilationWidth,h=s.effectiveFilterHeight,d=s.effectiveFilterWidth,p=s.padInfo.top,f=s.padInfo.left,m=Ce(e,n,t);for(let y=0;y<s.batchSize;++y)for(let g=0;g<s.inChannels;++g)for(let x=0;x<s.outHeight;++x){const b=x*a-p;let w=b;for(;w<0;)w+=u;const k=Math.min(s.inHeight,h+b);for(let S=0;S<s.outWidth;++S){const N=S*l-f;let $=N;for(;$<0;)$+=c;const T=Math.min(s.inWidth,d+N);let E=Number.NEGATIVE_INFINITY,F=-1;for(let M=w;M<k;M+=u){const B=M-b;for(let V=$;V<T;V+=c){const W=V-N,G=m.get(y,M,V,g);G>E&&(E=G,r?F=o?((y*s.inHeight+M)*s.inWidth+V)*s.inChannels+g:(M*s.inWidth+V)*s.inChannels+g:F=B*d+W)}}i.set(F,y,x,S,g)}}return i}function eD(t,e,n,s,r,o){const i=r.strideDepth,a=r.strideHeight,l=r.strideWidth,u=r.dilationDepth,c=r.dilationHeight,h=r.dilationWidth,d=r.effectiveFilterDepth,p=r.effectiveFilterHeight,f=r.effectiveFilterWidth,m=r.padInfo.front,y=r.padInfo.top,g=r.padInfo.left,x=o==="max"?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,b=Ce(r.outShape,n),w=b.values,k=r.outShape[1]*r.outShape[2]*r.outShape[3]*r.outShape[4],S=r.outShape[2]*r.outShape[3]*r.outShape[4],N=r.outShape[3]*r.outShape[4],$=r.outShape[4];for(let T=0;T<r.batchSize;++T){const E=T*k,F=T*s[0];for(let M=0;M<r.inChannels;++M)for(let B=0;B<r.outDepth;++B){const V=B*i-m;let W=V;for(;W<0;)W+=u;const G=Math.min(r.inDepth,d+V),q=E+B*S;for(let _=0;_<r.outHeight;++_){const z=_*a-y;let j=z;for(;j<0;)j+=c;const X=Math.min(r.inHeight,p+z),Y=q+_*N;for(let J=0;J<r.outWidth;++J){const ne=J*l-g;let te=ne;for(;te<0;)te+=h;const re=Math.min(r.inWidth,f+ne),de=Y+J*$;let xe=x,ye=0,ke=0;for(let Pe=W;Pe<G;Pe+=u){const Ue=F+Pe*s[1];for(let ct=j;ct<X;ct+=c){const Ge=Ue+ct*s[2];for(let Me=te;Me<re;Me+=h){const ot=Ge+Me*s[3],Ze=t[ot+M];if(o==="max"&&Ze>xe?xe=Ze:o==="avg"&&(ye+=Ze,ke++),isNaN(xe))break}if(isNaN(xe))break}if(isNaN(xe))break}const Ne=de+M;w[Ne]=o==="avg"?ye/Math.max(ke,1):xe}}}}return b}function Gj(t,e){const n=Ce(e.outShape,"int32"),s=e.strideDepth,r=e.strideHeight,o=e.strideWidth,i=e.dilationDepth,a=e.dilationHeight,l=e.dilationWidth,u=e.effectiveFilterDepth,c=e.effectiveFilterHeight,h=e.effectiveFilterWidth,d=e.padInfo.front,p=e.padInfo.top,f=e.padInfo.left;for(let m=0;m<e.batchSize;++m)for(let y=0;y<e.inChannels;++y)for(let g=0;g<e.outDepth;++g){const x=g*s-d;let b=x;for(;b<0;)b+=i;const w=Math.min(e.inDepth,u+x);for(let k=0;k<e.outHeight;++k){const S=k*r-p;let N=S;for(;N<0;)N+=a;const $=Math.min(e.inHeight,c+S);for(let T=0;T<e.outWidth;++T){const E=T*o-f;let F=E;for(;F<0;)F+=l;const M=Math.min(e.inWidth,h+E);let B=Number.NEGATIVE_INFINITY,V=-1;for(let W=b;W<w;W+=i){const G=W-x;for(let q=N;q<$;q+=a){const _=q-S;for(let z=F;z<M;z+=l){const j=z-E,X=t.get(m,W,q,z,y);X>=B&&(B=X,V=G*c*h+_*c+j)}}}n.set(V,m,g,k,T,y)}}}return n}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Hj(t){const{inputs:e,backend:n,attrs:s}=t,{x:r}=e;ce(r,"avgPool");const{filterSize:o,strides:i,pad:a,dimRoundingMode:l}=s,u=1;C(jt(i,u),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${i} and dilations '${u}'`);const c=Rs(r.shape,o,i,u,a,l);let h;if(c.filterWidth===1&&c.filterHeight===1&&Ae(c.inShape,c.outShape))h=br({inputs:{x:r},backend:n});else{const d=n.data.get(r.dataId).values,p=me(r.shape),f=Ob(d,r.shape,r.dtype,p,c,"avg");h=n.makeTensorInfo(c.outShape,r.dtype,f.values)}return h}const jj={kernelName:fp,backendName:"cpu",kernelFunc:Hj};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Kj(t){const{inputs:e,backend:n,attrs:s}=t,{x:r}=e,{filterSize:o,strides:i,pad:a,dimRoundingMode:l,dataFormat:u}=s;ce(r,"avgPool3d");const c=Vr(r.shape,o,i,1,a,l,u),h=n.data.get(r.dataId).values,d=eD(h,r.shape,r.dtype,me(r.shape),c,"avg");return n.makeTensorInfo(d.shape,"float32",d.values)}const qj={kernelName:mp,backendName:"cpu",kernelFunc:Kj};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Xj(t){const{inputs:e,backend:n,attrs:s}=t,{dy:r,input:o}=e,{filterSize:i,strides:a,pad:l,dimRoundingMode:u}=s;ce([r,o],"avgPool3DGrad");const c=Vr(o.shape,i,a,1,l,u),h=c.strideDepth,d=c.strideHeight,p=c.strideWidth,f=c.filterDepth,m=c.filterHeight,y=c.filterWidth,g=c.dilationDepth,x=c.dilationHeight,b=c.dilationWidth,w=c.effectiveFilterDepth,k=c.effectiveFilterHeight,S=c.effectiveFilterWidth,N=w-1-c.padInfo.front,$=S-1-c.padInfo.left,T=k-1-c.padInfo.top,E=Ce(o.shape,"float32"),F=1/(f*m*y),M=n.bufferSync(r);for(let B=0;B<c.batchSize;++B)for(let V=0;V<c.inChannels;++V)for(let W=0;W<c.inDepth;++W)for(let G=0;G<c.inHeight;++G)for(let q=0;q<c.inWidth;++q){const _=W-N,z=G-T,j=q-$;let X=0;for(let Y=0;Y<w;Y+=g){const J=(_+Y)/h;if(!(J<0||J>=c.outDepth||Math.floor(J)!==J))for(let ne=0;ne<k;ne+=x){const te=(z+ne)/d;if(!(te<0||te>=c.outHeight||Math.floor(te)!==te))for(let re=0;re<S;re+=b){const de=(j+re)/p;if(de<0||de>=c.outWidth||Math.floor(de)!==de)continue;const xe=M.get(B,J,te,de,V);X+=xe}}}E.set(X*F,B,W,G,q,V)}return n.makeTensorInfo(E.shape,E.dtype,E.values)}const Yj={kernelName:G0,backendName:"cpu",kernelFunc:Xj};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Qj(t){const{inputs:e,backend:n,attrs:s}=t,{dy:r,input:o}=e,i=o;ce([r,o],"avgPoolGrad");const{filterSize:a,strides:l,pad:u}=s,c=Rs(i.shape,a,l,1,u),h=c.strideHeight,d=c.strideWidth,p=c.filterHeight,f=c.filterWidth,m=c.dilationHeight,y=c.dilationWidth,g=c.effectiveFilterHeight,x=c.effectiveFilterWidth,b=x-1-c.padInfo.left,w=g-1-c.padInfo.top,k=Ce(i.shape,"float32"),S=1/(p*f),N=n.data.get(r.dataId).values,$=Ce(r.shape,"float32",N);for(let T=0;T<c.batchSize;++T)for(let E=0;E<c.inChannels;++E)for(let F=0;F<c.inHeight;++F)for(let M=0;M<c.inWidth;++M){const B=F-w,V=M-b;let W=0;for(let G=0;G<g;G+=m){const q=(B+G)/h;if(!(q<0||q>=c.outHeight||Math.floor(q)!==q))for(let _=0;_<x;_+=y){const z=(V+_)/d;if(z<0||z>=c.outWidth||Math.floor(z)!==z)continue;const j=$.get(T,q,z,E);W+=j}}k.set(W*S,T,F,M,E)}return n.makeTensorInfo(k.shape,k.dtype,k.values)}const Zj={kernelName:U0,backendName:"cpu",kernelFunc:Qj};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Jj(t){const{inputs:e,backend:n,attrs:s}=t,{x:r,scale:o,offset:i,mean:a,variance:l}=e;C(a.shape.length===l.shape.length,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),C(i==null||a.shape.length===i.shape.length,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),C(o==null||a.shape.length===o.shape.length,()=>"Batch normalization gradient requires mean and scale to have equal ranks."),ce([r,a,l,o,i],"batchNorm");let{varianceEpsilon:u}=s;u==null&&(u=.001);const c=n.data.get(r.dataId).values,h=n.data.get(a.dataId).values,d=n.data.get(l.dataId).values,p=o?n.data.get(o.dataId).values:new Float32Array([1]),f=i?n.data.get(i.dataId).values:new Float32Array([0]),m=new Float32Array(c.length),y=f.length,g=p.length,x=d.length,b=h.length;let w=0,k=0,S=0,N=0;for(let $=0;$<c.length;++$)m[$]=f[w++]+(c[$]-h[k++])*p[S++]/Math.sqrt(d[N++]+u),w>=y&&(w=0),k>=b&&(k=0),S>=g&&(S=0),N>=x&&(N=0);return n.makeTensorInfo(r.shape,r.dtype,m)}const e6={kernelName:Tp,backendName:"cpu",kernelFunc:Jj};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function t6(t){const{inputs:e,backend:n,attrs:s}=t,{x:r}=e,{blockShape:o,crops:i}=s;ce([r],"batchToSpaceND");const a=o.reduce((g,x)=>g*x),l=Fc(r.shape,o,a),u=Lc(l.length,o.length),c=Pc(r.shape,o,a),h=U1(i,o.length),d=G1(c,i,o.length),p=je({inputs:{x:r},backend:n,attrs:{shape:l}}),f=kn({inputs:{x:p},backend:n,attrs:{perm:u}}),m=je({inputs:{x:f},backend:n,attrs:{shape:c}}),y=Ti({inputs:{x:m},backend:n,attrs:{begin:h,size:d}});return n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),y}const n6={kernelName:yp,backendName:"cpu",kernelFunc:t6};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function s6(t){const{inputs:e,backend:n,attrs:s}=t,{x:r,weights:o}=e,{size:i}=s,a=n.data.get(r.dataId).values,l=n.data.get(o.dataId).values,u=Eb(a,l,o.dtype,o.shape,i);return n.makeTensorInfo([i],o.dtype,u)}const r6={kernelName:H0,backendName:"cpu",kernelFunc:s6};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function o6(t){const{inputs:e,backend:n}=t,{s0:s,s1:r}=e,o=n.data.get(s.dataId).values,i=n.data.get(r.dataId).values,a=we(Array.from(o),Array.from(i));return n.makeTensorInfo([a.length],"int32",Int32Array.from(a))}const i6={kernelName:j0,backendName:"cpu",kernelFunc:o6};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const a6=ze(zu,(t,e)=>{const n=e;return t>n.clipValueMax?n.clipValueMax:t<n.clipValueMin?n.clipValueMin:t}),l6={kernelName:zu,backendName:"cpu",kernelFunc:a6};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const u6=t=>{const{x:e}=t.inputs,n=t.backend,s=new Float32Array(H(e.shape)),r=n.data.get(e.dataId),o=r.complexTensorInfos.real,i=r.complexTensorInfos.imag,a=n.data.get(o.dataId).values,l=n.data.get(i.dataId).values;for(let u=0;u<a.length;u++){const c=a[u],h=l[u];s[u]=Math.hypot(c,h)}return n.makeOutput(s,e.shape,"float32")},c6={kernelName:xp,backendName:"cpu",kernelFunc:u6};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ma(t){const{inputs:e,backend:n}=t,{input:s}=e,r=n.data.get(s.dataId).complexTensorInfos.imag,o=n.data.get(r.dataId).values;return n.makeTensorInfo(r.shape,r.dtype,o)}const h6={kernelName:hx,backendName:"cpu",kernelFunc:Ma};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ba(t){const{inputs:e,backend:n,attrs:s}=t,{axis:r}=s,o=$e(r,e[0].shape)[0],i=e.map(m=>m.shape);B1(i,o);let a=mr(e.map(m=>m.shape),o);if(H(a)===0)return n.makeTensorInfo(a,e[0].dtype,[]);const l=e.filter(m=>H(m.shape)>0);if(l.length===1)return br({inputs:{x:l[0]},backend:n});if(l[0].dtype==="complex64"){const m=l.map(w=>Ii({inputs:{input:w},backend:n})),y=l.map(w=>Ma({inputs:{input:w},backend:n})),g=Ba({inputs:m,backend:n,attrs:{axis:o}}),x=Ba({inputs:y,backend:n,attrs:{axis:o}}),b=En({inputs:{real:g,imag:x},backend:n});return m.forEach(w=>n.disposeIntermediateTensorInfo(w)),y.forEach(w=>n.disposeIntermediateTensorInfo(w)),n.disposeIntermediateTensorInfo(g),n.disposeIntermediateTensorInfo(x),b}const u=l.map(m=>{const g=[-1,H(m.shape.slice(o))];return je({inputs:{x:m},backend:n,attrs:{shape:g}})}),c=u.map(m=>({vals:n.data.get(m.dataId).values,shape:m.shape}));a=mr(u.map(m=>m.shape),1);const h=u[0].shape[0]===1,d=aE(c,a,e[0].dtype,h),p=mr(l.map(m=>m.shape),o),f=n.makeTensorInfo(p,e[0].dtype,d);return u.forEach(m=>n.disposeIntermediateTensorInfo(m)),f}const d6={kernelName:bp,backendName:"cpu",kernelFunc:Ba};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tD(t){const{inputs:e,backend:n,attrs:s}=t,{x:r,filter:o}=e,{strides:i,pad:a,dataFormat:l,dilations:u,dimRoundingMode:c}=s;ce([r,o],"conv2d");const h=Wr(l),d=Mt(r.shape,o.shape,i,u,a,c,!1,h),p=d.filterHeight,f=d.filterWidth,m=d.dilationHeight,y=d.dilationWidth,g=d.padInfo.left,x=d.padInfo.top,b=d.dataFormat==="channelsLast",w=new Pt(d.outShape,r.dtype),k=me(r.shape),S=me(o.shape),N=k[0],$=b?k[1]:k[2],T=b?k[2]:1,E=b?1:k[1],F=w.strides[0],M=b?w.strides[1]:w.strides[2],B=b?w.strides[2]:1,V=b?1:w.strides[1],W=n.data.get(r.dataId).values,G=n.data.get(o.dataId).values,q=w.values;for(let _=0;_<d.batchSize;++_){const z=_*N,j=_*F;for(let X=0;X<d.outHeight;++X){const Y=j+X*M,J=X*d.strideHeight-x;for(let ne=0;ne<p;++ne){const te=J+ne*m;if(te<0||te>=d.inHeight)continue;const re=ne*S[0],de=z+te*$;for(let xe=0;xe<d.outWidth;++xe){const ye=Y+xe*B,ke=xe*d.strideWidth-g;for(let Ne=0;Ne<f;++Ne){const Pe=ke+Ne*y;if(Pe<0||Pe>=d.inWidth)continue;const Ue=re+Ne*S[1],ct=de+Pe*T;let Ge=Ue;for(let Me=0;Me<d.inChannels;++Me){const ot=W[ct+Me*E];for(let Ze=0;Ze<d.outChannels;++Ze)q[ye+Ze*V]+=ot*G[Ge+Ze];Ge+=d.outChannels}}}}}}return n.makeTensorInfo(w.shape,w.dtype,q)}const p6={kernelName:wp,backendName:"cpu",kernelFunc:tD};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function f6(t){const{inputs:e,backend:n,attrs:s}=t,{x:r,dy:o}=e,{strides:i,pad:a,dataFormat:l,dimRoundingMode:u,filterShape:c}=s;ce([r,o],"conv2dBackpropFilter");const h=Wr(l),d=Mt(r.shape,c,i,1,a,u,!1,h),{strideHeight:p,strideWidth:f,filterHeight:m,filterWidth:y}=d,g=d.dataFormat==="channelsLast",x=new Pt(d.filterShape,"float32"),b=d.padInfo.left,w=d.padInfo.top,k=n.data.get(r.dataId).values,S=n.data.get(o.dataId).values,N=new Pt(r.shape,r.dtype,k),$=new Pt(o.shape,o.dtype,S);for(let T=0;T<m;++T){const E=Math.max(0,Math.ceil((w-T)/p)),F=Math.min(d.outHeight,(d.inHeight+w-T)/p);for(let M=0;M<y;++M){const B=Math.max(0,Math.ceil((b-M)/f)),V=Math.min(d.outWidth,(d.inWidth+b-M)/f);for(let W=0;W<d.inChannels;++W)for(let G=0;G<d.outChannels;++G){let q=0;for(let _=0;_<d.batchSize;++_)for(let z=E;z<F;++z){const j=T+z*p-w;for(let X=B;X<V;++X){const Y=M+X*f-b;g?q+=N.get(_,j,Y,W)*$.get(_,z,X,G):q+=N.get(_,W,j,Y)*$.get(_,G,z,X)}}x.set(q,T,M,W,G)}}}return n.makeTensorInfo(x.shape,x.dtype,x.values)}const m6={kernelName:q0,backendName:"cpu",kernelFunc:f6};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function g6(t){const{inputs:e,backend:n,attrs:s}=t,{dy:r,filter:o}=e,{inputShape:i,strides:a,pad:l,dataFormat:u,dimRoundingMode:c}=s;ce([r,o],"conv2dBackpropInput");const h=me(o.shape),d=me(r.shape);let p=Wr(u);const f=Mt(i,o.shape,a,1,l,c,!1,p),m=new Pt(f.inShape,"float32"),y=m.values,g=n.data.get(r.dataId).values,x=n.data.get(o.dataId).values,[b,w,k]=h,{batchSize:S,filterHeight:N,filterWidth:$,inChannels:T,inHeight:E,inWidth:F,outChannels:M,outHeight:B,outWidth:V,strideHeight:W,strideWidth:G}=f;p=f.dataFormat;const q=N-1-f.padInfo.top,_=$-1-f.padInfo.left,z=p==="channelsLast",j=m.strides[0],X=z?m.strides[1]:m.strides[2],Y=z?m.strides[2]:1,J=z?1:m.strides[1],ne=d[0],te=z?d[1]:d[2],re=z?d[2]:1,de=z?1:d[1];for(let xe=0;xe<S;++xe)for(let ye=0;ye<T;++ye)for(let ke=0;ke<E;++ke){const Ne=ke-q,Pe=Math.max(0,Math.ceil(Ne/W)),Ue=Math.min(B,(N+Ne)/W);for(let ct=0;ct<F;++ct){const Ge=ct-_,Me=Math.max(0,Math.ceil(Ge/G)),ot=Math.min(V,($+Ge)/G);let Ze=0;for(let Wt=Pe;Wt<Ue;++Wt){const jr=Wt*W-Ne;for(let Gn=Me;Gn<ot;++Gn){const Ko=Gn*G-Ge,Os=ne*xe+te*Wt+re*Gn,kr=b*(N-1-jr)+w*($-1-Ko)+k*ye;for(let Kr=0;Kr<M;++Kr){const qr=g[Os+de*Kr],Xr=x[kr+Kr];Ze+=qr*Xr}}}const vr=j*xe+X*ke+Y*ct+J*ye;y[vr]=Ze}}return n.makeTensorInfo(m.shape,m.dtype,m.values)}const y6={kernelName:vp,backendName:"cpu",kernelFunc:g6};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function x6(t){const{inputs:e,backend:n,attrs:s}=t,{x:r,filter:o}=e,{strides:i,pad:a,dilations:l}=s;ce([r,o],"conv3d");const u=Mo(r.shape,o.shape,i,l,a),{filterDepth:c,filterHeight:h,filterWidth:d,dilationDepth:p,dilationHeight:f,dilationWidth:m,padInfo:y}=u,g=y.front,x=y.left,b=y.top,w=new Pt(u.outShape,r.dtype),k=n.data.get(r.dataId).values,S=n.data.get(o.dataId).values,N=w.values,$=me(r.shape),T=me(o.shape);for(let E=0;E<u.batchSize;++E){const F=E*$[0],M=E*w.strides[0];for(let B=0;B<u.outDepth;++B){const V=M+B*w.strides[1],W=B*u.strideDepth-g;for(let G=0;G<c;++G){const q=W+G*p;if(q<0||q>=u.inDepth)continue;const _=G*T[0],z=F+q*$[1];for(let j=0;j<u.outHeight;++j){const X=V+j*w.strides[2],Y=j*u.strideHeight-b;for(let J=0;J<h;++J){const ne=Y+J*f;if(ne<0||ne>=u.inHeight)continue;const te=_+J*T[1],re=z+ne*$[2];for(let de=0;de<u.outWidth;++de){const xe=X+de*u.outChannels,ye=de*u.strideWidth-x;for(let ke=0;ke<d;++ke){const Ne=ye+ke*m;if(Ne<0||Ne>=u.inWidth)continue;const Pe=te+ke*T[2],Ue=re+Ne*u.inChannels;let ct=Pe;for(let Ge=0;Ge<u.inChannels;++Ge){const Me=k[Ue+Ge];for(let ot=0;ot<u.outChannels;++ot)N[xe+ot]+=Me*S[ct+ot];ct+=u.outChannels}}}}}}}}return n.makeTensorInfo(w.shape,w.dtype,w.values)}const b6={kernelName:kp,backendName:"cpu",kernelFunc:x6};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function w6(t){const{inputs:e,backend:n,attrs:s}=t,{x:r,dy:o}=e,{strides:i,pad:a,filterShape:l}=s;ce([r,o],"conv3dBackpropFilterV2");const u=me(r.shape),c=me(o.shape),h=Mo(r.shape,l,i,1,a),d=h.strideDepth,p=h.strideHeight,f=h.strideWidth,m=h.filterDepth,y=h.filterHeight,g=h.filterWidth,x=new Pt(h.filterShape,"float32"),b=x.values,[w,k,S,N]=x.strides,$=n.data.get(o.dataId).values,[T,E,F,M]=c,B=n.data.get(r.dataId).values,[V,W,G,q]=u,_=h.padInfo.front,z=h.padInfo.left,j=h.padInfo.top;for(let X=0;X<m;++X){const Y=Math.max(0,Math.ceil((_-X)/d)),J=Math.min(h.outDepth,(h.inDepth+_-X)/d),ne=X*w;for(let te=0;te<y;++te){const re=Math.max(0,Math.ceil((j-te)/p)),de=Math.min(h.outHeight,(h.inHeight+j-te)/p),xe=te*k+ne;for(let ye=0;ye<g;++ye){const ke=Math.max(0,Math.ceil((z-ye)/f)),Ne=Math.min(h.outWidth,(h.inWidth+z-ye)/f),Pe=ye*S+xe;for(let Ue=0;Ue<h.inChannels;++Ue){const ct=Ue*N+Pe;for(let Ge=0;Ge<h.outChannels;++Ge){let Me=0;for(let ot=0;ot<h.batchSize;++ot){const Ze=ot*V,vr=ot*T;for(let Wt=Y;Wt<J;++Wt){const Gn=(X+Wt*d-_)*W+Ze,Ko=Wt*E+vr;for(let Os=re;Os<de;++Os){const Kr=(te+Os*p-j)*G+Gn,qr=Os*F+Ko;for(let Xr=ke;Xr<Ne;++Xr){const sm=(ye+Xr*f-z)*q+Kr,rm=Xr*M+qr;Me+=B[sm+Ue]*$[rm+Ge]}}}}b[ct+Ge]=Me}}}}}return n.makeTensorInfo(x.shape,x.dtype,x.values)}const v6={kernelName:X0,backendName:"cpu",kernelFunc:w6};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function k6(t){const{inputs:e,backend:n,attrs:s}=t,{dy:r,filter:o}=e,{pad:i,strides:a,inputShape:l}=s;ce([r],"conv3dBackpropInputV2");const u=me(r.shape),c=me(o.shape),h=Mo(l,o.shape,a,1,i),d=new Pt(h.inShape,"float32"),p=d.values,[f,m,y,g]=d.strides,x=n.data.get(r.dataId).values,[b,w,k,S]=u,N=n.data.get(o.dataId).values,[$,T,E,F]=c,{batchSize:M,filterDepth:B,filterHeight:V,filterWidth:W,inChannels:G,inDepth:q,inHeight:_,inWidth:z,outChannels:j,outDepth:X,outHeight:Y,outWidth:J,strideDepth:ne,strideHeight:te,strideWidth:re}=h,de=B-1-h.padInfo.front,xe=V-1-h.padInfo.top,ye=W-1-h.padInfo.left;for(let ke=0;ke<M;++ke)for(let Ne=0;Ne<G;++Ne)for(let Pe=0;Pe<q;++Pe){const Ue=Pe-de,ct=Math.max(0,Math.ceil(Ue/ne)),Ge=Math.min(X,(B+Ue)/ne);for(let Me=0;Me<_;++Me){const ot=Me-xe,Ze=Math.max(0,Math.ceil(ot/te)),vr=Math.min(Y,(V+ot)/te);for(let Wt=0;Wt<z;++Wt){const jr=Wt-ye,Gn=Math.max(0,Math.ceil(jr/re)),Ko=Math.min(J,(W+jr)/re);let Os=0;for(let kr=ct;kr<Ge;++kr){const Kr=kr*ne-Ue;for(let qr=Ze;qr<vr;++qr){const Xr=qr*te-ot;for(let cl=Gn;cl<Ko;++cl){const sm=cl*re-jr,rm=b*ke+w*kr+k*qr+S*cl,rR=$*(B-1-Kr)+T*(V-1-Xr)+E*(W-1-sm)+F*Ne;for(let eh=0;eh<j;++eh){const oR=x[rm+eh],iR=N[rR+eh];Os+=oR*iR}}}}p[f*ke+m*Pe+y*Me+g*Wt+Ne]=Os}}}return n.makeTensorInfo(d.shape,d.dtype,d.values)}const S6={kernelName:Y0,backendName:"cpu",kernelFunc:k6};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const C6=ze(Mu,t=>Math.cos(t)),N6={kernelName:Mu,backendName:"cpu",kernelFunc:C6};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $6=ze(Bu,t=>Math.cosh(t)),I6={kernelName:Bu,backendName:"cpu",kernelFunc:$6};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function T6(t){const{inputs:e,backend:n,attrs:s}=t,{image:r,boxes:o,boxInd:i}=e,{cropSize:a,method:l,extrapolationValue:u}=s,[c,h,d,p]=r.shape,f=o.shape[0],[m,y]=a,g=Ce([f,m,y,p],"float32"),x=n.data.get(o.dataId).values,b=n.data.get(i.dataId).values,w=n.data.get(r.dataId).values,k=me(r.shape),S=me(g.shape);for(let N=0;N<f;N++){const $=N*4,T=x[$],E=x[$+1],F=x[$+2],M=x[$+3],B=b[N];if(B>=c)continue;const V=m>1?(F-T)*(h-1)/(m-1):0,W=y>1?(M-E)*(d-1)/(y-1):0;for(let G=0;G<m;G++){const q=m>1?T*(h-1)+G*V:.5*(T+F)*(h-1);if(q<0||q>h-1){for(let _=0;_<y;_++)for(let z=0;z<p;z++){const j=z+_*S[2]+G*S[1]+N*S[0];g.values[j]=u}continue}if(l==="bilinear"){const _=Math.floor(q),z=Math.ceil(q),j=q-_;for(let X=0;X<y;X++){const Y=y>1?E*(d-1)+X*W:.5*(E+M)*(d-1);if(Y<0||Y>d-1){for(let re=0;re<p;re++){const de=re+X*S[2]+G*S[1]+N*S[0];g.values[de]=u}continue}const J=Math.floor(Y),ne=Math.ceil(Y),te=Y-J;for(let re=0;re<p;re++){let de=re+J*k[2]+_*k[1]+B*k[0];const xe=w[de];de=re+ne*k[2]+_*k[1]+B*k[0];const ye=w[de];de=re+J*k[2]+z*k[1]+B*k[0];const ke=w[de];de=re+ne*k[2]+z*k[1]+B*k[0];const Ne=w[de],Pe=xe+(ye-xe)*te,Ue=ke+(Ne-ke)*te;de=re+X*S[2]+G*S[1]+N*S[0],g.values[de]=Pe+(Ue-Pe)*j}}}else for(let _=0;_<y;++_){const z=y>1?E*(d-1)+_*W:.5*(E+M)*(d-1);if(z<0||z>d-1){for(let Y=0;Y<p;Y++){const J=Y+_*S[2]+G*S[1]+N*S[0];g.values[J]=u}continue}const j=Math.round(z),X=Math.round(q);for(let Y=0;Y<p;Y++){const J=Y+j*k[2]+X*k[1]+B*k[0],ne=Y+_*S[2]+G*S[1]+N*S[0];g.values[ne]=w[J]}}}}return n.makeTensorInfo(g.shape,g.dtype,g.values)}const E6={kernelName:Z0,backendName:"cpu",kernelFunc:T6};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function D6(t){const{inputs:e,backend:n,attrs:s}=t,{x:r}=e,{axis:o,exclusive:i,reverse:a}=s;ce(r,"cumprod");const l=ut([o],r.shape.length);let u=r;l!=null&&(u=kn({inputs:{x:r},backend:n,attrs:{perm:l}}));const c=bt(1,r.shape.length)[0];if(c!==u.shape.length-1)throw new Error(`backend.cumprod in CPU expects an inner-most axis=${u.shape.length-1} but got axis=${c}`);const h=Pn(u.dtype,"int32"),d=M0(H(u.shape),h),p=n.data.get(u.dataId).values,f=u.shape[u.shape.length-1],m=a?(g,x)=>g+f-x-1:(g,x)=>g+x;for(let g=0;g<p.length;g+=f)for(let x=0;x<f;x++){const b=m(g,x);if(x===0)d[b]=i?1:p[b];else{const w=m(g,x-1);d[b]=i?p[w]*d[w]:p[b]*d[w]}}const y=n.makeTensorInfo(u.shape,h,d);if(l!=null){const g=Bo(l),x=kn({inputs:{x:y},backend:n,attrs:{perm:g}});return n.disposeIntermediateTensorInfo(y),n.disposeIntermediateTensorInfo(u),x}return y}const R6={kernelName:Q0,backendName:"cpu",kernelFunc:D6};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function A6(t){const{inputs:e,backend:n,attrs:s}=t,{x:r}=e,{axis:o,exclusive:i,reverse:a}=s;ce(r,"cumsum");const l=ut([o],r.shape.length);let u=r;l!=null&&(u=kn({inputs:{x:r},backend:n,attrs:{perm:l}}));const c=bt(1,r.shape.length)[0];if(c!==u.shape.length-1)throw new Error(`backend.cumsum in CPU expects an inner-most axis=${u.shape.length-1} but got axis=${c}`);const h=Pn(u.dtype,"int32"),d=Jt(H(u.shape),h),p=n.data.get(u.dataId).values,f=u.shape[u.shape.length-1],m=a?(g,x)=>g+f-x-1:(g,x)=>g+x;for(let g=0;g<p.length;g+=f)for(let x=0;x<f;x++){const b=m(g,x);if(x===0)d[b]=i?0:p[b];else{const w=m(g,x-1);d[b]=i?p[w]+d[w]:p[b]+d[w]}}const y=n.makeTensorInfo(u.shape,h,d);if(l!=null){const g=Bo(l),x=kn({inputs:{x:y},backend:n,attrs:{perm:g}});return n.disposeIntermediateTensorInfo(y),n.disposeIntermediateTensorInfo(u),x}return y}const _6={kernelName:Sp,backendName:"cpu",kernelFunc:A6};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function O6(t){const{inputs:e,backend:n,attrs:s}=t,{x:r,weights:o}=e,{size:i,binaryOutput:a}=s;if(r.shape.length===1){const l=n.data.get(r.dataId).values,u=n.data.get(o.dataId).values,c=Eb(l,u,o.dtype,o.shape,i);return n.makeTensorInfo([i],o.dtype,c)}else if(r.shape.length===2){const l=n.bufferSync(r),u=n.bufferSync(o),c=oE(l,u,i,a);return n.makeTensorInfo(c.shape,o.dtype,c.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${r.shape.length}.`)}const F6={kernelName:J0,backendName:"cpu",kernelFunc:O6};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function L6(t){const{inputs:e,backend:n,attrs:s}=t,{x:r}=e,{blockSize:o,dataFormat:i}=s;C(i==="NHWC",()=>`Only NHWC dataFormat supported on CPU for depthToSpace. Got ${i}`);const a=r.shape[0],l=r.shape[1],u=r.shape[2],c=r.shape[3],h=l*o,d=u*o,p=c/(o*o),f=n.data.get(r.dataId).values,m=new Float32Array(a*h*d*p);let y=0;for(let g=0;g<a;++g)for(let x=0;x<h;++x){const b=Math.floor(x/o),w=x%o;for(let k=0;k<d;++k){const S=Math.floor(k/o),N=k%o,$=(w*o+N)*p;for(let T=0;T<p;++T){const F=T+$+c*(S+u*(b+l*g));m[y++]=f[F]}}}return n.makeTensorInfo([a,h,d,p],r.dtype,m)}const P6={kernelName:ex,backendName:"cpu",kernelFunc:L6};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nD(t){const{inputs:e,backend:n,attrs:s}=t,{x:r,filter:o}=e,{strides:i,pad:a,dilations:l,dimRoundingMode:u}=s;ce([r,o],"depthwiseConv2DNative");const c=me(r.shape),h=me(o.shape);let d=l;d==null&&(d=[1,1]),C(jt(i,d),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${i} and dilations '${d}'`);const p=Mt(r.shape,o.shape,i,d,a,u,!0),{filterHeight:f,filterWidth:m,dilationHeight:y,dilationWidth:g,padInfo:x}=p,b=x.left,w=x.top,k=p.outChannels/p.inChannels,S=new Pt(p.outShape,r.dtype),N=n.data.get(r.dataId).values,$=n.data.get(o.dataId).values,T=S.values;for(let E=0;E<p.batchSize;++E){const F=E*c[0],M=E*S.strides[0];for(let B=0;B<p.outHeight;++B){const V=M+B*S.strides[1],W=B*p.strideHeight-w;for(let G=0;G<f;++G){const q=W+G*y;if(q<0||q>=p.inHeight)continue;const _=G*h[0],z=F+q*c[1];for(let j=0;j<p.outWidth;++j){const X=V+j*S.strides[2],Y=j*p.strideWidth-b;for(let J=0;J<m;++J){const ne=Y+J*g;if(ne<0||ne>=p.inWidth)continue;const te=_+J*h[1],re=z+ne*p.inChannels;let de=X,xe=te;for(let ye=0;ye<p.inChannels;++ye){const ke=N[re+ye];for(let Ne=0;Ne<k;++Ne)T[de+Ne]+=ke*$[xe+Ne];de+=k,xe+=k}}}}}}return n.makeTensorInfo(S.shape,S.dtype,S.values)}const z6={kernelName:Cp,backendName:"cpu",kernelFunc:nD};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function M6(t){const{inputs:e,backend:n,attrs:s}=t,{x:r,dy:o}=e,{strides:i,dilations:a,pad:l,dimRoundingMode:u,filterShape:c}=s;ce([r,o],"depthwiseConv2dNativeBackpropFilter");const h=Mt(r.shape,c,i,a,l,u,!0),{strideHeight:d,strideWidth:p,filterHeight:f,filterWidth:m}=h,y=new Pt(h.filterShape,"float32"),g=h.padInfo.left,x=h.padInfo.top,b=h.outChannels/h.inChannels,w=n.data.get(r.dataId).values,k=new Pt(r.shape,r.dtype,w),S=n.data.get(o.dataId).values,N=new Pt(o.shape,o.dtype,S);for(let $=0;$<f;++$){const T=Math.max(0,Math.ceil((x-$)/d)),E=Math.min(h.outHeight,(h.inHeight+x-$)/d);for(let F=0;F<m;++F){const M=Math.max(0,Math.ceil((g-F)/p)),B=Math.min(h.outWidth,(h.inWidth+g-F)/p);for(let V=0;V<h.outChannels;++V){const W=Math.trunc(V/b),G=V%b;let q=0;for(let _=0;_<h.batchSize;++_)for(let z=T;z<E;++z){const j=$+z*d-x;for(let X=M;X<B;++X){const Y=F+X*p-g;q+=k.get(_,j,Y,W)*N.get(_,z,X,V)}}y.set(q,$,F,W,G)}}}return n.makeTensorInfo(y.shape,y.dtype,y.values)}const B6={kernelName:tx,backendName:"cpu",kernelFunc:M6};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function V6(t){const{inputs:e,backend:n,attrs:s}=t,{dy:r,filter:o}=e,{strides:i,dilations:a,pad:l,dimRoundingMode:u,inputShape:c}=s;ce([r,o],"depthwiseConv2DNativeBackpropInput");const h=me(r.shape),d=me(o.shape),p=Mt(c,o.shape,i,a,l,u,!0),f=new Pt(p.inShape,"float32"),m=f.values,[y,g,x]=f.strides,b=n.data.get(r.dataId).values,[w,k,S]=h,N=n.data.get(o.dataId).values,[$,T,E]=d,{batchSize:F,filterHeight:M,filterWidth:B,inChannels:V,inHeight:W,inWidth:G,outChannels:q,outHeight:_,outWidth:z,strideHeight:j,strideWidth:X}=p,Y=M-1-p.padInfo.top,J=B-1-p.padInfo.left,ne=q/V;for(let te=0;te<F;++te)for(let re=0;re<V;++re)for(let de=0;de<W;++de){const xe=de-Y,ye=Math.max(0,Math.ceil(xe/j)),ke=Math.min(_,(M+xe)/j);for(let Ne=0;Ne<G;++Ne){const Pe=Ne-J,Ue=Math.max(0,Math.ceil(Pe/X)),ct=Math.min(z,(B+Pe)/X);let Ge=0;for(let Me=ye;Me<ke;++Me){const ot=Me*j-xe;for(let Ze=Ue;Ze<ct;++Ze){const vr=Ze*X-Pe,Wt=w*te+k*Me+S*Ze,jr=$*(M-1-ot)+T*(B-1-vr)+E*re;for(let Gn=0;Gn<ne;++Gn){const Ko=re*ne+Gn,Os=b[Wt+Ko],kr=N[jr+Gn];Ge+=Os*kr}}}m[y*te+g*de+x*Ne+re]=Ge}}return n.makeTensorInfo(f.shape,f.dtype,f.values)}const W6={kernelName:nx,backendName:"cpu",kernelFunc:V6};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function U6(t){const{inputs:e,backend:n}=t,{x:s}=e,r=H(s.shape),o=n.data.get(s.dataId).values,i=Ce([r,r],s.dtype),a=i.values;for(let u=0;u<o.length;u++)a[u*r+u]=o[u];const l=[...s.shape,...s.shape];return n.makeTensorInfo(l,i.dtype,i.values)}const G6={kernelName:sx,backendName:"cpu",kernelFunc:U6};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const H6={kernelName:Np,backendName:"cpu",kernelFunc:({inputs:t,backend:e,attrs:n})=>{const{x:s,filter:r}=t,{strides:o,pad:i,dilations:a}=n,l=e,u=l.data.get(s.dataId).values,c=s.shape.length,h=l.data.get(r.dataId).values,d=r.shape.length,{batchSize:p,inHeight:f,inWidth:m,inChannels:y,outHeight:g,outWidth:x,padInfo:b,strideHeight:w,strideWidth:k,filterHeight:S,filterWidth:N,dilationHeight:$,dilationWidth:T,outShape:E}=Nc(s.shape,r.shape,o,i,"NHWC",a),F=H(E),M=E.length,B=St(s.dtype,F);for(let W=0;W<p;++W)for(let G=0;G<g;++G){const q=G*w-b.top;for(let _=0;_<x;++_){const z=_*k-b.left;for(let j=0;j<y;++j){let X=Number.MIN_SAFE_INTEGER;for(let J=0;J<S;++J){const ne=q+J*$;if(ne>=0&&ne<f)for(let te=0;te<N;++te){const re=z+te*T;if(re>=0&&re<m){const de=pr([W,ne,re,j],c,me(s.shape)),xe=pr([J,te,j],d,me(r.shape)),ye=u[de]+h[xe];ye>X&&(X=ye)}}}const Y=pr([W,G,_,j],M,me(E));B[Y]=X}}}return{dataId:l.write(_i(B,s.dtype),E,s.dtype),shape:E,dtype:s.dtype}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const j6={kernelName:Kg,backendName:"cpu",kernelFunc:({inputs:t,backend:e,attrs:n})=>{const{x:s,filter:r,dy:o}=t,{strides:i,pad:a,dilations:l}=n,u=e,c=Ns(s.shape,u.data.get(s.dataId).values),h=Ns(r.shape,u.data.get(r.dataId).values),{batchSize:d,inHeight:p,inWidth:f,inChannels:m,outHeight:y,outWidth:g,padInfo:x,strideHeight:b,strideWidth:w,filterHeight:k,filterWidth:S,dilationHeight:N,dilationWidth:$,outShape:T}=Nc(s.shape,r.shape,i,a,"NHWC",l);C(o.rank===T.length,()=>`Error in ${Kg}, dy must have the same rank as output ${T.length}, but got ${o.rank}`);const E=Ns(T,u.data.get(o.dataId).values),F=tN(r.shape,r.dtype);for(let B=0;B<d;++B)for(let V=0;V<y;++V){const W=V*b-x.top;for(let G=0;G<g;++G){const q=G*w-x.left;for(let _=0;_<m;++_){let z=Number.MIN_SAFE_INTEGER,j=0,X=0;for(let Y=0;Y<k;++Y){const J=W+Y*N;if(J>=0&&J<p)for(let ne=0;ne<S;++ne){const te=q+ne*$;if(te>=0&&te<f){const re=c[B][J][te][_]+h[Y][ne][_];re>z&&(z=re,j=Y,X=ne)}}}F[j][X][_]+=E[B][V][G][_]}}}return{dataId:u.write(_i(F,s.dtype),r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const K6={kernelName:jg,backendName:"cpu",kernelFunc:({inputs:t,backend:e,attrs:n})=>{const{x:s,filter:r,dy:o}=t,{strides:i,pad:a,dilations:l}=n,u=e,c=Ns(s.shape,u.data.get(s.dataId).values),h=Ns(r.shape,u.data.get(r.dataId).values),{batchSize:d,inHeight:p,inWidth:f,inChannels:m,outHeight:y,outWidth:g,padInfo:x,strideHeight:b,strideWidth:w,filterHeight:k,filterWidth:S,dilationHeight:N,dilationWidth:$,outShape:T}=Nc(s.shape,r.shape,i,a,"NHWC",l);C(o.rank===T.length,()=>`Error in ${jg}, dy must have the same rank as output ${T.length}, but got ${o.rank}`);const E=Ns(T,u.data.get(o.dataId).values),F=tN(s.shape,s.dtype);for(let B=0;B<d;++B)for(let V=0;V<y;++V){const W=V*b-x.top;for(let G=0;G<g;++G){const q=G*w-x.left;for(let _=0;_<m;++_){let z=Number.MIN_SAFE_INTEGER,j=W<0?0:W,X=q<0?0:q;for(let Y=0;Y<k;++Y){const J=W+Y*N;if(J>=0&&J<p)for(let ne=0;ne<S;++ne){const te=q+ne*$;if(te>=0&&te<f){const re=c[B][J][te][_]+h[Y][ne][_];re>z&&(z=re,j=J,X=te)}}}F[B][j][X][_]+=E[B][V][G][_]}}}return{dataId:u.write(_i(F,s.dtype),s.shape,s.dtype),shape:s.shape,dtype:s.dtype}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jc(t){const{inputs:e,backend:n,attrs:s}=t,{x:r}=e,{axis:o,keepDims:i}=s;ce(r,"sum");let a;r.dtype==="bool"?a=Ro({inputs:{x:r},backend:n,attrs:{dtype:"int32"}}):a=br({inputs:{x:r},backend:n});const l=a.shape.length,u=$e(o,a.shape),c=ut(u,l);let h=u,d=a;c!=null&&(d=kn({inputs:{x:a},backend:n,attrs:{perm:c}}),h=bt(h.length,l)),Kt("sum",h,d.shape.length);const[p,f]=Bt(d.shape,h),m=Pn(d.dtype,"int32");let y=Bd(n,p,m);const g=H(f),x=n.data.get(y.dataId).values,b=n.data.get(d.dataId).values;for(let w=0;w<x.length;++w){const k=w*g;let S=0;for(let N=0;N<g;++N)S+=b[k+N];x[w]=S}if(i){const w=xt(y.shape,u),k=y;y=je({inputs:{x:y},backend:n,attrs:{shape:w}}),n.disposeIntermediateTensorInfo(k)}return n.disposeIntermediateTensorInfo(a),c!=null&&n.disposeIntermediateTensorInfo(d),y}const q6={kernelName:rf,backendName:"cpu",kernelFunc:jc};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function X6(t){const{inputs:e,backend:n,attrs:s}=t,{equation:r}=s,o=e,{allDims:i,summedDims:a,idDims:l}=Z1(r,o.length);eb(i.length,l,o);const{path:u,steps:c}=tb(a,l),h=c.length;let d=null,p=i.length;const f=[];for(let m=0;m<h;++m){for(const y of c[m]){const{permutationIndices:g,expandDims:x}=J1(p,l[y]);let b;nb(g)?b=o[y]:(b=kn({inputs:{x:o[y]},backend:n,attrs:{perm:g}}),f.push(b));const w=b.shape.slice();for(let k=0;k<x.length;++k)w.splice(x[k],0,1);Ae(b.shape,w)||(b=je({inputs:{x:b},backend:n,attrs:{shape:w}}),f.push(b)),d===null?d=b:(d=Yf({inputs:{a:b,b:d},backend:n}),f.push(d))}m<h-1&&(u[m]>=0&&(d=jc({inputs:{x:d},backend:n,attrs:{axis:u[m]-(i.length-p),keepDims:!1}}),f.push(d)),p--)}for(const m of f)m!==d&&n.disposeIntermediateTensorInfo(m);return d}const Y6={kernelName:rx,backendName:"cpu",kernelFunc:X6};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Q6(t){const{inputs:e,backend:n}=t,{dy:s,y:r}=e;ce([s,r],"eluGrad");const o=new Float32Array(H(r.shape)),i=n.data.get(r.dataId).values,a=n.data.get(s.dataId).values;for(let l=0;l<i.length;++l){const u=i[l];u>=1?o[l]=a[l]:o[l]=a[l]*(u+1)}return n.makeTensorInfo(r.shape,"float32",o)}const Z6={kernelName:ox,backendName:"cpu",kernelFunc:Q6};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const J6=H1,e5=j1,t5=K1,n5=q1,s5=X1,r5=Y1,o5=ze(Uu,t=>{const e=Math.sign(t),n=Math.abs(t),s=1/(1+J6*n);return e*(1-((((r5*s+s5)*s+n5)*s+t5)*s+e5)*s*Math.exp(-n*n))}),i5={kernelName:Uu,backendName:"cpu",kernelFunc:o5};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ud(t){const{inputs:e,backend:n,attrs:s}=t,{input:r}=e,{dim:o}=s,i=r.shape.length,a=r.shape.slice();let l=o;return o<0&&(C(-(i+1)<=o,()=>`Axis must be in the interval [${-(i+1)}, ${i}]`),l=i+o+1),a.splice(l,0,1),je({inputs:{x:r},backend:n,attrs:{shape:a}})}const a5={kernelName:Ip,backendName:"cpu",kernelFunc:Ud};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const l5=Ct((t,e)=>t/e),Fb=Vt(Vu,l5),Py={kernelName:Vu,backendName:"cpu",kernelFunc:Fb};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sD(t,e,n){const s=t.shape,r=s[0],o=s[1],i=n.data.get(t.dataId),a=i.complexTensorInfos.real,l=i.complexTensorInfos.imag,u=[r,o],c=H(u),h=zt("float32",c),d=zt("float32",c);for(let y=0;y<r;y++){const g=Ti({inputs:{x:a},backend:n,attrs:{begin:[y,0],size:[1,o]}}),x=Ti({inputs:{x:l},backend:n,attrs:{begin:[y,0],size:[1,o]}}),b=En({inputs:{real:g,imag:x},backend:n}),{real:w,imag:k}=u5(b,e,n),S=Mr(w,k);for(let N=0;N<o;N++){const $=Q1(S,N);h[y*o+N]=$.real,d[y*o+N]=$.imag}n.disposeIntermediateTensorInfo(g),n.disposeIntermediateTensorInfo(x),n.disposeIntermediateTensorInfo(b)}const p=n.makeTensorInfo(u,"float32",h),f=n.makeTensorInfo(u,"float32",d),m=En({inputs:{real:p,imag:f},backend:n});return n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),m}function u5(t,e,n){const s=H(t.shape),r=n.data.get(t.dataId),o=n.data.get(r.complexTensorInfos.real.dataId).values,i=n.data.get(r.complexTensorInfos.imag.dataId).values;if(c5(s)){const a=zy(o,i,s,e,n),l=[t.shape[0],t.shape[1]];if(e){const u=n.makeTensorInfo(l,"float32",a.real),c=n.makeTensorInfo(l,"float32",a.imag),h=n.makeTensorInfo([],"float32",Lo(s,"float32")),d=br({inputs:{x:h},backend:n}),p=Py.kernelFunc({inputs:{a:u,b:h},backend:n}),f=Py.kernelFunc({inputs:{a:c,b:d},backend:n}),m=n.data.get(p.dataId).values,y=n.data.get(f.dataId).values;return n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),{real:m,imag:y}}return a}else{const a=Mr(o,i),l=h5(a,s,e);return wI(l)}}function c5(t){return(t&t-1)===0}function zy(t,e,n,s,r){if(n===1)return{real:t,imag:e};const o=Mr(t,e),i=n/2,a=vI(o),l=a.real,u=a.imag,c=[l.length],h=r.makeTensorInfo(c,"float32",l),d=r.makeTensorInfo(c,"float32",u),p=En({inputs:{real:h,imag:d},backend:r}),f=kI(o),m=f.real,y=f.imag,g=[m.length],x=r.makeTensorInfo(g,"float32",m),b=r.makeTensorInfo(g,"float32",y),w=En({inputs:{real:x,imag:b},backend:r}),k=zy(l,u,i,s,r),S=k.real,N=k.imag,$=[S.length],T=r.makeTensorInfo($,"float32",S),E=r.makeTensorInfo($,"float32",N),F=En({inputs:{real:T,imag:E},backend:r}),M=zy(m,y,i,s,r),B=M.real,V=M.imag,W=[B.length],G=r.makeTensorInfo(W,"float32",B),q=r.makeTensorInfo(W,"float32",V),_=En({inputs:{real:G,imag:q},backend:r}),z=CI(n,s),j=[z.real.length],X=r.makeTensorInfo(j,"float32",z.real),Y=r.makeTensorInfo(j,"float32",z.imag),J=En({inputs:{real:X,imag:Y},backend:r}),ne=Yf({inputs:{a:J,b:_},backend:r}),te=za({inputs:{a:F,b:ne},backend:r}),re=_b({inputs:{a:F,b:ne},backend:r}),de=Ii({inputs:{input:te},backend:r}),xe=Ii({inputs:{input:re},backend:r}),ye=Ma({inputs:{input:te},backend:r}),ke=Ma({inputs:{input:re},backend:r}),Ne=Ba({inputs:[de,xe],backend:r,attrs:{axis:0}}),Pe=Ba({inputs:[ye,ke],backend:r,attrs:{axis:0}}),Ue=r.data.get(Ne.dataId).values,ct=r.data.get(Pe.dataId).values;return r.disposeIntermediateTensorInfo(h),r.disposeIntermediateTensorInfo(d),r.disposeIntermediateTensorInfo(p),r.disposeIntermediateTensorInfo(x),r.disposeIntermediateTensorInfo(b),r.disposeIntermediateTensorInfo(w),r.disposeIntermediateTensorInfo(T),r.disposeIntermediateTensorInfo(E),r.disposeIntermediateTensorInfo(F),r.disposeIntermediateTensorInfo(G),r.disposeIntermediateTensorInfo(q),r.disposeIntermediateTensorInfo(_),r.disposeIntermediateTensorInfo(X),r.disposeIntermediateTensorInfo(Y),r.disposeIntermediateTensorInfo(J),r.disposeIntermediateTensorInfo(ne),r.disposeIntermediateTensorInfo(te),r.disposeIntermediateTensorInfo(re),r.disposeIntermediateTensorInfo(de),r.disposeIntermediateTensorInfo(ye),r.disposeIntermediateTensorInfo(xe),r.disposeIntermediateTensorInfo(ke),r.disposeIntermediateTensorInfo(Ne),r.disposeIntermediateTensorInfo(Pe),{real:Ue,imag:ct}}function h5(t,e,n){const s=new Float32Array(e*2);for(let r=0;r<e;r++){let o=0,i=0;for(let a=0;a<e;a++){const l=NI(r*a,e,n),u=Q1(t,a);o+=u.real*l.real-u.imag*l.imag,i+=u.real*l.imag+u.imag*l.real}n&&(o/=e,i/=e),SI(s,o,i,r)}return s}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function d5(t){const{inputs:e,backend:n}=t,{input:s}=e,r=H(s.shape),o=s.shape[s.shape.length-1],i=r/o,a=je({inputs:{x:s},backend:n,attrs:{shape:[i,o]}}),l=sD(a,!1,n),u=je({inputs:{x:l},backend:n,attrs:{shape:s.shape}});return n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(l),u}const p5={kernelName:ix,backendName:"cpu",kernelFunc:d5};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Lb(t){const{backend:e,attrs:n}=t,{shape:s,value:r,dtype:o}=n,i=o||Tu(r),a=St(i,H(s));return m5(a,r,i),e.makeTensorInfo(s,i,a)}const f5={kernelName:ax,backendName:"cpu",kernelFunc:Lb};function m5(t,e,n){t.fill(e)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const g5={kernelName:lx,backendName:"cpu",kernelFunc:({inputs:t,attrs:e,backend:n})=>{const{image:s}=t,r=n,o=zt(s.dtype,H(s.shape)),[i,a,l,u]=s.shape,c=r.data.get(s.dataId).values;for(let d=0;d<i;d++){const p=d*l*a*u;for(let f=0;f<a;f++){const m=f*(l*u);for(let y=0;y<l;y++){const g=y*u;for(let x=0;x<u;x++){const b=Math.round(l-y-1),w=p+m+g+x;let k=c[w];if(b>=0&&b<l){const S=b*u,N=p+m+S+x;k=c[N]}o[w]=k}}}}return{dataId:r.write(o,s.shape,s.dtype),shape:s.shape,dtype:s.dtype}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const y5=Ct((t,e)=>Math.floor(t/e)),x5=Vt(Ku,y5,null,"int32"),b5={kernelName:Ku,backendName:"cpu",kernelFunc:x5};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function w5(t){const{inputs:e,backend:n,attrs:s}=t,{x:r,filter:o,bias:i,preluActivationWeights:a}=e,{strides:l,pad:u,dataFormat:c,dilations:h,dimRoundingMode:d,activation:p,leakyreluAlpha:f}=s;let m=tD({inputs:{x:r,filter:o},backend:n,attrs:{strides:l,pad:u,dataFormat:c,dilations:h,dimRoundingMode:d}});if(i){const y=m;if(c==="NCHW"&&i.shape.length===1&&i.shape[0]!==1){const g=je({inputs:{x:i},backend:n,attrs:{shape:[i.shape[0],1,1]}});m=za({inputs:{a:m,b:g},backend:n}),n.disposeIntermediateTensorInfo(g)}else m=za({inputs:{a:m,b:i},backend:n});n.disposeIntermediateTensorInfo(y)}if(p){const y=m;if(c==="NCHW"&&p==="prelu"&&a.shape.length===1&&a.shape[0]!==1){const g=je({inputs:{x:a},backend:n,attrs:{shape:[a.shape[0],1,1]}});m=Wd(n,m,p,g,f),n.disposeIntermediateTensorInfo(g)}else m=Wd(n,m,p,a,f);n.disposeIntermediateTensorInfo(y)}return m}const v5={kernelName:wd,backendName:"cpu",kernelFunc:w5};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function k5(t){const{inputs:e,backend:n,attrs:s}=t,{x:r,filter:o,bias:i,preluActivationWeights:a}=e,{strides:l,pad:u,dataFormat:c,dilations:h,dimRoundingMode:d,activation:p,leakyreluAlpha:f}=s;let m=nD({inputs:{x:r,filter:o},backend:n,attrs:{strides:l,pad:u,dataFormat:c,dilations:h,dimRoundingMode:d}});if(i){const y=m;m=za({inputs:{a:m,b:i},backend:n}),n.disposeIntermediateTensorInfo(y)}if(p){const y=m;m=Wd(n,m,p,a,f),n.disposeIntermediateTensorInfo(y)}return m}const S5={kernelName:vd,backendName:"cpu",kernelFunc:k5};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function C5(t){const{inputs:e,backend:n}=t,{params:s,indices:r}=e,o=H(s.shape),i=r.shape,a=i[i.length-1],[l,u,c,h]=O1(s,r);if(u===0)return n.makeTensorInfo(l,s.dtype,[]);const d=n.data.get(r.dataId).values,p=n.bufferSync(s),f=fE(d,p,s.dtype,u,a,c,h,s.shape,o);return n.makeTensorInfo(l,s.dtype,f.values)}const N5={kernelName:ux,backendName:"cpu",kernelFunc:C5};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $5(t){const{inputs:e,backend:n,attrs:s}=t,{x:r,indices:o}=e,{axis:i,batchDims:a}=s;ce([r,o],"gatherV2");const l=$e(i,r.shape)[0],u=n.data.get(o.dataId).values,c=r.shape[l];for(let w=0;w<u.length;++w){const k=u[w];C(k<=c-1&&k>=0,()=>`GatherV2: the index value ${k} is not in [0, ${c-1}]`)}let h=a;a==null&&(h=0);const d=H(o.shape),p=rb(r,o,l,h),f=je({inputs:{x:r},backend:n,attrs:{shape:[p.batchSize,p.outerSize,p.dimSize,p.sliceSize]}}),m=je({inputs:{x:o},backend:n,attrs:{shape:[p.batchSize,d/p.batchSize]}}),y=[p.batchSize,p.outerSize,d/p.batchSize,p.sliceSize],g=n.bufferSync(m),x=n.bufferSync(f),b=mE(x,g,y);return n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),n.makeTensorInfo(p.outputShape,b.dtype,b.values)}const I5={kernelName:Ep,backendName:"cpu",kernelFunc:$5};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function T5(t){const{inputs:e,backend:n}=t,{input:s}=e,r=H(s.shape),o=s.shape[s.shape.length-1],i=r/o,a=je({inputs:{x:s},backend:n,attrs:{shape:[i,o]}}),l=sD(a,!0,n),u=je({inputs:{x:l},backend:n,attrs:{shape:s.shape}});return n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(l),u}const E5={kernelName:cx,backendName:"cpu",kernelFunc:T5};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const D5=ze(Yu,t=>Number.isFinite(t)?1:0,"bool"),R5={kernelName:Yu,backendName:"cpu",kernelFunc:D5};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const A5=ze(Qu,t=>Math.abs(t)===1/0?1:0,"bool"),_5={kernelName:Qu,backendName:"cpu",kernelFunc:A5};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const O5=ze(Zu,t=>Number.isNaN(t)?1:0,"bool"),F5={kernelName:Zu,backendName:"cpu",kernelFunc:O5};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function L5(t){const{backend:e,attrs:n}=t,{start:s,stop:r,num:o}=n,i=wE(s,r,o);return e.makeTensorInfo([i.length],"float32",i)}const P5={kernelName:dx,backendName:"cpu",kernelFunc:L5};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const z5=ze(ec,t=>Math.log1p(t)),M5={kernelName:ec,backendName:"cpu",kernelFunc:z5};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const B5=Ct((t,e)=>t&&e),V5=Vt(Op,B5,null,"bool"),W5={kernelName:Op,backendName:"cpu",kernelFunc:V5};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const U5=ze(Fp,t=>t?0:1,"bool"),G5={kernelName:Fp,backendName:"cpu",kernelFunc:U5};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const H5=Ct((t,e)=>t||e),j5=Vt(Lp,H5,null,"bool"),K5={kernelName:Lp,backendName:"cpu",kernelFunc:j5};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function q5(t){const{inputs:e,backend:n,attrs:s}=t,{x:r}=e,{depthRadius:o,bias:i,alpha:a,beta:l}=s;ce(r,"LRN");const u=r.shape[3],c=u-1,h=n.data.get(r.dataId).values,d=H(r.shape),p=new Float32Array(d);function f(m){const y=m%u;let g=m-y+Math.max(0,y-o);const x=m-y+Math.min(y+o,c);let b=0;for(;g<=x;g++){const w=h[g];b+=w*w}return b}for(let m=0;m<d;m++){const y=f(m),g=h[m]*Math.pow(i+a*y,-l);p[m]=g}return n.makeTensorInfo(r.shape,r.dtype,p)}const X5={kernelName:Pp,backendName:"cpu",kernelFunc:q5};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Y5(t){const{inputs:e,backend:n,attrs:s}=t,{x:r,y:o,dy:i}=e,{depthRadius:a,bias:l,alpha:u,beta:c}=s;ce(i,"LRNGrad");const h=H(i.shape),d=i.shape[3],p=n.data.get(i.dataId).values,f=n.data.get(r.dataId).values,m=n.data.get(o.dataId).values,y=new Float32Array(h),g=h;for(let x=0;x<g;x++){const b=x%d,w=x-b+Math.max(0,b-a),k=x-b+Math.min(d,b+a+1);let S=0;for(let N=w;N<k;N++)S+=Math.pow(f[N],2);S=u*S+l;for(let N=w;N<k;N++){let $=-2*u*c*f[N]*m[x]/S;x===N&&($+=Math.pow(S,-c)),$*=p[x],y[N]+=$}}return n.makeTensorInfo(i.shape,r.dtype,y)}const Q5={kernelName:px,backendName:"cpu",kernelFunc:Y5};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rD(t){const{inputs:e,backend:n,attrs:s}=t,{x:r}=e,{reductionIndices:o,keepDims:i}=s,a=n;let l=r.shape;const u=l.length,c=$e(o,l);let h=c;const d=ut(h,u);let p=a.data.get(r.dataId).values;if(d!=null){const w=new Array(u);for(let k=0;k<w.length;k++)w[k]=l[d[k]];p=Rb(p,l,r.dtype,d,w),h=bt(h.length,u),l=w}ce(r,"max"),Kt("max",h,u);const[f,m]=Bt(l,h),y=H(m),g=kE(p,y,f,r.dtype),x=a.write(g,f,r.dtype);let b=f;return i&&(b=xt(f,c)),{dataId:x,shape:b,dtype:r.dtype}}const Z5={kernelName:zp,backendName:"cpu",kernelFunc:rD};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function J5(t){const{inputs:e,backend:n,attrs:s}=t,{x:r}=e;ce(r,"maxPool");const{filterSize:o,strides:i,pad:a,dimRoundingMode:l}=s,u=1;C(jt(i,u),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${i} and dilations '${u}'`);const c=Rs(r.shape,o,i,u,a,l);let h;if(c.filterWidth===1&&c.filterHeight===1&&Ae(c.inShape,c.outShape))h=br({inputs:{x:r},backend:n});else{const d=n.data.get(r.dataId).values,p=me(r.shape),f=Ob(d,r.shape,r.dtype,p,c,"max");h=n.makeTensorInfo(c.outShape,r.dtype,f.values)}return h}const eK={kernelName:Mp,backendName:"cpu",kernelFunc:J5};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tK(t){const{inputs:e,backend:n,attrs:s}=t,{x:r}=e,{filterSize:o,strides:i,pad:a,dimRoundingMode:l,dataFormat:u}=s;ce(r,"maxPool3d");const c=Vr(r.shape,o,i,1,a,l,u),h=n.data.get(r.dataId).values,d=eD(h,r.shape,r.dtype,me(r.shape),c,"max");return n.makeTensorInfo(d.shape,"float32",d.values)}const nK={kernelName:Bp,backendName:"cpu",kernelFunc:tK};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sK(t){const{inputs:e,backend:n,attrs:s}=t,{dy:r,input:o}=e,{filterSize:i,strides:a,pad:l,dimRoundingMode:u}=s;ce([r,o],"maxPool3DGrad");const c=Vr(o.shape,i,a,1,l,u),h=n.bufferSync(o),d=Gj(h,c),p=c.strideDepth,f=c.strideHeight,m=c.strideWidth,y=c.dilationDepth,g=c.dilationHeight,x=c.dilationWidth,b=c.effectiveFilterDepth,w=c.effectiveFilterHeight,k=c.effectiveFilterWidth,S=b-1-c.padInfo.front,N=k-1-c.padInfo.left,$=w-1-c.padInfo.top,T=Ce(o.shape,"float32"),E=n.bufferSync(r);for(let F=0;F<c.batchSize;++F)for(let M=0;M<c.inChannels;++M)for(let B=0;B<c.inDepth;++B)for(let V=0;V<c.inHeight;++V)for(let W=0;W<c.inWidth;++W){const G=B-S,q=V-$,_=W-N;let z=0;for(let j=0;j<b;j+=y){const X=(G+j)/p;if(!(X<0||X>=c.outDepth||Math.floor(X)!==X))for(let Y=0;Y<w;Y+=g){const J=(q+Y)/f;if(!(J<0||J>=c.outHeight||Math.floor(J)!==J))for(let ne=0;ne<k;ne+=x){const te=(_+ne)/m;if(te<0||te>=c.outWidth||Math.floor(te)!==te)continue;const re=b*w*k-1-d.get(F,X,J,te,M),de=j*w*k+Y*k+ne,xe=re===de?1:0;if(xe===0)continue;const ye=E.get(F,X,J,te,M);z+=ye*xe}}}T.set(z,F,B,V,W,M)}return n.makeTensorInfo(T.shape,T.dtype,T.values)}const rK={kernelName:mx,backendName:"cpu",kernelFunc:sK};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function oK(t){const{inputs:e,backend:n,attrs:s}=t,{dy:r,input:o,output:i}=e,a=o;ce([o,i],"maxPoolGrad");const{filterSize:l,strides:u,pad:c,dimRoundingMode:h}=s,d=Rs(a.shape,l,u,1,c,h),p=n.data.get(a.dataId).values,f=Ce(d.outShape,a.dtype,JE(p,a.shape,a.dtype,d).values),m=d.strideHeight,y=d.strideWidth,g=d.dilationHeight,x=d.dilationWidth,b=d.effectiveFilterHeight,w=d.effectiveFilterWidth,k=w-1-d.padInfo.left,S=b-1-d.padInfo.top,N=Ce(a.shape,"float32"),$=n.data.get(r.dataId).values,T=Ce(r.shape,"float32",$);for(let E=0;E<d.batchSize;++E)for(let F=0;F<d.inChannels;++F)for(let M=0;M<d.inHeight;++M)for(let B=0;B<d.inWidth;++B){const V=M-S,W=B-k;let G=0;for(let q=0;q<b;q+=g){const _=(V+q)/m;if(!(_<0||_>=d.outHeight||Math.floor(_)!==_))for(let z=0;z<w;z+=x){const j=(W+z)/y;if(j<0||j>=d.outWidth||Math.floor(j)!==j)continue;const X=b*w-1-f.get(E,_,j,F),Y=q*w+z,J=X===Y?1:0;if(J===0)continue;const ne=T.get(E,_,j,F);G+=ne*J}}N.set(G,E,M,B,F)}return n.makeTensorInfo(N.shape,N.dtype,N.values)}const iK={kernelName:fx,backendName:"cpu",kernelFunc:oK};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function aK(t,e,n,s,r){const o=me(e),i=Ob(t,e,n,o,r,"max"),a=JE(t,e,n,r,!0,s);return[i.values,a.values]}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const lK={kernelName:gx,backendName:"cpu",kernelFunc:({inputs:t,attrs:e,backend:n})=>{const{x:s}=t,{filterSize:r,strides:o,pad:i,includeBatchInIndex:a}=e,l=n;ce(s,"MaxPoolWithArgmax");const u=l.data.get(s.dataId).values,c=Rs(s.shape,r,o,[1,1],i),[h,d]=aK(u,s.shape,s.dtype,a,c),p=l.write(h,c.outShape,s.dtype),f=l.write(d,c.outShape,s.dtype);return[{dataId:p,shape:c.outShape,dtype:s.dtype},{dataId:f,shape:c.outShape,dtype:"int32"}]}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function uK(t){const{inputs:e,backend:n,attrs:s}=t,{x:r}=e,{axis:o,keepDims:i}=s,a=$e(o,r.shape),u=Bt(r.shape,a)[1],c=H(u),h=[],d=n.makeTensorInfo([],"float32",new Float32Array([c]));h.push(d);const p=Ro({inputs:{x:r},backend:n,attrs:{dtype:"float32"}});h.push(p);const f=Fb({inputs:{a:p,b:d},backend:n});h.push(f);const m=jc({inputs:{x:f},backend:n,attrs:{axis:o,keepDims:i}});return h.forEach(y=>n.disposeIntermediateTensorInfo(y)),m}const cK={kernelName:Vp,backendName:"cpu",kernelFunc:uK};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hK(t){const{inputs:e,backend:n,attrs:s}=t,{x:r}=e,{axis:o,keepDims:i}=s;ce(r,"min");const a=$e(o,r.shape);let l=a;const u=ut(l,r.shape.length);let c=r;u!=null&&(c=kn({inputs:{x:r},backend:n,attrs:{perm:u}}),l=bt(l.length,r.shape.length)),Kt("min",l,c.shape.length);const[h,d]=Bt(c.shape,l),p=H(d),f=Jt(H(h),c.dtype),m=n.data.get(c.dataId).values;for(let g=0;g<f.length;++g){const x=g*p;let b=m[x];for(let w=0;w<p;++w){const k=m[x+w];(Number.isNaN(k)||k<b)&&(b=k)}f[g]=b}u!=null&&n.disposeIntermediateTensorInfo(c);const y=n.makeTensorInfo(h,c.dtype,f);if(i){const g=xt(h,a),x=je({inputs:{x:y},backend:n,attrs:{shape:g}});return n.disposeIntermediateTensorInfo(y),x}return y}const dK={kernelName:Wp,backendName:"cpu",kernelFunc:hK};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pK(t){const{inputs:e,backend:n,attrs:s}=t,{x:r}=e,{paddings:o,mode:i}=s;ce(r,"mirrorPad");const a=o.map((b,w)=>b[0]+r.shape[w]+b[1]),l=o.map(b=>b[0]),u=o.map((b,w)=>b[0]+r.shape[w]),c=i==="reflect"?0:1,h=n.data.get(r.dataId).values,d=r.shape.length,p=me(r.shape),f=H(a),m=a.length,y=me(a),g=zt(r.dtype,f);for(let b=0;b<f;b++){let w=qa(b,m,y);for(let S=0;S<m;S++)w[S]<l[S]?w[S]=l[S]*2-w[S]-c:w[S]>=u[S]&&(w[S]=(u[S]-1)*2-w[S]+c);w=w.map((S,N)=>S-l[N]);const k=pr(w,d,p);g[b]=h[k]}return{dataId:n.write(g,a,r.dtype),shape:a,dtype:r.dtype}}const fK={kernelName:Up,backendName:"cpu",kernelFunc:pK};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const mK=Ct((t,e)=>{const n=t%e;return t<0&&e<0||t>=0&&e>=0?n:(n+e)%e}),gK=Vt(sc,mK),yK={kernelName:sc,backendName:"cpu",kernelFunc:gK};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function oD(t){const{inputs:e,backend:n,attrs:s}=t,{logits:r}=e,{dim:o}=s,i=r.shape.length;let a=o;if(a===-1&&(a=i-1),a!==i-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${i} and dim was ${a}`);const l=$e([a],r.shape),u=rD({inputs:{x:r},backend:n,attrs:{reductionIndices:l,keepDims:!1}}),c=xt(u.shape,l),h=je({inputs:{x:u},backend:n,attrs:{shape:c}}),d=_b({inputs:{a:r,b:h},backend:n}),p=hE({inputs:{x:d},backend:n}),f=jc({inputs:{x:p},backend:n,attrs:{axis:l,keepDims:!1}}),m=je({inputs:{x:f},backend:n,attrs:{shape:c}}),y=Fb({inputs:{a:p,b:m},backend:n});return n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),y}const xK={kernelName:lf,backendName:"cpu",kernelFunc:oD};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bK(t){const{inputs:e,backend:n,attrs:s}=t,{logits:r}=e,{numSamples:o,seed:i,normalized:a}=s;ce(r,"multinomial");const l=a?r:oD({inputs:{logits:r},backend:n,attrs:{dim:-1}}),u=l.shape[0],c=l.shape[1],h=n.data.get(l.dataId).values,d=[u,o],p=Jt(H(d),"int32");for(let f=0;f<u;++f){const m=f*c,y=new Float32Array(c-1);y[0]=h[m];for(let b=1;b<y.length;++b)y[b]=y[b-1]+h[m+b];const g=Nf.alea(i.toString()),x=f*o;for(let b=0;b<o;++b){const w=g();p[x+b]=y.length;for(let k=0;k<y.length;k++)if(w<y[k]){p[x+b]=k;break}}}return a||n.disposeIntermediateTensorInfo(l),n.makeTensorInfo(d,"int32",p)}const wK={kernelName:yx,backendName:"cpu",kernelFunc:bK};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const vK=I1;function kK(t){const{inputs:e,backend:n,attrs:s}=t,{boxes:r,scores:o}=e,{maxOutputSize:i,iouThreshold:a,scoreThreshold:l}=s;ce(r,"NonMaxSuppression");const u=n.data.get(r.dataId).values,c=n.data.get(o.dataId).values,{selectedIndices:h}=vK(u,c,i,a,l);return n.makeTensorInfo([h.length],"int32",new Int32Array(h))}const SK={kernelName:xx,backendName:"cpu",kernelFunc:kK};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const CK=T1;function NK(t){const{inputs:e,backend:n,attrs:s}=t,{boxes:r,scores:o}=e,{maxOutputSize:i,iouThreshold:a,scoreThreshold:l,padToMaxOutputSize:u}=s;ce(r,"NonMaxSuppressionPadded");const c=n.data.get(r.dataId).values,h=n.data.get(o.dataId).values,{selectedIndices:d,validOutputs:p}=CK(c,h,i,a,l,u);return[n.makeTensorInfo([d.length],"int32",new Int32Array(d)),n.makeTensorInfo([],"int32",new Int32Array([p]))]}const $K={kernelName:bx,backendName:"cpu",kernelFunc:NK};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const IK=E1;function TK(t){const{inputs:e,backend:n,attrs:s}=t,{boxes:r,scores:o}=e,{maxOutputSize:i,iouThreshold:a,scoreThreshold:l,softNmsSigma:u}=s;ce(r,"NonMaxSuppressionWithScore");const c=n.data.get(r.dataId).values,h=n.data.get(o.dataId).values,d=i,p=a,f=l,m=u,{selectedIndices:y,selectedScores:g}=IK(c,h,d,p,f,m);return[n.makeTensorInfo([y.length],"int32",new Int32Array(y)),n.makeTensorInfo([g.length],"float32",new Float32Array(g))]}const EK={kernelName:wx,backendName:"cpu",kernelFunc:TK};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function DK(t){const{inputs:e,backend:n,attrs:s}=t,{indices:r}=e,{dtype:o,depth:i,onValue:a,offValue:l}=s;ce(r,"oneHot");const u=H(r.shape),c=new Float32Array(u*i);c.fill(l);const h=n.data.get(r.dataId).values;for(let d=0;d<u;++d)h[d]>=0&&h[d]<i&&(c[d*i+h[d]]=a);return n.makeTensorInfo([...r.shape,i],o,c)}const RK={kernelName:Kp,backendName:"cpu",kernelFunc:DK};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Gd(t){const{inputs:e,backend:n}=t,{x:s}=e;if(s.dtype==="string")throw new Error("zerosLike is not supported for string tensors");if(s.dtype==="complex64"){const r=Ii({inputs:{input:s},backend:n}),o=Gd({inputs:{x:r},backend:n}),i=Ma({inputs:{input:s},backend:n}),a=Gd({inputs:{x:i},backend:n}),l=En({inputs:{real:o,imag:a},backend:n});return n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(a),l}else return Lb({backend:n,attrs:{shape:s.shape,value:0,dtype:s.dtype}})}const AK={kernelName:hf,backendName:"cpu",kernelFunc:Gd};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function iD(t){const{inputs:e,backend:n}=t,{x:s}=e;if(s.dtype==="string")throw new Error("onesLike is not supported for string tensors");if(s.dtype==="complex64"){const r=Ii({inputs:{input:s},backend:n}),o=iD({inputs:{x:r},backend:n}),i=Ma({inputs:{input:s},backend:n}),a=Gd({inputs:{x:i},backend:n}),l=En({inputs:{real:o,imag:a},backend:n});return n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(a),l}else return Lb({backend:n,attrs:{shape:s.shape,value:1,dtype:s.dtype}})}const _K={kernelName:jp,backendName:"cpu",kernelFunc:iD};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function aD(t){const{inputs:e,backend:n,attrs:s}=t,{axis:r}=s;if(e.length===1)return Ud({inputs:{input:e[0]},backend:n,attrs:{dim:r}});const o=e[0].shape,i=e[0].dtype;e.forEach(c=>{Vn(o,c.shape,"All tensors passed to stack must have matching shapes"),C(i===c.dtype,()=>"All tensors passed to stack must have matching dtypes")});const a=[],l=e.map(c=>{const h=Ud({inputs:{input:c},backend:n,attrs:{dim:r}});return a.push(h),h}),u=Ba({inputs:l,backend:n,attrs:{axis:r}});return a.forEach(c=>n.disposeIntermediateTensorInfo(c)),u}const OK={kernelName:qp,backendName:"cpu",kernelFunc:aD};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function FK(t){const{inputs:e,backend:n,attrs:s}=t,{x:r}=e,{paddings:o,constantValue:i}=s;ce(r,"pad");const a=o.map((x,b)=>x[0]+r.shape[b]+x[1]),l=o.map(x=>x[0]),u=n.data.get(r.dataId).values,c=H(r.shape),h=r.shape.length,d=me(r.shape),p=H(a),f=a.length,m=me(a),y=zt(r.dtype,p);i!==0&&y.fill(i);for(let x=0;x<c;x++){const w=qa(x,h,d).map((S,N)=>S+l[N]),k=pr(w,f,m);y[k]=u[x]}return{dataId:n.write(y,a,r.dtype),shape:a,dtype:r.dtype}}const lD={kernelName:Xp,backendName:"cpu",kernelFunc:FK};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const LK=Ct((t,e)=>Math.pow(t,e)),PK=Vt(oc,LK),zK={kernelName:oc,backendName:"cpu",kernelFunc:PK};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function MK(t){const{inputs:e,backend:n,attrs:s}=t,{paramsNestedSplits:r,paramsDenseValues:o,indices:i}=e,a=r.map(y=>n.data.get(y.dataId).values),l=r.map(y=>y.shape),u=n.data.get(o.dataId).values,c=n.data.get(i.dataId).values,[h,d,p]=TE(a,l,u,o.shape,o.dtype,c,i.shape),f=h.map(y=>n.makeTensorInfo([y.length],"int32",y)),m=n.makeTensorInfo(p,o.dtype,d);return f.concat([m])}const BK={kernelName:vx,backendName:"cpu",kernelFunc:MK};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function VK(t){const{inputs:e,backend:n}=t,{starts:s,limits:r,deltas:o}=e,i=n.data.get(s.dataId).values,a=n.data.get(r.dataId).values,l=n.data.get(o.dataId).values,[u,c]=EE(i,s.shape,s.dtype,a,r.shape,l,o.shape),h=n.makeTensorInfo([u.length],"int32",u),d=n.makeTensorInfo([c.length],s.dtype,c);return[h,d]}const WK={kernelName:kx,backendName:"cpu",kernelFunc:VK};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function UK(t){const{inputs:e,backend:n,attrs:s}=t,{shape:r,values:o,defaultValue:i,rowPartitionTensors:a}=e,{rowPartitionTypes:l}=s,u=n.data.get(r.dataId).values,c=n.data.get(o.dataId).values,h=n.data.get(i.dataId).values,d=a.map(y=>n.data.get(y.dataId).values),p=a.map(y=>y.shape),[f,m]=DE(u,r.shape,c,o.shape,o.dtype,h,i.shape,d,p,l);return n.makeTensorInfo(f,o.dtype,m)}const GK={kernelName:Sx,backendName:"cpu",kernelFunc:UK};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function HK(t){const{backend:e,attrs:n}=t,{start:s,stop:r,dtype:o,step:i}=n,a=RE(s,r,i,o);return e.makeTensorInfo([a.length],o,a)}const jK={kernelName:Cx,backendName:"cpu",kernelFunc:HK};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const KK=ze(ic,t=>1/t),qK={kernelName:ic,backendName:"cpu",kernelFunc:KK};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function XK(t){const{inputs:e,backend:n,attrs:s}=t,{images:r}=e,{alignCorners:o,halfPixelCenters:i,size:a}=s;ce(r,"resizeBilinear");const l=me(r.shape),[u,c]=a,[h,d,p,f]=r.shape,m=n.data.get(r.dataId).values,y=new Float32Array(H([h,u,c,f])),g=[o&&u>1?d-1:d,o&&c>1?p-1:p],x=[o&&u>1?u-1:u,o&&c>1?c-1:c];let b=0;const w=g[0]/x[0],k=g[1]/x[1];for(let S=0;S<h;S++)for(let N=0;N<u;N++){let $;i?$=w*(N+.5)-.5:$=w*N;const T=Math.max(0,Math.floor($)),E=$-T,F=Math.min(d-1,Math.ceil($)),M=S*l[0]+T*l[1],B=S*l[0]+F*l[1];for(let V=0;V<c;V++){let W;i?W=k*(V+.5)-.5:W=k*V;const G=Math.max(0,Math.floor(W)),q=W-G,_=Math.min(p-1,Math.ceil(W)),z=M+G*l[2],j=B+G*l[2],X=M+_*l[2],Y=B+_*l[2];for(let J=0;J<f;J++){const ne=m[z+J],te=m[j+J],re=m[X+J],de=m[Y+J],xe=ne+(re-ne)*q,ye=te+(de-te)*q,ke=xe+(ye-xe)*E;y[b++]=ke}}}return n.makeTensorInfo([h,u,c,f],"float32",y)}const YK={kernelName:ef,backendName:"cpu",kernelFunc:XK};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function QK(t){const{inputs:e,backend:n,attrs:s}=t,{images:r,dy:o}=e,{alignCorners:i}=s;ce([o,r],"resizeBilinearGrad");const a=me(r.shape),[l,u,c,h]=r.shape,[,d,p]=o.shape,f=new Float32Array(l*u*c*h),m=[i&&d>1?u-1:u,i&&p>1?c-1:c],y=[i&&d>1?d-1:d,i&&p>1?p-1:p],g=m[0]/y[0],x=m[1]/y[1],b=n.data.get(o.dataId).values;let w=0;for(let k=0;k<l;k++){const S=k*a[0];for(let N=0;N<d;N++){const $=N*g,T=Math.floor($),E=Math.min(Math.ceil($),u-1),F=S+T*a[1],M=S+E*a[1],B=$-T,V=1-B;for(let W=0;W<p;W++){const G=W*x,q=Math.floor(G),_=Math.min(Math.ceil(G),c-1),z=G-q,j=1-z,X=F+q*a[2],Y=F+_*a[2],J=M+q*a[2],ne=M+_*a[2],te=V*j,re=V*z,de=B*j,xe=B*z;for(let ye=0;ye<h;ye++){const ke=b[w++];f[X+ye]+=ke*te,f[Y+ye]+=ke*re,f[J+ye]+=ke*de,f[ne+ye]+=ke*xe}}}}return n.makeTensorInfo([l,c,u,h],"float32",f)}const ZK={kernelName:Ix,backendName:"cpu",kernelFunc:QK};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function JK(t){const{inputs:e,backend:n,attrs:s}=t,{images:r}=e,{alignCorners:o,halfPixelCenters:i,size:a}=s;ce(r,"resizeNearestNeighbor");const l=me(r.shape),[u,c]=a,[h,d,p,f]=r.shape,m=n.data.get(r.dataId).values,y=new Float32Array(h*u*c*f),g=[o&&u>1?d-1:d,o&&c>1?p-1:p],x=[o&&u>1?u-1:u,o&&c>1?c-1:c],b=g[0]/x[0],w=g[1]/x[1];let k=0;for(let S=0;S<h;S++){const N=S*l[0];for(let $=0;$<u;$++){const T=i?b*($+.5):b*$;let E=Math.min(d-1,o?Math.round(T):Math.floor(T));i&&(E=Math.max(0,E));const F=N+E*l[1];for(let M=0;M<c;M++){const B=i?w*(M+.5):w*M;let V=Math.min(p-1,o?Math.round(B):Math.floor(B));i&&(V=Math.max(0,V));const W=F+V*l[2];for(let G=0;G<f;G++){const q=m[W+G];y[k++]=q}}}}return n.makeTensorInfo([h,u,c,f],r.dtype,y)}const eq={kernelName:Jp,backendName:"cpu",kernelFunc:JK};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tq(t){const{inputs:e,backend:n,attrs:s}=t,{images:r,dy:o}=e,{alignCorners:i}=s;ce([o,r],"resizeNearestNeighborGrad");const a=me(r.shape),l=me(o.shape),[u,c,h,d]=r.shape,[,p,f]=o.shape,m=new Float32Array(u*c*h*d),y=n.data.get(o.dataId).values,g=[i&&p>1?c-1:c,i&&f>1?h-1:h],x=[i&&p>1?p-1:p,i&&f>1?f-1:f],b=g[0]/x[0],w=g[1]/x[1],k=1/b,S=1/w,N=Math.ceil(k)*2+2,$=Math.ceil(S)*2+2;for(let T=0;T<u;T++){const E=T*a[0];for(let F=0;F<c;F++){const M=E+F*a[1],B=Math.floor(F*k),V=Math.floor(B-N/2);for(let W=0;W<h;W++){const G=M+W*a[2],q=Math.floor(W*S),_=Math.floor(q-$/2);for(let z=0;z<d;z++){let j=0;for(let X=0;X<N;X++){const Y=X+V;if(Y<0||Y>=p)continue;const J=E+Y*l[1],ne=Y*b,te=Math.min(c-1,i?Math.round(ne):Math.floor(ne));if(F===te)for(let re=0;re<$;re++){const de=re+_;if(de<0||de>=f)continue;const xe=J+de*l[2],ye=de*w,ke=Math.min(h-1,i?Math.round(ye):Math.floor(ye));W===ke&&(j+=y[xe+z])}}m[G+z]=j}}}}return n.makeTensorInfo(r.shape,r.dtype,m)}const nq={kernelName:$x,backendName:"cpu",kernelFunc:tq};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sq(t){const{inputs:e,backend:n,attrs:s}=t,{x:r}=e,{dims:o}=s;ce(r,"reverse");const i=r.shape.length,a=$e(o,r.shape);if(i===0)return br({inputs:{x:r},backend:n});const l=new Pt(r.shape,r.dtype),u=n.bufferSync(r);for(let c=0;c<l.size;c++){const h=l.indexToLoc(c),d=h.slice();a.forEach(p=>d[p]=r.shape[p]-1-d[p]),l.set(u.get(...d),...h)}return n.makeTensorInfo(l.shape,l.dtype,l.values)}const rq={kernelName:tf,backendName:"cpu",kernelFunc:sq};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const oq={kernelName:Ux,backendName:"cpu",kernelFunc:({inputs:t,attrs:e,backend:n})=>{const{image:s}=t,{radians:r,fillValue:o,center:i}=e,a=n,l=zt(s.dtype,H(s.shape)),[u,c,h,d]=s.shape,[p,f]=W1(i,c,h),m=255,y=Math.sin(r),g=Math.cos(r),x=a.data.get(s.dataId).values;for(let w=0;w<u;w++){const k=w*h*c*d;for(let S=0;S<c;S++){const N=S*(h*d);for(let $=0;$<h;$++){const T=$*d;for(let E=0;E<d;E++){const F=[u,S,$,E],M=F[2],B=F[1];let V=(M-p)*g-(B-f)*y,W=(M-p)*y+(B-f)*g;V=Math.round(V+p),W=Math.round(W+f);let G=o;if(typeof o!="number"&&(E===3?G=m:G=o[E]),V>=0&&V<h&&W>=0&&W<c){const _=W*(h*d),z=V*d,j=k+_+z+E;G=x[j]}const q=k+N+T+E;l[q]=G}}}}return{dataId:a.write(l,s.shape,s.dtype),shape:s.shape,dtype:s.dtype}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const iq=ze(uc,t=>{const e=Math.floor(t);return t-e<.5?Math.floor(t):t-e>.5?Math.ceil(t):e%2===0?e:e+1}),aq={kernelName:uc,backendName:"cpu",kernelFunc:iq};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lq(t){const{inputs:e,backend:n,attrs:s}=t,{indices:r,updates:o}=e,{shape:i}=s,{sliceRank:a,numUpdates:l,sliceSize:u,strides:c,outputSize:h}=Oc(o,r,i),d=!0,p=n.bufferSync(r),f=n.bufferSync(o),m=la(p,f,i,h,u,l,a,c,0,d);return n.makeTensorInfo(i,m.dtype,m.values)}const uq={kernelName:Tx,backendName:"cpu",kernelFunc:lq};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cq(t,e){let n=0,s=t.length,r=0;for(;n<s;)r=Math.floor((n+s)/2),t[r]<e?n=r+1:s=r;return s}function hq(t,e){let n=0,s=t.length,r=0;for(;n<s;)r=Math.floor((n+s)/2),t[r]<=e?n=r+1:s=r;return s}function dq(t,e,n,s,r,o){const i=St("int32",n*r);for(let a=0;a<n;++a){const l=t.slice(a*s,(a+1)*s),u=a*r;for(let c=0;c<r;++c)i[u+c]=o==="left"?cq(l,e[c+u]):hq(l,e[c+u])}return i}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pq(t){const{inputs:e,backend:n,attrs:s}=t,{sortedSequence:r,values:o}=e,{side:i}=s,a=n.data.get(r.dataId).values,l=n.data.get(o.dataId).values,u=dq(a,l,r.shape[0],r.shape[1],o.shape[1],i);return n.makeTensorInfo(o.shape,"int32",u)}const fq={kernelName:Ex,backendName:"cpu",kernelFunc:pq};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mq(t){const{inputs:e,backend:n}=t,{condition:s,t:r,e:o}=e;ce([s,r,o],"select");const i=s.shape.length,a=n.data.get(s.dataId).values,l=n.data.get(r.dataId).values,u=n.data.get(o.dataId).values,c=Pn(r.dtype,o.dtype),h=Jt(H(r.shape),c);let d=0;const p=i===0||i>1||r.shape.length===1?1:H(r.shape.slice(1));for(let f=0;f<a.length;f++)for(let m=0;m<p;m++)a[f]===1?h[d++]=l[f]:h[d++]=u[f];return n.makeTensorInfo(r.shape,c,h)}const gq={kernelName:nf,backendName:"cpu",kernelFunc:mq};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const yq=Pf,xq=zf,bq=ze(hc,t=>t>=0?xq*t:yq*(Math.exp(t)-1)),wq={kernelName:hc,backendName:"cpu",kernelFunc:bq};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const vq=ze(fc,t=>t<0?-1:t>0?1:0),kq={kernelName:fc,backendName:"cpu",kernelFunc:vq};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Sq=ze(dc,t=>Math.sin(t)),Cq={kernelName:dc,backendName:"cpu",kernelFunc:Sq};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Nq=ze(pc,t=>Math.sinh(t)),$q={kernelName:pc,backendName:"cpu",kernelFunc:Nq};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Iq=11920928955078125e-23,hk=Math.log(Iq)+2,Tq=ze(gc,t=>{const e=t>-hk,n=t<hk,s=Math.exp(t);let r;return n?r=s:e?r=t:r=Math.log(1+s),r}),Eq={kernelName:gc,backendName:"cpu",kernelFunc:Tq};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Dq(t){const{inputs:e,backend:n,attrs:s}=t,{x:r}=e,{blockShape:o,paddings:i}=s;ce([r],"spaceToBatchND");const a=H(o),l=[[0,0]];l.push(...i);for(let S=1+o.length;S<r.shape.length;++S)l.push([0,0]);const u=lD.kernelFunc({inputs:{x:r},backend:n,attrs:{paddings:l,constantValue:0}}),c=Fc(u.shape,o,a,!1),h=Lc(c.length,o.length,!1),d=Pc(u.shape,o,a,!1),m=je({inputs:{x:u},backend:n,attrs:{shape:c}}),x=kn({inputs:{x:m},backend:n,attrs:{perm:h}}),k=je({inputs:{x},backend:n,attrs:{shape:d}});return n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(x),k}const Rq={kernelName:of,backendName:"cpu",kernelFunc:Dq};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Aq(t){const{inputs:e,backend:n}=t,{indices:s,values:r,denseShape:o,defaultValue:i}=e;if(o.shape.length!==1)throw new Error(`Dense shape must be a vector, saw:
        ${o.shape}`);if(s.shape.length!==2)throw new Error(`Indices must be a matrix, saw:
        ${s.shape}`);if(r.shape.length!==1)throw new Error(`Values must be a vector, saw:
        ${r.shape}`);if(i.shape.length!==0)throw new Error(`Default value must be a scalar, saw:
        ${i.shape}`);const a=n.data.get(s.dataId).values,l=n.data.get(r.dataId).values,u=n.data.get(o.dataId).values,c=n.data.get(i.dataId).values[0],[h,d,p,f,m]=FE(a,s.shape,s.dtype,l,r.dtype,u,c);return[n.makeTensorInfo(d,s.dtype,h),n.makeTensorInfo([d[0]],r.dtype,p),n.makeTensorInfo([f.length],"bool",new Uint8Array(f.map(y=>Number(y)))),n.makeTensorInfo([m.length],s.dtype,new Int32Array(m))]}const _q={kernelName:Dx,backendName:"cpu",kernelFunc:Aq};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Oq(t){const{inputs:e,backend:n}=t,{inputIndices:s,inputShape:r,newShape:o}=e;if(s.shape.length!==2)throw new Error(`Input indices should be a matrix but received shape
        ${s.shape}`);if(r.shape.length!==1)throw new Error(`Input shape should be a vector but received shape
        ${r.shape}`);if(o.shape.length!==1)throw new Error(`Target shape should be a vector but received shape ${o.shape}`);const i=Array.from(n.data.get(r.dataId).values),a=n.data.get(s.dataId).values,l=Array.from(n.data.get(o.dataId).values),[u,c,h]=LE(a,s.shape,s.dtype,i,l);return[n.makeTensorInfo(c,s.dtype,u),n.makeTensorInfo([h.length],o.dtype,new Int32Array(h))]}const Fq={kernelName:Rx,backendName:"cpu",kernelFunc:Oq};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Lq(t){const{inputs:e,backend:n}=t,{data:s,indices:r,segmentIds:o}=e;if(s.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(r.shape.length!==1)throw new Error(`Indices should be a vector but received shape
          ${r.shape}`);if(o.shape.length!==1)throw new Error(`Segment ids should be a vector but received shape
          ${o.shape}`);if(r.shape[0]!==o.shape[0])throw new Error("segmentIds and indices should have same size.");const i=n.data.get(s.dataId).values,a=n.data.get(r.dataId).values,l=n.data.get(o.dataId).values,[u,c]=Ab(i,s.shape,s.dtype,a,l,!0);return n.makeTensorInfo(c,s.dtype,u)}const Pq={kernelName:Ax,backendName:"cpu",kernelFunc:Lq};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zq(t){const{inputs:e,backend:n}=t,{data:s,indices:r,segmentIds:o}=e;if(s.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(r.shape.length!==1)throw new Error(`Indices should be a vector but received shape
         ${r.shape}`);if(o.shape.length!==1)throw new Error(`Segment ids should be a vector but received shape
         ${o.shape}`);if(r.shape[0]!==o.shape[0])throw new Error("segmentIds and indices should have same size.");const i=n.data.get(s.dataId).values,a=n.data.get(r.dataId).values,l=n.data.get(o.dataId).values,[u,c]=Ab(i,s.shape,s.dtype,a,l);return n.makeTensorInfo(c,s.dtype,u)}const Mq={kernelName:_x,backendName:"cpu",kernelFunc:zq};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Bq(t){const{inputs:e,backend:n,attrs:s}=t,{sparseIndices:r,sparseValues:o,defaultValue:i}=e,{outputShape:a}=s,{sliceRank:l,numUpdates:u,sliceSize:c,strides:h,outputSize:d}=Oc(o,r,a),p=!1,f=n.bufferSync(r);let m;switch(o.dtype){case"bool":{const y=n.bufferSync(o),g=Boolean(n.data.get(i.dataId).values[0]);m=la(f,y,a,d,c,u,l,h,g,p);break}case"float32":{const y=n.bufferSync(o),g=n.data.get(i.dataId).values[0];m=la(f,y,a,d,c,u,l,h,g,p);break}case"int32":{const y=n.bufferSync(o),g=n.data.get(i.dataId).values[0];m=la(f,y,a,d,c,u,l,h,g,p);break}case"string":{const y=n.bufferSync(o),g=ko(n.data.get(i.dataId).values[0]);m=la(f,y,a,d,c,u,l,h,g,p);break}default:throw new Error(`Unsupported type ${o.dtype}`)}return n.makeTensorInfo(a,m.dtype,m.values)}const Vq={kernelName:Ox,backendName:"cpu",kernelFunc:Bq};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Wq(t){const{inputs:e,backend:n,attrs:s}=t,{x:r}=e,{numOrSizeSplits:o,axis:i}=s,a=$e(i,r.shape)[0],l=sb(r,o,a),u=new Array(r.shape.length).fill(0),c=r.shape.slice();return l.map(h=>{const d=[...c];d[a]=h;const p=Ti({inputs:{x:r},backend:n,attrs:{begin:u,size:d}});return u[a]+=h,p})}const Uq={kernelName:af,backendName:"cpu",kernelFunc:Wq};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Gq={kernelName:Fx,backendName:"cpu",kernelFunc:({inputs:t,backend:e})=>{const{x:n}=t,s=e;ce(n,"square");const r=s.data.get(n.dataId).values,o=new Float32Array(r.length);for(let a=0;a<r.length;++a){const l=r[a];o[a]=l*l}return{dataId:s.write(o,n.shape,n.dtype),shape:n.shape,dtype:n.dtype}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Hq=ze(Sc,(t,e)=>{const n=e;return isNaN(t)?NaN:t>0?1:n.alpha}),jq={kernelName:Sc,backendName:"cpu",kernelFunc:Hq};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Kq(t){const{inputs:e,backend:n,attrs:s}=t,{x:r}=e,{begin:o,end:i,strides:a,beginMask:l,endMask:u,ellipsisMask:c,newAxisMask:h,shrinkAxisMask:d}=s;ce(r,"stridedSlice");const{finalShapeSparse:p,finalShape:f,isIdentity:m,sliceDim0:y,isSimpleSlice:g,begin:x,end:b,strides:w}=M1(r.shape,o,i,a,l,u,c,h,d);let k;if(m)k=je({inputs:{x:r},backend:n,attrs:{shape:f}});else if(y||g){C(r.shape.length>=1,()=>`Input must have rank at least 1, got: ${r.shape.length}`);const S=L1(x,b,w),N=Ti({inputs:{x:r},backend:n,attrs:{begin:x,size:S}});k=je({inputs:{x:N},backend:n,attrs:{shape:f}}),n.disposeIntermediateTensorInfo(N)}else{const S=n.bufferSync(r),N=zE(p,S,w,x);k=n.makeTensorInfo(f,N.dtype,N.values)}return k}const qq={kernelName:Lx,backendName:"cpu",kernelFunc:Kq};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Xq(t){const{inputs:e,backend:n,attrs:s}=t,{separator:r,nGramWidths:o,leftPad:i,rightPad:a,padWidth:l,preserveShortSequences:u}=s,{data:c,dataSplits:h}=e,d=n.data.get(c.dataId).values,p=n.data.get(h.dataId).values,[f,m]=ME(d,p,r,o,i,a,l,u);return[n.makeTensorInfo([f.length],"string",f),n.makeTensorInfo(h.shape,"int32",m)]}const Yq={kernelName:Px,backendName:"cpu",kernelFunc:Xq};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Qq(t){const{inputs:e,backend:n,attrs:s}=t,{skipEmpty:r}=s,{input:o,delimiter:i}=e;if(o.dtype!=="string")throw new Error("Input must be of datatype string");if(o.shape.length!==1)throw new Error(`Input must be a vector, got shape: ${o.shape}`);if(i.shape.length!==0)throw new Error(`Delimiter must be a scalar, got shape: ${i.shape}`);const a=n.data.get(o.dataId).values,l=n.data.get(i.dataId).values[0],[u,c,h]=BE(a,l,r),d=c.length;return[n.makeTensorInfo([d,2],"int32",u),n.makeTensorInfo([d],"string",c),n.makeTensorInfo([2],"int32",new Int32Array(h))]}const Zq={kernelName:zx,backendName:"cpu",kernelFunc:Qq};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Jq(t){const{inputs:e,backend:n,attrs:s}=t,{numBuckets:r}=s,{input:o}=e;if(o.dtype!=="string")throw new Error("Input must be of datatype string");if(r<=0)throw new Error("Number of buckets must be at least 1");const i=n.data.get(o.dataId).values,a=VE(i,r);return n.makeTensorInfo(o.shape,"int32",a)}const e8={kernelName:Mx,backendName:"cpu",kernelFunc:Jq};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const t8=ze(wc,t=>Math.tan(t)),n8={kernelName:wc,backendName:"cpu",kernelFunc:t8};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const s8=ze(vc,t=>Math.tanh(t)),r8={kernelName:vc,backendName:"cpu",kernelFunc:s8};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function o8(t){const{inputs:e,backend:n,attrs:s}=t,{x:r}=e,{reps:o}=s;ce(r,"tile");const i=UE(n.bufferSync(r),o);return n.makeTensorInfo(i.shape,i.dtype,i.values)}const i8={kernelName:kc,backendName:"cpu",kernelFunc:o8};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function a8(t){const{inputs:e,backend:n,attrs:s}=t,{x:r}=e,{k:o,sorted:i}=s;ce(r,"topk");const a=n.data.get(r.dataId).values,[l,u]=HE(a,r.shape,r.dtype,o,i);return[n.makeTensorInfo(l.shape,l.dtype,l.values),n.makeTensorInfo(u.shape,u.dtype,u.values)]}const l8={kernelName:Bx,backendName:"cpu",kernelFunc:a8};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function u8(t){const{inputs:e,attrs:n,backend:s}=t,{image:r,transforms:o}=e,{interpolation:i,fillMode:a,fillValue:l,outputShape:u}=n,[c,h,d,p]=r.shape,[f,m]=u!=null?u:[h,d],y=[c,f,m,p],g=me(r.shape),x=g[0],b=g[1],w=g[2],k=me(y),S=k[0],N=k[1],$=k[2],T=zt(r.dtype,H(y));T.fill(l);const E=s.data.get(r.dataId).values,F=s.data.get(o.dataId).values;for(let B=0;B<c;++B){const V=o.shape[0]===1?F:F.subarray(B*8,B*8+8);for(let W=0;W<f;++W)for(let G=0;G<m;++G)for(let q=0;q<p;++q){let _;const z=V[6]*G+V[7]*W+1;if(z===0)continue;const j=(V[0]*G+V[1]*W+V[2])/z,X=(V[3]*G+V[4]*W+V[5])/z,Y=dk(j,d,a),J=dk(X,h,a);switch(i){case"nearest":_=m8(E,h,d,x,b,w,B,J,Y,q,l);break;case"bilinear":_=g8(E,h,d,x,b,w,B,J,Y,q,l);break;default:throw new Error(`Error in Transform: Expect 'nearest' or 'bilinear', but got ${i}`)}const ne=B*S+W*N+G*$+q;T[ne]=_}return s.makeTensorInfo(y,r.dtype,T)}return{dataId:s.write(T,y,r.dtype),shape:r.shape,dtype:r.dtype}}const c8={kernelName:Vx,backendName:"cpu",kernelFunc:u8};function dk(t,e,n){switch(n){case"reflect":return h8(t,e);case"wrap":return d8(t,e);case"nearest":return f8(t,e);case"constant":default:return p8(t)}}function h8(t,e){let n=t;if(n<0)if(e<=1)n=0;else{const s=2*e;n<s&&(n=s*Math.trunc(-n/s)+n),n=n<-e?n+s:-n-1}else if(n>e-1)if(e<=1)n=0;else{const s=2*e;n-=s*Math.trunc(n/s),n>=e&&(n=s-n-1)}return yi(0,n,e-1)}function d8(t,e){let n=t;if(n<0)if(e<=1)n=0;else{const s=e-1;n+=e*(Math.trunc(-n/s)+1)}else if(n>e-1)if(e<=1)n=0;else{const s=e-1;n-=e*Math.trunc(n/s)}return yi(0,n,e-1)}function p8(t,e){return t}function f8(t,e){return yi(0,t,e-1)}function Al(t,e,n,s,r,o,i,a,l,u,c){const h=i*s+a*r+l*o+u;return 0<=a&&a<e&&0<=l&&l<n?t[h]:c}function m8(t,e,n,s,r,o,i,a,l,u,c){const h=Math.round(a),d=Math.round(l);return Al(t,e,n,s,r,o,i,h,d,u,c)}function g8(t,e,n,s,r,o,i,a,l,u,c){const h=Math.floor(a),d=Math.floor(l),p=h+1,f=d+1,m=(f-l)*Al(t,e,n,s,r,o,i,h,d,u,c)+(l-d)*Al(t,e,n,s,r,o,i,h,f,u,c),y=(f-l)*Al(t,e,n,s,r,o,i,p,d,u,c)+(l-d)*Al(t,e,n,s,r,o,i,p,f,u,c);return(p-a)*m+(a-h)*y}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function y8(t){const{inputs:e,attrs:n,backend:s}=t,{axis:r}=n,{x:o}=e;ce(o,"unique");const i=s.data.get(o.dataId).values,{outputValues:a,outputShape:l,indices:u}=jE(i,r,o.shape,o.dtype);return[s.makeTensorInfo(l,o.dtype,a),s.makeTensorInfo([u.length],"int32",u)]}const x8={kernelName:Wx,backendName:"cpu",kernelFunc:y8};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function b8(t){const{inputs:e,backend:n,attrs:s}=t,{value:r}=e;let{axis:o}=s;o<0&&(o+=r.shape.length);const i=r.shape.length,a=r.shape[o],l=new Array(i-1);let u=0;for(let p=0;p<i;p++)p!==o&&(l[u++]=r.shape[p]);const c=new Array(i).fill(0),h=r.shape.slice();h[o]=1;const d=new Array(a);for(let p=0;p<d.length;p++){c[o]=p;const f=Ti({inputs:{x:r},backend:n,attrs:{begin:c,size:h}});d[p]=je({inputs:{x:f},backend:n,attrs:{shape:l}}),n.disposeIntermediateTensorInfo(f)}return d}const w8={kernelName:uf,backendName:"cpu",kernelFunc:b8};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function v8(t){const{inputs:e,backend:n,attrs:s}=t,{x:r,segmentIds:o}=e,{numSegments:i}=s;ce(r,"unsortedSegmentSum");const a=r.shape.length,l=o.shape.length,u=[],c=[],h=a-l;let d=o;for(let f=0;f<h;++f){const m=Ud({inputs:{input:d},backend:n,attrs:{dim:f+1}});d=m,c.push(m)}for(let f=0;f<i;++f){const m=Lo(f,"int32"),y=n.makeTensorInfo([],"int32",m),g=uE({inputs:{a:y,b:d},backend:n}),x=Ro({inputs:{x:g},backend:n,attrs:{dtype:"float32"}}),b=Yf({inputs:{a:x,b:r},backend:n}),w=jc({inputs:{x:b},backend:n,attrs:{axis:0,keepDims:!1}});u.push(w),c.push(y),c.push(g),c.push(x),c.push(b),c.push(w)}const p=aD({inputs:u,backend:n,attrs:{axis:0}});return c.forEach(f=>n.disposeIntermediateTensorInfo(f)),p}const k8={kernelName:cf,backendName:"cpu",kernelFunc:v8};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const S8=[xj,rH,wj,kj,cH,Cj,$j,Tj,Dj,Aj,Oj,Lj,zj,Vj,Uj,jj,qj,Yj,Zj,gj,e6,n6,r6,i6,lH,dH,l6,oH,c6,d6,p6,m6,y6,b6,v6,S6,N6,I6,E6,R6,_6,F6,P6,z6,B6,W6,G6,H6,j6,K6,Y6,uj,Z6,pH,i5,fH,a5,gH,p5,f5,g5,xH,b5,v5,S5,N5,I5,wH,kH,iH,E5,h6,R5,_5,F5,cj,CH,$H,P5,TH,M5,W5,G5,K5,X5,Q5,Z5,DH,eK,nK,rK,iK,lK,cK,dK,AH,fK,yK,wK,OH,LH,SK,$K,EK,zH,RK,_K,OK,lD,zK,dj,VH,BK,WK,GK,jK,aH,Py,qK,pj,fj,mj,YK,ZK,eq,nq,rq,oq,aq,XH,uq,fq,gq,wq,QH,kq,Cq,$q,ZH,xK,Eq,Rq,_q,Fq,Pq,Mq,Vq,Uq,tj,Gq,sj,jq,qq,Yq,Zq,e8,aj,q6,n8,r8,i8,l8,c8,MH,x8,w8,k8,AK];for(const t of S8)rN(t);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ni={},Ch={alpha:!1,antialias:!1,premultipliedAlpha:!1,preserveDrawingBuffer:!1,depth:!1,stencil:!1,failIfMajorPerformanceCaveat:!0};function C8(t,e){ni[t]=e}function Js(t,e){if(!(t in ni)||e!=null){const s=$8(t,e);if(s!==null)ni[t]=s;else return console.log("Could not get context for WebGL version",t),null}const n=ni[t];return n==null||n.isContextLost()?(delete ni[t],Js(t)):(n.disable(n.DEPTH_TEST),n.disable(n.STENCIL_TEST),n.disable(n.BLEND),n.disable(n.DITHER),n.disable(n.POLYGON_OFFSET_FILL),n.disable(n.SAMPLE_COVERAGE),n.enable(n.SCISSOR_TEST),n.enable(n.CULL_FACE),n.cullFace(n.BACK),ni[t])}function N8(t){if(typeof OffscreenCanvas<"u"&&t===2)return new OffscreenCanvas(300,150);if(typeof document<"u")return document.createElement("canvas");throw new Error("Cannot create a canvas in this context")}function $8(t,e){if(t!==1&&t!==2)throw new Error("Cannot get WebGL rendering context, WebGL is disabled.");const n=e==null?N8(t):e;return n.addEventListener("webglcontextlost",s=>{s.preventDefault(),delete ni[t]},!1),U().getBool("SOFTWARE_WEBGL_ENABLED")&&(Ch.failIfMajorPerformanceCaveat=!1),t===1?n.getContext("webgl",Ch)||n.getContext("experimental-webgl",Ch):n.getContext("webgl2",Ch)}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var xu;(function(t){t[t.DENSE=0]="DENSE",t[t.SHARED_BATCH=1]="SHARED_BATCH"})(xu||(xu={}));var qn;(function(t){t[t.RENDER=0]="RENDER",t[t.UPLOAD=1]="UPLOAD",t[t.PIXELS=2]="PIXELS",t[t.DOWNLOAD=3]="DOWNLOAD"})(qn||(qn={}));var Gt;(function(t){t[t.UNPACKED_FLOAT16=0]="UNPACKED_FLOAT16",t[t.UNPACKED_FLOAT32=1]="UNPACKED_FLOAT32",t[t.PACKED_4X1_UNSIGNED_BYTE=2]="PACKED_4X1_UNSIGNED_BYTE",t[t.PACKED_2X2_FLOAT32=3]="PACKED_2X2_FLOAT32",t[t.PACKED_2X2_FLOAT16=4]="PACKED_2X2_FLOAT16"})(Gt||(Gt={}));function Kc(t,e){return[e,t]}function I8(t,e){return t*e}function Nh(t){const e=H(t),n=Math.ceil(e/4);return Wg(n)}function sl(t,e){return[Math.max(1,Math.ceil(e/2)),Math.max(1,Math.ceil(t/2))]}function T8(t,e){const[n,s]=sl(t,e);return n*s*4}function Pb(t,e){const n=t;let s,r,o,i,a,l,u,c,h,d;return U().getNumber("WEBGL_VERSION")===2?(s=n.R32F,r=n.R16F,o=n.RGBA16F,i=n.RGBA32F,a=n.RED,u=4,c=1,h=n.HALF_FLOAT,d=n.FLOAT,l=n.RGBA8):(s=t.RGBA,r=t.RGBA,o=t.RGBA,i=n.RGBA,a=t.RGBA,u=4,c=4,h=e!=null?e.HALF_FLOAT_OES:null,d=t.FLOAT,l=t.RGBA),{internalFormatFloat:s,internalFormatHalfFloat:r,internalFormatPackedHalfFloat:o,internalFormatPackedFloat:i,textureFormatFloat:a,downloadTextureFormat:l,downloadUnpackNumChannels:u,defaultNumChannels:c,textureTypeHalfFloat:h,textureTypeFloat:d}}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ae(t,e){const n=e();return U().getBool("DEBUG")&&E8(t),n}function E8(t){const e=t.getError();if(e!==t.NO_ERROR)throw new Error("WebGL Error: "+_8(t,e))}const D8=596e-10,R8=65504;function A8(t){return!!(U().getBool("WEBGL_RENDER_FLOAT32_ENABLED")||t===0||D8<Math.abs(t)&&Math.abs(t)<R8)}function _8(t,e){switch(e){case t.NO_ERROR:return"NO_ERROR";case t.INVALID_ENUM:return"INVALID_ENUM";case t.INVALID_VALUE:return"INVALID_VALUE";case t.INVALID_OPERATION:return"INVALID_OPERATION";case t.INVALID_FRAMEBUFFER_OPERATION:return"INVALID_FRAMEBUFFER_OPERATION";case t.OUT_OF_MEMORY:return"OUT_OF_MEMORY";case t.CONTEXT_LOST_WEBGL:return"CONTEXT_LOST_WEBGL";default:return`Unknown error code ${e}`}}function $h(t,e){return Hr(t,()=>t.getExtension(e),'Extension "'+e+'" not supported on this browser.')}function O8(t,e){const n=Hr(t,()=>t.createShader(t.VERTEX_SHADER),"Unable to create vertex WebGLShader.");if(ae(t,()=>t.shaderSource(n,e)),ae(t,()=>t.compileShader(n)),t.getShaderParameter(n,t.COMPILE_STATUS)===!1)throw console.log(t.getShaderInfoLog(n)),new Error("Failed to compile vertex shader.");return n}function F8(t,e){const n=Hr(t,()=>t.createShader(t.FRAGMENT_SHADER),"Unable to create fragment WebGLShader.");if(ae(t,()=>t.shaderSource(n,e)),ae(t,()=>t.compileShader(n)),U().get("ENGINE_COMPILE_ONLY"))return n;if(t.getShaderParameter(n,t.COMPILE_STATUS)===!1)throw uD(e,t.getShaderInfoLog(n)),new Error("Failed to compile fragment shader.");return n}const L8=/ERROR: [0-9]+:([0-9]+):/g;function uD(t,e){const n=L8.exec(e);if(n==null){console.log(`Couldn't parse line number in error: ${e}`),console.log(t);return}const s=+n[1],r=t.split(`
`),o=r.length.toString().length+2,i=r.map((h,d)=>ma((d+1).toString(),o)+h);let a=0;for(let h=0;h<i.length;h++)a=Math.max(i[h].length,a);const l=i.slice(0,s-1),u=i.slice(s-1,s),c=i.slice(s);console.log(l.join(`
`)),console.log(e.split(`
`)[0]),console.log(`%c ${ma(u[0],a)}`,"border:1px solid red; background-color:#e3d2d2; color:#a61717"),console.log(c.join(`
`))}function P8(t){return Hr(t,()=>t.createProgram(),"Unable to create WebGLProgram.")}function z8(t,e){if(ae(t,()=>t.linkProgram(e)),!U().get("ENGINE_COMPILE_ONLY")&&t.getProgramParameter(e,t.LINK_STATUS)===!1)throw console.log(t.getProgramInfoLog(e)),new Error("Failed to link vertex and fragment shaders.")}function Gm(t,e){if(ae(t,()=>t.validateProgram(e)),t.getProgramParameter(e,t.VALIDATE_STATUS)===!1)throw console.log(t.getProgramInfoLog(e)),new Error("Shader program validation failed.")}function M8(t,e){const n=Hr(t,()=>t.createBuffer(),"Unable to create WebGLBuffer");return ae(t,()=>t.bindBuffer(t.ARRAY_BUFFER,n)),ae(t,()=>t.bufferData(t.ARRAY_BUFFER,e,t.STATIC_DRAW)),n}function B8(t,e){const n=Hr(t,()=>t.createBuffer(),"Unable to create WebGLBuffer");return ae(t,()=>t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,n)),ae(t,()=>t.bufferData(t.ELEMENT_ARRAY_BUFFER,e,t.STATIC_DRAW)),n}function V8(t){return Hr(t,()=>t.createTexture(),"Unable to create WebGLTexture.")}function W8(t,e){const n=U().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(t<=0||e<=0){const s=`[${t}x${e}]`;throw new Error("Requested texture size "+s+" is invalid.")}if(t>n||e>n){const s=`[${t}x${e}]`,r=`[${n}x${n}]`;throw new Error("Requested texture size "+s+" greater than WebGL maximum on this browser / GPU "+r+".")}}function U8(t){return Hr(t,()=>t.createFramebuffer(),"Unable to create WebGLFramebuffer.")}function pk(t,e,n,s,r,o,i){const a=t.getAttribLocation(e,n);return a===-1?!1:(ae(t,()=>t.bindBuffer(t.ARRAY_BUFFER,s)),ae(t,()=>t.vertexAttribPointer(a,r,t.FLOAT,!1,o,i)),ae(t,()=>t.enableVertexAttribArray(a)),!0)}function G8(t,e,n){X8(t,n),ae(t,()=>t.activeTexture(t.TEXTURE0+n)),ae(t,()=>t.bindTexture(t.TEXTURE_2D,e))}function H8(t,e,n){return Hr(t,()=>t.getUniformLocation(e,n),'uniform "'+n+'" not present in program.')}function j8(t,e,n){return t.getUniformLocation(e,n)}function K8(t,e,n,s){ae(t,()=>G8(t,e,s)),ae(t,()=>t.uniform1i(n,s))}function Hm(t,e,n){ae(t,()=>t.bindFramebuffer(t.FRAMEBUFFER,n)),ae(t,()=>t.framebufferTexture2D(t.FRAMEBUFFER,t.COLOR_ATTACHMENT0,t.TEXTURE_2D,e,0))}function fk(t,e){ae(t,()=>t.bindFramebuffer(t.FRAMEBUFFER,e)),ae(t,()=>t.framebufferTexture2D(t.FRAMEBUFFER,t.COLOR_ATTACHMENT0,t.TEXTURE_2D,null,0))}function Ih(t){const e=t.checkFramebufferStatus(t.FRAMEBUFFER);if(e!==t.FRAMEBUFFER_COMPLETE)throw new Error("Error binding framebuffer: "+q8(t,e))}function q8(t,e){switch(e){case t.FRAMEBUFFER_INCOMPLETE_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_ATTACHMENT";case t.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT";case t.FRAMEBUFFER_INCOMPLETE_DIMENSIONS:return"FRAMEBUFFER_INCOMPLETE_DIMENSIONS";case t.FRAMEBUFFER_UNSUPPORTED:return"FRAMEBUFFER_UNSUPPORTED";default:return`unknown error ${e}`}}function Hr(t,e,n){const s=ae(t,()=>e());if(s==null)throw new Error(n);return s}function X8(t,e){const n=t.MAX_COMBINED_TEXTURE_IMAGE_UNITS-1,s=e+t.TEXTURE0;if(s<t.TEXTURE0||s>n){const r=`[gl.TEXTURE0, gl.TEXTURE${n}]`;throw new Error(`textureUnit must be in ${r}.`)}}function Va(t,e=2){return H(t.slice(0,t.length-e))}function Wa(t){if(t.length===0)throw Error("Cannot get rows and columns of an empty shape array.");return[t.length>1?t[t.length-2]:1,t[t.length-1]]}function Th(t){let e=[1,1,1];return t.length===0||t.length===1&&t[0]===1||(e=[Va(t),...Wa(t)]),e}function Y8(t,e=!1){let n=U().getNumber("WEBGL_MAX_TEXTURE_SIZE"),s=U().getNumber("WEBGL_MAX_SIZE_FOR_NARROW_TEXTURE");s===1/0&&U().getBool("WEBGL_AUTO_SQUARIFY_NARROW_TEXTURE_SHAPE")&&(s=n/2),e&&(n=n*2,s=s*2,t=t.map((a,l)=>l>=t.length-2?z0(t[l]):t[l]),t.length===1&&(t=[2,t[0]])),t.length!==2&&(t=Fo(t).newShape);let r=H(t),o=null;t.length<=1&&r<=n?o=[1,r]:t.length===2&&t[0]<=n&&t[1]<=n?o=t:t.length===3&&t[0]*t[1]<=n&&t[2]<=n?o=[t[0]*t[1],t[2]]:t.length===3&&t[0]<=n&&t[1]*t[2]<=n?o=[t[0],t[1]*t[2]]:t.length===4&&t[0]*t[1]*t[2]<=n&&t[3]<=n?o=[t[0]*t[1]*t[2],t[3]]:t.length===4&&t[0]<=n&&t[1]*t[2]*t[3]<=n&&(o=[t[0],t[1]*t[2]*t[3]]);const i=o!=null&&Math.max(...o)>s&&Math.min(...o)<=(e?2:1)&&Math.min(...o)>0;if(o==null||i)if(e){const a=Va(t);let l=2,u=2;t.length&&([l,u]=Wa(t)),r=a*(l/2)*(u/2),o=Wg(r).map(c=>c*2)}else o=Wg(r);return o}function Eh(t){return t%2===0}function Hd(t,e){if(t=t.slice(-2),e=e.slice(-2),Ae(t,e)||!t.length||!e.length||t[0]===0||t[1]===0||e[0]===0||e[1]===0)return!0;if(t.length!==e.length){const n=t.slice(-1)[0],s=e.slice(-1)[0];if(n===s||Eh(n)&&Eh(s)&&(t[0]===1||e[0]===1))return!0}return t[1]===e[1]&&Eh(t[0])&&Eh(e[0])}let jm,Km;function Q8(t){if(jm==null){const e=Js(t);jm=e.getParameter(e.MAX_TEXTURE_SIZE)}return jm}function Z8(t){if(Km==null){const e=Js(t);Km=e.getParameter(e.MAX_TEXTURE_IMAGE_UNITS)}return Math.min(16,Km)}function J8(t){if(t===0)return 0;let e;const n=Js(t);return Ss(n,"EXT_disjoint_timer_query_webgl2")&&t===2?e=2:Ss(n,"EXT_disjoint_timer_query")?e=1:e=0,e}function Ss(t,e){return t.getExtension(e)!=null}function mk(t){try{if(Js(t)!=null)return!0}catch(e){return console.log("Error when getting WebGL context: ",e),!1}return!1}function eX(t){if(t===0)return!1;const e=Js(t);if(t===1){if(!Ss(e,"OES_texture_float"))return!1}else if(!Ss(e,"EXT_color_buffer_float"))return!1;return My(e)}function tX(t){if(t===0)return!1;const e=Js(t);if(t===1){if(!Ss(e,"OES_texture_float")||!Ss(e,"WEBGL_color_buffer_float"))return!1}else{if(Ss(e,"EXT_color_buffer_float"))return My(e);const s="EXT_color_buffer_half_float";if(Ss(e,s)){const r=e.getExtension(s);return nX(e,r)}return!1}return My(e)}function My(t){const e=Pb(t),n=t.createTexture();t.bindTexture(t.TEXTURE_2D,n);const s=1,r=1;t.texImage2D(t.TEXTURE_2D,0,e.internalFormatFloat,s,r,0,e.textureFormatFloat,e.textureTypeFloat,null);const o=t.createFramebuffer();t.bindFramebuffer(t.FRAMEBUFFER,o),t.framebufferTexture2D(t.FRAMEBUFFER,t.COLOR_ATTACHMENT0,t.TEXTURE_2D,n,0);const i=t.checkFramebufferStatus(t.FRAMEBUFFER)===t.FRAMEBUFFER_COMPLETE;return t.bindTexture(t.TEXTURE_2D,null),t.bindFramebuffer(t.FRAMEBUFFER,null),t.deleteTexture(n),t.deleteFramebuffer(o),i}function nX(t,e){const n=Pb(t,e),s=t.createTexture();t.bindTexture(t.TEXTURE_2D,s);const r=1,o=1;t.texImage2D(t.TEXTURE_2D,0,n.internalFormatHalfFloat,r,o,0,n.textureFormatFloat,n.textureTypeHalfFloat,null);const i=t.createFramebuffer();t.bindFramebuffer(t.FRAMEBUFFER,i),t.framebufferTexture2D(t.FRAMEBUFFER,t.COLOR_ATTACHMENT0,t.TEXTURE_2D,s,0);const a=t.checkFramebufferStatus(t.FRAMEBUFFER)===t.FRAMEBUFFER_COMPLETE;return t.bindTexture(t.TEXTURE_2D,null),t.bindFramebuffer(t.FRAMEBUFFER,null),t.deleteTexture(s),t.deleteFramebuffer(i),a}function sX(t){return t!==2?!1:Js(t).fenceSync!=null}function qc(t,e){Array.isArray(t)||(t=[t]),t.forEach(n=>{n!=null&&C(n.dtype!=="complex64",()=>`${e} does not support complex64 tensors in the WebGL backend.`)})}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const fe=U();fe.registerFlag("HAS_WEBGL",()=>fe.getNumber("WEBGL_VERSION")>0);fe.registerFlag("WEBGL_VERSION",()=>mk(2)?2:mk(1)?1:0);fe.registerFlag("WEBGL_CHECK_NUMERICAL_PROBLEMS",()=>!1);fe.registerFlag("WEBGL_BUFFER_SUPPORTED",()=>fe.get("WEBGL_VERSION")===2);fe.registerFlag("WEBGL_CPU_FORWARD",()=>!0);fe.registerFlag("WEBGL_FORCE_F16_TEXTURES",()=>!1);fe.registerFlag("WEBGL_PACK",()=>fe.getBool("HAS_WEBGL"));fe.registerFlag("WEBGL_PACK_NORMALIZATION",()=>fe.getBool("WEBGL_PACK"));fe.registerFlag("WEBGL_PACK_CLIP",()=>fe.getBool("WEBGL_PACK"));fe.registerFlag("WEBGL_PACK_DEPTHWISECONV",()=>fe.getBool("WEBGL_PACK"));fe.registerFlag("WEBGL_PACK_BINARY_OPERATIONS",()=>fe.getBool("WEBGL_PACK"));fe.registerFlag("WEBGL_PACK_UNARY_OPERATIONS",()=>fe.getBool("WEBGL_PACK"));fe.registerFlag("WEBGL_PACK_ARRAY_OPERATIONS",()=>fe.getBool("WEBGL_PACK"));fe.registerFlag("WEBGL_PACK_IMAGE_OPERATIONS",()=>fe.getBool("WEBGL_PACK"));fe.registerFlag("WEBGL_PACK_REDUCE",()=>fe.getBool("WEBGL_PACK"));fe.registerFlag("WEBGL_LAZILY_UNPACK",()=>fe.getBool("WEBGL_PACK"));fe.registerFlag("WEBGL_CONV_IM2COL",()=>fe.getBool("WEBGL_PACK"));fe.registerFlag("WEBGL_MAX_TEXTURE_SIZE",()=>Q8(fe.getNumber("WEBGL_VERSION")));fe.registerFlag("WEBGL_MAX_TEXTURES_IN_SHADER",()=>Z8(fe.getNumber("WEBGL_VERSION")));fe.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION",()=>{const t=fe.getNumber("WEBGL_VERSION");return t===0?0:J8(t)});fe.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE",()=>fe.getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0&&!gN());fe.registerFlag("WEBGL_RENDER_FLOAT32_CAPABLE",()=>eX(fe.getNumber("WEBGL_VERSION")));fe.registerFlag("WEBGL_RENDER_FLOAT32_ENABLED",()=>fe.getBool("WEBGL_FORCE_F16_TEXTURES")?!1:fe.getBool("WEBGL_RENDER_FLOAT32_CAPABLE"));fe.registerFlag("WEBGL_DOWNLOAD_FLOAT_ENABLED",()=>tX(fe.getNumber("WEBGL_VERSION")));fe.registerFlag("WEBGL_FENCE_API_ENABLED",()=>sX(fe.getNumber("WEBGL_VERSION")));fe.registerFlag("WEBGL_SIZE_UPLOAD_UNIFORM",()=>fe.getBool("WEBGL_RENDER_FLOAT32_ENABLED")?4:0);fe.registerFlag("WEBGL_DELETE_TEXTURE_THRESHOLD",()=>-1,t=>{if(t<0&&t!==-1)throw new Error(`WEBGL_DELETE_TEXTURE_THRESHOLD must be -1 (indicating never delete) or at least 0, but got ${t}.`)});fe.registerFlag("WEBGL_FLUSH_THRESHOLD",()=>gN()?1:-1,t=>{if(t<0&&t!==-1)throw new Error(`WEBGL_FLUSH_THRESHOLD must be -1 (indicating never manual flush) or at least 0, but got ${t}.`)});fe.registerFlag("CPU_HANDOFF_SIZE_THRESHOLD",()=>128);fe.registerFlag("WEBGL_USE_SHAPES_UNIFORMS",()=>!1);fe.registerFlag("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD",()=>1e5);fe.registerFlag("TOPK_K_CPU_HANDOFF_THRESHOLD",()=>128);fe.registerFlag("WEBGL_EXP_CONV",()=>!1);fe.registerFlag("SOFTWARE_WEBGL_ENABLED",()=>fe.getBool("IS_TEST"));fe.registerFlag("WEBGL_MAX_SIZE_FOR_NARROW_TEXTURE",()=>1/0);fe.registerFlag("WEBGL_AUTO_SQUARIFY_NARROW_TEXTURE_SHAPE",()=>!1);fe.registerFlag("WEBGL2_ISNAN_CUSTOM",()=>!1);fe.registerFlag("ENGINE_COMPILE_ONLY",()=>!1);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dn(){let t,e,n,s,r,o,i,a,l,u;return U().getNumber("WEBGL_VERSION")===2?(t="#version 300 es",e="in",n="out",s="in",r="texture",o="outputColor",i="out vec4 outputColor;",a=U().getBool("WEBGL2_ISNAN_CUSTOM")?`
      bool isnan_custom(float val) {
        uint floatToUint = floatBitsToUint(val);
        return (floatToUint & 0x7fffffffu) > 0x7f800000u;
      }

      bvec4 isnan_custom(vec4 val) {
        return bvec4(isnan_custom(val.x),
          isnan_custom(val.y), isnan_custom(val.z), isnan_custom(val.w));
      }

      #define isnan(value) isnan_custom(value)
    `:"",l="",u=`
      #define round(value) newRound(value)
      int newRound(float value) {
        return int(floor(value + 0.5));
      }

      ivec4 newRound(vec4 value) {
        return ivec4(floor(value + vec4(0.5)));
      }
    `):(t="",e="attribute",n="varying",s="varying",r="texture2D",o="gl_FragColor",i="",a=`
      #define isnan(value) isnan_custom(value)
      bool isnan_custom(float val) {
        return (val > 0. || val < 1. || val == 0.) ? false : true;
      }
      bvec4 isnan_custom(vec4 val) {
        return bvec4(isnan(val.x), isnan(val.y), isnan(val.z), isnan(val.w));
      }
    `,l=`
      uniform float INFINITY;

      bool isinf(float val) {
        return abs(val) == INFINITY;
      }
      bvec4 isinf(vec4 val) {
        return equal(abs(val), vec4(INFINITY));
      }
    `,u=`
      int round(float value) {
        return int(floor(value + 0.5));
      }

      ivec4 round(vec4 value) {
        return ivec4(floor(value + vec4(0.5)));
      }
    `),{version:t,attribute:e,varyingVs:n,varyingFs:s,texture2D:r,output:o,defineOutput:i,defineSpecialNaN:a,defineSpecialInf:l,defineRound:u}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Mi(t,e,n="index"){const s=me(e);return s.map((r,o)=>{const i=`int ${t[o]} = ${n} / ${r}`,a=o===s.length-1?`int ${t[o+1]} = ${n} - ${t[o]} * ${r}`:`index -= ${t[o]} * ${r}`;return`${i}; ${a};`}).join("")}function Qf(t,e,n="index"){const s=me(e);return s.map((r,o)=>{const i=`int ${t[o]} = ${n} / outShapeStrides[${o}]`,a=o===s.length-1?`int ${t[o+1]} = ${n} - ${t[o]} * outShapeStrides[${o}]`:`index -= ${t[o]} * outShapeStrides[${o}]`;return`${i}; ${a};`}).join("")}function rX(t,e){const n=t.length,s=t.map(o=>`${e}[${o}]`),r=new Array(n-1);r[n-2]=s[n-1];for(let o=n-3;o>=0;--o)r[o]=`(${r[o+1]} * ${s[o+1]})`;return r}function oX(t,e,n="index"){const s=t.map((o,i)=>i),r=rX(s,e);return r.map((o,i)=>{const a=`int ${t[i]} = ${n} / ${r[i]}`,l=i===r.length-1?`int ${t[i+1]} = ${n} - ${t[i]} * ${r[i]}`:`index -= ${t[i]} * ${r[i]}`;return`${a}; ${l};`}).join("")}function zb(t){const e=me(t).map(n=>n.toString());return`
  int getFlatIndex(ivec3 coords) {
    return coords.x * ${e[0]} + coords.y * ${e[1]} + coords.z;
  }
`}function Mb(){return`
  int getFlatIndex(ivec3 coords) {
    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;
  }
`}const cD=`
  const float FLOAT_MAX = 1.70141184e38;
  const float FLOAT_MIN = 1.17549435e-38;

  lowp vec4 encode_float(highp float v) {
    if (isnan(v)) {
      return vec4(255, 255, 255, 255);
    }

    highp float av = abs(v);

    if(av < FLOAT_MIN) {
      return vec4(0.0, 0.0, 0.0, 0.0);
    } else if(v > FLOAT_MAX) {
      return vec4(0.0, 0.0, 128.0, 127.0) / 255.0;
    } else if(v < -FLOAT_MAX) {
      return vec4(0.0, 0.0,  128.0, 255.0) / 255.0;
    }

    highp vec4 c = vec4(0,0,0,0);

    highp float e = floor(log2(av));
    highp float m = exp2(fract(log2(av))) - 1.0;

    c[2] = floor(128.0 * m);
    m -= c[2] / 128.0;
    c[1] = floor(32768.0 * m);
    m -= c[1] / 32768.0;
    c[0] = floor(8388608.0 * m);

    highp float ebias = e + 127.0;
    c[3] = floor(ebias / 2.0);
    ebias -= c[3] * 2.0;
    c[2] += floor(ebias) * 128.0;

    c[3] += 128.0 * step(0.0, -v);

    return c / 255.0;
  }
`;/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const{getBroadcastDims:hD}=OB;function iX(t,e,n){const s=[];if(t.forEach(p=>{const f=H(p.shapeInfo.logicalShape);if(p.shapeInfo.isUniform?s.push(`uniform float ${p.name}${f>1?`[${f}]`:""};`):(s.push(`uniform sampler2D ${p.name};`),s.push(`uniform int offset${p.name};`)),n.enableShapeUniforms){const{uniformShape:m}=Bb(n.packedInputs,p.shapeInfo.logicalShape,p.shapeInfo.texShape);switch(m.length){case 1:s.push(`uniform int ${p.name}Shape;`);break;case 2:s.push(`uniform ivec2 ${p.name}Shape;`);break;case 3:s.push(`uniform ivec3 ${p.name}Shape;`);break;case 4:s.push(`uniform ivec4 ${p.name}Shape;`);break}s.push(`uniform ivec2 ${p.name}TexShape;`)}}),n.enableShapeUniforms){switch(e.logicalShape.length){case 1:s.push("uniform int outShape;");break;case 2:s.push("uniform ivec2 outShape;"),s.push("uniform int outShapeStrides;");break;case 3:s.push("uniform ivec3 outShape;"),s.push("uniform ivec2 outShapeStrides;");break;case 4:s.push("uniform ivec4 outShape;"),s.push("uniform ivec3 outShapeStrides;");break}s.push("uniform ivec2 outTexShape;")}n.customUniforms&&n.customUniforms.forEach(p=>{s.push(`uniform ${p.type} ${p.name}${p.arrayIndex?`[${p.arrayIndex}]`:""};`)});const r=s.join(`
`),o=t.map(p=>aX(p,e,n.packedInputs,n.enableShapeUniforms)).join(`
`),i=e.texShape,a=dn(),l=cX(a);let u,c,h=pX(a);return e.isPacked?(u=lX(e.logicalShape,i,n.enableShapeUniforms),c=dX(a)):(u=uX(e.logicalShape,i,n.enableShapeUniforms),c=hX(a)),n.packedInputs&&(h+=yX),[h,l,c,r,u,o,n.userCode].join(`
`)}function rl(t,e=!1){const n=t.shapeInfo.logicalShape;switch(n.length){case 0:return EX(t,e);case 1:return RX(t,e);case 2:return _X(t,e);case 3:return FX(t,e);case 4:return PX(t,e);case 5:return zX(t);case 6:return MX(t);default:throw new Error(`${n.length}-D input sampling is not yet supported`)}}function dD(t,e){switch(t.shapeInfo.logicalShape.length){case 0:return TX(t);case 1:return DX(t,e);case 2:return AX(t,e);case 3:return OX(t,e);default:return LX(t,e)}}function aX(t,e,n=!1,s){let r="";n?r+=dD(t,s):r+=rl(t,s);const o=t.shapeInfo.logicalShape,i=e.logicalShape;return o.length<=i.length&&(n?r+=BX(t,e):r+=VX(t,e)),r}function lX(t,e,n){switch(t.length){case 0:return pD();case 1:return xX(t,e,n);case 2:return $X(t,e,n);case 3:return wX(t,e,n);default:return kX(t,e,n)}}function uX(t,e,n){switch(t.length){case 0:return pD();case 1:return bX(t,e,n);case 2:return IX(t,e,n);case 3:return vX(t,e,n);case 4:return SX(t,e,n);case 5:return CX(t,e);case 6:return NX(t,e);default:throw new Error(`${t.length}-D output sampling is not yet supported`)}}function cX(t){return`
    float sampleTexture(sampler2D textureSampler, vec2 uv) {
      return ${t.texture2D}(textureSampler, uv).r;
    }
  `}function hX(t){return`
    void setOutput(float val) {
      ${t.output} = vec4(val, 0, 0, 0);
    }
  `}function dX(t){return`
    void setOutput(vec4 val) {
      ${t.output} = val;
    }
  `}function pX(t){return`${t.version}
    precision highp float;
    precision highp int;
    precision highp sampler2D;
    ${t.varyingFs} vec2 resultUV;
    ${t.defineOutput}
    const vec2 halfCR = vec2(0.5, 0.5);

    struct ivec5
    {
      int x;
      int y;
      int z;
      int w;
      int u;
    };

    struct ivec6
    {
      int x;
      int y;
      int z;
      int w;
      int u;
      int v;
    };

    uniform float NAN;
    ${t.defineSpecialNaN}
    ${t.defineSpecialInf}
    ${t.defineRound}

    int imod(int x, int y) {
      return x - y * (x / y);
    }

    int idiv(int a, int b, float sign) {
      int res = a / b;
      int mod = imod(a, b);
      if (sign < 0. && mod != 0) {
        res -= 1;
      }
      return res;
    }

    //Based on the work of Dave Hoskins
    //https://www.shadertoy.com/view/4djSRW
    #define HASHSCALE1 443.8975
    float random(float seed){
      vec2 p = resultUV * seed;
      vec3 p3  = fract(vec3(p.xyx) * HASHSCALE1);
      p3 += dot(p3, p3.yzx + 19.19);
      return fract((p3.x + p3.y) * p3.z);
    }

    ${fX}
    ${mX}
    ${gX}
  `}const fX=`
vec2 uvFromFlat(int texNumR, int texNumC, int index) {
  int texR = index / texNumC;
  int texC = index - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
vec2 packedUVfrom1D(int texNumR, int texNumC, int index) {
  int texelIndex = index / 2;
  int texR = texelIndex / texNumC;
  int texC = texelIndex - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
`,mX=`
vec2 packedUVfrom2D(int texelsInLogicalRow, int texNumR,
  int texNumC, int row, int col) {
  int texelIndex = (row / 2) * texelsInLogicalRow + (col / 2);
  int texR = texelIndex / texNumC;
  int texC = texelIndex - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
`,gX=`
vec2 packedUVfrom3D(int texNumR, int texNumC,
    int texelsInBatch, int texelsInLogicalRow, int b,
    int row, int col) {
  int index = b * texelsInBatch + (row / 2) * texelsInLogicalRow + (col / 2);
  int texR = index / texNumC;
  int texC = index - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
`,yX=`
  float getChannel(vec4 frag, vec2 innerDims) {
    vec2 modCoord = mod(innerDims, 2.);
    return modCoord.x == 0. ?
      (modCoord.y == 0. ? frag.r : frag.g) :
      (modCoord.y == 0. ? frag.b : frag.a);
  }
  float getChannel(vec4 frag, int dim) {
    float modCoord = mod(float(dim), 2.);
    return modCoord == 0. ? frag.r : frag.g;
  }
`;function pD(){return`
    int getOutputCoords() {
      return 0;
    }
  `}function xX(t,e,n){const s=[Math.ceil(e[0]/2),Math.ceil(e[1]/2)];return s[0]===1?n?`
      int getOutputCoords() {
        return 2 * int(resultUV.x * ceil(float(outTexShape[1]) / 2.0));
      }
    `:`
      int getOutputCoords() {
        return 2 * int(resultUV.x * ${s[1]}.0);
      }
    `:s[1]===1?n?`
      int getOutputCoords() {
        return 2 * int(resultUV.y * ceil(float(outTexShape[0]) / 2.0));
      }
    `:`
      int getOutputCoords() {
        return 2 * int(resultUV.y * ${s[0]}.0);
      }
    `:n?`
    int getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));
      return 2 * (resTexRC.x * packedTexShape[1] + resTexRC.y);
    }
  `:`
    int getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${s[0]}, ${s[1]}));
      return 2 * (resTexRC.x * ${s[1]} + resTexRC.y);
    }
  `}function bX(t,e,n){return e[0]===1?n?`
      int getOutputCoords() {
        return int(resultUV.x * float(outTexShape[1]));
      }
    `:`
      int getOutputCoords() {
        return int(resultUV.x * ${e[1]}.0);
      }
    `:e[1]===1?n?`
      int getOutputCoords() {
        return int(resultUV.y * float(outTexShape[0]));
      }
    `:`
      int getOutputCoords() {
        return int(resultUV.y * ${e[0]}.0);
      }
    `:n?`
    int getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(outTexShape[0], outTexShape[1]));
      return resTexRC.x * outTexShape[1] + resTexRC.y;
    }
  `:`
    int getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${e[0]}, ${e[1]}));
      return resTexRC.x * ${e[1]} + resTexRC.y;
    }
  `}function wX(t,e,n){if(n)return`
    ivec3 getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      int texelsInLogicalRow = int(ceil(float(outShape[2]) / 2.0));
      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));
      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;

      int b = index / texelsInBatch;
      index -= b * texelsInBatch;

      int r = 2 * (index / texelsInLogicalRow);
      int c = imod(index, texelsInLogicalRow) * 2;

      return ivec3(b, r, c);
    }
  `;const s=[Math.ceil(e[0]/2),Math.ceil(e[1]/2)],r=Math.ceil(t[2]/2),o=r*Math.ceil(t[1]/2);return`
    ivec3 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${s[0]}, ${s[1]}));
      int index = resTexRC.x * ${s[1]} + resTexRC.y;

      int b = index / ${o};
      index -= b * ${o};

      int r = 2 * (index / ${r});
      int c = imod(index, ${r}) * 2;

      return ivec3(b, r, c);
    }
  `}function vX(t,e,n){if(n)return`
  ivec3 getOutputCoords() {
    ivec2 resTexRC = ivec2(resultUV.yx *
                           vec2(outTexShape[0], outTexShape[1]));
    int index = resTexRC.x * outTexShape[1] + resTexRC.y;
    ${Qf(["r","c","d"],t)}
    return ivec3(r, c, d);
  }
`;const s=Mi(["r","c","d"],t);return`
    ivec3 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${e[0]}, ${e[1]}));
      int index = resTexRC.x * ${e[1]} + resTexRC.y;
      ${s}
      return ivec3(r, c, d);
    }
  `}function kX(t,e,n){if(n)return`
    ivec4 getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));
      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;

      int texelsInLogicalRow = int(ceil(float(outShape[3]) / 2.0));
      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[2]) / 2.0));
      int texelsInBatchN = texelsInBatch * outShape[1];

      int b2 = index / texelsInBatchN;
      index -= b2 * texelsInBatchN;

      int b = index / texelsInBatch;
      index -= b * texelsInBatch;

      int r = 2 * (index / texelsInLogicalRow);
      int c = imod(index, texelsInLogicalRow) * 2;

      return ivec4(b2, b, r, c);
    }
  `;const s=[Math.ceil(e[0]/2),Math.ceil(e[1]/2)],r=Math.ceil(t[t.length-1]/2),o=r*Math.ceil(t[t.length-2]/2);let i=o,a="",l="b, r, c";for(let u=2;u<t.length-1;u++)i*=t[t.length-u-1],a=`
      int b${u} = index / ${i};
      index -= b${u} * ${i};
    `+a,l=`b${u}, `+l;return`
    ivec${t.length} getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${s[0]}, ${s[1]}));
      int index = resTexRC.x * ${s[1]} + resTexRC.y;

      ${a}

      int b = index / ${o};
      index -= b * ${o};

      int r = 2 * (index / ${r});
      int c = imod(index, ${r}) * 2;

      return ivec${t.length}(${l});
    }
  `}function SX(t,e,n){if(n)return`
    ivec4 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
        vec2(outTexShape[0], outTexShape[1]));
      int index = resTexRC.x * outTexShape[1] + resTexRC.y;
      ${Qf(["r","c","d","d2"],t)}
      return ivec4(r, c, d, d2);
    }
  `;const s=Mi(["r","c","d","d2"],t);return`
    ivec4 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
        vec2(${e[0]}, ${e[1]}));
      int index = resTexRC.x * ${e[1]} + resTexRC.y;
      ${s}
      return ivec4(r, c, d, d2);
    }
  `}function CX(t,e){const n=Mi(["r","c","d","d2","d3"],t);return`
    ivec5 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx * vec2(${e[0]},
                             ${e[1]}));

      int index = resTexRC.x * ${e[1]} + resTexRC.y;

      ${n}

      ivec5 outShape = ivec5(r, c, d, d2, d3);
      return outShape;
    }
  `}function NX(t,e){const n=Mi(["r","c","d","d2","d3","d4"],t);return`
    ivec6 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
        vec2(${e[0]}, ${e[1]}));
      int index = resTexRC.x * ${e[1]} + resTexRC.y;

      ${n}

      ivec6 result = ivec6(r, c, d, d2, d3, d4);
      return result;
    }
  `}function $X(t,e,n){const s=[Math.ceil(e[0]/2),Math.ceil(e[1]/2)];if(Ae(t,e))return n?`
      ivec2 getOutputCoords() {
        ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
        return 2 * ivec2(resultUV.yx * vec2(packedTexShape[0], packedTexShape[1]));
      }
    `:`
      ivec2 getOutputCoords() {
        return 2 * ivec2(resultUV.yx * vec2(${s[0]}, ${s[1]}));
      }
    `;const r=Math.ceil(t[1]/2);return n?`
    ivec2 getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      int texelsInLogicalRow = int(ceil(float(outShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));

      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;
      int r = 2 * (index / texelsInLogicalRow);
      int c = imod(index, texelsInLogicalRow) * 2;

      return ivec2(r, c);
    }
  `:`
    ivec2 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${s[0]}, ${s[1]}));

      int index = resTexRC.x * ${s[1]} + resTexRC.y;
      int r = 2 * (index / ${r});
      int c = imod(index, ${r}) * 2;

      return ivec2(r, c);
    }
  `}function IX(t,e,n){return Ae(t,e)?n?`
      ivec2 getOutputCoords() {
        return ivec2(resultUV.yx * vec2(outTexShape[0], outTexShape[1]));
      }
    `:`
      ivec2 getOutputCoords() {
        return ivec2(resultUV.yx * vec2(${e[0]}, ${e[1]}));
      }
    `:t[1]===1?n?`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(outTexShape[0], outTexShape[1]));
        int index = resTexRC.x * outTexShape[1] + resTexRC.y;
        return ivec2(index, 0);
      }
    `:`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(${e[0]}, ${e[1]}));
        int index = resTexRC.x * ${e[1]} + resTexRC.y;
        return ivec2(index, 0);
      }
    `:t[0]===1?n?`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(outTexShape[0], outTexShape[1]));
        int index = resTexRC.x * outTexShape[1] + resTexRC.y;
        return ivec2(0, index);
      }
    `:`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(${e[0]}, ${e[1]}));
        int index = resTexRC.x * ${e[1]} + resTexRC.y;
        return ivec2(0, index);
      }
    `:n?`
    ivec2 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(outTexShape[0], outTexShape[1]));
      int index = resTexRC.x * outTexShape[1] + resTexRC.y;
      int r = index / outShape[1];
      int c = index - r * outShape[1];
      return ivec2(r, c);
    }
  `:`
    ivec2 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${e[0]}, ${e[1]}));
      int index = resTexRC.x * ${e[1]} + resTexRC.y;
      int r = index / ${t[1]};
      int c = index - r * ${t[1]};
      return ivec2(r, c);
    }
  `}function Bi(t){return`offset${t}`}function TX(t){const e=t.name,n="get"+e.charAt(0).toUpperCase()+e.slice(1),s=dn();return`
    vec4 ${n}() {
      return ${s.texture2D}(${e}, halfCR);
    }
  `}function EX(t,e){const n=t.name,s="get"+n.charAt(0).toUpperCase()+n.slice(1);if(t.shapeInfo.isUniform)return`float ${s}() {return ${n};}`;const[r,o]=t.shapeInfo.texShape;if(r===1&&o===1)return`
      float ${s}() {
        return sampleTexture(${n}, halfCR);
      }
    `;const i=Bi(n);if(e)return`
    float ${s}() {
      vec2 uv = uvFromFlat(${n}TexShape[0], ${n}TexShape[1], ${i});
      return sampleTexture(${n}, uv);
    }
  `;const[a,l]=t.shapeInfo.texShape;return`
    float ${s}() {
      vec2 uv = uvFromFlat(${a}, ${l}, ${i});
      return sampleTexture(${n}, uv);
    }
  `}function DX(t,e){const n=t.name,s="get"+n.charAt(0).toUpperCase()+n.slice(1),r=t.shapeInfo.texShape,o=dn();if(e)return`
    vec4 ${s}(int index) {
      ivec2 packedTexShape = ivec2(ceil(float(${n}TexShape[0]) / 2.0), ceil(float(${n}TexShape[1]) / 2.0));
      vec2 uv = packedUVfrom1D(
        packedTexShape[0], packedTexShape[1], index);
      return ${o.texture2D}(${n}, uv);
    }
  `;const i=[Math.ceil(r[0]/2),Math.ceil(r[1]/2)];return`
    vec4 ${s}(int index) {
      vec2 uv = packedUVfrom1D(
        ${i[0]}, ${i[1]}, index);
      return ${o.texture2D}(${n}, uv);
    }
  `}function RX(t,e){const n=t.name,s="get"+n.charAt(0).toUpperCase()+n.slice(1);if(t.shapeInfo.isUniform)return`
      float ${s}(int index) {
        ${ol(t)}
      }
    `;const r=t.shapeInfo.texShape,o=r[0],i=r[1];if(i===1&&o===1)return`
      float ${s}(int index) {
        return sampleTexture(${n}, halfCR);
      }
    `;const a=Bi(n);return i===1?e?`
      float ${s}(int index) {
        vec2 uv = vec2(0.5, (float(index + ${a}) + 0.5) / float(${n}TexShape[0]));
        return sampleTexture(${n}, uv);
      }
    `:`
      float ${s}(int index) {
        vec2 uv = vec2(0.5, (float(index + ${a}) + 0.5) / ${o}.0);
        return sampleTexture(${n}, uv);
      }
    `:o===1?e?`
      float ${s}(int index) {
        vec2 uv = vec2((float(index + ${a}) + 0.5) / float(${n}TexShape[1]), 0.5);
        return sampleTexture(${n}, uv);
      }
    `:`
      float ${s}(int index) {
        vec2 uv = vec2((float(index + ${a}) + 0.5) / ${i}.0, 0.5);
        return sampleTexture(${n}, uv);
      }
    `:e?`
    float ${s}(int index) {
      vec2 uv = uvFromFlat(${n}TexShape[0], ${n}TexShape[1], index + ${a});
      return sampleTexture(${n}, uv);
    }
  `:`
    float ${s}(int index) {
      vec2 uv = uvFromFlat(${o}, ${i}, index + ${a});
      return sampleTexture(${n}, uv);
    }
  `}function AX(t,e){const n=t.shapeInfo.logicalShape,s=t.name,r="get"+s.charAt(0).toUpperCase()+s.slice(1),o=t.shapeInfo.texShape,i=o[0],a=o[1],l=dn();if(o!=null&&Ae(n,o))return e?`
      vec4 ${r}(int row, int col) {
        vec2 uv = (vec2(col, row) + halfCR) / vec2(${s}TexShape[1], ${s}TexShape[0]);

        return ${l.texture2D}(${s}, uv);
      }
    `:`
      vec4 ${r}(int row, int col) {
        vec2 uv = (vec2(col, row) + halfCR) / vec2(${a}.0, ${i}.0);

        return ${l.texture2D}(${s}, uv);
      }
    `;if(e)return`
    vec4 ${r}(int row, int col) {
      ivec2 packedTexShape = ivec2(ceil(float(${s}TexShape[0]) / 2.0), ceil(float(${s}TexShape[1]) / 2.0));
      int valuesPerRow = int(ceil(float(${s}Shape[1]) / 2.0));
      vec2 uv = packedUVfrom2D(valuesPerRow, packedTexShape[0], packedTexShape[1], row, col);
      return ${l.texture2D}(${s}, uv);
    }
  `;const u=[Math.ceil(o[0]/2),Math.ceil(o[1]/2)],c=Math.ceil(n[1]/2);return`
    vec4 ${r}(int row, int col) {
      vec2 uv = packedUVfrom2D(${c}, ${u[0]}, ${u[1]}, row, col);
      return ${l.texture2D}(${s}, uv);
    }
  `}function _X(t,e){const n=t.shapeInfo.logicalShape,s=t.name,r="get"+s.charAt(0).toUpperCase()+s.slice(1),o=t.shapeInfo.texShape;if(o!=null&&Ae(n,o)){if(e)return`
      float ${r}(int row, int col) {
        vec2 uv = (vec2(col, row) + halfCR) / vec2(${s}TexShape[1], ${s}TexShape[0]);
        return sampleTexture(${s}, uv);
      }
    `;const d=o[0],p=o[1];return`
    float ${r}(int row, int col) {
      vec2 uv = (vec2(col, row) + halfCR) / vec2(${p}.0, ${d}.0);
      return sampleTexture(${s}, uv);
    }
  `}const{newShape:i,keptDims:a}=Fo(n),l=i;if(l.length<n.length){const d=il(t,l),p=["row","col"];return`
      ${rl(d,e)}
      float ${r}(int row, int col) {
        return ${r}(${al(p,a)});
      }
    `}if(t.shapeInfo.isUniform)return`
      float ${r}(int row, int col) {
        int index = round(dot(vec2(row, col), vec2(${n[1]}, 1)));
        ${ol(t)}
      }
    `;const u=o[0],c=o[1],h=Bi(s);return c===1?e?`
      float ${r}(int row, int col) {
        float index = dot(vec3(row, col, ${h}), vec3(${s}Shape[1], 1, 1));
        vec2 uv = vec2(0.5, (index + 0.5) / float(${s}TexShape[0]));
        return sampleTexture(${s}, uv);
      }
    `:`
    float ${r}(int row, int col) {
      float index = dot(vec3(row, col, ${h}), vec3(${n[1]}, 1, 1));
      vec2 uv = vec2(0.5, (index + 0.5) / ${u}.0);
      return sampleTexture(${s}, uv);
    }
  `:u===1?e?`
      float ${r}(int row, int col) {
        float index = dot(vec3(row, col, ${h}), vec3(${s}Shape[1], 1, 1));
        vec2 uv = vec2((index + 0.5) / float(${s}TexShape[1]), 0.5);
        return sampleTexture(${s}, uv);
      }
    `:`
    float ${r}(int row, int col) {
      float index = dot(vec3(row, col, ${h}), vec3(${n[1]}, 1, 1));
      vec2 uv = vec2((index + 0.5) / ${c}.0, 0.5);
      return sampleTexture(${s}, uv);
    }
  `:e?`
      float ${r}(int row, int col) {
        // Explicitly use integer operations as dot() only works on floats.
        int index = row * ${s}Shape[1] + col + ${h};
        vec2 uv = uvFromFlat(${s}TexShape[0], ${s}TexShape[1], index);
        return sampleTexture(${s}, uv);
      }
    `:`
  float ${r}(int row, int col) {
    // Explicitly use integer operations as dot() only works on floats.
    int index = row * ${n[1]} + col + ${h};
    vec2 uv = uvFromFlat(${u}, ${c}, index);
    return sampleTexture(${s}, uv);
  }
`}function OX(t,e){const n=t.shapeInfo.logicalShape,s=t.name,r="get"+s.charAt(0).toUpperCase()+s.slice(1),o=t.shapeInfo.texShape,i=[Math.ceil(o[0]/2),Math.ceil(o[1]/2)];if(n[0]===1){const d=n.slice(1),p=[1,2],f=il(t,d),m=["b","row","col"];return`
        ${dD(f,e)}
        vec4 ${r}(int b, int row, int col) {
          return ${r}(${al(m,p)});
        }
      `}const a=dn();if(e)return`
    vec4 ${r}(int b, int row, int col) {
      ivec2 packedTexShape = ivec2(ceil(float(${s}TexShape[0]) / 2.0), ceil(float(${s}TexShape[1]) / 2.0));
      int valuesPerRow = int(ceil(float(${s}Shape[2]) / 2.0));
      int texelsInBatch = valuesPerRow * int(ceil(float(${s}Shape[1]) / 2.0));
      vec2 uv = packedUVfrom3D(
        packedTexShape[0], packedTexShape[1], texelsInBatch, valuesPerRow, b, row, col);
      return ${a.texture2D}(${s}, uv);
    }
  `;const l=i[0],u=i[1],c=Math.ceil(n[2]/2),h=c*Math.ceil(n[1]/2);return`
    vec4 ${r}(int b, int row, int col) {
      vec2 uv = packedUVfrom3D(
        ${l}, ${u}, ${h}, ${c}, b, row, col);
      return ${a.texture2D}(${s}, uv);
    }
  `}function FX(t,e){const n=t.shapeInfo.logicalShape,s=t.name,r="get"+s.charAt(0).toUpperCase()+s.slice(1),o=n[1]*n[2],i=n[2],{newShape:a,keptDims:l}=Fo(n),u=a;if(u.length<n.length){const m=il(t,u),y=["row","col","depth"];return`
        ${rl(m,e)}
        float ${r}(int row, int col, int depth) {
          return ${r}(${al(y,l)});
        }
      `}if(t.shapeInfo.isUniform)return`
      float ${r}(int row, int col, int depth) {
        int index = round(dot(vec3(row, col, depth),
                          vec3(${o}, ${i}, 1)));
        ${ol(t)}
      }
    `;const c=t.shapeInfo.texShape,h=c[0],d=c[1],p=t.shapeInfo.flatOffset;if(d===o&&p==null)return e?`
      float ${r}(int row, int col, int depth) {
        int stride1 = ${s}Shape[2];
        float texR = float(row);
        float texC = dot(vec2(col, depth), vec2(stride1, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${s}TexShape[1], ${s}TexShape[0]);
        return sampleTexture(${s}, uv);
      }
    `:`
        float ${r}(int row, int col, int depth) {
          float texR = float(row);
          float texC = dot(vec2(col, depth), vec2(${i}, 1));
          vec2 uv = (vec2(texC, texR) + halfCR) /
                     vec2(${d}.0, ${h}.0);
          return sampleTexture(${s}, uv);
        }
      `;if(d===i&&p==null)return e?`
      float ${r}(int row, int col, int depth) {
        float texR = dot(vec2(row, col), vec2(${s}Shape[1], 1));
        float texC = float(depth);
        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${s}TexShape[1], ${s}TexShape[0]);
        return sampleTexture(${s}, uv);
      }
    `:`
    float ${r}(int row, int col, int depth) {
      float texR = dot(vec2(row, col), vec2(${n[1]}, 1));
      float texC = float(depth);
      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${d}.0, ${h}.0);
      return sampleTexture(${s}, uv);
    }
  `;const f=Bi(s);return e?`
    float ${r}(int row, int col, int depth) {
      // Explicitly use integer operations as dot() only works on floats.
      int stride0 = ${s}Shape[1] * ${s}Shape[2];
      int stride1 = ${s}Shape[2];
      int index = row * stride0 + col * stride1 + depth + ${f};
      vec2 uv = uvFromFlat(${s}TexShape[0], ${s}TexShape[1], index);
      return sampleTexture(${s}, uv);
    }
    `:`
      float ${r}(int row, int col, int depth) {
        // Explicitly use integer operations as dot() only works on floats.
        int index = row * ${o} + col * ${i} + depth + ${f};
        vec2 uv = uvFromFlat(${h}, ${d}, index);
        return sampleTexture(${s}, uv);
      }
  `}function LX(t,e){const n=t.name,s="get"+n.charAt(0).toUpperCase()+n.slice(1),r=dn();if(e)return`
    vec4 ${s}(int b2, int b, int row, int col) {
      int valuesPerRow = int(ceil(float(${n}Shape[3]) / 2.0));
      int texelsInBatch = valuesPerRow * int(ceil(float(${n}Shape[2]) / 2.0));
      int index = b * texelsInBatch + (row / 2) * valuesPerRow + (col / 2);
      texelsInBatch *= ${n}Shape[1];
      index = b2 * texelsInBatch + index;
      ivec2 packedTexShape = ivec2(ceil(float(${n}TexShape[0]) / 2.0), ceil(float(${n}TexShape[1]) / 2.0));
      int texR = index / packedTexShape[1];
      int texC = index - texR * packedTexShape[1];
      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(packedTexShape[1], packedTexShape[0]); return ${r.texture2D}(${n}, uv);
    }
  `;const o=t.shapeInfo.logicalShape,i=o.length,a=t.shapeInfo.texShape,l=[Math.ceil(a[0]/2),Math.ceil(a[1]/2)],u=l[0],c=l[1],h=Math.ceil(o[i-1]/2);let d=h*Math.ceil(o[i-2]/2),p="int b, int row, int col",f=`b * ${d} + (row / 2) * ${h} + (col / 2)`;for(let m=2;m<i-1;m++)p=`int b${m}, `+p,d*=o[i-m-1],f=`b${m} * ${d} + `+f;return`
    vec4 ${s}(${p}) {
      int index = ${f};
      int texR = index / ${c};
      int texC = index - texR * ${c};
      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${c}, ${u});
      return ${r.texture2D}(${n}, uv);
    }
  `}function PX(t,e){const n=t.shapeInfo.logicalShape,s=t.name,r="get"+s.charAt(0).toUpperCase()+s.slice(1),o=n[3],i=n[2]*o,a=n[1]*i,{newShape:l,keptDims:u}=Fo(n);if(l.length<n.length){const x=il(t,l),b=["row","col","depth","depth2"];return`
      ${rl(x,e)}
      float ${r}(int row, int col, int depth, int depth2) {
        return ${r}(${al(b,u)});
      }
    `}if(t.shapeInfo.isUniform)return`
      float ${r}(int row, int col, int depth, int depth2) {
        int index = round(dot(vec4(row, col, depth, depth2),
                          vec4(${a}, ${i}, ${o}, 1)));
        ${ol(t)}
      }
    `;const c=t.shapeInfo.flatOffset,h=t.shapeInfo.texShape,d=h[0],p=h[1],f=`int stride2 = ${s}Shape[3];`,m=`int stride1 = ${s}Shape[2] * stride2;`,y=`int stride0 = ${s}Shape[1] * stride1;`;if(p===a&&c==null)return e?`
      float ${r}(int row, int col, int depth, int depth2) {
        ${f}
        ${m}
        float texR = float(row);
        float texC =
            dot(vec3(col, depth, depth2),
                vec3(stride1, stride2, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${s}TexShape[1], ${s}TexShape[0]);
        return sampleTexture(${s}, uv);
      }
    `:`
      float ${r}(int row, int col, int depth, int depth2) {
        float texR = float(row);
        float texC =
            dot(vec3(col, depth, depth2),
                vec3(${i}, ${o}, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${p}.0, ${d}.0);
        return sampleTexture(${s}, uv);
      }
    `;if(p===o&&c==null)return e?`
      float ${r}(int row, int col, int depth, int depth2) {
        float texR = dot(vec3(row, col, depth),
                         vec3(${s}Shape[1] * ${s}Shape[2], ${s}Shape[2], 1));
        float texC = float(depth2);
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${s}TexShape[1], ${s}TexShape[0]);
        return sampleTexture(${s}, uv);
      }
    `:`
      float ${r}(int row, int col, int depth, int depth2) {
        float texR = dot(vec3(row, col, depth),
                         vec3(${n[1]*n[2]}, ${n[2]}, 1));
        float texC = float(depth2);
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${p}.0, ${d}.0);
        return sampleTexture(${s}, uv);
      }
    `;const g=Bi(s);return e?`
    float ${r}(int row, int col, int depth, int depth2) {
      // Explicitly use integer operations as dot() only works on floats.
      ${f}
      ${m}
      ${y}
      int index = row * stride0 + col * stride1 +
          depth * stride2 + depth2;
      vec2 uv = uvFromFlat(${s}TexShape[0], ${s}TexShape[1], index + ${g});
      return sampleTexture(${s}, uv);
    }
  `:`
    float ${r}(int row, int col, int depth, int depth2) {
      // Explicitly use integer operations as dot() only works on floats.
      int index = row * ${a} + col * ${i} +
          depth * ${o} + depth2;
      vec2 uv = uvFromFlat(${d}, ${p}, index + ${g});
      return sampleTexture(${s}, uv);
    }
  `}function zX(t){const e=t.shapeInfo.logicalShape,n=t.name,s="get"+n.charAt(0).toUpperCase()+n.slice(1),r=e[4],o=e[3]*r,i=e[2]*o,a=e[1]*i,{newShape:l,keptDims:u}=Fo(e);if(l.length<e.length){const m=il(t,l),y=["row","col","depth","depth2","depth3"];return`
      ${rl(m)}
      float ${s}(int row, int col, int depth, int depth2, int depth3) {
        return ${s}(${al(y,u)});
      }
    `}if(t.shapeInfo.isUniform)return`
      float ${s}(int row, int col, int depth, int depth2, int depth3) {
        float index = dot(
          vec4(row, col, depth, depth2),
          vec4(${a}, ${i}, ${o}, ${r})) +
          depth3;
        ${ol(t)}
      }
    `;const c=t.shapeInfo.flatOffset,h=t.shapeInfo.texShape,d=h[0],p=h[1];if(p===a&&c==null)return`
      float ${s}(int row, int col, int depth, int depth2, int depth3) {
        int texR = row;
        float texC = dot(vec4(col, depth, depth2, depth3),
                         vec4(${i}, ${o}, ${r}, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${p}.0, ${d}.0);
        return sampleTexture(${n}, uv);
      }
    `;if(p===r&&c==null)return`
      float ${s}(int row, int col, int depth, int depth2, int depth3) {
        float texR = dot(
          vec4(row, col, depth, depth2),
          vec4(${e[1]*e[2]*e[3]},
               ${e[2]*e[3]}, ${e[3]}, 1));
        int texC = depth3;
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${p}.0, ${d}.0);
        return sampleTexture(${n}, uv);
      }
    `;const f=Bi(n);return`
    float ${s}(int row, int col, int depth, int depth2, int depth3) {
      // Explicitly use integer operations as dot() only works on floats.
      int index = row * ${a} + col * ${i} + depth * ${o} +
          depth2 * ${r} + depth3 + ${f};
      vec2 uv = uvFromFlat(${d}, ${p}, index);
      return sampleTexture(${n}, uv);
    }
  `}function MX(t){const e=t.shapeInfo.logicalShape,n=t.name,s="get"+n.charAt(0).toUpperCase()+n.slice(1),{newShape:r,keptDims:o}=Fo(e);if(r.length<e.length){const y=il(t,r),g=["row","col","depth","depth2","depth3","depth4"];return`
      ${rl(y)}
      float ${s}(int row, int col, int depth,
                    int depth2, int depth3, int depth4) {
        return ${s}(${al(g,o)});
      }
    `}const i=e[5],a=e[4]*i,l=e[3]*a,u=e[2]*l,c=e[1]*u;if(t.shapeInfo.isUniform)return`
      float ${s}(int row, int col, int depth,
                  int depth2, int depth3, int depth4) {
        int index = round(dot(
          vec4(row, col, depth, depth2),
          vec4(${c}, ${u}, ${l}, ${a})) +
          dot(
            vec2(depth3, depth4),
            vec2(${i}, 1)));
        ${ol(t)}
      }
    `;const h=t.shapeInfo.flatOffset,d=t.shapeInfo.texShape,p=d[0],f=d[1];if(f===c&&h==null)return`
      float ${s}(int row, int col, int depth,
                    int depth2, int depth3, int depth4) {
        int texR = row;
        float texC = dot(vec4(col, depth, depth2, depth3),
          vec4(${u}, ${l}, ${a}, ${i})) +
               float(depth4);
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${f}.0, ${p}.0);
        return sampleTexture(${n}, uv);
      }
    `;if(f===i&&h==null)return`
      float ${s}(int row, int col, int depth,
                    int depth2, int depth3, int depth4) {
        float texR = dot(vec4(row, col, depth, depth2),
          vec4(${e[1]*e[2]*e[3]*e[4]},
               ${e[2]*e[3]*e[4]},
               ${e[3]*e[4]},
               ${e[4]})) + float(depth3);
        int texC = depth4;
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${f}.0, ${p}.0);
        return sampleTexture(${n}, uv);
      }
    `;const m=Bi(n);return`
    float ${s}(int row, int col, int depth,
                  int depth2, int depth3, int depth4) {
      // Explicitly use integer operations as dot() only works on floats.
      int index = row * ${c} + col * ${u} + depth * ${l} +
          depth2 * ${a} + depth3 * ${i} + depth4 + ${m};
      vec2 uv = uvFromFlat(${p}, ${f}, index);
      return sampleTexture(${n}, uv);
    }
  `}function ol(t){const e=t.name,n=H(t.shapeInfo.logicalShape);return n<2?`return ${e};`:`
    for (int i = 0; i < ${n}; i++) {
      if (i == index) {
        return ${e}[i];
      }
    }
  `}function BX(t,e){const n=t.name,s=n.charAt(0).toUpperCase()+n.slice(1),r="get"+s+"AtOutCoords",o=t.shapeInfo.logicalShape.length,i=e.logicalShape.length,a=hD(t.shapeInfo.logicalShape,e.logicalShape),l=Ke(i),u=i-o;let c;const h=["x","y","z","w","u","v"];o===0?c="":i<2&&a.length>=1?c="coords = 0;":c=a.map(x=>`coords.${h[x+u]} = 0;`).join(`
`);let d="";i<2&&o>0?d="coords":d=t.shapeInfo.logicalShape.map((x,b)=>`coords.${h[b+u]}`).join(", ");let p="return outputValue;";const m=H(t.shapeInfo.logicalShape)===1,g=H(e.logicalShape)===1;if(o===1&&!m&&!g)p=`
      return vec4(outputValue.xy, outputValue.xy);
    `;else if(m&&!g)i===1?p=`
        return vec4(outputValue.x, outputValue.x, 0., 0.);
      `:p=`
        return vec4(outputValue.x);
      `;else if(a.length){const x=o-2,b=o-1;a.indexOf(x)>-1&&a.indexOf(b)>-1?p="return vec4(outputValue.x);":a.indexOf(x)>-1?p="return vec4(outputValue.x, outputValue.y, outputValue.x, outputValue.y);":a.indexOf(b)>-1&&(p="return vec4(outputValue.xx, outputValue.zz);")}return`
    vec4 ${r}() {
      ${l} coords = getOutputCoords();
      ${c}
      vec4 outputValue = get${s}(${d});
      ${p}
    }
  `}function VX(t,e){const n=t.name,s=n.charAt(0).toUpperCase()+n.slice(1),r="get"+s+"AtOutCoords",o=e.texShape,i=t.shapeInfo.texShape,a=t.shapeInfo.logicalShape.length,l=e.logicalShape.length;if(!t.shapeInfo.isUniform&&a===l&&t.shapeInfo.flatOffset==null&&Ae(i,o))return`
      float ${r}() {
        return sampleTexture(${n}, resultUV);
      }
    `;const u=Ke(l),c=hD(t.shapeInfo.logicalShape,e.logicalShape),h=l-a;let d;const p=["x","y","z","w","u","v"];a===0?d="":l<2&&c.length>=1?d="coords = 0;":d=c.map(m=>`coords.${p[m+h]} = 0;`).join(`
`);let f="";return l<2&&a>0?f="coords":f=t.shapeInfo.logicalShape.map((m,y)=>`coords.${p[y+h]}`).join(", "),`
    float ${r}() {
      ${u} coords = getOutputCoords();
      ${d}
      return get${s}(${f});
    }
  `}function Ke(t){if(t<=1)return"int";if(t===2)return"ivec2";if(t===3)return"ivec3";if(t===4)return"ivec4";if(t===5)return"ivec5";if(t===6)return"ivec6";throw Error(`GPU for rank ${t} is not yet supported`)}function Bb(t,e,n){const{newShape:s,keptDims:r}=Fo(e),o=e.length,i=t&&o===3&&e[0]===1,a=i?e.slice(1):s,l=!t&&o>1&&!Ae(e,n)&&s.length<o||i;return{useSqueezeShape:l,uniformShape:l?a:e,keptDims:r}}function il(t,e){const n=JSON.parse(JSON.stringify(t));return n.shapeInfo.logicalShape=e,n}function al(t,e){return e.map(n=>t[n]).join(", ")}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function WX(t,e,n,s){const r=n.map((c,h)=>{const d={logicalShape:c.shape,texShape:c.isUniform?null:c.texData.texShape,isUniform:c.isUniform,isPacked:c.isUniform?!1:c.texData.isPacked,flatOffset:null};return c.texData!=null&&c.texData.slice!=null&&c.texData.slice.flatOffset>0&&(d.flatOffset=c.texData.slice.flatOffset),{name:e.variableNames[h],shapeInfo:d}}),o=r.map(c=>c.shapeInfo),i={logicalShape:s.shape,texShape:s.texData.texShape,isUniform:!1,isPacked:s.texData.isPacked,flatOffset:null},a=iX(r,i,e),l=F8(t.gl,a),u=t.createProgram(l);return U().get("ENGINE_COMPILE_ONLY")?{program:e,fragmentShader:l,source:a,webGLProgram:u,inShapeInfos:o,outShapeInfo:i,uniformLocations:null,customUniformLocations:null,infLoc:null,nanLoc:null,inShapesLocations:null,inTexShapesLocations:null,outShapeLocation:null,outShapeStridesLocation:null,outTexShapeLocation:null}:Object.assign({program:e,fragmentShader:l,source:a,webGLProgram:u,inShapeInfos:o,outShapeInfo:i},fD(t,e,u))}function fD(t,e,n){const s={},r={},o={},i=[];let a,l,u,c=null,h=null;h=t.getUniformLocation(n,"NAN",!1),U().getNumber("WEBGL_VERSION")===1&&(c=t.getUniformLocation(n,"INFINITY",!1));const d=!1;for(let p=0;p<e.variableNames.length;p++){const f=e.variableNames[p];s[f]=t.getUniformLocation(n,f,d),s[`offset${f}`]=t.getUniformLocation(n,`offset${f}`,d),e.enableShapeUniforms&&(r[`${f}Shape`]=t.getUniformLocation(n,`${f}Shape`,d),o[`${f}TexShape`]=t.getUniformLocation(n,`${f}TexShape`,d))}return e.enableShapeUniforms&&(a=t.getUniformLocation(n,"outShape",d),u=t.getUniformLocation(n,"outShapeStrides",d),l=t.getUniformLocation(n,"outTexShape",d)),e.customUniforms&&e.customUniforms.forEach((p,f)=>{i[f]=t.getUniformLocation(n,p.name,d)}),{uniformLocations:s,customUniformLocations:i,infLoc:c,nanLoc:h,inShapesLocations:r,inTexShapesLocations:o,outShapeLocation:a,outShapeStridesLocation:u,outTexShapeLocation:l}}function gk(t,e){if(t.length!==e.length)throw Error(`Binary was compiled with ${t.length} inputs, but was executed with ${e.length} inputs`);t.forEach((n,s)=>{const r=n.logicalShape,o=e[s],i=o.shape;if(!Ae(r,i))throw Error(`Binary was compiled with different shapes than the current args. Shapes ${r} and ${i} must match`);if(n.isUniform&&o.isUniform)return;const a=n.texShape,l=o.isUniform?null:o.texData.texShape;if(!Ae(a,l))throw Error(`Binary was compiled with different texture shapes than the current args. Shape ${a} and ${l} must match`)})}function UX(t,e,n,s,r){e.program.enableShapeUniforms||(gk(e.inShapeInfos,n),gk([e.outShapeInfo],[s]));const o=s.texData.texture,i=s.texData.texShape;s.texData.isPacked?t.setOutputPackedMatrixTexture(o.texture,i[0],i[1]):t.setOutputMatrixTexture(o.texture,i[0],i[1]),t.setProgram(e.webGLProgram),U().getNumber("WEBGL_VERSION")===1&&e.infLoc!==null&&t.gl.uniform1f(e.infLoc,1/0),e.nanLoc!==null&&t.gl.uniform1f(e.nanLoc,NaN),n.forEach((l,u)=>{const c=e.program.variableNames[u],h=e.uniformLocations[c],d=e.uniformLocations[`offset${c}`],p=e.inShapesLocations[`${c}Shape`],f=e.inTexShapesLocations[`${c}TexShape`];if(p){const{uniformShape:m}=Bb(e.program.packedInputs,l.shape,l.texData.texShape);switch(m.length){case 1:t.gl.uniform1iv(p,new Int32Array(m));break;case 2:t.gl.uniform2iv(p,new Int32Array(m));break;case 3:t.gl.uniform3iv(p,new Int32Array(m));break;case 4:t.gl.uniform4iv(p,new Int32Array(m));break}}if(f&&t.gl.uniform2i(f,l.texData.texShape[0],l.texData.texShape[1]),h!=null){if(l.isUniform){if(H(l.shape)<2)t.gl.uniform1f(h,l.uniformValues[0]);else{let m=l.uniformValues;m instanceof Float32Array||(m=new Float32Array(m)),t.gl.uniform1fv(h,m)}return}l.texData.slice!=null&&d!=null&&t.gl.uniform1i(d,l.texData.slice.flatOffset),t.setInputMatrixTexture(l.texData.texture.texture,h,u)}});const a=e.outShapeLocation;if(a)switch(s.shape.length){case 1:t.gl.uniform1iv(a,new Int32Array(s.shape));break;case 2:t.gl.uniform2iv(a,new Int32Array(s.shape));break;case 3:t.gl.uniform3iv(a,new Int32Array(s.shape));break;case 4:t.gl.uniform4iv(a,new Int32Array(s.shape));break}if(e.outShapeStridesLocation){const l=me(s.shape);switch(s.shape.length){case 2:t.gl.uniform1iv(e.outShapeStridesLocation,new Int32Array(l));break;case 3:t.gl.uniform2iv(e.outShapeStridesLocation,new Int32Array(l));break;case 4:t.gl.uniform3iv(e.outShapeStridesLocation,new Int32Array(l));break}}e.outTexShapeLocation&&t.gl.uniform2i(e.outTexShapeLocation,s.texData.texShape[0],s.texData.texShape[1]),e.program.customUniforms&&r&&e.program.customUniforms.forEach((l,u)=>{const c=e.customUniformLocations[u],h=r[u];if(l.type==="float")t.gl.uniform1fv(c,h);else if(l.type==="vec2")t.gl.uniform2fv(c,h);else if(l.type==="vec3")t.gl.uniform3fv(c,h);else if(l.type==="vec4")t.gl.uniform4fv(c,h);else if(l.type==="int")t.gl.uniform1iv(c,h);else if(l.type==="ivec2")t.gl.uniform2iv(c,h);else if(l.type==="ivec3")t.gl.uniform3iv(c,h);else if(l.type==="ivec4")t.gl.uniform4iv(c,h);else throw Error(`uniform type ${l.type} is not supported yet.`)}),t.executeProgram()}function GX(t,e,n){let s="";e.concat(n).forEach(i=>{const a=i.texData!=null&&i.texData.slice!=null&&i.texData.slice.flatOffset>0;if(t.enableShapeUniforms&&!i.isUniform){const l=i.texData.texShape,{useSqueezeShape:u,uniformShape:c,keptDims:h}=Bb(t.packedInputs,i.shape,l);let d="",p="",f="";if(c.length===1&&t.packedInputs){const k=[Math.ceil(l[0]/2),Math.ceil(l[1]/2)];d=`${k[0]>1}_${k[1]>1}`}else if(c.length===2&&!t.packedInputs)p=`${c[0]>1}_${c[1]>1}`;else if(c.length>2&&!t.packedInputs){const k=me(c);f=`${k[0]===l[1]}_${k[k.length-1]===l[1]}`}const m=i.shape.length,y=c.length===2&&Ae(i.shape,l),g=H(i.shape)===1,x=Oa(i.shape,n.shape),b=!t.packedInputs&&m===n.shape.length&&Ae(l,n.texData.texShape),w=t.packedInputs||c.length>2?"":`${l[0]>1}_${l[1]>1}`;s+=`${m}_${b}_${u?h:""}_${c.length}_${g}_${x}_${y}_${d}_${p}_${f}_${w}_${a}`}else{const l=i.isUniform?"uniform":i.texData.texShape;s+=`${i.shape}_${l}_${a}`}});const r=t.userCode;let o=t.constructor.name;return o+="_"+s+"_"+r+`${U().getNumber("WEBGL_VERSION")}`,o}function pn(t){return U().getBool("WEBGL_USE_SHAPES_UNIFORMS")&&t<=4}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class HX{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outPackingScheme=xu.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];const n=dn();this.outputShape=e,this.enableShapeUniforms=pn(this.outputShape.length),this.userCode=`
      ivec3 outCoordsFromFlatIndex(int index) {
        ${this.enableShapeUniforms?Qf(["r","c","d"],e):Mi(["r","c","d"],e)}
        return ivec3(r, c, d);
      }

      void main() {
        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));
        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);

        vec4 result = vec4(0.);

        for (int i=0; i<4; i++) {
          int flatIndex = index + i;
          ivec3 rc = outCoordsFromFlatIndex(flatIndex);
          result[i] = getA(rc.x, rc.y, rc.z);
        }

        ${n.output} = result;
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class jX{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outPackingScheme=xu.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];const n=dn();this.outputShape=e,this.enableShapeUniforms=pn(this.outputShape.length),this.userCode=`
      ivec3 outCoordsFromFlatIndex(int index) {
        ${this.enableShapeUniforms?Qf(["r","c","d"],e):Mi(["r","c","d"],e)}
        return ivec3(r, c, d);
      }

      void main() {
        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));
        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);

        vec4 result = vec4(0.);

        for (int i=0; i<4; i++) {
          int flatIndex = index + i;
          ivec3 rc = outCoordsFromFlatIndex(flatIndex);
          result[i] = getChannel(getA(rc.x, rc.y, rc.z), vec2(rc.y, rc.z));
        }

        ${n.output} = result;
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class KX{constructor(e){this.variableNames=["A"],this.outTexUsage=qn.DOWNLOAD;const n=dn();this.outputShape=e,this.userCode=`
      ${cD}

      void main() {
        float x = getAAtOutCoords();
        ${n.output} = encode_float(x);
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class qX{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outTexUsage=qn.DOWNLOAD;const n=dn();this.outputShape=e,this.userCode=`
      ${cD}

      void main() {
        ivec3 coords = getOutputCoords();
        float x = getChannel(getAAtOutCoords(), vec2(coords.y, coords.z));
        ${n.output} = encode_float(x);
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const XX={R:0,G:1,B:2,A:3};class yk{constructor(e,n=!1,s="RGBA"){this.variableNames=["A"],this.customUniforms=[{name:"texShape",type:"ivec2"}];const r=dn();this.outputShape=e,this.enableShapeUniforms=pn(this.outputShape.length);let o="result";n&&(o="floor(result * 255. + 0.5)");let i="";for(let a=0;a<s.length;a++){const l=s[a];i+=`
          if(offset == ${a}) {
            result = values[${XX[l]}];
          }`}this.userCode=`
      ${this.enableShapeUniforms?Mb():zb(e)}

      void main() {
        ivec3 coords = getOutputCoords();
        int flatIndex = getFlatIndex(coords);
        float result = 0.;
        int offset = imod(flatIndex, ${s.length});

        flatIndex = idiv(flatIndex, ${s.length}, 1.);

        int r = flatIndex / texShape[1];
        if (r < texShape[0]) {
          int c = imod(flatIndex, texShape[1]);
          vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);
          vec4 values = ${r.texture2D}(A, uv);
          ${i}
        }
        ${r.output} = vec4(${o}, 0., 0., 0.);
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class YX{constructor(e,n=!1){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.customUniforms=[{name:"texShape",type:"ivec2"}];const s=dn();this.outputShape=e,this.enableShapeUniforms=pn(this.outputShape.length);let r="",o="result";n&&(o="floor(result * 255. + 0.5)");for(let i=0;i<=1;i++)for(let a=0;a<=1;a++){const l=i*2+a;r+=`
          localCoords = coords;
          if(localCoords[2] + ${a} < ${this.enableShapeUniforms?"outShape[2]":`${e[2]}`}) {
          localCoords[2] += ${a};
          if (localCoords[1] + ${i} < ${this.enableShapeUniforms?"outShape[1]":`${e[1]}`}) {
            localCoords[1] += ${i};

            flatIndex = getFlatIndex(localCoords);
            offset = imod(flatIndex, 4);

            flatIndex = idiv(flatIndex, 4, 1.);

            int r = flatIndex / texShape[1];
            int c = imod(flatIndex, texShape[1]);
            vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);
            values = ${s.texture2D}(A, uv);

            if (offset == 0) {
              result[${l}] = values[0];
            } else if (offset == 1) {
              result[${l}] = values[1];
            } else if (offset == 2) {
              result[${l}] = values[2];
            } else {
              result[${l}] = values[3];
            }
          }
        }
        `}this.userCode=`
        ${this.enableShapeUniforms?Mb():zb(e)}

        void main() {
          ivec3 coords = getOutputCoords();

          vec4 result = vec4(0.);
          int flatIndex, r, c, offset;
          ivec3 localCoords;
          vec2 uv;
          vec4 values;

          ${r}

          ${s.output} = ${o};
        }
    `}}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function QX(t){const e=dn(),n=`${e.version}
    precision highp float;
    ${e.attribute} vec3 clipSpacePos;
    ${e.attribute} vec2 uv;
    ${e.varyingVs} vec2 resultUV;

    void main() {
      gl_Position = vec4(clipSpacePos, 1);
      resultUV = uv;
    }`;return O8(t,n)}function ZX(t){const e=new Float32Array([-1,1,0,0,1,-1,-1,0,0,0,1,1,0,1,1,1,-1,0,1,0]);return M8(t,e)}function JX(t){const e=new Uint16Array([0,1,2,2,1,3]);return B8(t,e)}function Xc(t,e,n,s,r,o){W8(e,n);const i=V8(t),a=t.TEXTURE_2D;return ae(t,()=>t.bindTexture(a,i)),ae(t,()=>t.texParameteri(a,t.TEXTURE_WRAP_S,t.CLAMP_TO_EDGE)),ae(t,()=>t.texParameteri(a,t.TEXTURE_WRAP_T,t.CLAMP_TO_EDGE)),ae(t,()=>t.texParameteri(a,t.TEXTURE_MIN_FILTER,t.NEAREST)),ae(t,()=>t.texParameteri(a,t.TEXTURE_MAG_FILTER,t.NEAREST)),U().getNumber("WEBGL_VERSION")===1?ae(t,()=>t.texImage2D(a,0,s,e,n,0,r,o,null)):ae(t,()=>t.texStorage2D(a,1,s,e,n)),ae(t,()=>t.bindTexture(t.TEXTURE_2D,null)),{texture:i,texShape:[n,e]}}function mD(t){return t.internalFormatFloat}function e7(t,e,n,s){const[r,o]=Kc(e,n);return Xc(t,r,o,mD(s),s.textureFormatFloat,t.FLOAT)}function gD(t){return t.internalFormatHalfFloat}function t7(t,e,n,s){const[r,o]=Kc(e,n);return Xc(t,r,o,gD(s),s.textureFormatFloat,s.textureTypeHalfFloat)}function yD(t){return t.downloadTextureFormat}function n7(t,e,n,s){const[r,o]=Kc(e,n);return Xc(t,r,o,yD(s),t.RGBA,t.UNSIGNED_BYTE)}function xD(t){return t.internalFormatPackedFloat}function s7(t,e,n,s){const[r,o]=sl(e,n);return Xc(t,r,o,xD(s),t.RGBA,t.FLOAT)}function bD(t){return t.internalFormatPackedHalfFloat}function r7(t,e,n,s){const[r,o]=sl(e,n);return Xc(t,r,o,bD(s),t.RGBA,s.textureTypeHalfFloat)}function o7(t,e,n){return ae(t,()=>t.bindBuffer(t.ARRAY_BUFFER,n)),pk(t,e,"clipSpacePos",n,3,20,0)&&pk(t,e,"uv",n,2,20,12)}function i7(t,e,n,s,r,o){ae(t,()=>t.bindTexture(t.TEXTURE_2D,e));let i,a,l;r instanceof Uint8Array?(i=new Uint8Array(n*s*4),a=t.UNSIGNED_BYTE,l=t.RGBA):(i=new Float32Array(n*s*4),a=t.FLOAT,l=o.internalFormatPackedFloat),i.set(r),U().getNumber("WEBGL_VERSION")===2?ae(t,()=>t.texSubImage2D(t.TEXTURE_2D,0,0,0,n,s,t.RGBA,a,i)):ae(t,()=>t.texImage2D(t.TEXTURE_2D,0,l,n,s,0,t.RGBA,a,i)),ae(t,()=>t.bindTexture(t.TEXTURE_2D,null))}function a7(t,e,n){ae(t,()=>t.bindTexture(t.TEXTURE_2D,e)),n.data instanceof Uint8Array?U().getNumber("WEBGL_VERSION")===2?ae(t,()=>t.texSubImage2D(t.TEXTURE_2D,0,0,0,n.width,n.height,t.RGBA,t.UNSIGNED_BYTE,n.data)):ae(t,()=>t.texImage2D(t.TEXTURE_2D,0,t.RGBA,n.width,n.height,0,t.RGBA,t.UNSIGNED_BYTE,n.data)):U().getNumber("WEBGL_VERSION")===2?ae(t,()=>t.texSubImage2D(t.TEXTURE_2D,0,0,0,t.RGBA,t.UNSIGNED_BYTE,n)):ae(t,()=>t.texImage2D(t.TEXTURE_2D,0,t.RGBA,t.RGBA,t.UNSIGNED_BYTE,n)),ae(t,()=>t.bindTexture(t.TEXTURE_2D,null))}function l7(t,e,n,s){const r=t.createBuffer();ae(t,()=>t.bindBuffer(t.PIXEL_PACK_BUFFER,r));const a=4*4*e*n;return ae(t,()=>t.bufferData(t.PIXEL_PACK_BUFFER,a,t.STREAM_READ)),ae(t,()=>t.readPixels(0,0,n,e,t.RGBA,t.FLOAT,0)),ae(t,()=>t.bindBuffer(t.PIXEL_PACK_BUFFER,null)),r}function u7(t,e,n){const s=t,r=new Float32Array(n);return s.bindBuffer(s.PIXEL_PACK_BUFFER,e),s.getBufferSubData(s.PIXEL_PACK_BUFFER,0,r),s.bindBuffer(s.PIXEL_PACK_BUFFER,null),r}function c7(t,e,n,s){const[r,o]=Kc(e,n),i=4,a=new Uint8Array(I8(e*n,i));return ae(t,()=>t.readPixels(0,0,r,o,s.downloadTextureFormat,t.UNSIGNED_BYTE,a)),new Float32Array(a.buffer)}function h7(t,e,n,s,r,o,i,a){const l=t,u=new Float32Array(T8(o,i));return l.bindBuffer(l.PIXEL_PACK_BUFFER,e),l.getBufferSubData(l.PIXEL_PACK_BUFFER,0,u),l.bindBuffer(l.PIXEL_PACK_BUFFER,null),u}function d7(t,e,n){const s=new Float32Array(e*n*4);return ae(t,()=>t.readPixels(0,0,n,e,t.RGBA,t.FLOAT,s)),s}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class qm{constructor(e){this.outputTexture=null,this.program=null,this.disposed=!1,this.itemsToPoll=[];const n=U().getNumber("WEBGL_VERSION");if(e!=null?(this.gl=e,C8(n,e)):this.gl=Js(n),e=this.gl,U().getNumber("WEBGL_VERSION")===2){const o=e;this.createVertexArray=()=>ae(o,()=>o.createVertexArray()),this.bindVertexArray=i=>ae(o,()=>o.bindVertexArray(i)),this.deleteVertexArray=i=>ae(o,()=>o.deleteVertexArray(i)),this.getVertexArray=()=>ae(o,()=>o.getParameter(o.VERTEX_ARRAY_BINDING))}else if(e!=null){const o=e.getExtension("OES_vertex_array_object");if(o==null)throw new Error("All WebGL1 implementations are expected to offer OES_vertex_array_object.");this.createVertexArray=()=>ae(e,()=>o.createVertexArrayOES()),this.bindVertexArray=i=>ae(e,()=>o.bindVertexArrayOES(i)),this.deleteVertexArray=i=>ae(e,()=>o.deleteVertexArrayOES(i)),this.getVertexArray=()=>ae(e,()=>e.getParameter(o.VERTEX_ARRAY_BINDING_OES))}let s="WEBGL_color_buffer_float";const r="EXT_color_buffer_half_float";if(this.parallelCompilationExtension=this.gl.getExtension("KHR_parallel_shader_compile"),U().getNumber("WEBGL_VERSION")===1){const o="OES_texture_float",i="OES_texture_half_float";if(this.textureFloatExtension=$h(this.gl,o),Ss(this.gl,i))this.textureHalfFloatExtension=$h(this.gl,i);else if(U().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support half float textures, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.");if(this.colorBufferFloatExtension=this.gl.getExtension(s),Ss(this.gl,r))this.colorBufferHalfFloatExtension=$h(this.gl,r);else if(U().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support color renderable half floats, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.")}else if(s="EXT_color_buffer_float",Ss(this.gl,s))this.colorBufferFloatExtension=this.gl.getExtension(s);else if(Ss(this.gl,r))this.colorBufferHalfFloatExtension=this.gl.getExtension(r);else throw new Error("GL context does not support color renderable floats");this.vertexBuffer=ZX(this.gl),this.indexBuffer=JX(this.gl),this.framebuffer=U8(this.gl),this.textureConfig=Pb(this.gl,this.textureHalfFloatExtension)}get debug(){return U().getBool("DEBUG")}dispose(){if(this.disposed)return;this.program!=null&&console.warn("Disposing a GPGPUContext that still has a bound WebGLProgram. This is probably a resource leak, delete the program with GPGPUContext.deleteProgram before disposing."),this.outputTexture!=null&&console.warn("Disposing a GPGPUContext that still has a bound output matrix texture.  This is probably a resource leak, delete the output matrix texture with GPGPUContext.deleteMatrixTexture before disposing.");const e=this.gl;ae(e,()=>e.finish()),ae(e,()=>e.bindFramebuffer(e.FRAMEBUFFER,null)),ae(e,()=>e.deleteFramebuffer(this.framebuffer)),ae(e,()=>e.bindBuffer(e.ARRAY_BUFFER,null)),ae(e,()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,null)),ae(e,()=>e.deleteBuffer(this.indexBuffer)),this.disposed=!0}createFloat32MatrixTexture(e,n){return this.throwIfDisposed(),e7(this.gl,e,n,this.textureConfig)}createFloat16MatrixTexture(e,n){return this.throwIfDisposed(),t7(this.gl,e,n,this.textureConfig)}createUnsignedBytesMatrixTexture(e,n){return this.throwIfDisposed(),n7(this.gl,e,n,this.textureConfig)}uploadPixelDataToTexture(e,n){this.throwIfDisposed(),a7(this.gl,e,n)}uploadDenseMatrixToTexture(e,n,s,r){this.throwIfDisposed(),i7(this.gl,e,n,s,r,this.textureConfig)}createFloat16PackedMatrixTexture(e,n){return this.throwIfDisposed(),r7(this.gl,e,n,this.textureConfig)}createPackedMatrixTexture(e,n){return this.throwIfDisposed(),s7(this.gl,e,n,this.textureConfig)}deleteMatrixTexture(e){this.throwIfDisposed(),this.outputTexture===e&&(fk(this.gl,this.framebuffer),this.outputTexture=null),ae(this.gl,()=>this.gl.deleteTexture(e))}downloadByteEncodedFloatMatrixFromOutputTexture(e,n,s){return this.downloadMatrixDriver(e,()=>c7(this.gl,n,s,this.textureConfig))}downloadPackedMatrixFromBuffer(e,n,s,r,o,i){return h7(this.gl,e,n,s,r,o,i,this.textureConfig)}downloadFloat32MatrixFromBuffer(e,n){return u7(this.gl,e,n)}createBufferFromTexture(e,n,s){this.bindTextureToFrameBuffer(e);const r=l7(this.gl,n,s,this.textureConfig);return this.unbindTextureToFrameBuffer(),r}createAndWaitForFence(){const e=this.createFence(this.gl);return this.pollFence(e)}createFence(e){let n,s;if(U().getBool("WEBGL_FENCE_API_ENABLED")){const r=e,o=r.fenceSync(r.SYNC_GPU_COMMANDS_COMPLETE,0);e.flush(),s=()=>{const i=r.clientWaitSync(o,0,0);return i===r.ALREADY_SIGNALED||i===r.CONDITION_SATISFIED},n=o}else U().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0?(n=this.beginQuery(),this.endQuery(),s=()=>this.isQueryAvailable(n,U().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))):s=()=>!0;return{query:n,isFencePassed:s}}downloadMatrixFromPackedTexture(e,n,s){return this.downloadMatrixDriver(e,()=>d7(this.gl,n,s))}createProgram(e){this.throwIfDisposed();const n=this.gl;this.vertexShader==null&&(this.vertexShader=QX(n));const s=P8(n);ae(n,()=>n.attachShader(s,this.vertexShader)),ae(n,()=>n.attachShader(s,e)),z8(n,s);let r;return r=Object.assign(s,{vao:this.createVertexArray()}),this.bindVertexArray(r.vao),ae(n,()=>n.bindBuffer(n.ELEMENT_ARRAY_BUFFER,this.indexBuffer)),console.assert(o7(n,r,this.vertexBuffer),"gpgpu_util.bindVertexProgramAttributeStreams not fully successful."),this.debug&&Gm(n,r),this.setProgram(r),r}deleteProgram(e){this.throwIfDisposed(),e===this.program&&(this.program=null),e!=null&&(ae(this.gl,()=>this.gl.deleteProgram(e)),this.deleteVertexArray(e.vao))}setProgram(e){this.throwIfDisposed(),this.program=e,this.program!=null&&(this.bindVertexArray(this.program.vao),this.debug&&Gm(this.gl,this.program)),ae(this.gl,()=>this.gl.useProgram(e))}getUniformLocation(e,n,s=!0){return this.throwIfDisposed(),s?H8(this.gl,e,n):j8(this.gl,e,n)}getAttributeLocation(e,n){return this.throwIfDisposed(),ae(this.gl,()=>this.gl.getAttribLocation(e,n))}getUniformLocationNoThrow(e,n){return this.throwIfDisposed(),this.gl.getUniformLocation(e,n)}setInputMatrixTexture(e,n,s){this.throwIfDisposed(),this.throwIfNoProgram(),K8(this.gl,e,n,s)}setOutputMatrixTexture(e,n,s){this.setOutputMatrixTextureDriver(e,s,n)}setOutputPackedMatrixTexture(e,n,s){this.throwIfDisposed();const[r,o]=sl(n,s);this.setOutputMatrixTextureDriver(e,r,o)}setOutputMatrixWriteRegion(e,n,s,r){this.setOutputMatrixWriteRegionDriver(s,e,r,n)}setOutputPackedMatrixWriteRegion(e,n,s,r){throw new Error("setOutputPackedMatrixWriteRegion not implemented.")}debugValidate(){this.program!=null&&Gm(this.gl,this.program),Ih(this.gl)}executeProgram(){this.throwIfDisposed(),this.throwIfNoProgram();const e=this.gl;if(this.debug){const n=this.getVertexArray();console.assert(n===this.program.vao,"VAO changed between setProgram and executeProgram!"),this.debugValidate()}ae(e,()=>e.drawElements(e.TRIANGLES,6,e.UNSIGNED_SHORT,0))}blockUntilAllProgramsCompleted(){this.throwIfDisposed(),ae(this.gl,()=>this.gl.finish())}getQueryTimerExtension(){return this.disjointQueryTimerExtension==null&&(this.disjointQueryTimerExtension=$h(this.gl,U().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")===2?"EXT_disjoint_timer_query_webgl2":"EXT_disjoint_timer_query")),this.disjointQueryTimerExtension}getQueryTimerExtensionWebGL2(){return this.getQueryTimerExtension()}getQueryTimerExtensionWebGL1(){return this.getQueryTimerExtension()}beginQuery(){if(U().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")===2){const s=this.gl,r=this.getQueryTimerExtensionWebGL2(),o=s.createQuery();return s.beginQuery(r.TIME_ELAPSED_EXT,o),o}const e=this.getQueryTimerExtensionWebGL1(),n=e.createQueryEXT();return e.beginQueryEXT(e.TIME_ELAPSED_EXT,n),n}endQuery(){if(U().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")===2){const n=this.gl,s=this.getQueryTimerExtensionWebGL2();n.endQuery(s.TIME_ELAPSED_EXT);return}const e=this.getQueryTimerExtensionWebGL1();e.endQueryEXT(e.TIME_ELAPSED_EXT)}async waitForQueryAndGetTime(e){return await nv(()=>this.disposed||this.isQueryAvailable(e,U().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))),this.getQueryTime(e,U().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))}getQueryTime(e,n){if(n===0)return null;if(n===2){const s=this.gl;return s.getQueryParameter(e,s.QUERY_RESULT)/1e6}else{const s=this.getQueryTimerExtensionWebGL1();return s.getQueryObjectEXT(e,s.QUERY_RESULT_EXT)/1e6}}isQueryAvailable(e,n){if(n===0)return!0;if(n===2){const s=this.gl,r=this.getQueryTimerExtensionWebGL2(),o=s.getQueryParameter(e,s.QUERY_RESULT_AVAILABLE);return this.disjoint==null&&(this.disjoint=this.gl.getParameter(r.GPU_DISJOINT_EXT)),o&&!this.disjoint}else{const s=this.getQueryTimerExtensionWebGL1(),r=s.getQueryObjectEXT(e,s.QUERY_RESULT_AVAILABLE_EXT);return this.disjoint==null&&(this.disjoint=this.gl.getParameter(s.GPU_DISJOINT_EXT)),r&&!this.disjoint}}pollFence(e){return new Promise(n=>{this.addItemToPoll(()=>e.isFencePassed(),()=>n())})}pollItems(){const e=p7(this.itemsToPoll.map(n=>n.isDoneFn));for(let n=0;n<=e;++n){const{resolveFn:s}=this.itemsToPoll[n];s()}this.itemsToPoll=this.itemsToPoll.slice(e+1)}addItemToPoll(e,n){if(this.itemsToPoll.push({isDoneFn:e,resolveFn:n}),this.itemsToPoll.length>1)return;let s;"setTimeoutCustom"in U().platform&&(s=U().platform.setTimeoutCustom.bind(U().platform)),nv(()=>(this.pollItems(),this.itemsToPoll.length===0),()=>0,null,s)}bindTextureToFrameBuffer(e){this.throwIfDisposed(),Hm(this.gl,e,this.framebuffer),this.debug&&Ih(this.gl)}unbindTextureToFrameBuffer(){this.outputTexture!=null?(Hm(this.gl,this.outputTexture,this.framebuffer),this.debug&&Ih(this.gl)):fk(this.gl,this.framebuffer)}downloadMatrixDriver(e,n){this.bindTextureToFrameBuffer(e);const s=n();return this.unbindTextureToFrameBuffer(),s}setOutputMatrixTextureDriver(e,n,s){this.throwIfDisposed();const r=this.gl;Hm(r,e,this.framebuffer),this.debug&&Ih(r),this.outputTexture=e,ae(r,()=>r.viewport(0,0,n,s)),ae(r,()=>r.scissor(0,0,n,s))}setOutputMatrixWriteRegionDriver(e,n,s,r){this.throwIfDisposed(),ae(this.gl,()=>this.gl.scissor(e,n,s,r))}throwIfDisposed(){if(this.disposed)throw new Error("Attempted to use disposed GPGPUContext.")}throwIfNoProgram(){if(this.program==null)throw new Error("No GPU program is currently set.")}}function p7(t){let e=0;for(;e<t.length&&t[e]();++e);return e-1}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const{addImpl:f7,bincountImpl:wD,bincountReduceImpl:m7,castImpl:g7,ceilImpl:y7,concatImpl:x7,equalImpl:b7,expImpl:w7,expm1Impl:v7,floorImpl:k7,gatherNdImpl:S7,gatherV2Impl:C7,greaterImpl:N7,greaterEqualImpl:$7,lessImpl:I7,lessEqualImpl:T7,linSpaceImpl:E7,logImpl:D7,maxImpl:R7,maximumImpl:A7,minimumImpl:_7,multiplyImpl:O7,negImpl:F7,notEqualImpl:L7,prodImpl:P7,raggedGatherImpl:z7,raggedRangeImpl:M7,raggedTensorToTensorImpl:B7,rangeImpl:V7,rsqrtImpl:W7,scatterImpl:U7,sigmoidImpl:G7,simpleAbsImpl:vD,sliceImpl:H7,sparseFillEmptyRowsImpl:j7,sparseReshapeImpl:K7,sparseSegmentReductionImpl:kD,sqrtImpl:q7,stridedSliceImpl:X7,stringNGramsImpl:Y7,stringSplitImpl:Q7,stringToHashBucketFastImpl:Z7,subImpl:J7,tileImpl:e9,topKImpl:t9,transposeImpl:Vb,uniqueImpl:n9}=lj;/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function SD(t,e){return["x","y","z","w","u","v"].slice(0,e).map(n=>`${t}.${n}`)}function ln(t,e){return e===1?[t]:SD(t,e)}function s9(t,e){if(t===1)return"rc";let n="";for(let s=0;s<t;s++)n+=e[s],s<t-1&&(n+=",");return n}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class r9{constructor(e){if(this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outputShape=e,this.rank=e.length,this.enableShapeUniforms=pn(this.outputShape.length),this.rank===0)this.userCode=`
        void main() {
          setOutput(vec4(getA(), 0., 0., 0.));
        }
      `;else{const n=ln("rc",this.rank),s=Ke(this.rank),r=this.getOutOfBoundsCondition(n),o=this.getSetup(n),i=this.getOutput(n);this.userCode=`
        void main() {
          ${s} rc = getOutputCoords();

          if(${r}) {
            setOutput(vec4(0));
          } else {
            ${o}

            setOutput(vec4(${i}));
          }
        }
      `}}getSourceCoordsArr(e){const n=[];for(let s=0;s<=1;s++)for(let r=0;r<=1;r++){let o=`${s===0?"r":"rp1"}, ${r===0?"c":"cp1"}`;for(let i=2;i<this.rank;i++)o=`${e[e.length-1-i]},`+o;n.push(o)}return n}getOutOfBoundsCondition(e){if(this.rank===1)return`rc > ${this.enableShapeUniforms?"outShape":this.outputShape[0]}`;let n="";for(let s=this.rank-2;s<this.rank;s++)n+=`${e[s]} >= ${this.enableShapeUniforms?`outShape[${s}]`:this.outputShape[s]}`,s<this.rank-1&&(n+="||");return n}getSetup(e){if(this.rank===1)return"";const n=e.slice(-2),s=this.enableShapeUniforms?`outShape[${this.rank} - 1]`:this.outputShape[this.rank-1],r=this.enableShapeUniforms?`outShape[${this.rank} - 2]`:this.outputShape[this.rank-2];return`
      int r = ${n[0]};
      int c = ${n[1]};
      int rp1 = r + 1;
      int cp1 = c + 1;

      bool cEdge = cp1 >= ${s};
      bool rEdge = rp1 >= ${r};
    `}getOutput(e){const n=this.getSourceCoordsArr(e);return this.rank===1?`getA(rc), (rc + 1 >= ${this.enableShapeUniforms?"outShape":this.outputShape[0]} ? 0. : getA(rc + 1)), 0, 0`:`getA(${n[0]}),
            cEdge ? 0. : getA(${n[1]}),
            rEdge ? 0. : getA(${n[2]}),
            rEdge || cEdge ? 0. : getA(${n[3]})`}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class CD{constructor(e,n){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec3"}],this.outputShape=e,this.enableShapeUniforms=pn(this.outputShape.length);let s="";for(let r=0;r<4;r++){let o="thisRC = rc;";r%2===1&&(o+="thisRC.z += 1;"),r>1&&(o+="thisRC.y += 1;"),s+=`
        ${o}
        ${r>0?"if(thisRC.y < rows && thisRC.z < cols){":""}
          int flatIndex = getFlatIndex(thisRC);

          ivec3 inputRC = inputCoordsFromReshapedOutCoords(flatIndex);
          vec2 inputRCInnerDims = vec2(float(inputRC.y),float(inputRC.z));

          result[${r}] =
            getChannel(getA(inputRC.x, inputRC.y, inputRC.z), inputRCInnerDims);
        ${r>0?"}":""}
      `}this.userCode=`
      ${o9(n,this.enableShapeUniforms)}
      ${this.enableShapeUniforms?Mb():zb(e)}

      void main() {
        ivec3 rc = getOutputCoords();

        vec4 result = vec4(0.);

        ivec3 thisRC;
        int rows = ${this.enableShapeUniforms?"outShape[1]":e[1]};
        int cols = ${this.enableShapeUniforms?"outShape[2]":e[2]};

        ${s}

        setOutput(result);
      }
    `}}function o9(t,e){return`
    ivec3 inputCoordsFromReshapedOutCoords(int index) {
      ${e?oX(["r","c","d"],"inputShape"):Mi(["r","c","d"],t)}
      return ivec3(r, c, d);
    }
  `}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class i9{constructor(e){this.gpgpu=e,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0,this.freeTextures={},this.logEnabled=!1,this.usedTextures={}}acquireTexture(e,n,s){const r=bk(n,s),o=wk(e,r,s);o in this.freeTextures||(this.freeTextures[o]=[]),o in this.usedTextures||(this.usedTextures[o]=[]);const i=xk(e,r,this.gpgpu.gl,this.gpgpu.textureConfig,s);if(this.freeTextures[o].length>0){this.numFreeTextures--,this.numUsedTextures++,this._numBytesFree-=i,this.log();const l=this.freeTextures[o].shift();return this.usedTextures[o].push(l),l}let a;return r===Gt.PACKED_2X2_FLOAT32?a=this.gpgpu.createPackedMatrixTexture(e[0],e[1]):r===Gt.PACKED_2X2_FLOAT16?a=this.gpgpu.createFloat16PackedMatrixTexture(e[0],e[1]):r===Gt.UNPACKED_FLOAT32?a=this.gpgpu.createFloat32MatrixTexture(e[0],e[1]):r===Gt.UNPACKED_FLOAT16?a=this.gpgpu.createFloat16MatrixTexture(e[0],e[1]):r===Gt.PACKED_4X1_UNSIGNED_BYTE&&(a=this.gpgpu.createUnsignedBytesMatrixTexture(e[0],e[1])),this.usedTextures[o].push(a),this.numUsedTextures++,this._numBytesAllocated+=i,this.log(),a}releaseTexture(e,n,s,r){if(this.freeTextures==null)return;const o=bk(s,r),i=wk(n,o,r);i in this.freeTextures||(this.freeTextures[i]=[]);const a=xk(n,o,this.gpgpu.gl,this.gpgpu.textureConfig,r),l=U().get("WEBGL_DELETE_TEXTURE_THRESHOLD");l!==-1&&this._numBytesAllocated>l?(this.gpgpu.deleteMatrixTexture(e.texture),this._numBytesAllocated-=a):(this.freeTextures[i].push(e),this.numFreeTextures++,this._numBytesFree+=a),this.numUsedTextures--;const u=this.usedTextures[i],c=u.indexOf(e);if(c<0)throw new Error("Cannot release a texture that was never provided by this texture manager");u.splice(c,1),this.log()}log(){if(!this.logEnabled)return;const e=this.numFreeTextures+this.numUsedTextures;console.log("Free/Used",`${this.numFreeTextures} / ${this.numUsedTextures}`,`(${e})`);const n=this._numBytesFree/this._numBytesAllocated;console.log(`Bytes allocated: ${this._numBytesAllocated}`),console.log(`Bytes unused: ${this._numBytesFree} (${Math.round(100*n)}%)`)}get numBytesAllocated(){return this._numBytesAllocated}get numBytesFree(){return this._numBytesFree}getNumUsedTextures(){return this.numUsedTextures}getNumFreeTextures(){return this.numFreeTextures}dispose(){if(this.freeTextures!=null){for(const e in this.freeTextures)this.freeTextures[e].forEach(n=>{this.gpgpu.deleteMatrixTexture(n.texture)});for(const e in this.usedTextures)this.usedTextures[e].forEach(n=>{this.gpgpu.deleteMatrixTexture(n.texture)});this.freeTextures=null,this.usedTextures=null,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0}}}function a9(t,e){const n=t;if(e===n.R32F)return 4;if(e===n.R16F)return 2;if(e===n.RGBA32F)return 16;if(e===t.RGBA)return 16;if(e===n.RGBA16F)return 8;if(e===n.RGBA8)return 4;throw new Error(`Unknown internal format ${e}`)}function xk(t,e,n,s,r){const o=l9(e,s);let i;if(r){const[l,u]=sl(t[0],t[1]);i=l*u}else{const[l,u]=Kc(t[0],t[1]);i=l*u}const a=a9(n,o);return i*a}function l9(t,e){switch(t){case Gt.PACKED_2X2_FLOAT32:return xD(e);case Gt.PACKED_2X2_FLOAT16:return bD(e);case Gt.UNPACKED_FLOAT32:return mD(e);case Gt.UNPACKED_FLOAT16:return gD(e);case Gt.PACKED_4X1_UNSIGNED_BYTE:return yD(e);default:throw new Error(`Unknown physical texture type ${t}`)}}function u9(t){return U().getBool("WEBGL_RENDER_FLOAT32_ENABLED")?t?Gt.PACKED_2X2_FLOAT32:Gt.UNPACKED_FLOAT32:t?Gt.PACKED_2X2_FLOAT16:Gt.UNPACKED_FLOAT16}function bk(t,e){if(t===qn.UPLOAD)return Gt.PACKED_2X2_FLOAT32;if(t===qn.RENDER||t==null)return u9(e);if(t===qn.DOWNLOAD||t===qn.PIXELS)return Gt.PACKED_4X1_UNSIGNED_BYTE;throw new Error(`Unknown logical texture type ${t}`)}function wk(t,e,n){return`${t[0]}_${t[1]}_${e}_${n}`}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class cr{constructor(e,n){this.variableNames=["A"],this.outputShape=e,this.enableShapeUniforms=pn(this.outputShape.length),this.userCode=`
      float unaryOperation(float x) {
        ${n}
      }

      void main() {
        float x = getAAtOutCoords();
        float y = unaryOperation(x);

        setOutput(y);
      }
    `}}const _s="if (isnan(x)) return x;",c9="return x;",vk="return abs(x);",h9="return (x >= 0.0) ? x : (exp(x) - 1.0);",d9=_s+`
  return (x < 0.0) ? 0.0 : x;
`,p9=_s+`
  return (x < 0.0) ? 0.0 : min(6.0, x);
`,Jr="return x;",f9="return 1.0 / (1.0 + exp(-1.0 * x));";/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const m9="return x;",g9=`
  vec4 result;

  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);
  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);
  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);
  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);

  return result;
`,y9=`
  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,x9=`
  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,b9="return 1.0 / (1.0 + exp(-1.0 * x));";class io{constructor(e,n){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.enableShapeUniforms=pn(this.outputShape.length),this.userCode=`
      vec4 unaryOperation(vec4 x) {
        ${n}
      }

      void main() {
        vec4 x = getAAtOutCoords();
        vec4 y = unaryOperation(x);

        setOutput(y);
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class w9{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outputShape=e,this.enableShapeUniforms=pn(this.outputShape.length);const n=e.length,s=ln("rc",n),r=Ke(n),o=s9(n,s),i=s.slice(-2),a=n<=1?"rc":`vec2(${i.join(",")})`;this.userCode=`
      void main() {
        ${r} rc = getOutputCoords();
        vec4 packedInput = getA(${o});

        setOutput(getChannel(packedInput, ${a}));
      }
    `}}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const v9=C1,k9=1e-7,S9=1e-4,Dh={};function C9(t){return t in Dh||(Dh[t]={}),Dh[t]}const N9=U().getNumber("CPU_HANDOFF_SIZE_THRESHOLD"),$9=600;function I9(){return U().global.screen==null?1024:U().global.screen.height*U().global.screen.width*window.devicePixelRatio*$9/1024/1024}class Zf extends P0{constructor(e){if(super(),this.pendingRead=new WeakMap,this.pendingDisposal=new WeakSet,this.dataRefCount=new WeakMap,this.numBytesInGPU=0,this.uploadWaitMs=0,this.downloadWaitMs=0,this.lastGlFlushTime=0,this.warnedAboutMemory=!1,this.pendingDeletes=0,this.disposed=!1,!U().getBool("HAS_WEBGL"))throw new Error("WebGL is not supported on this device");let n;if(e!=null){if(e instanceof qm)n=e;else{const s=Js(U().getNumber("WEBGL_VERSION"),e);n=new qm(s)}this.binaryCache={},this.gpgpuCreatedLocally=!1}else{const s=Js(U().getNumber("WEBGL_VERSION"));n=new qm(s),this.binaryCache=C9(U().getNumber("WEBGL_VERSION")),this.gpgpuCreatedLocally=!0}this.gpgpu=n,this.canvas=this.gpgpu.gl.canvas,this.textureManager=new i9(this.gpgpu),this.numMBBeforeWarning=I9(),this.texData=new QC(this,cs())}nextDataId(){return Zf.nextDataId++}numDataIds(){return this.texData.numDataIds()-this.pendingDeletes}writeTexture(e,n,s,r,o,i){const a=this.makeTensorInfo(n,s),l=this.texData.get(a.dataId);l.isPacked=!1,l.texture={texture:e,texShape:[r,o]},l.texShape=[r,o];const u=Th(n),c=new yk(u,!1,i),h=this.runWebGLProgram(c,[a],s,[[r,o]]);return h.shape=n,l.texture=null,this.disposeIntermediateTensorInfo(a),h.dataId}write(e,n,s){if((U().getBool("WEBGL_CHECK_NUMERICAL_PROBLEMS")||U().getBool("DEBUG"))&&this.checkNumericalProblems(e),s==="complex64"&&e!=null)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");const r={id:this.nextDataId()};return this.texData.set(r,{shape:n,dtype:s,values:e,usage:qn.UPLOAD,refCount:1}),r}refCount(e){return this.texData.has(e)?this.texData.get(e).refCount:0}incRef(e){const n=this.texData.get(e);n.refCount++}decRef(e){if(this.texData.has(e)){const n=this.texData.get(e);n.refCount--}}move(e,n,s,r,o){if(U().getBool("DEBUG")&&this.checkNumericalProblems(n),r==="complex64")throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");this.texData.set(e,{shape:s,dtype:r,values:n,usage:qn.UPLOAD,refCount:o})}disposeIntermediateTensorInfo(e){this.disposeData(e.dataId)}readSync(e){const n=this.texData.get(e),{values:s,dtype:r,complexTensorInfos:o,slice:i,shape:a,isPacked:l}=n;if(i!=null){let d;l?d=new io(a,Jr):d=new cr(a,Jr);const p=this.runWebGLProgram(d,[{dataId:e,shape:a,dtype:r}],r),f=this.readSync(p.dataId);return this.disposeIntermediateTensorInfo(p),f}if(s!=null)return this.convertAndCacheOnCPU(e);if(r==="string")return s;const u=this.activeTimers!=null;let c;u&&(c=mn());let h;if(r==="complex64"){const d=this.readSync(o.real.dataId),p=this.readSync(o.imag.dataId);h=Mr(d,p)}else h=this.getValuesFromTexture(e);return u&&(this.downloadWaitMs+=mn()-c),this.convertAndCacheOnCPU(e,h)}async read(e){if(this.pendingRead.has(e)){const f=this.pendingRead.get(e);return new Promise(m=>f.push(m))}const n=this.texData.get(e),{values:s,shape:r,slice:o,dtype:i,complexTensorInfos:a,isPacked:l}=n;if(o!=null){let f;l?f=new io(r,Jr):f=new cr(r,Jr);const m=this.runWebGLProgram(f,[{dataId:e,shape:r,dtype:i}],i),y=this.read(m.dataId);return this.disposeIntermediateTensorInfo(m),y}if(s!=null)return this.convertAndCacheOnCPU(e);if(U().getBool("DEBUG")&&!U().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")&&U().getNumber("WEBGL_VERSION")===2)throw new Error("tensor.data() with WEBGL_DOWNLOAD_FLOAT_ENABLED=false and WEBGL_VERSION=2 not yet supported.");let u=null,c;if(i!=="complex64"&&U().get("WEBGL_BUFFER_SUPPORTED")){c=this.decode(e);const f=this.texData.get(c.dataId);u=this.gpgpu.createBufferFromTexture(f.texture.texture,...Nh(r))}this.pendingRead.set(e,[]),i!=="complex64"&&await this.gpgpu.createAndWaitForFence();let h;if(i==="complex64"){const f=await Promise.all([this.read(a.real.dataId),this.read(a.imag.dataId)]),m=f[0],y=f[1];h=Mr(m,y)}else if(u==null)h=this.getValuesFromTexture(e);else{const f=H(r);h=this.gpgpu.downloadFloat32MatrixFromBuffer(u,f)}if(c!=null&&this.disposeIntermediateTensorInfo(c),u!=null){const f=this.gpgpu.gl;ae(f,()=>f.deleteBuffer(u))}const d=this.convertAndCacheOnCPU(e,h),p=this.pendingRead.get(e);return this.pendingRead.delete(e),p.forEach(f=>f(d)),this.pendingDisposal.has(e)&&(this.pendingDisposal.delete(e),this.disposeData(e)&&cs().removeDataId(e,this),this.pendingDeletes--),d}readToGPU(e,n={}){const s=this.texData.get(e),{values:r,shape:o,slice:i,dtype:a,isPacked:l,texture:u}=s;if(a==="complex64")throw new Error("Does not support reading texture for complex64 dtype.");if(i!=null){let p;l?p=new io(o,Jr):p=new cr(o,Jr);const f=this.runWebGLProgram(p,[{dataId:e,shape:o,dtype:a}],a),m=this.readToGPU(f,n);return this.disposeIntermediateTensorInfo(f),m}if(u==null)throw r!=null?new Error("Data is not on GPU but on CPU."):new Error("There is no data on GPU or CPU.");const c=this.decode(e,n.customTexShape),h=cs().makeTensorFromTensorInfo(c),d=this.texData.get(c.dataId);return Object.assign({tensorRef:h},d.texture)}bufferSync(e){const n=this.readSync(e.dataId);if(e.dtype==="string")try{const s=n.map(r=>ko(r));return Ce(e.shape,e.dtype,s)}catch{throw new Error("Failed to decode encoded string bytes into utf-8")}return Ce(e.shape,e.dtype,n)}checkNumericalProblems(e){if(e!=null)for(let n=0;n<e.length;n++){const s=e[n];if(!A8(s))throw U().getBool("WEBGL_RENDER_FLOAT32_CAPABLE")?Error(`The value ${s} cannot be represented with your current settings. Consider enabling float32 rendering: 'tf.env().set('WEBGL_RENDER_FLOAT32_ENABLED', true);'`):Error(`The value ${s} cannot be represented on this device.`)}}getValuesFromTexture(e){const{shape:n,dtype:s,isPacked:r}=this.texData.get(e),o=H(n);if(U().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")){const d=this.decode(e),p=this.texData.get(d.dataId),f=this.gpgpu.downloadMatrixFromPackedTexture(p.texture.texture,...Nh(n)).subarray(0,o);return this.disposeIntermediateTensorInfo(d),f}const i=U().getBool("WEBGL_PACK")&&r===!0,a=i?Th(n):n,l=i?new qX(a):new KX(a),u=this.runWebGLProgram(l,[{shape:a,dtype:s,dataId:e}],"float32"),c=this.texData.get(u.dataId),h=this.gpgpu.downloadByteEncodedFloatMatrixFromOutputTexture(c.texture.texture,c.texShape[0],c.texShape[1]).subarray(0,o);return this.disposeIntermediateTensorInfo(u),h}timerAvailable(){return U().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0}time(e){const n=this.activeTimers,s=[];let r=!1;this.programTimersStack==null?(this.programTimersStack=s,r=!0):this.activeTimers.push(s),this.activeTimers=s,e();const o=bi(this.activeTimers.map(l=>l.query)).filter(l=>l!=null),i=bi(this.activeTimers.map(l=>l.name)).filter(l=>l!=null);this.activeTimers=n,r&&(this.programTimersStack=null);const a={uploadWaitMs:this.uploadWaitMs,downloadWaitMs:this.downloadWaitMs,kernelMs:null,wallMs:null};return(async()=>{if(U().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0){const l=await Promise.all(o);a.kernelMs=__(l),a.getExtraProfileInfo=()=>l.map((u,c)=>({name:i[c],ms:u})).map(u=>`${u.name}: ${u.ms}`).join(", ")}else a.kernelMs={error:"WebGL query timers are not supported in this environment."};return this.uploadWaitMs=0,this.downloadWaitMs=0,a})()}memory(){return{unreliable:!1,numBytesInGPU:this.numBytesInGPU,numBytesInGPUAllocated:this.textureManager.numBytesAllocated,numBytesInGPUFree:this.textureManager.numBytesFree}}startTimer(){return U().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?this.gpgpu.beginQuery():{startMs:mn(),endMs:null}}endTimer(e){return U().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?(this.gpgpu.endQuery(),e):(e.endMs=mn(),e)}async getQueryTime(e){if(U().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0)return this.gpgpu.waitForQueryAndGetTime(e);const n=e;return n.endMs-n.startMs}disposeData(e,n=!1){if(this.pendingDisposal.has(e))return!1;if(!this.texData.has(e))return!0;if(n?this.texData.get(e).refCount=0:this.texData.get(e).refCount--,!n&&this.texData.get(e).refCount>0)return!1;if(this.pendingRead.has(e))return this.pendingDisposal.add(e),this.pendingDeletes++,!1;this.releaseGPUData(e);const{complexTensorInfos:s}=this.texData.get(e);return s!=null&&(this.disposeData(s.real.dataId,n),this.disposeData(s.imag.dataId,n)),this.texData.delete(e),!0}releaseGPUData(e){const{texture:n,dtype:s,texShape:r,usage:o,isPacked:i,slice:a}=this.texData.get(e),l=a&&a.origDataId||e,u=this.dataRefCount.get(l);u>1?this.dataRefCount.set(l,u-1):(this.dataRefCount.delete(l),n!=null&&(this.numBytesInGPU-=this.computeBytes(r,s),this.textureManager.releaseTexture(n,r,o,i)));const c=this.texData.get(e);c.texture=null,c.texShape=null,c.isPacked=!1,c.slice=null}getTexture(e){return this.uploadToGPU(e),this.texData.get(e).texture.texture}getDataInfo(e){return this.texData.get(e)}shouldExecuteOnCPU(e,n=N9){return U().getBool("WEBGL_CPU_FORWARD")&&e.every(s=>this.texData.get(s.dataId).texture==null&&H(s.shape)<n)}getGPGPUContext(){return this.gpgpu}where(e){jn("tf.where() in webgl locks the UI thread. Call tf.whereAsync() instead");const n=e.dataSync();return v9(e.shape,n)}packedUnaryOp(e,n,s){const r=new io(e.shape,n),o=this.compileAndRun(r,[e],s);return cs().makeTensorFromTensorInfo(o)}abs(e){if(this.shouldExecuteOnCPU([e])&&e.dtype!=="complex64"){const r=vD(this.texData.get(e.dataId).values);return this.makeOutput(e.shape,e.dtype,r)}if(U().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(e,vk,e.dtype);const n=new cr(e.shape,vk),s=this.compileAndRun(n,[e]);return cs().makeTensorFromTensorInfo(s)}makeTensorInfo(e,n,s){let r;if(n==="string"&&s!=null&&s.length>0&&Iu(s[0])){const o=s.map(i=>yo(i));r=this.write(o,e,n)}else r=this.write(s,e,n);return this.texData.get(r).usage=null,{dataId:r,shape:e,dtype:n}}makeOutput(e,n,s){return cs().makeTensorFromTensorInfo(this.makeTensorInfo(e,n,s),this)}unpackTensor(e){const n=new w9(e.shape);return this.runWebGLProgram(n,[e],e.dtype)}packTensor(e){const n=new r9(e.shape),s=!0;return this.runWebGLProgram(n,[e],e.dtype,null,s)}packedReshape(e,n){const s=[Va(e.shape),...Wa(e.shape)],r={dtype:e.dtype,shape:s,dataId:e.dataId},o=[Va(n),...Wa(n)],i=new CD(o,s),a=!0,l=[s],u=this.runWebGLProgram(i,[r],e.dtype,l,a);return{dataId:u.dataId,shape:n,dtype:u.dtype}}decode(e,n){const s=this.texData.get(e),{isPacked:r,shape:o,dtype:i}=s;if(n!=null){const d=H(o),p=n[0]*n[1]*4;C(d<=p,()=>"customTexShape is too small. Row * Column * 4 should be equal or larger than the size of the tensor data.")}const a=Th(o);let l;r?l=new jX(a):l=new HX(a);const u=!0,c=[n!=null?n:Nh(a)],h=this.runWebGLProgram(l,[{shape:a,dtype:i,dataId:e}],i,c,u,n);return{dtype:i,shape:o,dataId:h.dataId}}runWebGLProgram(e,n,s,r,o=!1,i){const a=this.makeTensorInfo(e.outputShape,s),l=this.texData.get(a.dataId);if(e.packedOutput&&(l.isPacked=!0),e.outPackingScheme===xu.DENSE){const g=i!=null?i:Nh(e.outputShape);l.texShape=g.map(x=>x*2)}if(e.outTexUsage!=null&&(l.usage=e.outTexUsage),H(a.shape)===0)return l.values=zt(a.dtype,0),a;const u=[],c=n.map(g=>{if(g.dtype==="complex64")throw new Error("GPGPUProgram does not support complex64 input. For complex64 dtypes, please separate the program into real and imaginary parts.");let x=this.texData.get(g.dataId);if(x.texture==null){if(!e.packedInputs&&H(g.shape)<=U().getNumber("WEBGL_SIZE_UPLOAD_UNIFORM"))return{shape:g.shape,texData:null,isUniform:!0,uniformValues:x.values};e.packedInputs&&(x.isPacked=!0,x.shape=g.shape)}if(this.uploadToGPU(g.dataId),!!x.isPacked!=!!e.packedInputs)g=x.isPacked?this.unpackTensor(g):this.packTensor(g),u.push(g),x=this.texData.get(g.dataId);else if(x.isPacked&&!Hd(x.shape,g.shape)){const b=g,w=g.shape;g.shape=x.shape,g=this.packedReshape(g,w),u.push(g),x=this.texData.get(g.dataId),b.shape=w}return{shape:g.shape,texData:x,isUniform:!1}});this.uploadToGPU(a.dataId);const h={shape:a.shape,texData:l,isUniform:!1},d=GX(e,c,h),p=this.getAndSaveBinary(d,()=>WX(this.gpgpu,e,c,h)),f=this.activeTimers!=null;let m;f&&(m=this.startTimer()),U().get("ENGINE_COMPILE_ONLY")||UX(this.gpgpu,p,c,h,r),u.forEach(g=>this.disposeIntermediateTensorInfo(g)),f&&(m=this.endTimer(m),this.activeTimers.push({name:e.constructor.name,query:this.getQueryTime(m)}));const y=U().get("WEBGL_FLUSH_THRESHOLD");if(y>0){const g=mn();g-this.lastGlFlushTime>y&&(this.gpgpu.gl.flush(),this.lastGlFlushTime=g)}if(!U().getBool("WEBGL_LAZILY_UNPACK")&&l.isPacked&&o===!1){const g=this.unpackTensor(a);return this.disposeIntermediateTensorInfo(a),g}return a}compileAndRun(e,n,s,r,o=!1){return s=s||n[0].dtype,this.runWebGLProgram(e,n,s,r,o)}getAndSaveBinary(e,n){return e in this.binaryCache||(this.binaryCache[e]=n()),this.binaryCache[e]}getTextureManager(){return this.textureManager}dispose(){this.disposed||(U().getBool("IS_TEST")||Object.keys(this.binaryCache).forEach(n=>{this.gpgpu.deleteProgram(this.binaryCache[n].webGLProgram),delete this.binaryCache[n]}),this.textureManager.dispose(),this.canvas!=null&&typeof HTMLCanvasElement<"u"&&this.canvas instanceof HTMLCanvasElement?this.canvas.remove():this.canvas=null,this.gpgpuCreatedLocally&&(this.gpgpu.program=null,this.gpgpu.dispose()),this.disposed=!0)}floatPrecision(){return this.floatPrecisionValue==null&&(this.floatPrecisionValue=P(()=>{if(!U().get("WEBGL_RENDER_FLOAT32_ENABLED")){const e=U().getBool("DEBUG");U().set("DEBUG",!1);const n=this.abs(ge(1e-8)).dataSync()[0];if(U().set("DEBUG",e),n>0)return 32}return 16})),this.floatPrecisionValue}epsilon(){return this.floatPrecision()===32?k9:S9}uploadToGPU(e){const n=this.texData.get(e),{shape:s,dtype:r,values:o,texture:i,usage:a,isPacked:l}=n;if(i!=null)return;const u=this.activeTimers!=null;let c;u&&(c=mn());let h=n.texShape;if(h==null&&(h=Y8(s,l),n.texShape=h),o!=null){const d=Th(s);let p,f=h[1],m=h[0];const y=o instanceof Uint8Array||o instanceof Uint8ClampedArray;(l||!y)&&([f,m]=sl(h[0],h[1])),l?p=new YX(d,y):p=new yk(d,y);const g=y?[m,f]:h,x=this.makeTensorInfo(g,r),b=this.texData.get(x.dataId);y?b.usage=qn.PIXELS:b.usage=qn.UPLOAD,b.texShape=g,this.gpgpu.uploadDenseMatrixToTexture(this.getTexture(x.dataId),f,m,o);const w=[[m,f]],k=!0,S=this.runWebGLProgram(p,[x],r,w,k),N=this.texData.get(S.dataId);n.texShape=N.texShape,n.isPacked=N.isPacked,n.usage=N.usage,U().get("ENGINE_COMPILE_ONLY")?this.disposeData(S.dataId):(n.texture=N.texture,n.values=null,this.texData.delete(S.dataId)),this.disposeIntermediateTensorInfo(x),u&&(this.uploadWaitMs+=mn()-c)}else{const d=this.acquireTexture(h,a,r,l);n.texture=d}}convertAndCacheOnCPU(e,n){const s=this.texData.get(e),{dtype:r}=s;return n!=null&&(s.values=T9(n,r)),s.values}acquireTexture(e,n,s,r){if(this.numBytesInGPU+=this.computeBytes(e,s),!this.warnedAboutMemory&&this.numBytesInGPU>this.numMBBeforeWarning*1024*1024){const o=(this.numBytesInGPU/1024/1024).toFixed(2);this.warnedAboutMemory=!0,console.warn(`High memory usage in GPU: ${o} MB, most likely due to a memory leak`)}return this.textureManager.acquireTexture(e,n,r)}computeBytes(e,n){return e[0]*e[1]*xd(n)}checkCompileCompletion(){for(const[,e]of Object.entries(this.binaryCache))this.checkCompletion_(e)}async checkCompileCompletionAsync(){const e=[];if(this.gpgpu.parallelCompilationExtension){for(const[,n]of Object.entries(this.binaryCache))e.push(this.checkCompletionAsync_(n));return Promise.all(e)}else{for(const[,n]of Object.entries(this.binaryCache)){const s=new Promise(r=>{try{this.checkCompletion_(n),r(!0)}catch(o){throw o}});e.push(s)}return Promise.all(e)}}async checkCompletionAsync_(e){return this.gpgpu.gl.getProgramParameter(e.webGLProgram,this.gpgpu.parallelCompilationExtension.COMPLETION_STATUS_KHR)?this.checkCompletion_(e):(await mI(),this.checkCompletionAsync_(e))}checkCompletion_(e){if(this.gpgpu.gl.getProgramParameter(e.webGLProgram,this.gpgpu.gl.LINK_STATUS)===!1)throw console.log(this.gpgpu.gl.getProgramInfoLog(e.webGLProgram)),this.gpgpu.gl.getShaderParameter(e.fragmentShader,this.gpgpu.gl.COMPILE_STATUS)===!1?(uD(e.source,this.gpgpu.gl.getShaderInfoLog(e.fragmentShader)),new Error("Failed to compile fragment shader.")):new Error("Failed to link vertex and fragment shaders.");return!0}getUniformLocations(){for(const[,e]of Object.entries(this.binaryCache)){const{uniformLocations:n,customUniformLocations:s,infLoc:r,nanLoc:o,inShapesLocations:i,inTexShapesLocations:a,outShapeLocation:l,outShapeStridesLocation:u,outTexShapeLocation:c}=fD(this.gpgpu,e.program,e.webGLProgram);e.uniformLocations=n,e.customUniformLocations=s,e.infLoc=r,e.nanLoc=o,e.inShapesLocations=i,e.inTexShapesLocations=a,e.outShapeLocation=l,e.outShapeStridesLocation=u,e.outTexShapeLocation=c}}createTensorFromGPUData(e,n,s){e.channels=e.channels||"RGBA";const{texture:r,height:o,width:i,channels:a}=e,l=cs().backend;if(!l.gpgpu.gl.isTexture(r))throw new Error("The texture is invalid. Also, please make sure the texture and the TFJS WebGL backend are using the same canvas. If you want to use your own custom canvas, you have to create and use the custom TFJS WebGL backend created from the canvas through 'new tf.MathBackendWebGL(customCanvas)'.");const u=l.writeTexture(r,n,s,o,i,a);return cs().makeTensorFromDataId(u,n,s,l)}}Zf.nextDataId=0;function T9(t,e){if(e==="float32"||e==="complex64")return t;if(e==="int32"||e==="bool"){const n=e==="int32"?new Int32Array(t.length):new Uint8Array(t.length);for(let s=0;s<n.length;++s)n[s]=Math.round(t[s]);return n}else throw new Error(`Unknown dtype ${e}`)}/** @license See the LICENSE file. *//**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */yN()&&_N("webgl",()=>new Zf,2);/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Wb=`
  if (isnan(a)) return a;
  if (isnan(b)) return b;
`;class Ua{constructor(e,n,s){this.variableNames=["A","B"],this.outputShape=we(n,s),this.enableShapeUniforms=pn(this.outputShape.length),this.userCode=`
      float binaryOperation(float a, float b) {
        ${e}
      }

      void main() {
        float a = getAAtOutCoords();
        float b = getBAtOutCoords();
        setOutput(binaryOperation(a, b));
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Yc=`
  result.r = isNaN.r ? NAN : result.r;
  result.g = isNaN.g ? NAN : result.g;
  result.b = isNaN.b ? NAN : result.b;
  result.a = isNaN.a ? NAN : result.a;
`;class Qc{constructor(e,n,s,r=!1){this.variableNames=["A","B"],this.supportsBroadcasting=!0,this.packedInputs=!0,this.packedOutput=!0,this.outputShape=we(n,s);const o=this.outputShape.length;this.enableShapeUniforms=pn(o);let i="";if(r)if(o===0||H(this.outputShape)===1)i=`
          result.y = 0.;
          result.z = 0.;
          result.w = 0.;
        `;else if(i=`
          ${Ke(o)} coords = getOutputCoords();
        `,o===1)this.enableShapeUniforms?i+=`
            result.y = (coords + 1) >= outShape ? 0. : result.y;
            result.z = 0.;
            result.w = 0.;
          `:i+=`
            result.y = (coords + 1) >= ${this.outputShape[0]} ? 0. : result.y;
            result.z = 0.;
            result.w = 0.;
          `;else{const l=ln("coords",o);this.enableShapeUniforms?i+=`
            bool nextRowOutOfBounds =
              (${l[o-2]} + 1) >= outShape[${o} - 2];
            bool nextColOutOfBounds =
              (${l[o-1]} + 1) >= outShape[${o} - 1];
            result.y = nextColOutOfBounds ? 0. : result.y;
            result.z = nextRowOutOfBounds ? 0. : result.z;
            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;
          `:i+=`
            bool nextRowOutOfBounds =
              (${l[o-2]} + 1) >= ${this.outputShape[o-2]};
            bool nextColOutOfBounds =
              (${l[o-1]} + 1) >= ${this.outputShape[o-1]};
            result.y = nextColOutOfBounds ? 0. : result.y;
            result.z = nextRowOutOfBounds ? 0. : result.z;
            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;
          `}this.userCode=`
      vec4 binaryOperation(vec4 a, vec4 b) {
        ${e}
      }

      void main() {
        vec4 a = getAAtOutCoords();
        vec4 b = getBAtOutCoords();

        vec4 result = binaryOperation(a, b);
        ${i}

        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Bn(t){const{inputs:e,backend:n}=t,{x:s}=e;return n.incRef(s.dataId),{dataId:s.dataId,shape:s.shape,dtype:s.dtype}}const E9={kernelName:Xu,backendName:"webgl",kernelFunc:Bn};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jo(t){const{inputs:e,backend:n}=t,{real:s,imag:r}=e,o=n.makeTensorInfo(s.shape,"complex64"),i=n.texData.get(o.dataId),a=Bn({inputs:{x:s},backend:n}),l=Bn({inputs:{x:r},backend:n});return i.complexTensorInfos={real:a,imag:l},o}const D9={kernelName:K0,backendName:"webgl",kernelFunc:jo};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ND="return (a < 0.) ? b * a : a;",$D=`
  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));
  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);
`;function R9(t){const{inputs:e,backend:n,attrs:s}=t,{x:r}=e,{alpha:o}=s,i=n.makeTensorInfo([],"float32",Lo(o,"float32")),a=U().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new Qc($D,r.shape,i.shape):new Ua(ND,r.shape,i.shape),l=n.runWebGLProgram(a,[r,i],"float32");return n.disposeIntermediateTensorInfo(i),l}const A9={kernelName:Rp,backendName:"webgl",kernelFunc:R9};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ID="return (a < 0.) ? b * a : a;",TD=`
  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));
  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);
`;function _9(t){const{inputs:e,backend:n}=t,{x:s,alpha:r}=e,o=U().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new Qc(TD,s.shape,r.shape):new Ua(ID,s.shape,r.shape);return n.runWebGLProgram(o,[s,r],"float32")}const O9={kernelName:Yp,backendName:"webgl",kernelFunc:_9};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ll="if (isnan(x)) return x;";function Oe({opSnippet:t,packedOpSnippet:e,cpuKernelImpl:n,dtype:s}){return({inputs:r,backend:o})=>{const{x:i}=r,a=o,l=s||i.dtype;if(a.shouldExecuteOnCPU([i])&&n!=null){const h=a.texData.get(i.dataId),d=n(h.values,l);return a.makeTensorInfo(i.shape,l,d)}const u=U().getBool("WEBGL_PACK_UNARY_OPERATIONS")&&e!=null;let c;return u?c=new io(i.shape,e):c=new cr(i.shape,t),a.runWebGLProgram(c,[i],l)}}function Xt({opSnippet:t,packedOpSnippet:e,checkOutOfBounds:n=!1,supportsComplex:s=!1,cpuKernelImpl:r,dtype:o}){return({inputs:i,backend:a})=>{const{a:l,b:u}=i,c=a;if(s&&l.dtype==="complex64"){const f=c.texData.get(l.dataId),m=c.texData.get(u.dataId),[y,g]=[[f.complexTensorInfos.real,m.complexTensorInfos.real],[f.complexTensorInfos.imag,m.complexTensorInfos.imag]].map(b=>{const[w,k]=b,S={dataId:w.dataId,dtype:w.dtype,shape:l.shape},N={dataId:k.dataId,dtype:k.dtype,shape:u.shape},$=new Ua(t,l.shape,u.shape);return c.runWebGLProgram($,[S,N],Pn(w.dtype,k.dtype))}),x=jo({inputs:{real:y,imag:g},backend:c});return c.disposeIntermediateTensorInfo(y),c.disposeIntermediateTensorInfo(g),x}const h=o||Pn(l.dtype,u.dtype);if((l.dtype==="string"||u.dtype==="string"||c.shouldExecuteOnCPU([l,u]))&&r!=null){const f=c.texData.get(l.dataId).values,m=c.texData.get(u.dataId).values,y=l.dtype==="string"?Ci(f):f,g=l.dtype==="string"?Ci(m):m,[x,b]=r(l.shape,u.shape,y,g,h),w=c.makeTensorInfo(b,h),k=c.texData.get(w.dataId);return k.values=x,w}const d=U().getBool("WEBGL_PACK_BINARY_OPERATIONS")&&e!=null;let p;return d?p=new Qc(e,l.shape,u.shape,n):p=new Ua(t,l.shape,u.shape),c.runWebGLProgram(p,[l,u],h)}}function bu(t,e=!1){if(t==="linear")return e?m9:c9;if(t==="relu")return e?y9:d9;if(t==="elu")return e?g9:h9;if(t==="relu6")return e?x9:p9;if(t==="prelu")return e?TD:ID;if(t==="leakyrelu")return e?$D:ND;if(t==="sigmoid")return e?b9:f9;throw new Error(`Activation ${t} has not been implemented for the WebGL backend.`)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class ED{constructor(e,n,s,r=!1,o=!1,i=!1,a=null,l=!1,u=!1){this.variableNames=["matrixA","matrixB"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=s,this.enableShapeUniforms=pn(this.outputShape.length);const c=r?e[1]:e[2],h=Math.ceil(c/2),d=r?"i * 2, rc.y":"rc.y, i * 2",p=o?"rc.z, i * 2":"i * 2, rc.z",f=r?["a.xxyy","a.zzww"]:["a.xxzz","a.yyww"],m=o?["b.xzxz","b.ywyw"]:["b.xyxy","b.zwzw"];let y="",g="";a&&(l?y=`vec4 activation(vec4 a) {
          vec4 b = getPreluActivationWeightsAtOutCoords();
          ${a}
        }`:u?y=`vec4 activation(vec4 a) {
          vec4 b = getLeakyreluAlphaAtOutCoords();
          ${a}
        }`:y=`vec4 activation(vec4 x) {
          ${a}
        }`,g="result = activation(result);");const x=i?"result += getBiasAtOutCoords();":"";i&&this.variableNames.push("bias"),l&&this.variableNames.push("preluActivationWeights"),u&&this.variableNames.push("leakyreluAlpha");let b="rc.x",w="rc.x";e[0]<n[0]?b=`imod(rc.x, ${e[0]})`:n[0]<e[0]&&(w=`imod(rc.x, ${n[0]})`),this.userCode=`
      ${y}
      // Don't use uniform for sharedDimensionPacked for performance.
      const float sharedDimension = ${h}.0;

      vec4 dot2x2ARowBCol(ivec3 rc) {
        vec4 result = vec4(0);
        int batchA = ${b};
        int batchB = ${w};
        for (int i = 0; i < ${h}; i++) {
          vec4 a = getMatrixA(batchA, ${d});
          vec4 b = getMatrixB(batchB, ${p});

          // These swizzled products need to be separately added.
          // See: https://github.com/tensorflow/tfjs/issues/1735
          result += (${f[0]} * ${m[0]});
          result += (${f[1]} * ${m[1]});
        }
        return result;
      }

      void main() {
        ivec3 rc = getOutputCoords();
        vec4 result = dot2x2ARowBCol(rc);

        ${x}

        ${g}

        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const kk={REAL:"return areal * breal - aimag * bimag;",IMAG:"return areal * bimag + aimag * breal;"};class Sk{constructor(e,n,s){this.variableNames=["AReal","AImag","BReal","BImag"],this.outputShape=we(n,s),this.userCode=`
      float binaryOpComplex(
          float areal, float aimag, float breal, float bimag) {
        ${e}
      }

      void main() {
        float areal = getARealAtOutCoords();
        float aimag = getAImagAtOutCoords();
        float breal = getBRealAtOutCoords();
        float bimag = getBImagAtOutCoords();
        setOutput(binaryOpComplex(areal, aimag, breal, bimag));
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ck="return a * b;";function Ub(t){const{inputs:e,backend:n}=t,{a:s,b:r}=e,o=Pn(s.dtype,r.dtype);if(s.dtype==="complex64"){const a=n.texData.get(s.dataId),l=n.texData.get(r.dataId),u=new Sk(kk.REAL,s.shape,r.shape),c=new Sk(kk.IMAG,s.shape,r.shape),h=[{dataId:a.complexTensorInfos.real.dataId,dtype:a.complexTensorInfos.real.dtype,shape:s.shape},{dataId:a.complexTensorInfos.imag.dataId,dtype:a.complexTensorInfos.imag.dtype,shape:s.shape},{dataId:l.complexTensorInfos.real.dataId,dtype:l.complexTensorInfos.real.dtype,shape:r.shape},{dataId:l.complexTensorInfos.imag.dataId,dtype:l.complexTensorInfos.imag.dtype,shape:r.shape}],d=n.runWebGLProgram(u,h,"float32"),p=n.runWebGLProgram(c,h,"float32"),f=jo({inputs:{real:d,imag:p},backend:n});return n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(p),f}if(n.shouldExecuteOnCPU([s,r])){const a=n.texData.get(s.dataId),l=n.texData.get(r.dataId),[u,c]=O7(s.shape,r.shape,a.values,l.values,o),h=n.makeTensorInfo(c,o),d=n.texData.get(h.dataId);return d.values=u,h}let i;return U().getBool("WEBGL_PACK_BINARY_OPERATIONS")?i=new Qc(Ck,s.shape,r.shape):i=new Ua(Ck,s.shape,r.shape),n.runWebGLProgram(i,[s,r],o)}const F9={kernelName:rc,backendName:"webgl",kernelFunc:Ub};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function L9(t,e,n){const s=[Va(t.shape),...Wa(t.shape)],r={dtype:t.dtype,shape:s,dataId:t.dataId},o=[Va(e),...Wa(e)],i=new CD(o,s),a=!0,l=[s],u=n.runWebGLProgram(i,[r],t.dtype,l,a);return{dataId:u.dataId,shape:e,dtype:u.dtype}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function oe(t){const{inputs:e,backend:n,attrs:s}=t,{x:r}=e,{shape:o}=s,i=n,a=H(r.shape),l=ZC(o,a),u=H(l);C(a===u,()=>`The new shape (${l}) has ${u} elements and the old shape (${r.shape}) has ${a} elements. The new shape and old shape must have the same number of elements.`);const c=i.texData.get(r.dataId);return c.isPacked&&!Hd(r.shape,l)&&!(c.texture!==null&&Hd(c.shape,l))?L9(r,l,i):(i.incRef(r.dataId),{dataId:r.dataId,shape:l,dtype:r.dtype})}const P9={kernelName:Zp,backendName:"webgl",kernelFunc:oe};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Nk{constructor(e,n){this.variableNames=["x"];const{windowSize:s,batchSize:r,inSize:o,outSize:i}=e;this.outputShape=[r,i];const a=Math.floor(s/4)*4,l=s%4;let u="sumValue += dot(values, ones);";if(n!=null){const h=1/n;u=`sumValue += dot(values * ${Ea(h)?h.toPrecision(2):h}, ones);`}let c="";o%s>0&&(c=`
        if (inIdx < 0 || inIdx >= ${o}) {
          return 0.0;
        }
      `),this.userCode=`
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float getValue(int batch, int inIdx) {
        ${c}
        return getX(batch, inIdx);
      }

      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = outIdx * ${s};

        float sumValue = 0.0;

        for (int i = 0; i < ${a}; i += 4) {
          int inIdx = inOffset + i;
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            getValue(batch, inIdx + 3)
          );

          ${u}
        }

        int inIdx = inOffset + ${a};
        if (${l===1}) {
          vec4 values = vec4(getValue(batch, inIdx), 0.0, 0.0, 0.0);

          ${u}
        } else if (${l===2}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1), 0.0, 0.0);

          ${u}
        } else if (${l===3}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2), 0.0);

          ${u}
        }
        setOutput(sumValue);
      }
    `}}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class z9{constructor(e,n){this.variableNames=["x"];const{windowSize:s,batchSize:r,inSize:o,outSize:i}=e;this.outputShape=[r,i];let a="0.0",l="";n==="prod"?a="1.0":n==="min"?(a="1.0 / 1e-20",l="min"):n==="max"&&(a="-1.0 / 1e-20",l="max");let u=`${n}(${n}(${n}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;n==="sum"?u="sumValue":n==="prod"?u="prodValue":n==="all"?u="allValue":n==="any"&&(u="anyValue");const c=Math.floor(s/4)*4,h=s%4;let d=`
      if (${n==="sum"}) {
        sumValue += dot(values, ones);
      } else if (${n==="prod"}) {
        vec2 tmp = vec2(values[0], values[1]) * vec2(values[2], values[3]);
        prodValue *= tmp[0] * tmp[1];
      } else {
        minMaxValue = ${l}(values, minMaxValue);
        if (${n==="min"} || ${n==="max"}) {
          minMaxValue = ${l}(values, minMaxValue);
          bvec4 isNaN = isnan(values);
          if (isNaN.r || isNaN.g || isNaN.b || isNaN.a) {
            minMaxValue = vec4(NAN);
          }
        }
      }
    `,p="vec4";n==="all"?(a="1.0",d=`
        bool reducedAllValue = all(values);
        float floatedReducedAllValue = float(reducedAllValue);
        allValue = float(allValue >= 1.0 && floatedReducedAllValue >= 1.0);
      `,p="bvec4"):n==="any"&&(a="0.0",d=`
        bool reducedAnyValue = any(values);
        float floatedReducedAnyValue = float(reducedAnyValue);
        anyValue = float(anyValue >= 1.0 || floatedReducedAnyValue >= 1.0);
      `,p="bvec4");let f="";o%s>0&&(f=`
        if (inIdx < 0 || inIdx >= ${o}) {
          return initializationValue;
        }
      `),this.userCode=`
      const float initializationValue = ${a};
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float getValue(int batch, int inIdx) {
        ${f}
        return getX(batch, inIdx);
      }

      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = outIdx * ${s};

        vec4 minMaxValue = vec4(${a});
        float prodValue = 1.0;
        float sumValue = 0.0;
        float allValue = 1.0;
        float anyValue = 0.0;

        for (int i = 0; i < ${c}; i += 4) {
          int inIdx = inOffset + i;
          ${p} values = ${p}(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            getValue(batch, inIdx + 3)
          );

          ${d}
        }

        int inIdx = inOffset + ${c};
        if (${h===1}) {
          ${p} values = ${p}(
            getValue(batch, inIdx),
            initializationValue,
            initializationValue,
            initializationValue
          );

          ${d}
        } else if (${h===2}) {
          ${p} values = ${p}(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            initializationValue,
            initializationValue
          );

          ${d}
        } else if (${h===3}) {
          ${p} values = ${p}(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            initializationValue
          );

          ${d}
        }
        setOutput(${u});
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function M9(t){const e=[];for(;e.length===0||e[e.length-1].outSize!==1;){const n=e.length?e[e.length-1].outSize:t[1],s=Lf(n);e.push({inSize:n,windowSize:s,outSize:Math.ceil(n/s)})}return e}function Vi(t,e,n,s){const r=M9(t.shape);let o=t;for(let i=0;i<r.length;i++){const{inSize:a,windowSize:l,outSize:u}=r[i];let c,h;n==="mean"?c=i===0?new Nk({windowSize:l,inSize:a,batchSize:t.shape[0],outSize:u},a):new Nk({windowSize:l,inSize:a,batchSize:t.shape[0],outSize:u}):c=new z9({windowSize:l,inSize:a,batchSize:t.shape[0],outSize:u},n),h=o,o=s.runWebGLProgram(c,[o],e),h.dataId!==t.dataId&&s.disposeIntermediateTensorInfo(h)}return o}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class B9{constructor(e,n){this.variableNames=["A"];const s=new Array(e.length);for(let i=0;i<s.length;i++)s[i]=e[n[i]];this.outputShape=s,this.rank=s.length;const r=Ke(this.rank),o=V9(n);this.userCode=`
    void main() {
      ${r} resRC = getOutputCoords();
      setOutput(getA(${o}));
    }
    `}}function V9(t){const e=t.length;if(e>6)throw Error(`Transpose for rank ${e} is not yet supported`);const n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u","resRC.v"],s=new Array(e);for(let r=0;r<t.length;r++)s[t[r]]=n[r];return s.join()}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class W9{constructor(e,n){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0;const s=new Array(e.length);for(let c=0;c<s.length;c++)s[c]=e[n[c]];if(this.outputShape=s,this.rank=s.length,this.rank>6)throw Error(`Packed transpose for rank ${this.rank} is not yet supported.`);const r=Ke(this.rank),o=SD("rc",this.rank),i=new Array(this.rank);for(let c=0;c<n.length;c++)i[n[c]]=o[c];const a=`vec2(${i.slice(-2).join()})`,l=`++${o[this.rank-1]} < ${s[this.rank-1]}`,u=`getChannel(getA(${i.join()}), ${a})`;this.userCode=`
    void main() {
      ${r} rc = getOutputCoords();
      vec4 result = vec4(0.);
      result[0] = ${u};
      if(${l}) {
        result[1] = ${u};
      }
      --${o[this.rank-1]};
      if(++${o[this.rank-2]} < ${s[this.rank-2]}) {
        result[2] = ${u};
        if(${l}) {
          result[3] = ${u};
        }
      }
      setOutput(result);
    }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Jf(t,e,n){const s=U().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new W9(t.shape,e):new B9(t.shape,e);return n.runWebGLProgram(s,[t],t.dtype)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function U9(t,e,n,s){const r=e,o=t.shape.length,i=$e(r,t.shape);let a=i;const l=ut(a,o),u=l!=null;let c=t;u&&(c=Jf(t,l,s),a=bt(a.length,o)),Kt("sum",a,o);const[h,d]=Bt(c.shape,a);let p=h;n&&(p=xt(h,i));const f=H(d),y=H(t.shape)/f,g=oe({inputs:{x:c},attrs:{shape:[y,f]},backend:s}),x=Hx(t.dtype),b=Vi(g,x,"sum",s),w=oe({inputs:{x:b},attrs:{shape:p},backend:s});return s.disposeIntermediateTensorInfo(g),s.disposeIntermediateTensorInfo(b),u&&s.disposeIntermediateTensorInfo(c),w}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function em(t){const{inputs:e,backend:n,attrs:s}=t,{x:r}=e,{axis:o,keepDims:i}=s;return U9(r,o,i,n)}const G9={kernelName:rf,backendName:"webgl",kernelFunc:em};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cn(t){const{inputs:e,backend:n,attrs:s}=t,{x:r}=e,{perm:o}=s,i=n,a=r.shape.length,l=new Array(a);for(let c=0;c<l.length;c++)l[c]=r.shape[o[c]];let u;if(i.shouldExecuteOnCPU([r])){const h=i.texData.get(r.dataId).values,d=Vb(h,r.shape,r.dtype,o,l);u=i.makeTensorInfo(l,r.dtype);const p=i.texData.get(u.dataId);p.values=d}else u=Jf(r,o,i);return u}const H9={kernelName:ga,backendName:"webgl",kernelFunc:cn};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const DD=1e3;function jd({a:t,b:e,transposeA:n,transposeB:s,backend:r,bias:o=null,preluActivationWeights:i=null,leakyreluAlpha:a=0,activation:l=null}){const u=t.shape.length,c=e.shape.length,h=n?t.shape[u-2]:t.shape[u-1],d=s?e.shape[c-1]:e.shape[c-2],p=n?t.shape[u-1]:t.shape[u-2],f=s?e.shape[c-2]:e.shape[c-1],m=t.shape.slice(0,-2),y=e.shape.slice(0,-2),g=H(m),x=H(y),w=we(t.shape.slice(0,-2),e.shape.slice(0,-2)).concat([p,f]);C(h===d,()=>`Error in matMul: inner shapes (${h}) and (${d}) of Tensors with shapes ${t.shape} and ${e.shape} and transposeA=${n} and transposeB=${s} must match.`);const k=n?[g,h,p]:[g,p,h],S=s?[x,f,d]:[x,d,f],N=oe({inputs:{x:t},backend:r,attrs:{shape:k}}),$=oe({inputs:{x:e},backend:r,attrs:{shape:S}}),T=[N,$],E=Math.max(g,x),F=n?N.shape[1]:N.shape[2],M=o!=null,B=i!=null,V=l==="leakyrelu",W=l!=null?bu(l,!0):null,G=M||B||V||W!=null;let q;if((p===1||f===1)&&F>DD&&G===!1){let z=N,j=$;n&&(z=cn({inputs:{x:N},backend:r,attrs:{perm:[0,2,1]}}),T.push(z)),s&&(j=cn({inputs:{x:$},backend:r,attrs:{perm:[0,2,1]}}),T.push(j));const X=f!==1,Y=f===1;let J=z;X&&(J=oe({inputs:{x:z},backend:r,attrs:{shape:[E,F,1]}}),T.push(J));const ne=f===1?2:1;let te=j;Y&&(te=oe({inputs:{x:j},backend:r,attrs:{shape:[E,1,F]}}),T.push(te));const re=Ub({inputs:{a:J,b:te},backend:r});q=em({inputs:{x:re},backend:r,attrs:{axis:ne,keepDims:!0}}),T.push(re)}else{const z=Pn(t.dtype,e.dtype),j=new ED(k,S,[E,p,f],n,s,M,W,B,V),X=[N,$];if(o!=null&&X.push(o),B&&X.push(i),V){const Y=r.makeTensorInfo([],"float32",Lo(a,"float32"));X.push(Y),T.push(Y)}q=r.runWebGLProgram(j,X,z)}const _=oe({inputs:{x:q},backend:r,attrs:{shape:w}});T.push(q);for(const z of T)r.disposeIntermediateTensorInfo(z);return _}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function j9(t){const{inputs:e,backend:n,attrs:s}=t,{a:r,b:o,bias:i,preluActivationWeights:a}=e,{transposeA:l,transposeB:u,activation:c,leakyreluAlpha:h}=s;return jd({a:r,b:o,transposeA:l,transposeB:u,backend:n,bias:i,preluActivationWeights:a,leakyreluAlpha:h,activation:c})}const K9={kernelName:bd,backendName:"webgl",kernelFunc:j9};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $k="return abs(x);";function q9(t){const{inputs:e,backend:n}=t,{x:s}=e;if(n.shouldExecuteOnCPU([s])&&s.dtype!=="complex64"){const o=n.texData.get(s.dataId),i=vD(o.values);return n.makeTensorInfo(s.shape,s.dtype,i)}let r;return U().getBool("WEBGL_PACK_UNARY_OPERATIONS")?r=new io(s.shape,$k):r=new cr(s.shape,$k),n.runWebGLProgram(r,[s],s.dtype)}const X9={kernelName:cp,backendName:"webgl",kernelFunc:q9};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Y9=_s+`
  if (abs(x) > 1.) {
    return NAN;
  }
  return acos(x);
`,Q9=Oe({opSnippet:Y9}),Z9={kernelName:Eu,backendName:"webgl",kernelFunc:Q9};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const J9=_s+`
  if (x < 1.0) return NAN;
return log(x + sqrt(x * x - 1.0));`,eY=Oe({opSnippet:J9}),tY={kernelName:Du,backendName:"webgl",kernelFunc:eY};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ik="return a + b;",nY=Xt({opSnippet:Ik,packedOpSnippet:Ik,supportsComplex:!0,cpuKernelImpl:f7}),sY={kernelName:Xa,backendName:"webgl",kernelFunc:nY};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class rY{constructor(e,n){this.outputShape=[],this.outputShape=e,this.variableNames=n.map((o,i)=>`T${i}`);const s=[];this.variableNames.forEach(o=>{s.push(`float v${o} = get${o}AtOutCoords();`)});const r=this.variableNames.map(o=>`v${o}`).join(" + ");this.userCode=`
      void main() {
        ${s.join(`
        `)}

        float result = ${r};
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class oY{constructor(e,n){this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.variableNames=n.map((o,i)=>`T${i}`);const s=[];this.variableNames.forEach(o=>{s.push(`vec4 v${o} = get${o}AtOutCoords();`)});const r=this.variableNames.map(o=>`v${o}`).join(" + ");this.userCode=`
      void main() {
        ${s.join(`
        `)}

        vec4 result = ${r};
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Kh(t){const{inputs:e,backend:n}=t,s=e;if(s.length===1)return Bn({inputs:{x:s[0]},backend:n});if(s.length>U().get("WEBGL_MAX_TEXTURES_IN_SHADER")){const l=Math.floor(s.length/2),u=Kh({inputs:s.slice(0,l),backend:n}),c=Kh({inputs:s.slice(l),backend:n});return Kh({inputs:[u,c],backend:n})}const r=s.map(l=>l.dtype).reduce((l,u)=>Pn(l,u)),o=s.map(l=>l.shape),a=U().getBool("WEBGL_PACK")?new oY(s[0].shape,o):new rY(s[0].shape,o);return n.runWebGLProgram(a,s,r)}const iY={kernelName:hp,backendName:"webgl",kernelFunc:Kh};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function aY(t){const{inputs:e,backend:n,attrs:s}=t,{x:r}=e,{axis:o,keepDims:i}=s,a=r.shape.length,l=$e(o,r.shape);let u=l;const c=ut(u,a);let h=r;c!=null&&(h=cn({inputs:{x:r},backend:n,attrs:{perm:c}}),u=bt(u.length,a)),Kt("all",u,a);const[d,p]=Bt(h.shape,u),f=H(p),m=oe({inputs:{x:h},backend:n,attrs:{shape:[-1,f]}}),y=Vi(m,m.dtype,"all",n);let g;if(i){const x=xt(d,l);g=oe({inputs:{x:y},backend:n,attrs:{shape:x}})}else g=oe({inputs:{x:y},backend:n,attrs:{shape:d}});return n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(y),c!=null&&n.disposeIntermediateTensorInfo(h),g}const lY={kernelName:V0,backendName:"webgl",kernelFunc:aY};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function uY(t){const{inputs:e,backend:n,attrs:s}=t,{x:r}=e,{axis:o,keepDims:i}=s,a=r.shape.length,l=$e(o,r.shape);let u=l;const c=ut(u,a);let h=r;c!=null&&(h=cn({inputs:{x:r},backend:n,attrs:{perm:c}}),u=bt(u.length,a)),Kt("any",u,a);const[d,p]=Bt(h.shape,u),f=H(p),m=oe({inputs:{x:h},backend:n,attrs:{shape:[-1,f]}}),y=Vi(m,m.dtype,"any",n);let g;if(i){const x=xt(d,l);g=oe({inputs:{x:y},backend:n,attrs:{shape:x}})}else g=oe({inputs:{x:y},backend:n,attrs:{shape:d}});return n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(y),c!=null&&n.disposeIntermediateTensorInfo(h),g}const cY={kernelName:W0,backendName:"webgl",kernelFunc:uY};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class hY{constructor(e,n,s){this.variableNames=["A"];const{windowSize:r,batchSize:o,outSize:i}=e;s||this.variableNames.push("bestIndicesA"),this.outputShape=[o,i];const a=n==="max"?">":"<",l=s?"inOffset + i;":"round(getBestIndicesA(batch, inOffset + i));";this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = outIdx * ${r};

        int bestIndex = inOffset;
        float bestValue = getA(batch, bestIndex);

        for (int i = 0; i < ${r}; i++) {
          int inIdx = ${l};
          float candidate = getA(batch, inIdx);
          if (candidate ${a} bestValue) {
            bestValue = candidate;
            bestIndex = inIdx;
          }
        }
        setOutput(float(bestIndex));
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class dY{constructor(e,n,s,r){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,C(e.length>2,()=>`Packed arg${s.charAt(0).toUpperCase()+s.slice(1)} supports only inputs with rank above 2.`);const o=e[e.length-1],i=Math.ceil(o/n);this.outputShape=e.slice(0,-1),i>1&&this.outputShape.push(i),r||this.variableNames.push("bestIndicesA");const a=this.outputShape,l=a.length,u=Ke(l),c=ln("coords",l);let h,d;if(i===1){d=l+1;const $=Ke(d);h=`
        ${$} sourceLocR = ${$}(${c.join()}, 0);
        ++${c[l-1]};
        ${$} sourceLocG = ${$}(${c.join()}, 0);
        ++${c[l-2]};
        ${$} sourceLocA = ${$}(${c.join()}, 0);
        --${c[l-1]};
        ${$} sourceLocB = ${$}(${c.join()}, 0);
        --${c[l-2]};`}else d=l,h=`
        ${u} sourceLocR = coords;
        ++${c[l-1]};
        ${u} sourceLocG = coords;
        ++${c[l-2]};
        ${u} sourceLocA = coords;
        --${c[l-1]};
        ${u} sourceLocB = coords;
        --${c[l-2]};`;const p=["x","y","z","w","u","v"].slice(0,d),f="."+p[d-1],m=p.map($=>"int "+$),y=ln("sourceLocR",d-1).concat("inIdx.r"),g=ln("sourceLocG",d-1).concat("inIdx.g"),x=ln("sourceLocB",d-1).concat("inIdx.b"),b=ln("sourceLocA",d-1).concat("inIdx.a"),w=s==="max"?"greaterThan":"lessThan",k=r?"":`
          inIdx = round(vec4(getBestIndicesAChannel(${y.join()}),
                             getBestIndicesAChannel(${g.join()}),
                             getBestIndicesAChannel(${x.join()}),
                             getBestIndicesAChannel(${b.join()})));`,S=`vec4(
            getAChannel(${y.join()}),
            hasNextCol ? getAChannel(${g.join()}) : 0.,
            hasNextRow ? getAChannel(${x.join()}) : 0.,
            hasNextRow && hasNextCol ? getAChannel(${b.join()}) : 0.)`,N=r?"":`
      float getBestIndicesAChannel(${m.join()}) {
        return getChannel(getBestIndicesA(${p.join()}),
                                          vec2(${p.slice(-2).join()}));
      }`;this.userCode=`
      float getAChannel(${m.join()}) {
        return getChannel(getA(${p.join()}),
                               vec2(${p.slice(-2).join()}));
      }
      ${N}
      void main() {
        ${u} coords = getOutputCoords();
        bool hasNextCol = ${c[l-1]} < ${a[l-1]-1};
        bool hasNextRow = ${c[l-2]} < ${a[l-2]-1};
        ${h}
        ivec4 srcIdx = ivec4(sourceLocR${f}, sourceLocG${f},
          sourceLocB${f}, sourceLocA${f}) * ${n};
        ivec4 inIdx = srcIdx;
        vec4 bestIndex = vec4(inIdx);
        vec4 bestValue = ${S};

        for (int i = 0; i < ${n}; i++) {
          inIdx = srcIdx;
          ${k}
          vec4 candidate = ${S};
          bvec4 nan = isnan(candidate);
          bvec4 replace = bvec4(
            vec4(${w}(candidate, bestValue)) * (vec4(1.0) - vec4(nan)));

          bestValue = vec4(replace.x  ? candidate.x : bestValue.x,
                           replace.y  ? candidate.y : bestValue.y,
                           replace.z  ? candidate.z : bestValue.z,
                           replace.w  ? candidate.w : bestValue.w);
          bestIndex = mix(bestIndex, vec4(inIdx), vec4(replace));
          srcIdx++;
        }
        setOutput(bestIndex);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function RD(t,e,n,s=null){let r=e.shape[0],o=e.shape[1];s!=null&&(r=s.shape[0],o=s.shape[1]);const i=Lf(o),a={windowSize:i,inSize:o,batchSize:r,outSize:Math.ceil(o/i)},l=new hY(a,n,s==null),u=[e];s!=null&&u.push(s);const c=t.runWebGLProgram(l,u,"int32");if(c.shape[1]===1)return c;const h=RD(t,e,n,c);return t.disposeIntermediateTensorInfo(c),h}function AD(t,e,n,s=null){const r=s!=null?s.shape:e.shape,o=r[r.length-1],i=Lf(o),a=new dY(r,i,n,s==null),l=s==null?[e]:[e,s],u=t.runWebGLProgram(a,l,"int32");if(u.shape.length===e.shape.length){const c=AD(t,e,n,u);return t.disposeIntermediateTensorInfo(u),c}return u}function _D(t,e,n,s){const r=[n];if(Kt("arg"+s.charAt(0).toUpperCase()+s.slice(1),r,e.shape.length),!U().getBool("WEBGL_PACK_REDUCE")||e.shape.length<=2){const o=[],i=t.texData.get(e.dataId),a=i!==null&&i.isPacked;let l=e;a&&(l=t.unpackTensor(e),o.push(l));const[u,c]=Bt(l.shape,r),h=H(c),d=oe({inputs:{x:l},backend:t,attrs:{shape:[-1,h]}});o.push(d);const p=RD(t,d,s);o.push(p);const f=oe({inputs:{x:p},backend:t,attrs:{shape:u}});return o.forEach(m=>t.disposeIntermediateTensorInfo(m)),f}return AD(t,e,s)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pY(t){const{inputs:e,backend:n,attrs:s}=t,{x:r}=e,{axis:o}=s;let i=$e(o,r.shape);const a=ut(i,r.shape.length);let l=r;const u=[];a!=null&&(l=cn({inputs:{x:r},backend:n,attrs:{perm:a}}),u.push(l),i=bt(i.length,l.shape.length)),Kt("argMax",[i[0]],l.shape.length);const c=_D(n,l,i[0],"max");return u.forEach(h=>n.disposeIntermediateTensorInfo(h)),c}const fY={kernelName:dp,backendName:"webgl",kernelFunc:pY};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mY(t){const{inputs:e,backend:n,attrs:s}=t,{x:r}=e,{axis:o}=s;let i=$e(o,r.shape);const a=ut(i,r.shape.length);let l=r;const u=[];a!=null&&(l=cn({inputs:{x:r},backend:n,attrs:{perm:a}}),u.push(l),i=bt(i.length,l.shape.length)),Kt("argMin",[i[0]],l.shape.length);const c=_D(n,l,i[0],"min");return u.forEach(h=>n.disposeIntermediateTensorInfo(h)),c}const gY={kernelName:pp,backendName:"webgl",kernelFunc:mY};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const yY=_s+`
  if (abs(x) > 1.) {
    return NAN;
  }
  return asin(x);
`,xY=Oe({opSnippet:yY}),bY={kernelName:Ru,backendName:"webgl",kernelFunc:xY};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const wY=_s+"return log(x + sqrt(x * x + 1.0));",vY=Oe({opSnippet:wY}),kY={kernelName:Au,backendName:"webgl",kernelFunc:vY};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const SY=_s+`
  return atan(x);
`,CY=Oe({opSnippet:SY}),NY={kernelName:_u,backendName:"webgl",kernelFunc:CY};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $Y=Wb+`
  return atan(a, b);
`,IY=`
  vec4 result = atan(a, b);
  bvec4 isNaNA = isnan(a);
  bvec4 isNaNB = isnan(b);
  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);
  `+Yc+`
  return result;
`,TY=Xt({opSnippet:$Y,packedOpSnippet:IY}),EY={kernelName:Fu,backendName:"webgl",kernelFunc:TY};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const DY=_s+`
  if ((x < -1.0) || (x > 1.0)) return NAN;
return (log(1.0 + x) - log(1.0 - x)) / 2.0;`,RY=Oe({opSnippet:DY}),AY={kernelName:Ou,backendName:"webgl",kernelFunc:RY};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class wu{constructor(e,n,s,r=!1,o=!1){if(this.variableNames=["x"],n==="avg"&&s)throw new Error("Cannot compute positions for average pool.");const i=e.filterWidth,a=e.strideHeight,l=e.strideWidth,u=e.dilationHeight,c=e.dilationWidth,h=e.effectiveFilterHeight,d=e.effectiveFilterWidth,p=e.padInfo.top,f=e.padInfo.left;this.outputShape=e.outShape;const m=n==="avg",y=`((batch  * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + d`,g=`(xR * ${e.inWidth} + xC) * ${e.inChannels} + d`;let x="0.0";if(m||(x="-1.0 / 1e-20"),s){const $=">=";this.userCode=`
        const ivec2 strides = ivec2(${a}, ${l});
        const ivec2 pads = ivec2(${p}, ${f});

        void main() {
          ivec4 coords = getOutputCoords();
          int batch = coords[0];
          int d = coords[3];

          ivec2 xRCCorner = coords.yz * strides - pads;
          int xRCorner = xRCCorner.x;
          int xCCorner = xRCCorner.y;

          // max/min x(?, ?, d) to get y(yR, yC, d).
          // ? = to be determined
          float minMaxValue = 0.0;
          float minMaxValueFound = 0.0;
          int minMaxPosition = 0;
          float avgValue = 0.0;

          for (int wR = 0; wR < ${h};
              wR += ${u}) {
            int xR = xRCorner + wR;

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int wC = 0; wC < ${d};
                wC += ${c}) {
              int xC = xCCorner + wC;

              if (xC < 0 || xC >= ${e.inWidth}) {
                continue;
              }

              float value = getX(batch, xR, xC, d);

              // If a min / max value has already been found, use it. If not,
              // use the current value.
              float currMinMaxValue = mix(
                  value, minMaxValue, minMaxValueFound);
              if (value ${$} currMinMaxValue) {
                minMaxValue = value;
                minMaxValueFound = 1.0;
                minMaxPosition = ${r?o?y:g:`wR * ${d} + wC`};
              }
            }
          }
          setOutput(float(minMaxPosition));
        }
      `;return}const b="max";let w=`${n}(${n}(${n}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;n==="avg"&&(w="avgValue / max(count, 1.0)");const k=Math.floor(i/4)*4,S=i%4,N=`
      if (${m}) {
        avgValue += dot(values, ones);
      } else {
        minMaxValue = ${b}(values, minMaxValue);
      }
    `;this.userCode=`
      const ivec2 strides = ivec2(${a}, ${l});
      const ivec2 pads = ivec2(${p}, ${f});
      const float initializationValue = ${x};
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float count = 0.0;

      float getValue(int batch, int xR, int xC, int d) {
        if (xC < 0 || xC >= ${e.inWidth}) {
          return initializationValue;
        }
        count += 1.0;
        return getX(batch, xR, xC, d);
      }

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d = coords[3];

        ivec2 xRCCorner = coords.yz * strides - pads;
        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        // max/min x(?, ?, d) to get y(yR, yC, d).
        // ? = to be determined
        vec4 minMaxValue = vec4(${x});
        float avgValue = 0.0;
        count = 0.0;

        for (int wR = 0; wR < ${h};
            wR += ${u}) {
          int xR = xRCorner + wR;

          if (xR < 0 || xR >= ${e.inHeight}) {
            continue;
          }

          for (int wC = 0; wC < ${k}; wC += 4) {
            int xC = xCCorner + wC * ${c};

            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              getValue(batch, xR, xC + ${c}, d),
              getValue(batch, xR, xC + 2 * ${c}, d),
              getValue(batch, xR, xC + 3 * ${c}, d)
            );

            ${N}
          }

          int xC = xCCorner + ${k};
          if (${S===1}) {
            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              initializationValue,
              initializationValue,
              initializationValue
            );

            ${N}
          } else if (${S===2}) {
            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              getValue(batch, xR, xC + ${c}, d),
              initializationValue,
              initializationValue
            );

            ${N}
          } else if (${S===3}) {
            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              getValue(batch, xR, xC + ${c}, d),
              getValue(batch, xR, xC + 2 * ${c}, d),
              initializationValue
            );

            ${N}
          }
        }
        setOutput(${w});
      }
    `}}class Gb{constructor(e,n,s,r=!1,o=!1){if(this.variableNames=["x"],n==="avg"&&s)throw new Error("Cannot compute positions for average pool.");const i=e.filterWidth,a=e.strideDepth,l=e.strideHeight,u=e.strideWidth,c=e.dilationDepth,h=e.dilationHeight,d=e.dilationWidth,p=e.effectiveFilterDepth,f=e.effectiveFilterHeight,m=e.effectiveFilterWidth,y=e.padInfo.front,g=e.padInfo.top,x=e.padInfo.left;this.outputShape=e.outShape;const b=n==="avg";let w="0.0";if(b||(w="-1.0 / 1e-20"),s){const E=">=";this.userCode=`
        const ivec3 strides =
            ivec3(${a}, ${l}, ${u});
        const ivec3 pads = ivec3(${y}, ${g}, ${x});

        void main() {
          ivec5 coords = getOutputCoords();
          int batch = coords.x;
          int ch = coords.u;

          ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;
          int xDCorner = xCorner.x;
          int xRCorner = xCorner.y;
          int xCCorner = xCorner.z;

          // max/min x(?, ?, ?, ch) to get y(yD, yR, yC, ch).
          // ? = to be determined
          float minMaxValue = 0.0;
          float minMaxValueFound = 0.0;
          int minMaxPosition = 0;

          for (int wD = 0; wD < ${p};
              wD += ${c}) {
            int xD = xDCorner + wD;

            if (xD < 0 || xD >= ${e.inDepth}) {
              continue;
            }

            for (int wR = 0; wR < ${f};
                wR += ${h}) {
              int xR = xRCorner + wR;

              if (xR < 0 || xR >= ${e.inHeight}) {
                continue;
              }

              for (int wC = 0; wC < ${m};
                  wC += ${d}) {
                int xC = xCCorner + wC;

                if (xC < 0 || xC >= ${e.inWidth}) {
                  continue;
                }

                float value = getX(batch, xD, xR, xC, ch);

                // If a min / max value has already been found, use it. If not,
                // use the current value.
                float currMinMaxValue = mix(
                    value, minMaxValue, minMaxValueFound);
                if (value ${E} currMinMaxValue) {
                  minMaxValue = value;
                  minMaxValueFound = 1.0;
                  minMaxPosition = ${r?o?`(((batch * ${e.inDepth} + xD) * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`((xD * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`wD * ${f} * ${m} +
                      wR * ${m} + wC`};
                }
              }
            }
          }
          setOutput(float(minMaxPosition));
        }
      `;return}const k="max";let S=`${n}(${n}(${n}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;n==="avg"&&(S="avgValue / max(count, 1.0)");const N=Math.floor(i/4)*4,$=i%4,T=`
      if (${b}) {
        avgValue += dot(values, ones);
      } else {
        minMaxValue = ${k}(values, minMaxValue);
      }
    `;this.userCode=`
      const ivec3 strides =
        ivec3(${a}, ${l}, ${u});
      const ivec3 pads = ivec3(${y}, ${g}, ${x});
      const float initializationValue = ${w};
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float count = 0.0;

      float getValue(int batch, int xD, int xR, int xC, int ch) {
        if (xC < 0 || xC >= ${e.inWidth}) {
          return initializationValue;
        }
        count += 1.0;
        return getX(batch, xD, xR, xC, ch);
      }

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int ch = coords.u;

        ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;
        int xDCorner = xCorner.x;
        int xRCorner = xCorner.y;
        int xCCorner = xCorner.z;

        // max/min x(?, ?, ?, d) to get y(yD, yR, yC, ch).
        // ? = to be determined
        vec4 minMaxValue = vec4(${w});
        float avgValue = 0.0;
        count = 0.0;

        for (int wD = 0; wD < ${p};
            wD += ${c}) {
          int xD = xDCorner + wD;

          if (xD < 0 || xD >= ${e.inDepth}) {
            continue;
          }

          for (int wR = 0; wR < ${f};
            wR += ${h}) {
            int xR = xRCorner + wR;

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int wC = 0; wC < ${N}; wC += 4) {
              int xC = xCCorner + wC * ${d};

              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                getValue(batch, xD, xR, xC + ${d}, ch),
                getValue(batch, xD, xR, xC + 2 * ${d}, ch),
                getValue(batch, xD, xR, xC + 3 * ${d}, ch)
              );

              ${T}
            }

            int xC = xCCorner + ${N};
            if (${$===1}) {
              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                initializationValue,
                initializationValue,
                initializationValue
              );

              ${T}
            } else if (${$===2}) {
              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                getValue(batch, xD, xR, xC + ${d}, ch),
                initializationValue,
                initializationValue
              );

              ${T}
            } else if (${$===3}) {
              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                getValue(batch, xD, xR, xC + ${d}, ch),
                getValue(batch, xD, xR, xC + 2 * ${d}, ch),
                initializationValue
              );

              ${T}
            }
          }
        }
        setOutput(${S});
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _Y(t){const{inputs:e,backend:n,attrs:s}=t,{x:r}=e;qc(r,"avgPool");const{filterSize:o,strides:i,pad:a,dimRoundingMode:l}=s,u=1;C(jt(i,u),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${i} and dilations '${u}'`);const c=Rs(r.shape,o,i,u,a,l);if(c.filterWidth===1&&c.filterHeight===1&&Ae(c.inShape,c.outShape))return Bn({inputs:{x:r},backend:n});const h=new wu(c,"avg",!1);return n.runWebGLProgram(h,[r],"float32")}const OY={kernelName:fp,backendName:"webgl",kernelFunc:_Y};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function FY(t){const{inputs:e,backend:n,attrs:s}=t,{x:r}=e,{filterSize:o,strides:i,pad:a,dimRoundingMode:l,dataFormat:u}=s,c=[1,1,1],h=Vr(r.shape,o,i,c,a,l,u),d=new Gb(h,"avg",!1);return n.runWebGLProgram(d,[r],"float32")}const LY={kernelName:mp,backendName:"webgl",kernelFunc:FY};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class PY{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;const n=e.filterHeight,s=e.filterWidth,r=e.strideHeight,o=e.strideWidth,i=e.dilationHeight,a=e.dilationWidth,l=e.effectiveFilterHeight,u=e.effectiveFilterWidth,c=l-1-e.padInfo.top,h=u-1-e.padInfo.left,d=1/(n*s);this.userCode=`
      const ivec2 pads = ivec2(${c}, ${h});
      const float avgMultiplier = float(${d});

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];

        ivec2 dyRCCorner = coords.yz - pads;
        int dyRCorner = dyRCCorner.x;
        int dyCCorner = dyRCCorner.y;

        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${l};
            wR += ${i}) {
          float dyR = float(dyRCorner + wR) / ${r}.0;

          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          for (int wC = 0; wC < ${u};
            wC+= ${a}) {
            float dyC = float(dyCCorner + wC) / ${o}.0;

            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            float dyValue = getDy(b, idyR, idyC, d);

            dotProd += dyValue * avgMultiplier;
          }
        }
        setOutput(dotProd);
      }
    `}}class zY{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;const n=e.filterDepth,s=e.filterHeight,r=e.filterWidth,o=e.strideDepth,i=e.strideHeight,a=e.strideWidth,l=e.dilationDepth,u=e.dilationHeight,c=e.dilationWidth,h=e.effectiveFilterDepth,d=e.effectiveFilterHeight,p=e.effectiveFilterWidth,f=h-1-e.padInfo.front,m=d-1-e.padInfo.top,y=p-1-e.padInfo.left,g=1/(n*s*r);this.userCode=`
      const ivec3 pads = ivec3(${f}, ${m}, ${y});
      const float avgMultiplier = float(${g});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int ch = coords.u;

        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;
        int dyDCorner = dyCorner.x;
        int dyRCorner = dyCorner.y;
        int dyCCorner = dyCorner.z;

        // Convolve dy(?, ?, ?, d) with pos mask(:, :, :, ch) to get
        // dx(xD, xR, xC, ch).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;

        for (int wD = 0; wD < ${h};
            wD += ${l}) {
          float dyD = float(dyDCorner + wD) / ${o}.0;

          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {
            continue;
          }
          int idyD = int(dyD);

          for (int wR = 0; wR < ${d};
              wR += ${u}) {
            float dyR = float(dyRCorner + wR) / ${i}.0;

            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||
                fract(dyR) > 0.0) {
              continue;
            }
            int idyR = int(dyR);

            for (int wC = 0; wC < ${p};
                wC += ${c}) {
              float dyC = float(dyCCorner + wC) / ${a}.0;

              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                  fract(dyC) > 0.0) {
                continue;
              }
              int idyC = int(dyC);

              float dyValue = getDy(batch, idyD, idyR, idyC, ch);

              dotProd += dyValue * avgMultiplier;
            }
          }
        }
        setOutput(dotProd);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function MY(t){const{inputs:e,backend:n,attrs:s}=t,{dy:r,input:o}=e,i=o,{filterSize:a,strides:l,pad:u,dimRoundingMode:c}=s,h=[1,1,1],d=Vr(i.shape,a,l,h,u,c),p=new zY(d);return n.runWebGLProgram(p,[r],i.dtype)}const BY={kernelName:G0,backendName:"webgl",kernelFunc:MY};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function VY(t){const{inputs:e,backend:n,attrs:s}=t,{dy:r,input:o}=e,i=o;qc([r,o],"avgPoolGrad");const{filterSize:a,strides:l,pad:u}=s,c=Rs(i.shape,a,l,1,u),h=new PY(c);return n.runWebGLProgram(h,[r],i.dtype)}const WY={kernelName:U0,backendName:"webgl",kernelFunc:VY};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function UY(t){const{inputs:e,backend:n,attrs:s}=t,{a:r,b:o}=e,{transposeA:i,transposeB:a}=s;return jd({a:r,b:o,transposeA:i,transposeB:a,backend:n})}const GY={kernelName:gp,backendName:"webgl",kernelFunc:UY};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class HY{constructor(e,n,s,r,o,i){this.outputShape=[],this.variableNames=["x","mean","variance"],we(e,n),we(e,s);let a="0.0";r!=null&&(we(e,r),this.variableNames.push("offset"),a="getOffsetAtOutCoords()");let l="1.0";o!=null&&(we(e,o),this.variableNames.push("scale"),l="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`
      void main() {
        float x = getXAtOutCoords();
        float mean = getMeanAtOutCoords();
        float variance = getVarianceAtOutCoords();
        float offset = ${a};
        float scale = ${l};
        float inv = scale * inversesqrt(variance + float(${i}));
        setOutput(dot(vec3(x, -mean, offset), vec3(inv, inv, 1)));
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class jY{constructor(e,n,s,r,o,i){this.packedInputs=!0,this.packedOutput=!0,this.variableNames=["x","mean","variance"],we(e,n),we(e,s);let a="vec4(0.0)";r!=null&&(we(e,r),this.variableNames.push("offset"),a="getOffsetAtOutCoords()");let l="vec4(1.0)";o!=null&&(we(e,o),this.variableNames.push("scale"),l="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`
      void main() {
        vec4 offset = ${a};
        vec4 scale = ${l};

        vec4 x = getXAtOutCoords();
        vec4 mean = getMeanAtOutCoords();
        vec4 variance = getVarianceAtOutCoords();

        vec4 inv = scale * inversesqrt(variance + vec4(${i}));

        setOutput((x - mean) * inv + offset);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const KY=({inputs:t,backend:e,attrs:n})=>{const{x:s,mean:r,variance:o,offset:i,scale:a}=t;C(r.shape.length===o.shape.length,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),C(i==null||r.shape.length===i.shape.length,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),C(a==null||r.shape.length===a.shape.length,()=>"Batch normalization gradient requires mean and scale to have equal ranks.");let{varianceEpsilon:l}=n;l==null&&(l=.001);const u=[s,r,o];let c=null;i!=null&&(c=i.shape,u.push(i));let h=null;a!=null&&(h=a.shape,u.push(a));const d=U().getBool("WEBGL_PACK_NORMALIZATION")?new jY(s.shape,r.shape,o.shape,c,h,l):new HY(s.shape,r.shape,o.shape,c,h,l);return e.runWebGLProgram(d,u,u[0].dtype)},qY={kernelName:Tp,backendName:"webgl",kernelFunc:KY};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class XY{constructor(e){this.variableNames=["source"],this.outputShape=e,this.rank=e.length;const n=Ke(this.rank);this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];const s=YY(this.rank);let r;const o=e.map((i,a)=>`sourceLoc.${By[a]} = start[${a}] + coords.${By[a]};`);r=`
        ${n} sourceLoc;
        ${n} coords = getOutputCoords();
        ${o.join(`
`)}
      `,this.userCode=`
      void main() {
        ${r}
        setOutput(getSource(${s}));
      }
    `}}const By=["x","y","z","w","u","v"];function YY(t){if(t===1)return"sourceLoc";if(t<=6)return By.slice(0,t).map(e=>"sourceLoc."+e).join(",");throw Error(`Slicing for rank ${t} is not yet supported`)}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class QY{constructor(e){this.variableNames=["source"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.rank=e.length,this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];const n=Ke(this.rank),s=ln("coords",this.rank),r=ln("sourceLoc",this.rank),o=this.rank===1?"sourceLoc":`vec2(${r.slice(-2).join()})`,i=`getChannel(getSource(${r.join()}), ${o})`,a=`
      result.x = ${i};
      if (++${s[this.rank-1]} < ${e[this.rank-1]}) {
        ++${r[this.rank-1]};
        result.y = ${i};
        --${r[this.rank-1]};
      }
    `,l=this.rank===1?"":`
      --${s[this.rank-1]};
      if (++${s[this.rank-2]} < ${e[this.rank-2]}) {
        ++${r[this.rank-2]};
        result.z = ${i};
        if (++${s[this.rank-1]} < ${e[this.rank-1]}) {
          ++${r[this.rank-1]};
          result.w = ${i};
        }
      }
    `,u=this.rank<=4?`sourceLoc = coords +
            ${n}(${e.map((c,h)=>`start[${h}]`).join()});`:e.map((c,h)=>`${r[h]} = ${s[h]} + start[${h}];`).join(`
`);this.userCode=`
      void main() {
        ${n} coords = getOutputCoords();
        ${n} sourceLoc;
        ${u}
        vec4 result = vec4(0.);
        ${a}
        ${l}
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ZY(t,e,n,s){const r=s.texData.get(t.dataId),o=s.makeTensorInfo(n,t.dtype),i=s.texData.get(o.dataId);Object.assign(i,r),i.refCount=1,i.shape=n,i.dtype=t.dtype;let a=z1(e,me(t.shape));r.slice&&(a+=r.slice.flatOffset),i.slice={flatOffset:a,origDataId:r.slice&&r.slice.origDataId||t.dataId};const l=s.dataRefCount.get(i.slice.origDataId)||1;return s.dataRefCount.set(i.slice.origDataId,l+1),o}function ul(t){const{inputs:e,backend:n,attrs:s}=t,{x:r}=e,{begin:o,size:i}=s,[a,l]=Ff(r,o,i);if(F1(r,a,l),H(l)===0)return n.makeTensorInfo(l,r.dtype,[]);if(n.shouldExecuteOnCPU([r])||r.dtype==="string"){const h=n.texData.get(r.dataId),d=H7(h.values,a,l,r.shape,r.dtype);return n.makeTensorInfo(l,r.dtype,d)}const{isPacked:u}=n.texData.get(r.dataId),c=P1(r.shape,a,l);if(u||!c){const h=U().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new QY(l):new XY(l),d=[a];return n.runWebGLProgram(h,[r],r.dtype,d)}return n.uploadToGPU(r.dataId),ZY(r,a,l,n)}const JY={kernelName:sf,backendName:"webgl",kernelFunc:ul};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const eQ=t=>{const{inputs:e,backend:n,attrs:s}=t,{x:r}=e,{blockShape:o,crops:i}=s;C(r.shape.length<=4,()=>"batchToSpaceND for rank > 4 with a WebGL backend not implemented yet");const a=o.reduce((x,b)=>x*b),l=Fc(r.shape,o,a),u=Lc(l.length,o.length),c=Pc(r.shape,o,a),h=U1(i,o.length),d=G1(c,i,o.length),p=[],f=oe({inputs:{x:r},backend:n,attrs:{shape:l}}),m=cn({inputs:{x:f},backend:n,attrs:{perm:u}}),y=oe({inputs:{x:m},backend:n,attrs:{shape:c}}),g=ul({inputs:{x:y},backend:n,attrs:{begin:h,size:d}});return p.push(f),p.push(m),p.push(y),p.forEach(x=>n.disposeIntermediateTensorInfo(x)),g},tQ={kernelName:yp,backendName:"webgl",kernelFunc:eQ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nQ(t){const{inputs:e,backend:n,attrs:s}=t,{x:r,weights:o}=e,{size:i}=s,a=n.readSync(r.dataId),l=n.readSync(o.dataId),u=wD(a,l,o.dtype,o.shape,i);return n.makeTensorInfo([i],o.dtype,u)}const sQ={kernelName:H0,backendName:"webgl",kernelFunc:nQ};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rQ(t){const{inputs:e,backend:n}=t,{s0:s,s1:r}=e,o=n.readSync(s.dataId),i=n.readSync(r.dataId),a=we(Array.from(o),Array.from(i));return n.makeTensorInfo([a.length],"int32",Int32Array.from(a))}const oQ={kernelName:j0,backendName:"webgl",kernelFunc:rQ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const iQ="return float(a != b);",OD=Xt({opSnippet:iQ,cpuKernelImpl:L7,dtype:"bool"}),aQ={kernelName:Hp,backendName:"webgl",kernelFunc:OD};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Zc(t){const{inputs:e,backend:n}=t,{input:s}=e,r=n.texData.get(s.dataId);return Bn({inputs:{x:r.complexTensorInfos.real},backend:n})}const lQ={kernelName:Nx,backendName:"webgl",kernelFunc:Zc};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const uQ="return float(int(x));";function cQ(t,e){const n=new cr(t.shape,uQ),s=e.runWebGLProgram(n,[t],"int32");return{dataId:s.dataId,shape:s.shape,dtype:s.dtype}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Vy(t){const{inputs:e,backend:n,attrs:s}=t,{x:r}=e,{dtype:o}=s;if(o==="complex64"){if(r.dtype==="complex64")return Bn({inputs:{x:r},backend:n});const i=kt(r.shape),a=Vy({inputs:{x:r},backend:n,attrs:{dtype:"float32"}}),l=jo({inputs:{real:a,imag:i},backend:n});return i.dispose(),n.disposeIntermediateTensorInfo(a),l}if(r.dtype==="complex64"){const i=Zc({inputs:{input:r},backend:n}),a=Vy({inputs:{x:i},backend:n,attrs:{dtype:o}});return n.disposeIntermediateTensorInfo(i),a}if(!JC(r.dtype,o)){const i=Bn({inputs:{x:r},backend:n});return{dataId:i.dataId,shape:i.shape,dtype:o}}if(n.shouldExecuteOnCPU([r])){const i=n.texData.get(r.dataId).values,[a,l,u]=g7(i,r.shape,r.dtype,o);return n.makeTensorInfo(a,l,u)}if(o==="int32")return cQ(r,n);if(o==="bool"){const i=n.makeTensorInfo([],"bool",zt("bool",1)),l=OD({inputs:{a:r,b:i},backend:n});return n.disposeIntermediateTensorInfo(i),l}throw new Error(`Error in Cast: failed to cast ${r.dtype} to ${o}`)}const hQ={kernelName:Lu,backendName:"webgl",kernelFunc:Vy};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Tk="return ceil(x);",dQ=Oe({opSnippet:Tk,packedOpSnippet:Tk,cpuKernelImpl:y7}),pQ={kernelName:Pu,backendName:"webgl",kernelFunc:dQ};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class fQ{constructor(e){this.variableNames=["A"],this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=e,this.userCode=`

      void main() {
        float value = getAAtOutCoords();
        if (isnan(value)) {
          setOutput(value);
          return;
        }

        setOutput(clamp(value, minVal, maxVal));
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class mQ{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=e,this.userCode=`
      void main() {
        vec4 value = getAAtOutCoords();

        if (any(isnan(value))) {
          setOutput(value);
          return;
        }

        setOutput(clamp(value, vec4(minVal), vec4(maxVal)));
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gQ(t){const{inputs:e,backend:n,attrs:s}=t,{x:r}=e,{clipValueMin:o,clipValueMax:i}=s;let a;U().getBool("WEBGL_PACK_CLIP")?a=new mQ(r.shape):a=new fQ(r.shape);const l=[[o],[i]];return n.runWebGLProgram(a,[r],r.dtype,l)}const yQ={kernelName:zu,backendName:"webgl",kernelFunc:gQ};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class xQ{constructor(e){this.variableNames=["real","imag"],this.outputShape=e,this.userCode=`
      void main() {
        float re = abs(getRealAtOutCoords());
        float im = abs(getImagAtOutCoords());
        float mx = max(re, im);

        // sadly the length function in glsl is not underflow-safe
        // (at least not on Intel GPUs). So the safe solution is
        // to ensure underflow-safety in all cases.
        setOutput(
          mx == 0.0 ? 0.0 : mx * length(vec2(1, min(re, im)/mx))
        );
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ek(t,e){return{dataId:e.dataId,dtype:e.dtype,shape:t.shape}}function bQ(t){const{inputs:e,backend:n}=t,{x:s}=e,r=n.texData.get(s.dataId),o=new xQ(s.shape),i=[Ek(s,r.complexTensorInfos.real),Ek(s,r.complexTensorInfos.imag)];return n.runWebGLProgram(o,i,i[0].dtype)}const wQ={kernelName:xp,backendName:"webgl",kernelFunc:bQ};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class vQ{constructor(e){this.outputShape=[],this.outputShape=mr(e,1),this.variableNames=e.map((i,a)=>`T${a}`);const n=new Array(e.length-1);n[0]=e[0][1];for(let i=1;i<n.length;i++)n[i]=n[i-1]+e[i][1];const s=[`if (yC < ${n[0]}) setOutput(getT0(yR, yC));`];for(let i=1;i<n.length;i++){const a=n[i-1];s.push(`else if (yC < ${n[i]}) setOutput(getT${i}(yR, yC-${a}));`)}const r=n.length,o=n[n.length-1];s.push(`else setOutput(getT${r}(yR, yC-${o}));`),this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int yR = coords.x;
        int yC = coords.y;

        ${s.join(`
        `)}
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class kQ{constructor(e,n){this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[],this.outputShape=mr(e,n);const s=this.outputShape,r=s.length,o=Ke(r),i=ln("coords",r),a=["x","y","z","w","u","v"].slice(0,r);this.variableNames=e.map((m,y)=>`T${y}`);const l=new Array(e.length-1);l[0]=e[0][n];for(let m=1;m<l.length;m++)l[m]=l[m-1]+e[m][n];const u=a[n],c=a.slice(-2),h=a.join();let d=`if (${u} < ${l[0]}) {
        return getChannel(
            getT0(${h}), vec2(${c.join()}));
        }`;for(let m=1;m<l.length;m++){const y=l[m-1];d+=`
        if (${u} < ${l[m]}  && ${u} >= ${l[m-1]}) {
          return getChannel(
            getT${m}(${Rh(a,u,y)}),
            vec2(${Rh(c,u,y)}));
        }`}const p=l.length,f=l[l.length-1];d+=`
        return getChannel(
          getT${p}(${Rh(a,u,f)}),
          vec2(${Rh(c,u,f)}));`,this.userCode=`
      float getValue(${a.map(m=>"int "+m)}) {
        ${d}
      }

      void main() {
        ${o} coords = getOutputCoords();
        vec4 result = vec4(getValue(${i}), 0., 0., 0.);

        ${i[r-1]} = ${i[r-1]} + 1;
        if (${i[r-1]} < ${s[r-1]}) {
          result.g = getValue(${i});
        }

        ${i[r-2]} = ${i[r-2]} + 1;
        if (${i[r-2]} < ${s[r-2]}) {
          result.a = getValue(${i});
        }

        ${i[r-1]} = ${i[r-1]} - 1;
        if (${i[r-2]} < ${s[r-2]} &&
            ${i[r-1]} < ${s[r-1]}) {
          result.b = getValue(${i});
        }
        setOutput(result);
      }
    `}}function Rh(t,e,n){const s=t.indexOf(e);return t.map((o,i)=>i===s?`${o} - ${n}`:o).join()}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tm(t){const{inputs:e,backend:n}=t,{input:s}=e,r=n.texData.get(s.dataId);return Bn({inputs:{x:r.complexTensorInfos.imag},backend:n})}const SQ={kernelName:hx,backendName:"webgl",kernelFunc:tm};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _l(t,e,n){const s=t[0].dtype;if(s==="complex64"){const p=t.map(x=>Zc({inputs:{input:x},backend:n})),f=t.map(x=>tm({inputs:{input:x},backend:n})),m=_l(p,e,n),y=_l(f,e,n),g=jo({inputs:{real:m,imag:y},backend:n});return p.forEach(x=>n.disposeIntermediateTensorInfo(x)),f.forEach(x=>n.disposeIntermediateTensorInfo(x)),n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(y),g}let r=n.shouldExecuteOnCPU(t);if(s==="string"&&(r=!0),r){const p=t.map(w=>{const S=[-1,H(w.shape.slice(e))];return oe({inputs:{x:w},backend:n,attrs:{shape:S}})}),f=p.map(w=>({vals:n.readSync(w.dataId),shape:w.shape})),m=mr(p.map(w=>w.shape),1),y=p[0].shape[0]===1,g=x7(f,m,s,y),x=mr(t.map(w=>w.shape),e),b=n.makeTensorInfo(x,s,g);return p.forEach(w=>n.disposeIntermediateTensorInfo(w)),b}const o=t.filter(p=>H(p.shape)>0),i=U().getBool("WEBGL_PACK_ARRAY_OPERATIONS")&&o[0].shape.length>1;if(o.length===1){const p=i?new cr(t[0].shape,Jr):new io(t[0].shape,Jr);return n.runWebGLProgram(p,t,s)}const a=U().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER");if(o.length>a){const p=[];for(let m=0;m<o.length;m+=a){const y=o.slice(m,m+a);p.push(_l(y,e,n))}const f=_l(p,e,n);for(const m of p)n.disposeIntermediateTensorInfo(m);return f}if(i){const p=new kQ(o.map(f=>f.shape),e);return n.runWebGLProgram(p,o,s)}const{tensors2D:l,outShape:u}=CQ(o,e,n),c=new vQ(l.map(p=>p.shape)),h=n.runWebGLProgram(c,l,s);l.forEach(p=>n.disposeIntermediateTensorInfo(p));const d=oe({inputs:{x:h},attrs:{shape:u},backend:n});return n.disposeIntermediateTensorInfo(h),d}function CQ(t,e,n){const s=mr(t.map(o=>o.shape),e);return{tensors2D:t.map(o=>oe({inputs:{x:o},attrs:{shape:[-1,H(o.shape.slice(e))]},backend:n})),outShape:s}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function FD(t){const{inputs:e,backend:n,attrs:s}=t,{axis:r}=s,o=$e(r,e[0].shape)[0],i=e.map(u=>u.shape);B1(i,o);const a=mr(e.map(u=>u.shape),o);if(H(a)===0)return n.makeTensorInfo(a,e[0].dtype,[]);const l=e.filter(u=>H(u.shape)>0);return l.length===1?Bn({inputs:{x:l[0]},backend:n}):_l(l,o,n)}const NQ={kernelName:bp,backendName:"webgl",kernelFunc:FD};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class LD{constructor(e,n=!1,s=null,r=!1,o=!1){this.variableNames=["x","W"],this.outputShape=e.outShape;const i=e.padInfo.top,a=e.padInfo.left,l=e.strideHeight,u=e.strideWidth,c=e.dilationHeight,h=e.dilationWidth,d=e.filterHeight,p=e.filterWidth,f=Math.floor(e.inChannels/4)*4,m=e.inChannels%4,y=e.dataFormat==="channelsLast",g=y?1:2,x=y?2:3,b=y?3:1;let w="",k="";s&&(r?w=`float activation(float a) {
          float b = getPreluActivationWeightsAtOutCoords();
          ${s}
        }`:o?w=`float activation(float a) {
          float b = getLeakyreluAlphaAtOutCoords();
          ${s}
        }`:w=`
          float activation(float x) {
            ${s}
          }
        `,k="result = activation(result);");const S=n?"result += getBiasAtOutCoords();":"";n&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),o&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
      ${w}

      const ivec2 strides = ivec2(${l}, ${u});
      const ivec2 pads = ivec2(${i}, ${a});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d2 = coords[${b}];

        ivec2 xRCCorner =
            ivec2(coords[${g}], coords[${x}]) * strides - pads;
        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        // Convolve x(?, ?, d1) with w(:, :, d1, d2) to get y(yR, yC, d2).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${d}; wR++) {
          int xR = xRCorner + wR * ${c};

          if (xR < 0 || xR >= ${e.inHeight}) {
            continue;
          }

          for (int wC = 0; wC < ${p}; wC++) {
            int xC = xCCorner + wC * ${h};

            if (xC < 0 || xC >= ${e.inWidth}) {
              continue;
            }

            for (int d1 = 0; d1 < ${f}; d1 += 4) {
              vec4 wValues = vec4(
                getW(wR, wC, d1, d2),
                getW(wR, wC, d1 + 1, d2),
                getW(wR, wC, d1 + 2, d2),
                getW(wR, wC, d1 + 3, d2)
              );

              if (${y}) {
                vec4 xValues = vec4(
                  getX(batch, xR, xC, d1),
                  getX(batch, xR, xC, d1 + 1),
                  getX(batch, xR, xC, d1 + 2),
                  getX(batch, xR, xC, d1 + 3)
                );
                dotProd += dot(xValues, wValues);
              } else {
                vec4 xValues = vec4(
                  getX(batch, d1, xR, xC),
                  getX(batch, d1 + 1, xR, xC),
                  getX(batch, d1 + 2, xR, xC),
                  getX(batch, d1 + 3, xR, xC)
                );
                dotProd += dot(xValues, wValues);
              }
            }

            if (${m===1}) {

              if (${y}) {
                dotProd +=
                    getX(batch, xR, xC, ${f}) *
                    getW(wR, wC, ${f}, d2);
              } else {
                dotProd +=
                    getX(batch, ${f}, xR, xC) *
                    getW(wR, wC, ${f}, d2);
              }

            } else if (${m===2}) {
              vec2 wValues = vec2(
                getW(wR, wC, ${f}, d2),
                getW(wR, wC, ${f} + 1, d2)
              );

              if (${y}) {
                vec2 xValues = vec2(
                  getX(batch, xR, xC, ${f}),
                  getX(batch, xR, xC, ${f} + 1)
                );
                dotProd += dot(xValues, wValues);
              } else {
                vec2 xValues = vec2(
                  getX(batch, ${f}, xR, xC),
                  getX(batch, ${f} + 1, xR, xC)
                );
                dotProd += dot(xValues, wValues);
              }

            } else if (${m===3}) {
              vec3 wValues = vec3(
                getW(wR, wC, ${f}, d2),
                getW(wR, wC, ${f} + 1, d2),
                getW(wR, wC, ${f} + 2, d2)
              );

              if (${y}) {
                vec3 xValues = vec3(
                  getX(batch, xR, xC, ${f}),
                  getX(batch, xR, xC, ${f} + 1),
                  getX(batch, xR, xC, ${f} + 2)
                );
                dotProd += dot(xValues, wValues);
              } else {
                vec3 xValues = vec3(
                  getX(batch, ${f}, xR, xC),
                  getX(batch, ${f} + 1, xR, xC),
                  getX(batch, ${f} + 2, xR, xC)
                );
                dotProd += dot(xValues, wValues);
              }

            }
          }
        }

        float result = dotProd;
        ${S}
        ${k}
        setOutput(result);
      }
    `}}class $Q{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;const n=e.padInfo.front,s=e.padInfo.top,r=e.padInfo.left,o=e.strideDepth,i=e.strideHeight,a=e.strideWidth,l=e.dilationDepth,u=e.dilationHeight,c=e.dilationWidth,h=e.filterDepth,d=e.filterHeight,p=e.filterWidth,f=Math.floor(e.inChannels/4)*4,m=e.inChannels%4;this.userCode=`
      const ivec3 strides = ivec3(${o}, ${i}, ${a});
      const ivec3 pads = ivec3(${n}, ${s}, ${r});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int d2 = coords.u;

        ivec3 xFRCCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;
        int xFCorner = xFRCCorner.x;
        int xRCorner = xFRCCorner.y;
        int xCCorner = xFRCCorner.z;

        // Convolve x(?, ?, ?, d1) with w(:, :, :, d1, d2) to get
        // y(yF, yR, yC, d2). ? = to be determined. : = across all
        // values in that axis.
        float dotProd = 0.0;
        for (int wF = 0; wF < ${h}; wF++) {
          int xF = xFCorner + wF * ${l};

          if (xF < 0 || xF >= ${e.inDepth}) {
            continue;
          }

          for (int wR = 0; wR < ${d}; wR++) {
            int xR = xRCorner + wR * ${u};

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int wC = 0; wC < ${p}; wC++) {
              int xC = xCCorner + wC * ${c};

              if (xC < 0 || xC >= ${e.inWidth}) {
                continue;
              }

              for (int d1 = 0; d1 < ${f}; d1 += 4) {
                vec4 xValues = vec4(
                  getX(batch, xF, xR, xC, d1),
                  getX(batch, xF, xR, xC, d1 + 1),
                  getX(batch, xF, xR, xC, d1 + 2),
                  getX(batch, xF, xR, xC, d1 + 3)
                );
                vec4 wValues = vec4(
                  getW(wF, wR, wC, d1, d2),
                  getW(wF, wR, wC, d1 + 1, d2),
                  getW(wF, wR, wC, d1 + 2, d2),
                  getW(wF, wR, wC, d1 + 3, d2)
                );

                dotProd += dot(xValues, wValues);
              }

              if (${m===1}) {
                dotProd +=
                  getX(batch, xF, xR, xC, ${f}) *
                  getW(wF, wR, wC, ${f}, d2);
              } else if (${m===2}) {
                vec2 xValues = vec2(
                  getX(batch, xF, xR, xC, ${f}),
                  getX(batch, xF, xR, xC, ${f} + 1)
                );
                vec2 wValues = vec2(
                  getW(wF, wR, wC, ${f}, d2),
                  getW(wF, wR, wC, ${f} + 1, d2)
                );
                dotProd += dot(xValues, wValues);
              } else if (${m===3}) {
                vec3 xValues = vec3(
                  getX(batch, xF, xR, xC, ${f}),
                  getX(batch, xF, xR, xC, ${f} + 1),
                  getX(batch, xF, xR, xC, ${f} + 2)
                );
                vec3 wValues = vec3(
                  getW(wF, wR, wC, ${f}, d2),
                  getW(wF, wR, wC, ${f} + 1, d2),
                  getW(wF, wR, wC, ${f} + 2, d2)
                );
                dotProd += dot(xValues, wValues);
              }
            }
          }
        }
        setOutput(dotProd);
      }
    `}}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class PD{constructor(e,n=!1,s=null,r=!1,o=!1){this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=pn(this.outputShape.length);const i=e.padInfo.left,a=e.strideWidth,l=e.dilationWidth,u=e.filterHeight,c=e.filterWidth,h=c;let d=`
       int xR; int xC; int xCOffset;
       vec4 wTexel; vec4 previous; vec4 final;`;for(let y=0;y<c;y++)d+=`
           vec4 xTexelC${y*2};
           int xTexelC${y*2}Ready;
           vec4 xTexelC${y*2+1};
           int xTexelC${y*2+1}Ready;
           vec4 xC${y};`;d+=`
     for (int r = 0; r < ${u}; r++) {
      for (int d1 = 0; d1 < ${e.inChannels}; d1 += 2) {
       `;for(let y=0;y<c;y++)d+=`
           xTexelC${y*2} = vec4(0.0);
           xTexelC${y*2}Ready = 0;
           xTexelC${y*2+1} = vec4(0.0);
           xTexelC${y*2+1}Ready = 0;
           xC${y} = vec4(0.0);`;d+=`
         xR = xRCorner + r * dilations[0];
         if (xR >=0 && xR < inDims[0]) {
       `;for(let y=0;y<(h+1)/2;y++){const g=y*2;if(d+=`
           xC = xCCorner + ${g*l};
           `,a===1){if(g<c&&(i%2===1?(d+=`
                 xCOffset = xC + 1;
                 if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${g}Ready == 0) {
                   xTexelC${g} = getX(batch, xR, xCOffset, d1);

                   // Need to manually clear unused channels in case
                   // we're reading from recycled texture.
                   if (xCOffset + 1 >= inDims[1]) {
                     xTexelC${g}.zw = vec2(0.0);
                   }
                   xTexelC${g}Ready = 1;
                 }
               `,l===1&&g>0?d+=`
                 xC${g} = vec4(xTexelC${g-2}.zw, xTexelC${g}.xy);
                 `:d+=`
                   xCOffset = xC + 1 - 2;

                   if (xCOffset >= 0 && xCOffset < inDims[1]) {
                     previous = getX(batch, xR, xCOffset, d1);

                     // Need to manually clear unused channels in case
                     // we're reading from recycled texture.
                     if (xCOffset + 1 >= inDims[1]) {
                       previous.zw = vec2(0.0);
                     }

                     xC${g} = vec4(previous.zw, xTexelC${g}.xy);
                   } else {
                     xC${g} = vec4(0.0, 0.0, xTexelC${g}.xy);
                   }
                   `):d+=`
                 if (xC >= 0 && xC < inDims[1] && xTexelC${g}Ready == 0) {
                   xTexelC${g} = getX(batch, xR, xC, d1);
                   if (xC + 1 >= inDims[1]) {
                     xTexelC${g}.zw = vec2(0.0);
                   }
                   xTexelC${g}Ready = 1;
                 }

                 xC${g} = xTexelC${g};
                 `,g+1<c)){const x=i%2===0?z0(l):l;l%2===0&&i%2===1||l%2!==0&&i%2!==1?(d+=`
                   xCOffset = xC + imod(pads[1], 2) + ${x};

                   if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${g+1}Ready == 0) {
                     xTexelC${g+1} = getX(batch, xR, xCOffset, d1);

                     // Need to manually clear unused channels in case
                     // we're reading from recycled texture.
                     if (xCOffset + 1 >= inDims[1]) {
                       xTexelC${g+1}.zw = vec2(0.0);
                     }
                     xTexelC${g+1}Ready = 1;
                   }
                   `,l>1?d+=`
                     xCOffset -= 2;
                     if (xCOffset >= 0 && xCOffset < inDims[1]) {
                      previous = getX(batch, xR, xCOffset, d1);
                      xC${g+1} = vec4(previous.zw, xTexelC${g+1}.xy);
                     } else {
                      xC${g+1} = vec4(0.0, 0.0, xTexelC${g+1}.xy);
                     }
                     `:d+=`
                     xC${g+1} = vec4(xTexelC${g}.zw, xTexelC${g+1}.xy);
                     `):x===1?d+=`
                     xC${g+1} = xTexelC${g};
                     `:d+=`
                     xCOffset = xC + ${x};

                     if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${g+1}Ready == 0) {
                       xTexelC${g+1} = getX(batch, xR, xCOffset, d1);
                       if (xCOffset + 1 >= inDims[1]) {
                         xTexelC${g+1}.zw = vec2(0.0);
                       }
                       xTexelC${g+1}Ready = 1;
                     }

                     xC${g+1} = xTexelC${g+1};
                     `}}else g<c&&(i%2===1?(d+=`
                 xCOffset = xC + 1 - strides[1];
                 if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${g}Ready == 0) {
                   xTexelC${g} = getX(batch, xR, xCOffset, d1);
                   // Need to manually clear unused channels in case
                   // we're reading from recycled texture.
                   if (xCOffset + 1 >= inDims[1]) {
                     xTexelC${g}.zw = vec2(0.0);
                   }
                   xTexelC${g}Ready = 1;
                 }

                 if(xC + 1 >= 0 && xC + 1 < inDims[1] && xTexelC${g+1}Ready == 0) {
                   xTexelC${g+1} = getX(batch, xR, xC + 1, d1);
                   // Need to manually clear unused channels in case
                   // we're reading from recycled texture.
                   if (xC + 2 >= inDims[1]) {
                     xTexelC${g+1}.zw = vec2(0.0);
                   }
                   xTexelC${g+1}Ready = 1;
                 }

                 xC${g} = vec4(xTexelC${g}.zw, xTexelC${g+1}.zw);
               `,g+1<c&&(d+=`
                   final = vec4(0.0);
                   xCOffset = xC + 1 + strides[1];
                   if(xCOffset >= 0 && xCOffset < inDims[1]) {
                     final = getX(batch, xR, xCOffset, d1);
                   }
                   xC${g+1} = vec4(xTexelC${g+1}.xy, final.xy);
                 `)):(d+=`
                 if(xC >= 0 && xC < inDims[1] && xTexelC${g}Ready == 0) {
                   xTexelC${g} = getX(batch, xR, xC, d1);
                   if (xC + 1 >= inDims[1]) {
                     xTexelC${g}.zw = vec2(0.0);
                   }
                   xTexelC${g}Ready = 1;
                 }

                 xCOffset = xC + strides[1];
                 if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${g+1}Ready == 0) {
                   xTexelC${g+1} = getX(batch, xR, xCOffset, d1);
                   if (xCOffset + 1 >= inDims[1]) {
                     xTexelC${g+1}.zw = vec2(0.);
                   }
                   xTexelC${g+1}Ready = 1;
                 }

                 xC${g} = vec4(
                   xTexelC${g}.xy, xTexelC${g+1}.xy);
               `,g+1<c&&(d+=`
                   xC${g+1} = vec4(xTexelC${g}.zw, xTexelC${g+1}.zw);
                 `)));g<c&&(d+=`
             wTexel = getW(r, ${g}, d1, d2);
             dotProd += xC${g}.xxzz * vec4(wTexel.xy, wTexel.xy);
             if(d1 + 1 < ${e.inChannels}) {
               dotProd += xC${g}.yyww * vec4(wTexel.zw, wTexel.zw);
             }
           `,g+1<c&&(d+=`
               wTexel = getW(r, ${g+1}, d1, d2);
               dotProd += xC${g+1}.xxzz * vec4(wTexel.xy, wTexel.xy);
               if(d1 + 1 < ${e.inChannels}) {
                 dotProd += xC${g+1}.yyww * vec4(wTexel.zw, wTexel.zw);
               }
             `))}d+=`
     }
   `,d+=`
     }
   `,d+=`
     }
   `;let p="",f="";s&&(r?p=`vec4 activation(vec4 a) {
           vec4 b = getPreluActivationWeightsAtOutCoords();
           ${s}
         }`:o?p=`vec4 activation(vec4 a) {
           vec4 b = getLeakyreluAlphaAtOutCoords();
           ${s}
         }`:p=`vec4 activation(vec4 x) {
           ${s}
         }`,f="result = activation(result);");const m=n?"result += getBiasAtOutCoords();":"";n&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),o&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
       ${p}

       void main() {
         ivec4 coords = getOutputCoords();
         int batch = coords.x;
         ivec2 xRCCorner = coords.yz * strides - pads;
         int d2 = coords.w;
         int xRCorner = xRCCorner.x;
         int xCCorner = xRCCorner.y;

         //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.
         vec4 dotProd = vec4(0.000000000000001);

         ${d}

         vec4 result = dotProd - vec4(0.000000000000001);
         ${m}
         ${f}
         setOutput(result);
       }
     `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class IQ{constructor(e,n){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec4"},{name:"pad",type:"ivec2"},{name:"stride",type:"ivec2"},{name:"dilation",type:"ivec2"},{name:"inChannels",type:"int"},{name:"itemsPerBlockRow",type:"int"},{name:"outWidth",type:"int"}],this.outputShape=e,this.enableShapeUniforms=pn(this.outputShape.length);const{dataFormat:s}=n,r=dn(),o=s==="channelsLast",i=o?1:2,a=o?2:3,l=this.enableShapeUniforms?"if(blockIndex < outShape[2] && pos < outShape[1]) {":`if(blockIndex < ${e[2]} && pos < ${e[1]}) {`;let u="";for(let c=0;c<=1;c++)for(let h=0;h<=1;h++)u+=`
          blockIndex = rc.z + ${h};
          pos = rc.y + ${c};

          ${l}
            offsetY = int(blockIndex / outWidth) * stride[0] - pad[0];
            d0 = offsetY + dilation[0] * (pos / itemsPerBlockRow);

            if(d0 < inputShape[${i}] && d0 >= 0) {
              // Use custom imod instead mod. On Intel GPU, mod may generate
              // unexpected value.
              // https://github.com/tensorflow/tfjs/issues/5447
              offsetX = imod(blockIndex, outWidth) * stride[1] - pad[1];
              d1 = offsetX + dilation[1] * (imod(pos, itemsPerBlockRow) /
                  inChannels);

              if(d1 < inputShape[${a}] && d1 >= 0) {

                ch = imod(pos, inChannels);

                if (${o}) {
                  innerDims = vec2(d1, ch);
                  result[${c*2+h}] = getChannel(
                    getA(rc.x, d0, int(innerDims.x),
                    int(innerDims.y)), innerDims);
                } else {
                  innerDims = vec2(d0, d1);
                  result[${c*2+h}] = getChannel(
                    getA(rc.x, ch, int(innerDims.x),
                    int(innerDims.y)), innerDims);
                }
              }
            }
          }
        `;this.userCode=`
      void main() {
        ivec3 rc = getOutputCoords();

        vec4 result = vec4(0);

        int blockIndex, pos, offsetY, d0, offsetX, d1, ch;
        vec2 innerDims;

        ${u}

        ${r.output} = result;
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Kd(t,e){const n=t.length;return n>=3?e?[...t.slice(0,-3),t[n-3]*t[n-2],t[n-1]]:[...t.slice(0,-3),t[n-3],t[n-2]*t[n-1]]:!e&&n===1&&t[0]>1?[t[0],1]:null}function zD({x:t,filter:e,convInfo:n,backend:s,bias:r=null,preluActivationWeights:o=null,leakyreluAlpha:i=0,activation:a=null}){const l=t.shape,u=s.texData.get(t.dataId),c=n.inChannels,h=l[0]*l[1]*l[2],d=n.outChannels,p=n.dataFormat==="channelsLast",f=!1,m=!1;let y;const g=[];if(o!=null){const w=Kd(o.shape,p);w!=null&&(o=oe({inputs:{x:o},backend:s,attrs:{shape:w}}),g.push(o))}if(r!=null){const w=Kd(r.shape,p);w!=null&&(r=oe({inputs:{x:r},backend:s,attrs:{shape:w}}),g.push(r))}if(!((h===1||d===1)&&c>DD)&&u.isPacked&&p&&u.texture!=null&&l[2]%2!==0&&Ae(u.shape.slice(-3),l.slice(-3))){const w=l[0]*l[1]*(l[2]+1),k={dataId:t.dataId,shape:[1,w,n.inChannels],dtype:t.dtype},S=u.shape;u.shape=u.shape.slice(),u.shape[u.shape.length-2]++,C(Hd(u.shape,k.shape),()=>`packed reshape ${u.shape} to ${k.shape} isn't free`);const N=oe({inputs:{x:e},backend:s,attrs:{shape:[1,n.inChannels,n.outChannels]}});g.push(N);const $=jd({a:k,b:N,backend:s,transposeA:f,transposeB:m,bias:r,activation:a,preluActivationWeights:o,leakyreluAlpha:i}),T=s.texData.get($.dataId);C(T.isPacked,()=>"batchMatMul result is expected to be packed"),u.shape=S,T.shape=n.outShape,y=Bn({inputs:{x:$},backend:s}),y.shape=n.outShape,g.push($)}else{const w=n.outHeight*n.outWidth,k=oe({inputs:{x:t},backend:s,attrs:{shape:p?[n.batchSize,w,n.inChannels]:[n.batchSize,n.inChannels,w]}}),S=oe({inputs:{x:e},backend:s,attrs:{shape:[1,n.inChannels,n.outChannels]}}),N=jd({a:p?k:S,b:p?S:k,transposeA:!p,transposeB:m,backend:s,bias:r,activation:a,preluActivationWeights:o,leakyreluAlpha:i});y=oe({inputs:{x:N},backend:s,attrs:{shape:n.outShape}}),g.push(k),g.push(S),g.push(N)}for(const w of g)s.disposeIntermediateTensorInfo(w);return y}function MD({x:t,filter:e,convInfo:n,backend:s,bias:r=null,preluActivationWeights:o=null,leakyreluAlpha:i=0,activation:a=null}){const{filterWidth:l,filterHeight:u,inChannels:c,outWidth:h,outHeight:d,dataFormat:p}=n,f=p==="channelsLast",m=l*u*c,y=d*h,g=[n.batchSize,m,y],x=!0,b=!1,w=[];if(o!=null){const _=Kd(o.shape,f);_!=null&&(o=oe({inputs:{x:o},backend:s,attrs:{shape:_}}),w.push(o))}if(r!=null){const _=Kd(r.shape,f);_!=null&&(r=oe({inputs:{x:r},backend:s,attrs:{shape:_}}),w.push(r))}const k=oe({inputs:{x:e},backend:s,attrs:{shape:[1,m,H(e.shape)/m]}});w.push(k);const S=new IQ(g,n),N=[t.shape,[n.padInfo.top,n.padInfo.left],[n.strideHeight,n.strideWidth],[n.dilationHeight,n.dilationWidth],[n.inChannels],[n.filterWidth*n.inChannels],[n.outWidth]],$=s.runWebGLProgram(S,[t],"float32",N),T=oe({inputs:{x:$},backend:s,attrs:{shape:g}});w.push($),w.push(T);const E=r!=null,F=o!=null,M=a==="leakyrelu",B=a?bu(a,!0):null,V=new ED(f?T.shape:k.shape,f?k.shape:T.shape,f?[n.batchSize,y,n.outChannels]:[n.batchSize,n.outChannels,y],x,b,E,B,F,M),W=f?[T,k]:[k,T];if(r&&W.push(r),F&&W.push(o),M){const _=s.makeTensorInfo([],"float32",Lo(i,"float32"));W.push(_),w.push(_)}const G=s.runWebGLProgram(V,W,"float32"),q=oe({inputs:{x:G},backend:s,attrs:{shape:n.outShape}});w.push(G);for(const _ of w)s.disposeIntermediateTensorInfo(_);return q}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function TQ(t){const{inputs:e,backend:n,attrs:s}=t,{x:r,filter:o}=e,{strides:i,pad:a,dataFormat:l,dilations:u,dimRoundingMode:c}=s,h=Wr(l),d=Mt(r.shape,o.shape,i,u,a,c,!1,h);let p;if(d.filterHeight===1&&d.filterWidth===1&&d.dilationHeight===1&&d.dilationWidth===1&&d.strideHeight===1&&d.strideWidth===1&&(d.padInfo.type==="SAME"||d.padInfo.type==="VALID"))p=zD({x:r,filter:o,convInfo:d,backend:n});else if(d.strideWidth<=2&&h==="channelsLast"&&U().getBool("WEBGL_EXP_CONV")){const m=new PD(d),y=[[d.padInfo.top,d.padInfo.left],[d.strideHeight,d.strideWidth],[d.dilationHeight,d.dilationWidth],[d.inHeight,d.inWidth]];p=n.runWebGLProgram(m,[r,o],"float32",y)}else if(U().getBool("WEBGL_CONV_IM2COL"))p=MD({x:r,filter:o,convInfo:d,backend:n});else{const m=new LD(d);p=n.runWebGLProgram(m,[r,o],"float32")}const f=oe({inputs:{x:p},backend:n,attrs:{shape:d.outShape}});return n.disposeIntermediateTensorInfo(p),f}const EQ={kernelName:wp,backendName:"webgl",kernelFunc:TQ};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class DQ{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const n=e.strideHeight,s=e.strideWidth,r=e.padInfo.top,o=e.padInfo.left,i=e.dataFormat==="channelsLast";this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int wR = coords.x;
        int wC = coords.y;
        int d1 = coords.z;
        int d2 = coords.w;

        // Convolve x(?, ?, d1) with dy(:, :, d2) to get dw(wR, wC, d1, d2).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;

        for (int b = 0; b < ${e.batchSize}; b++) {
          for (int yR = 0; yR < ${e.outHeight}; yR++) {
            int xR = wR + yR * ${n} - ${r};

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int yC = 0; yC < ${e.outWidth}; yC++) {
              int xC = wC + yC * ${s} - ${o};

              if (xC < 0 || xC >= ${e.inWidth}) {
                continue;
              }

              if (${i}) {
                float dyValue = getDy(b, yR, yC, d2);
                float xValue = getX(b, xR, xC, d1);
                dotProd += (xValue * dyValue);
              } else {
                float dyValue = getDy(b, d2, yR, yC);
                float xValue = getX(b, d1, xR, xC);
                dotProd += (xValue * dyValue);
              }

            }
          }
        }
        setOutput(dotProd);
      }
    `}}class RQ{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const n=e.filterHeight,s=e.filterWidth,r=e.strideHeight,o=e.strideWidth,i=e.dataFormat==="channelsLast",a=n-1-e.padInfo.top,l=s-1-e.padInfo.left,u=i?1:2,c=i?2:3,h=i?3:1;this.userCode=`
      const ivec2 pads = ivec2(${a}, ${l});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d1 = coords[${h}];

        ivec2 dyCorner = ivec2(coords[${u}], coords[${c}]) - pads;
        int dyRCorner = dyCorner.x;
        int dyCCorner = dyCorner.y;

        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${n}; wR++) {
          float dyR = float(dyRCorner + wR) / ${r}.0;

          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          int wRPerm = ${n} - 1 - wR;

          for (int wC = 0; wC < ${s}; wC++) {
            float dyC = float(dyCCorner + wC) / ${o}.0;

            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            int wCPerm = ${s} - 1 - wC;

            for (int d2 = 0; d2 < ${e.outChannels}; d2++) {

              if (${i}) {
                float xValue = getDy(batch, idyR, idyC, d2);
                float wValue = getW(wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              } else {
                float xValue = getDy(batch, d2, idyR, idyC);
                float wValue = getW(wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              }

            }
          }
        }
        setOutput(dotProd);
      }
    `}}class AQ{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const n=e.strideDepth,s=e.strideHeight,r=e.strideWidth,o=e.padInfo.front,i=e.padInfo.top,a=e.padInfo.left;this.userCode=`
      void main() {
        ivec5 coords = getOutputCoords();
        int wF = coords.x;
        int wR = coords.y;
        int wC = coords.z;
        int d1 = coords.w;
        int d2 = coords.u;

        float dotProd = 0.0;

        for (int b = 0; b < ${e.batchSize}; b++) {
          for (int yF = 0; yF < ${e.outDepth}; yF++) {
            int xF = wF + yF * ${n} - ${o};

            if (xF < 0 || xF >= ${e.inDepth}) {
              continue;
            }

            for (int yR = 0; yR < ${e.outHeight}; yR++) {
              int xR = wR + yR * ${s} - ${i};

              if (xR < 0 || xR >= ${e.inHeight}) {
                continue;
              }

              for (int yC = 0; yC < ${e.outWidth}; yC++) {
                int xC = wC + yC * ${r} - ${a};

                if (xC < 0 || xC >= ${e.inWidth}) {
                  continue;
                }

                float dyValue = getDy(b, yF, yR, yC, d2);
                float xValue = getX(b, xF, xR, xC, d1);
                dotProd += (xValue * dyValue);
              }
            }
          }
        }
        setOutput(dotProd);
      }
    `}}class _Q{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const n=e.filterDepth,s=e.filterHeight,r=e.filterWidth,o=e.strideDepth,i=e.strideHeight,a=e.strideWidth,l=n-1-e.padInfo.front,u=s-1-e.padInfo.top,c=r-1-e.padInfo.left;this.userCode=`
      const ivec3 pads = ivec3(${l}, ${u}, ${c});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int d1 = coords.u;


        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;
        int dyFCorner = dyCorner.x;
        int dyRCorner = dyCorner.y;
        int dyCCorner = dyCorner.z;

        float dotProd = 0.0;
        for (int wF = 0; wF < ${n}; wF++) {
          float dyF = float(dyFCorner + wF) / ${o}.0;

          if (dyF < 0.0 || dyF >= ${e.outDepth}.0 || fract(dyF) > 0.0) {
            continue;
          }
          int idyF = int(dyF);

          int wFPerm = ${n} - 1 - wF;

          for (int wR = 0; wR < ${s}; wR++) {
            float dyR = float(dyRCorner + wR) / ${i}.0;

            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||
              fract(dyR) > 0.0) {
              continue;
            }
            int idyR = int(dyR);

            int wRPerm = ${s} - 1 - wR;

            for (int wC = 0; wC < ${r}; wC++) {
              float dyC = float(dyCCorner + wC) / ${a}.0;

              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                  fract(dyC) > 0.0) {
                continue;
              }
              int idyC = int(dyC);

              int wCPerm = ${r} - 1 - wC;

              for (int d2 = 0; d2 < ${e.outChannels}; d2++) {
                float xValue = getDy(batch, idyF, idyR, idyC, d2);
                float wValue = getW(wFPerm, wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              }
            }
          }
        }
        setOutput(dotProd);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function OQ(t){const{inputs:e,backend:n,attrs:s}=t,{x:r,dy:o}=e,{strides:i,pad:a,dataFormat:l,dimRoundingMode:u,filterShape:c}=s,h=Wr(l),d=Mt(r.shape,c,i,1,a,u,!1,h),p=new DQ(d);return n.runWebGLProgram(p,[r,o],"float32")}const FQ={kernelName:q0,backendName:"webgl",kernelFunc:OQ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function LQ(t){const{inputs:e,backend:n,attrs:s}=t,{dy:r,filter:o}=e,{inputShape:i,strides:a,pad:l,dataFormat:u,dimRoundingMode:c}=s,h=Wr(u),d=Mt(i,o.shape,a,1,l,c,!1,h),p=new RQ(d);return n.runWebGLProgram(p,[r,o],"float32")}const PQ={kernelName:vp,backendName:"webgl",kernelFunc:LQ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zQ(t){const{inputs:e,backend:n,attrs:s}=t,{x:r,filter:o}=e,{strides:i,pad:a,dilations:l}=s,u=Mo(r.shape,o.shape,i,l,a),c=new $Q(u);return n.runWebGLProgram(c,[r,o],"float32")}const MQ={kernelName:kp,backendName:"webgl",kernelFunc:zQ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function BQ(t){const{inputs:e,backend:n,attrs:s}=t,{x:r,dy:o}=e,{strides:i,pad:a,filterShape:l}=s,u=Mo(r.shape,l,i,1,a),c=new AQ(u);return n.runWebGLProgram(c,[r,o],"float32")}const VQ={kernelName:X0,backendName:"webgl",kernelFunc:BQ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function WQ(t){const{inputs:e,backend:n,attrs:s}=t,{dy:r,filter:o}=e,{pad:i,strides:a,inputShape:l}=s,u=Mo(l,o.shape,a,1,i),c=new _Q(u);return n.runWebGLProgram(c,[r,o],"float32")}const UQ={kernelName:Y0,backendName:"webgl",kernelFunc:WQ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const GQ=ll+`
  return cos(x);
`,HQ=Oe({opSnippet:GQ}),jQ={kernelName:Mu,backendName:"webgl",kernelFunc:HQ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const KQ=`
  float e2x = exp(-x);
  return (e2x + 1.0 / e2x) / 2.0;
`,qQ=Oe({opSnippet:KQ}),XQ={kernelName:Bu,backendName:"webgl",kernelFunc:qQ};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class YQ{constructor(e,n,s,r,o){this.variableNames=["Image","Boxes","BoxInd"],this.outputShape=[];const[i,a,l,u]=e,[c]=n,[h,d]=s;this.outputShape=[c,h,d,u];const p=r==="bilinear"?1:0,[f,m]=[`${a-1}.0`,`${l-1}.0`],[y,g,x]=h>1?[`${(a-1)/(h-1)}`,"(y2-y1) * height_ratio",`y1*${f} + float(y)*(height_scale)`]:["0.0","0.0",`0.5 * (y1+y2) * ${f}`],[b,w,k]=d>1?[`${(l-1)/(d-1)}`,"(x2-x1) * width_ratio",`x1*${m} + float(x)*(width_scale)`]:["0.0","0.0",`0.5 * (x1+x2) * ${m}`];this.userCode=`
      const float height_ratio = float(${y});
      const float width_ratio = float(${b});
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int y = coords[1];
        int x = coords[2];
        int d = coords[3];

        // get box vals
        float y1 = getBoxes(b,0);
        float x1 = getBoxes(b,1);
        float y2 = getBoxes(b,2);
        float x2 = getBoxes(b,3);

        // get image in batch index
        int bInd = round(getBoxInd(b));
        if(bInd < 0 || bInd >= ${i}) {
          return;
        }

        float height_scale = ${g};
        float width_scale = ${w};

        float in_y = ${x};
        if( in_y < 0.0 || in_y > ${f} ) {
          setOutput(float(${o}));
          return;
        }
        float in_x = ${k};
        if( in_x < 0.0 || in_x > ${m} ) {
          setOutput(float(${o}));
          return;
        }

        vec2 sourceFracIndexCR = vec2(in_x,in_y);
        if(${p} == 1) {
          // Compute the four integer indices.
          ivec2 sourceFloorCR = ivec2(sourceFracIndexCR);
          ivec2 sourceCeilCR = ivec2(ceil(sourceFracIndexCR));

          float topLeft = getImage(b, sourceFloorCR.y, sourceFloorCR.x, d);
          float bottomLeft = getImage(b, sourceCeilCR.y, sourceFloorCR.x, d);
          float topRight = getImage(b, sourceFloorCR.y, sourceCeilCR.x, d);
          float bottomRight = getImage(b, sourceCeilCR.y, sourceCeilCR.x, d);

          vec2 fracCR = sourceFracIndexCR - vec2(sourceFloorCR);

          float top = topLeft + (topRight - topLeft) * fracCR.x;
          float bottom = bottomLeft + (bottomRight - bottomLeft) * fracCR.x;
          float newValue = top + (bottom - top) * fracCR.y;
          setOutput(newValue);
        } else {
          // Compute the coordinators of nearest neighbor point.
          ivec2 sourceNearestCR = ivec2(floor(
            sourceFracIndexCR + vec2(0.5,0.5)));
          float newValue = getImage(b, sourceNearestCR.y, sourceNearestCR.x, d);
          setOutput(newValue);
        }
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const QQ=t=>{const{inputs:e,backend:n,attrs:s}=t,{image:r,boxes:o,boxInd:i}=e,{cropSize:a,method:l,extrapolationValue:u}=s,c=new YQ(r.shape,o.shape,a,l,u);return n.runWebGLProgram(c,[r,o,i],"float32")},ZQ={kernelName:Z0,backendName:"webgl",kernelFunc:QQ};var vu;(function(t){t.Prod="*",t.Sum="+"})(vu||(vu={}));class Dk{constructor(e,n,s,r){this.op=e,this.outputShape=n,this.variableNames=["x"],this.customUniforms=[{name:"index",type:"float"}];const o=this.outputShape.length,i=this.op===vu.Prod?"1.0":"0.0",a=s?i:`getX(${Rk(o,"coords",this.op)})`,l=this.outputShape[this.outputShape.length-1];let u="",c="";s?(u=r?`end != ${l-1}`:"end != 0",c=r?"end + 1":"end - 1"):(u=r?`end + pow2 < ${l}`:"end >= pow2",c=r?"end + pow2":"end - pow2"),this.userCode=`
      void main() {
        ${Ke(o)} coords = getOutputCoords();
        int end = ${Ak(o,"coords",this.op)};
        float val = ${a};
        int pow2 = int(pow(2.0, index));
        if (${u}) {
          int idx = ${c};
          ${Ak(o,"coords",this.op)} = idx;
          val ${this.op}= getX(${Rk(o,"coords",this.op)});
        }
        setOutput(val);
      }
    `}}function Rk(t,e,n){if(t===1)return`${e}`;if(t===2)return`${e}.x, ${e}.y`;if(t===3)return`${e}.x, ${e}.y, ${e}.z`;if(t===4)return`${e}.x, ${e}.y, ${e}.z, ${e}.w`;throw new Error(`Cumulative ${n} for rank ${t} is not yet supported`)}function Ak(t,e,n){if(t===1)return`${e}`;if(t===2)return`${e}.y`;if(t===3)return`${e}.z`;if(t===4)return`${e}.w`;throw new Error(`Cumulative ${n} for rank ${t} is not yet supported`)}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function BD(t,e,n,s,r,o){const i=e.shape.length,a=ut([s],i);let l=e;a!=null&&(l=cn({inputs:{x:e},backend:n,attrs:{perm:a}}));const u=bt(1,i)[0];if(u!==i-1)throw new Error(`WebGL cumprod shader expects an inner-most axis=${e.shape.length-1} but got axis=${s}`);const c=l.shape[u];let h=Bn({inputs:{x:l},backend:n});for(let d=0;d<=Math.ceil(Math.log2(c))-1;d++){const p=new Dk(t,l.shape,!1,o),f=[[d]],m=h;h=n.runWebGLProgram(p,[h],h.dtype,f),n.disposeIntermediateTensorInfo(m)}if(r){const d=new Dk(t,l.shape,r,o),p=h;h=n.runWebGLProgram(d,[h],h.dtype),n.disposeIntermediateTensorInfo(p)}if(a!=null){const d=Bo(a),p=cn({inputs:{x:h},backend:n,attrs:{perm:d}});return n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(l),p}return h}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function JQ(t){const{inputs:e,backend:n,attrs:s}=t,{x:r}=e,{axis:o,exclusive:i,reverse:a}=s;return BD(vu.Prod,r,n,o,i,a)}const eZ={kernelName:Q0,backendName:"webgl",kernelFunc:JQ};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tZ(t){const{inputs:e,backend:n,attrs:s}=t,{x:r}=e,{axis:o,exclusive:i,reverse:a}=s;return BD(vu.Sum,r,n,o,i,a)}const nZ={kernelName:Sp,backendName:"webgl",kernelFunc:tZ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sZ(t){const{inputs:e,backend:n,attrs:s}=t,{x:r,weights:o}=e,{size:i,binaryOutput:a}=s;if(r.shape.length===1){const l=n.readSync(r.dataId),u=n.readSync(o.dataId),c=wD(l,u,o.dtype,o.shape,i);return n.makeTensorInfo([i],o.dtype,c)}else if(r.shape.length===2){const l=n.bufferSync(r),u=n.bufferSync(o),c=m7(l,u,i,a);return n.makeTensorInfo(c.shape,o.dtype,c.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${r.shape.length}.`)}const rZ={kernelName:J0,backendName:"webgl",kernelFunc:sZ};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class oZ{constructor(e,n,s){this.variableNames=["x"],this.outputShape=[],this.outputShape=e,this.blockSize=n,this.dataFormat=s,this.userCode=`
    void main() {
      ivec4 coords = getOutputCoords();
      int b = coords[0];
      int h = ${this.getHeightCoordString()};
      int w = ${this.getWidthCoordString()};
      int d = ${this.getDepthCoordString()};

      int in_h = h / ${n};
      int offset_h = imod(h, ${n});
      int in_w = w / ${n};
      int offset_w = imod(w, ${n});
      int offset_d = (offset_h * ${n} + offset_w) *
        ${this.getOutputDepthSize()};
      int in_d = d + offset_d;

      float result = ${this.getInputSamplingString()};
      setOutput(result);
    }
  `}getHeightCoordString(){return this.dataFormat==="NHWC"?"coords[1]":"coords[2]"}getWidthCoordString(){return this.dataFormat==="NHWC"?"coords[2]":"coords[3]"}getDepthCoordString(){return this.dataFormat==="NHWC"?"coords[3]":"coords[1]"}getOutputDepthSize(){return this.dataFormat==="NHWC"?this.outputShape[3]:this.outputShape[1]}getInputSamplingString(){return this.dataFormat==="NHWC"?"getX(b, in_h, in_w, in_d)":"getX(b, in_d, in_h, in_w)"}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function iZ(t){const{inputs:e,backend:n,attrs:s}=t,{x:r}=e,{blockSize:o,dataFormat:i}=s,a=r.shape[0],l=i==="NHWC"?r.shape[1]:r.shape[2],u=i==="NHWC"?r.shape[2]:r.shape[3],c=i==="NHWC"?r.shape[3]:r.shape[1],h=l*o,d=u*o,p=c/(o*o),f=i==="NHWC"?[a,h,d,p]:[a,p,h,d],m=new oZ(f,o,i);return n.runWebGLProgram(m,[r],r.dtype)}const aZ={kernelName:ex,backendName:"webgl",kernelFunc:iZ};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class VD{constructor(e,n=!1,s=null,r=!1,o=!1){this.variableNames=["x","W"],this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=pn(this.outputShape.length);const i=e.filterHeight,a=e.filterWidth,l=e.outChannels/e.inChannels;let u="",c="";s&&(r?u=`float activation(float a) {
          float b = getPreluActivationWeightsAtOutCoords();
          ${s}
        }`:o?u=`float activation(float a) {
          float b = getLeakyreluAlphaAtOutCoords();
          ${s}
        }`:u=`
          float activation(float x) {
            ${s}
          }
        `,c="result = activation(result);");const h=n?"result += getBiasAtOutCoords();":"";n&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),o&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
      ${u}

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords.x;
        ivec2 xRCCorner = coords.yz * strides - pads;
        int d2 = coords.w;
        int d1 = d2 / ${l};
        int q = d2 - d1 * ${l};

        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        // Convolve x(?, ?, d1) with w(:, :, d1, q) to get y(yR, yC, d2).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        // TO DO(dsmilkov): Flatten the two for loops and vec4 the operations.
        for (int wR = 0; wR < ${i}; wR++) {
          int xR = xRCorner + wR * dilations[0];

          if (xR < 0 || xR >= inDims[0]) {
            continue;
          }

          for (int wC = 0; wC < ${a}; wC++) {
            int xC = xCCorner + wC * dilations[1];

            if (xC < 0 || xC >= inDims[1]) {
              continue;
            }

            float xVal = getX(batch, xR, xC, d1);
            float wVal = getW(wR, wC, d1, q);
            dotProd += xVal * wVal;
          }
        }

        float result = dotProd;
        ${h}
        ${c}
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class WD{constructor(e,n=!1,s=null,r=!1,o=!1){this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=pn(this.outputShape.length);const i=e.outChannels/e.inChannels,a=e.padInfo.left,l=e.strideWidth,u=e.dilationWidth,c=e.filterHeight,h=e.filterWidth,d=h;let p=`
      int xR; int xC; int xCOffset;
      vec4 wTexel; vec4 previous; vec4 final;`;for(let g=0;g<h;g++)p+=`
          vec4 xTexelC${g*2};
          int xTexelC${g*2}Ready;
          vec4 xTexelC${g*2+1};
          int xTexelC${g*2+1}Ready;
          vec4 xC${g};`;p+=`
    for (int r = 0; r < ${c}; r++) {
      `;for(let g=0;g<h;g++)p+=`
          xTexelC${g*2} = vec4(0.0);
          xTexelC${g*2}Ready = 0;
          xTexelC${g*2+1} = vec4(0.0);
          xTexelC${g*2+1}Ready = 0;
          xC${g} = vec4(0.0);`;p+=`
        xR = xRCorner + r * dilations[0];
        if (xR >=0 && xR < inDims[0]) {
      `;for(let g=0;g<(d+1)/2;g++){const x=g*2;if(p+=`
          xC = xCCorner + ${x*u};
          `,l===1){if(x<h&&(a%2===1?(p+=`
                xCOffset = xC + 1;
                if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${x}Ready == 0) {
                  xTexelC${x} = getX(batch, xR, xCOffset, d1);

                  // Need to manually clear unused channels in case
                  // we're reading from recycled texture.
                  if (xCOffset + 1 >= inDims[1]) {
                    xTexelC${x}.zw = vec2(0.0);
                  }
                  xTexelC${x}Ready = 1;
                }
              `,u===1&&x>0?p+=`
                xC${x} = vec4(xTexelC${x-2}.zw, xTexelC${x}.xy);
                `:p+=`
                  xCOffset = xC + 1 - 2;

                  if (xCOffset >= 0 && xCOffset < inDims[1]) {
                    previous = getX(batch, xR, xCOffset, d1);

                    // Need to manually clear unused channels in case
                    // we're reading from recycled texture.
                    if (xCOffset + 1 >= inDims[1]) {
                      previous.zw = vec2(0.0);
                    }

                    xC${x} = vec4(previous.zw, xTexelC${x}.xy);
                  } else {
                    xC${x} = vec4(0.0, 0.0, xTexelC${x}.xy);
                  }
                  `):p+=`
                if (xC >= 0 && xC < inDims[1] && xTexelC${x}Ready == 0) {
                  xTexelC${x} = getX(batch, xR, xC, d1);
                  if (xC + 1 >= inDims[1]) {
                    xTexelC${x}.zw = vec2(0.0);
                  }
                  xTexelC${x}Ready = 1;
                }

                xC${x} = xTexelC${x};
                `,x+1<h)){const b=a%2===0?z0(u):u;u%2===0&&a%2===1||u%2!==0&&a%2!==1?(p+=`
                  xCOffset = xC + imod(pads[1], 2) + ${b};

                  if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${x+1}Ready == 0) {
                    xTexelC${x+1} = getX(batch, xR, xCOffset, d1);

                    // Need to manually clear unused channels in case
                    // we're reading from recycled texture.
                    if (xCOffset + 1 >= inDims[1]) {
                      xTexelC${x+1}.zw = vec2(0.0);
                    }
                    xTexelC${x+1}Ready = 1;
                  }
                  `,u>1?p+=`
                    xCOffset -= 2;
                    if (xCOffset >= 0 && xCOffset < inDims[1]) {
                     previous = getX(batch, xR, xCOffset, d1);
                     xC${x+1} = vec4(previous.zw, xTexelC${x+1}.xy);
                    } else {
                     xC${x+1} = vec4(0.0, 0.0, xTexelC${x+1}.xy);
                    }
                    `:p+=`
                    xC${x+1} = vec4(xTexelC${x}.zw, xTexelC${x+1}.xy);
                    `):b===1?p+=`
                    xC${x+1} = xTexelC${x};
                    `:p+=`
                    xCOffset = xC + ${b};

                    if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${x+1}Ready == 0) {
                      xTexelC${x+1} = getX(batch, xR, xCOffset, d1);
                      if (xCOffset + 1 >= inDims[1]) {
                        xTexelC${x+1}.zw = vec2(0.0);
                      }
                      xTexelC${x+1}Ready = 1;
                    }

                    xC${x+1} = xTexelC${x+1};
                    `}}else x<h&&(a%2===1?(p+=`
                xCOffset = xC + 1 - strides[1];
                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${x}Ready == 0) {
                  xTexelC${x} = getX(batch, xR, xCOffset, d1);
                  // Need to manually clear unused channels in case
                  // we're reading from recycled texture.
                  if (xCOffset + 1 >= inDims[1]) {
                    xTexelC${x}.zw = vec2(0.0);
                  }
                  xTexelC${x}Ready = 1;
                }

                if(xC + 1 >= 0 && xC + 1 < inDims[1] && xTexelC${x+1}Ready == 0) {
                  xTexelC${x+1} = getX(batch, xR, xC + 1, d1);
                  // Need to manually clear unused channels in case
                  // we're reading from recycled texture.
                  if (xC + 2 >= inDims[1]) {
                    xTexelC${x+1}.zw = vec2(0.0);
                  }
                  xTexelC${x+1}Ready = 1;
                }

                xC${x} = vec4(xTexelC${x}.zw, xTexelC${x+1}.zw);
              `,x+1<h&&(p+=`
                  final = vec4(0.0);
                  xCOffset = xC + 1 + strides[1];
                  if(xCOffset >= 0 && xCOffset < inDims[1]) {
                    final = getX(batch, xR, xCOffset, d1);
                  }
                  xC${x+1} = vec4(xTexelC${x+1}.xy, final.xy);
                `)):(p+=`
                if(xC >= 0 && xC < inDims[1] && xTexelC${x}Ready == 0) {
                  xTexelC${x} = getX(batch, xR, xC, d1);
                  if (xC + 1 >= inDims[1]) {
                    xTexelC${x}.zw = vec2(0.0);
                  }
                  xTexelC${x}Ready = 1;
                }

                xCOffset = xC + strides[1];
                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${x+1}Ready == 0) {
                  xTexelC${x+1} = getX(batch, xR, xCOffset, d1);
                  if (xCOffset + 1 >= inDims[1]) {
                    xTexelC${x+1}.zw = vec2(0.);
                  }
                  xTexelC${x+1}Ready = 1;
                }

                xC${x} = vec4(
                  xTexelC${x}.xy, xTexelC${x+1}.xy);
              `,x+1<h&&(p+=`
                  xC${x+1} = vec4(xTexelC${x}.zw, xTexelC${x+1}.zw);
                `)));x<h&&(p+=`
            wTexel = getW(r, ${x}, d1, q);
            dotProd += xC${x} * vec4(wTexel.xz, wTexel.xz);
          `,x+1<h&&(p+=`
              wTexel = getW(r, ${x+1}, d1, q);
              dotProd += xC${x+1} * vec4(wTexel.xz, wTexel.xz);
            `))}p+=`
    }
  `,p+=`
      }
    `;let f="",m="";s&&(r?f=`vec4 activation(vec4 a) {
          vec4 b = getPreluActivationWeightsAtOutCoords();
          ${s}
        }`:o?f=`vec4 activation(vec4 a) {
          vec4 b = getLeakyreluAlphaAtOutCoords();
          ${s}
        }`:f=`vec4 activation(vec4 x) {
          ${s}
        }`,m="result = activation(result);");const y=n?"result += getBiasAtOutCoords();":"";n&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),o&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
      ${f}

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords.x;
        ivec2 xRCCorner = coords.yz * strides - pads;
        int d2 = coords.w;
        int d1 = d2 / ${i};
        int q = d2 - d1 * ${i};
        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.
        vec4 dotProd = vec4(0.000000000000001);

        ${p}

        vec4 result = dotProd - vec4(0.000000000000001);
        ${y}
        ${m}
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lZ(t){const{inputs:e,backend:n,attrs:s}=t,{x:r,filter:o}=e,{strides:i,pad:a,dilations:l,dimRoundingMode:u}=s;let c=l;c==null&&(c=[1,1]),C(jt(i,c),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${i} and dilations '${c}'`);const h=Mt(r.shape,o.shape,i,c,a,u,!0);let d;U().getBool("WEBGL_PACK_DEPTHWISECONV")&&h.strideWidth<=2&&h.outChannels/h.inChannels===1?d=new WD(h):d=new VD(h);const p=[[h.padInfo.top,h.padInfo.left],[h.strideHeight,h.strideWidth],[h.dilationHeight,h.dilationWidth],[h.inHeight,h.inWidth]];return n.runWebGLProgram(d,[r,o],"float32",p)}const uZ={kernelName:Cp,backendName:"webgl",kernelFunc:lZ};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class cZ{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const n=e.strideHeight,s=e.strideWidth,r=e.padInfo.top,o=e.padInfo.left,i=e.outChannels/e.inChannels;this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int wR = coords.x;
        int wC = coords.y;
        int d1 = coords.z;
        int dm = coords.w;
        int d2 = d1 * ${i} + dm;

        float dotProd = 0.0;

        // TO DO: Vec4 over the batch size
        for (int b = 0; b < ${e.batchSize}; b++) {
          for (int yR = 0; yR < ${e.outHeight}; yR++) {
            int xR = wR + yR * ${n} - ${r};

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int yC = 0; yC < ${e.outWidth}; yC++) {
              int xC = wC + yC * ${s} - ${o};

              if (xC < 0 || xC >= ${e.inWidth}) {
                continue;
              }

              float dyValue = getDy(b, yR, yC, d2);
              float xValue = getX(b, xR, xC, d1);
              dotProd += (xValue * dyValue);
            }
          }
        }
        setOutput(dotProd);
      }
    `}}class hZ{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const n=e.filterHeight,s=e.filterWidth,r=e.strideHeight,o=e.strideWidth,i=n-1-e.padInfo.top,a=s-1-e.padInfo.left,l=e.outChannels/e.inChannels;this.userCode=`
      const ivec2 pads = ivec2(${i}, ${a});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d1 = coords[3];
        ivec2 dyCorner = coords.yz - pads;
        int dyRCorner = dyCorner.x;
        int dyCCorner = dyCorner.y;

        float dotProd = 0.0;

        for (int wR = 0; wR < ${n}; wR++) {
          float dyR = float(dyRCorner + wR) / ${r}.0;

          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          int wRPerm = ${n} - 1 - wR;

          for (int wC = 0; wC < ${s}; wC++) {
            float dyC = float(dyCCorner + wC) / ${o}.0;

            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            int wCPerm = ${s} - 1 - wC;

            // TO DO: Vec4 over the channelMul
            for (int dm = 0; dm < ${l}; dm++) {
              int d2 = d1 * ${l} + dm;
              float xValue = getDy(batch, idyR, idyC, d2);
              float wValue = getW(wRPerm, wCPerm, d1, dm);
              dotProd += xValue * wValue;
            }
          }
        }
        setOutput(dotProd);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dZ(t){const{inputs:e,backend:n,attrs:s}=t,{x:r,dy:o}=e,{strides:i,dilations:a,pad:l,dimRoundingMode:u,filterShape:c}=s,h=Mt(r.shape,c,i,a,l,u,!0),d=new cZ(h);return n.runWebGLProgram(d,[r,o],"float32")}const pZ={kernelName:tx,backendName:"webgl",kernelFunc:dZ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fZ(t){const{inputs:e,backend:n,attrs:s}=t,{dy:r,filter:o}=e,{strides:i,dilations:a,pad:l,dimRoundingMode:u,inputShape:c}=s,h=Mt(c,o.shape,i,a,l,u,!0),d=new hZ(h);return n.runWebGLProgram(d,[r,o],"float32")}const mZ={kernelName:nx,backendName:"webgl",kernelFunc:fZ};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class gZ{constructor(e){this.variableNames=["X"],this.outputShape=[e,e],this.userCode=`
      void main() {
          ivec2 coords = getOutputCoords();
          float val = coords[0] == coords[1] ? getX(coords[0]) : 0.0;
          setOutput(val);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yZ(t){const{inputs:e,backend:n}=t,{x:s}=e,r=[...s.shape,...s.shape],o=H(s.shape),i=oe({inputs:{x:s},backend:n,attrs:{shape:[o]}}),a=new gZ(o),l=n.runWebGLProgram(a,[i],i.dtype),u=oe({inputs:{x:l},backend:n,attrs:{shape:r}});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(l),u}const xZ={kernelName:sx,backendName:"webgl",kernelFunc:yZ};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class bZ{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;const{inHeight:n,inWidth:s,padInfo:r,strideHeight:o,strideWidth:i,filterHeight:a,filterWidth:l,dilationHeight:u,dilationWidth:c}=e,{top:h,left:d}=r;this.userCode=`
      const ivec2 strides = ivec2(${o}, ${i});
      const ivec2 pads = ivec2(${h}, ${d});
      const float neg_infinity = -3.4e38;

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords.x;
        int d1 = coords.w;
        ivec2 outTopLeftCorner =
            coords.yz * strides - pads;
        int hBeg = outTopLeftCorner.x;
        int wBeg = outTopLeftCorner.y;

        float curVal = neg_infinity;
        for (int h = 0; h < ${a}; h++) {
          int hIn = hBeg + h * ${u};

          if (hIn >= 0 && hIn < ${n}) {
            for (int w = 0; w < ${l}; w++) {
              int wIn = wBeg + w * ${c};

              if (wIn >= 0 && wIn < ${s}) {
                float xVal = getX(batch, hIn, wIn, d1);
                float wVal = getW(h, w, d1);

                float val = xVal + wVal;
                if (val > curVal) {
                  curVal = val;
                }
              }
            }
          }
        }

        float result = curVal;
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wZ(t){const{inputs:e,backend:n,attrs:s}=t,{x:r,filter:o}=e,{strides:i,pad:a,dilations:l}=s,u=Nc(r.shape,o.shape,i,a,"NHWC",l);let c;const h=new bZ(u);c=n.runWebGLProgram(h,[r,o],"float32");const d=oe({inputs:{x:c},backend:n,attrs:{shape:u.outShape}});return n.disposeIntermediateTensorInfo(c),d}const vZ={kernelName:Np,backendName:"webgl",kernelFunc:wZ};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function kZ(t){const{inputs:e,backend:n,attrs:s}=t,{equation:r}=s,o=e,{allDims:i,summedDims:a,idDims:l}=Z1(r,o.length);eb(i.length,l,o);const{path:u,steps:c}=tb(a,l),h=c.length;let d=null,p=i.length;const f=[];for(let m=0;m<h;++m){for(const y of c[m]){const{permutationIndices:g,expandDims:x}=J1(p,l[y]);let b;nb(g)?b=o[y]:(b=cn({inputs:{x:o[y]},backend:n,attrs:{perm:g}}),f.push(b));const w=b.shape.slice();for(let k=0;k<x.length;++k)w.splice(x[k],0,1);Ae(b.shape,w)||(b=oe({inputs:{x:b},backend:n,attrs:{shape:w}}),f.push(b)),d===null?d=b:(d=Ub({inputs:{a:b,b:d},backend:n}),f.push(d))}m<h-1&&(u[m]>=0&&(d=em({inputs:{x:d},backend:n,attrs:{axis:u[m]-(i.length-p),keepDims:!1}}),f.push(d)),p--)}for(const m of f)m!==d&&n.disposeIntermediateTensorInfo(m);return d}const SZ={kernelName:rx,backendName:"webgl",kernelFunc:kZ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const CZ="return (x >= 0.0) ? x : (exp(x) - 1.0);",NZ=`
  vec4 result;

  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);
  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);
  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);
  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);

  return result;
`,$Z=Oe({opSnippet:CZ,packedOpSnippet:NZ}),IZ={kernelName:Wu,backendName:"webgl",kernelFunc:$Z};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const TZ="return (b >= 1.0) ? a : a * (b + 1.0);",EZ=`
  vec4 bGTEZero = vec4(greaterThanEqual(b, vec4(0.)));
  return (bGTEZero * a) + ((vec4(1.0) - bGTEZero) * (a * (b + vec4(1.0))));
`,DZ=t=>{const{inputs:e,backend:n}=t,{dy:s,y:r}=e,o=U().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new Qc(EZ,s.shape,r.shape):new Ua(TZ,s.shape,r.shape);return n.runWebGLProgram(o,[s,r],s.dtype)},RZ={kernelName:ox,backendName:"webgl",kernelFunc:DZ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const AZ=`
  return vec4(equal(a, b));
`,_Z="return float(a == b);",OZ=Xt({opSnippet:_Z,packedOpSnippet:AZ,dtype:"bool",cpuKernelImpl:b7}),FZ={kernelName:$p,backendName:"webgl",kernelFunc:OZ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const LZ=`
  // Error function is calculated approximately with elementary function.
  // See "Handbook of Mathematical Functions with Formulas,
  // Graphs, and Mathematical Tables", Abramowitz and Stegun.
  float p = ${H1};
  float a1 = ${j1};
  float a2 = ${K1};
  float a3 = ${q1};
  float a4 = ${X1};
  float a5 = ${Y1};

  float sign = sign(x);
  x = abs(x);
  float t = 1.0 / (1.0 + p * x);
  return sign * (1.0 - (((((a5*t + a4)*t) + a3)*t + a2)*t + a1)*t*exp(-x*x));
`,PZ=Oe({opSnippet:LZ}),zZ={kernelName:Uu,backendName:"webgl",kernelFunc:PZ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const MZ=ll+`
  return exp(x);
`,BZ=`
  vec4 result = exp(x);
  bvec4 isNaN = isnan(x);
  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,UD=Oe({opSnippet:MZ,packedOpSnippet:BZ,cpuKernelImpl:w7,dtype:"float32"}),VZ={kernelName:Gu,backendName:"webgl",kernelFunc:UD};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Wy(t){const{inputs:e,attrs:n,backend:s}=t,{dim:r}=n,{input:o}=e,i=o.shape.length,a=o.shape.slice();let l=r;return r<0&&(C(-(i+1)<=r,()=>`Axis must be in the interval [${-(i+1)}, ${i}]`),l=i+r+1),a.splice(l,0,1),oe({inputs:{x:o},backend:s,attrs:{shape:a}})}const WZ={kernelName:Ip,backendName:"webgl",kernelFunc:Wy};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const _k="return exp(x) - 1.0;",UZ=Oe({opSnippet:_k,packedOpSnippet:_k,cpuKernelImpl:v7}),GZ={kernelName:Hu,backendName:"webgl",kernelFunc:UZ};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Ok{constructor(e,n,s){this.variableNames=["real","imag"];const r=n[1];this.outputShape=n;const o=s?`2.0 * ${Math.PI}`:`-2.0 * ${Math.PI}`,i=s?`${r}.0`:"1.0";let a;if(e==="real")a="return real * expR - imag * expI;";else if(e==="imag")a="return real * expI + imag * expR;";else throw new Error(`FFT component must be either "real" or "imag", got ${e}.`);this.userCode=`
      const float exponentMultiplier = ${o};

      float unaryOpComplex(float real, float expR, float imag, float expI) {
        ${a}
      }

      float mulMatDFT(int batch, int index) {
        float indexRatio = float(index) / float(${r});
        float exponentMultiplierTimesIndexRatio =
            exponentMultiplier * indexRatio;

        float result = 0.0;

        for (int i = 0; i < ${r}; i++) {
          // x = (-2|2 * PI / N) * index * i;
          float x = exponentMultiplierTimesIndexRatio * float(i);
          float expR = cos(x);
          float expI = sin(x);
          float real = getReal(batch, i);
          float imag = getImag(batch, i);

          result +=
              unaryOpComplex(real, expR, imag, expI) / ${i};
        }

        return result;
      }

      void main() {
        ivec2 coords = getOutputCoords();
        setOutput(mulMatDFT(coords[0], coords[1]));
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function GD(t,e,n){const s=n.texData.get(t.dataId),r=H(t.shape),o=t.shape[t.shape.length-1],i=r/o,a=oe({inputs:{x:t},backend:n,attrs:{shape:[i,o]}}),l=a.shape,u=new Ok("real",l,e),c=new Ok("imag",l,e),h=[{dataId:s.complexTensorInfos.real.dataId,dtype:s.complexTensorInfos.real.dtype,shape:l},{dataId:s.complexTensorInfos.imag.dataId,dtype:s.complexTensorInfos.imag.dtype,shape:l}],d=n.runWebGLProgram(u,h,"float32"),p=n.runWebGLProgram(c,h,"float32"),f=jo({inputs:{real:d,imag:p},backend:n});n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(p);const m=oe({inputs:{x:f},backend:n,attrs:{shape:t.shape}});return n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(f),m}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function HZ(t){const{inputs:e,backend:n}=t,{input:s}=e;return GD(s,!1,n)}const jZ={kernelName:ix,backendName:"webgl",kernelFunc:HZ};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class KZ{constructor(e,n){this.outputShape=[],this.customUniforms=[{name:"value",type:"float"}],this.variableNames=["x"],this.outputShape=e,this.userCode=`
      void main() {
        // Input can be obtained from uniform value.
        setOutput(value);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Jc(t){const{backend:e,attrs:n}=t,{shape:s,value:r}=n;let{dtype:o}=n;if(o=o||Tu(r),o==="string"){const i=St(o,H(s));return i.fill(r),e.makeTensorInfo(s,o,i)}else{const i=new KZ(s,r),a=[[r]];return e.runWebGLProgram(i,[],o,a)}}const qZ={kernelName:ax,backendName:"webgl",kernelFunc:Jc};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class XZ{constructor(e){this.variableNames=["Image"],this.outputShape=[];const n=e[2];this.outputShape=e,this.userCode=`
        void main() {
          ivec4 coords = getOutputCoords();
          int x = coords[2];

          int coordX = ${n} - x - 1;
          float outputValue;
          if(coordX >= 0 && coordX < ${n}) {
            outputValue = getImage(coords[0], coords[1], coordX, coords[3]);
          } else {
            outputValue = getImage(coords[0], coords[1], coords[2], coords[3]);
          }
          setOutput(outputValue);
        }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const YZ={kernelName:lx,backendName:"webgl",kernelFunc:({inputs:t,backend:e})=>{const{image:n}=t,s=e,r=new XZ(n.shape);return s.runWebGLProgram(r,[n],n.dtype)}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Fk="return floor(x);",QZ=Oe({opSnippet:Fk,packedOpSnippet:Fk,cpuKernelImpl:k7}),ZZ={kernelName:ju,backendName:"webgl",kernelFunc:QZ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const JZ=`
  float s = sign(a) * sign(b);
  int ia = round(a);
  int ib = round(b);
  if (ib != 0) {
    // Windows (D3D) wants guaranteed non-zero int division at compile-time.
    return float(idiv(ia, ib, s));
  } else {
    return NAN;
  }
`,eJ=`
  ivec4 ia = round(a);
  ivec4 ib = round(b);
  bvec4 cond = notEqual(ib, ivec4(0));
  ivec4 result = ivec4(0);
  vec4 s = sign(a) * sign(b);

  // Windows (D3D) wants guaranteed non-zero int division at compile-time.
  if (cond[0]) {
    result[0] = idiv(ia[0], ib[0], s[0]);
  }
  if (cond[1]) {
    result[1] = idiv(ia[1], ib[1], s[1]);
  }
  if (cond[2]) {
    result[2] = idiv(ia[2], ib[2], s[2]);
  }
  if (cond[3]) {
    result[3] = idiv(ia[3], ib[3], s[3]);
  }
  return vec4(result);
`,tJ=Xt({opSnippet:JZ,packedOpSnippet:eJ,dtype:"int32"}),nJ={kernelName:Ku,backendName:"webgl",kernelFunc:tJ};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class sJ{constructor(e){this.variableNames=["A"];const n=dn(),[s,r]=e;this.outputShape=e,this.userCode=`
      void main() {
        ivec3 coords = getOutputCoords();
        int texR = coords[0];
        int texC = coords[1];
        int depth = coords[2];
        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${r}.0, ${s}.0);

        vec4 values = ${n.texture2D}(A, uv);
        float value;
        if (depth == 0) {
          value = values.r;
        } else if (depth == 1) {
          value = values.g;
        } else if (depth == 2) {
          value = values.b;
        } else if (depth == 3) {
          value = values.a;
        }

        setOutput(floor(value * 255.0 + 0.5));
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class rJ{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0;const n=dn(),[s,r]=e;this.outputShape=e,this.userCode=`
      void main() {
        ivec3 coords = getOutputCoords();
        int texR = coords[0];
        int texC = coords[1];
        int depth = coords[2];

        vec4 result = vec4(0.);

        for(int row=0; row<=1; row++) {
          for(int col=0; col<=1; col++) {
            texC = coords[1] + row;
            depth = coords[2] + col;

            vec2 uv = (vec2(texC, texR) + halfCR) /
                       vec2(${r}.0, ${s}.0);
            vec4 values = ${n.texture2D}(A, uv);
            float value;
            if (depth == 0) {
              value = values.r;
            } else if (depth == 1) {
              value = values.g;
            } else if (depth == 2) {
              value = values.b;
            } else if (depth == 3) {
              value = values.a;
            }

            result[row * 2 + col] = floor(value * 255.0 + 0.5);
          }
        }

        ${n.output} = result;
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const oJ={kernelName:qg,backendName:"webgl",kernelFunc:iJ};let Hi,Xm=U().getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU");function iJ(t){const{inputs:e,backend:n,attrs:s}=t;let{pixels:r}=e;const{numChannels:o}=s,i=typeof HTMLVideoElement<"u"&&r instanceof HTMLVideoElement,a=typeof HTMLImageElement<"u"&&r instanceof HTMLImageElement,[l,u]=i?[r.videoWidth,r.videoHeight]:[r.width,r.height],c=[u,l],h=[u,l,o];if(a||i){const m=U().getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU");(Hi==null||m!==Xm)&&(Xm=m,Hi=document.createElement("canvas").getContext("2d",{willReadFrequently:Xm})),Hi.canvas.width=l,Hi.canvas.height=u,Hi.drawImage(r,0,0,l,u),r=Hi.canvas}const d=n.makeTensorInfo(c,"int32");n.texData.get(d.dataId).usage=qn.PIXELS,n.gpgpu.uploadPixelDataToTexture(n.getTexture(d.dataId),r);const p=U().getBool("WEBGL_PACK")?new rJ(h):new sJ(h),f=n.runWebGLProgram(p,[d],"int32");return n.disposeData(d.dataId),f}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function aJ(t){const{inputs:e,backend:n,attrs:s}=t,{x:r,filter:o,bias:i,preluActivationWeights:a}=e,{strides:l,pad:u,dataFormat:c,dilations:h,dimRoundingMode:d,activation:p,leakyreluAlpha:f}=s,m=Wr(c),y=Mt(r.shape,o.shape,l,h,u,d,!1,m);let g;const x=[],b=i!=null,w=a!=null,k=p==="leakyrelu",S=()=>{const $=[r,o],T=(E,F)=>{if(F==="NCHW"&&E.shape.length===1&&E.shape[0]!==1){const M=oe({inputs:{x:E},backend:n,attrs:{shape:[E.shape[0],1,1]}});return x.push(M),M}return E};if(b&&$.push(T(i,c)),w&&$.push(T(a,c)),k){const E=n.makeTensorInfo([],"float32",Lo(f,"float32"));$.push(E),x.push(E)}return $};if(y.filterHeight===1&&y.filterWidth===1&&y.dilationHeight===1&&y.dilationWidth===1&&y.strideHeight===1&&y.strideWidth===1&&(y.padInfo.type==="SAME"||y.padInfo.type==="VALID"))g=zD({x:r,filter:o,convInfo:y,backend:n,bias:i,activation:p,preluActivationWeights:a,leakyreluAlpha:f});else if(y.strideWidth<=2&&m==="channelsLast"&&U().getBool("WEBGL_EXP_CONV")){const $=p?bu(p,!0):null,T=new PD(y,b,$,w,k),E=[[y.padInfo.top,y.padInfo.left],[y.strideHeight,y.strideWidth],[y.dilationHeight,y.dilationWidth],[y.inHeight,y.inWidth]],F=S();g=n.runWebGLProgram(T,F,"float32",E)}else if(U().getBool("WEBGL_CONV_IM2COL"))g=MD({x:r,filter:o,convInfo:y,backend:n,bias:i,activation:p,preluActivationWeights:a,leakyreluAlpha:f});else{const $=p?bu(p,!1):null,T=new LD(y,b,$,w,k),E=S();g=n.runWebGLProgram(T,E,"float32")}const N=oe({inputs:{x:g},backend:n,attrs:{shape:y.outShape}});return x.push(g),x.forEach($=>n.disposeIntermediateTensorInfo($)),N}const lJ={kernelName:wd,backendName:"webgl",kernelFunc:aJ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function uJ(t){const{inputs:e,backend:n,attrs:s}=t,{x:r,filter:o,bias:i,preluActivationWeights:a}=e,{strides:l,pad:u,dilations:c,dimRoundingMode:h,activation:d,leakyreluAlpha:p}=s,f=[];let m=c;m==null&&(m=[1,1]),C(jt(l,m),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${l} and dilations '${m}'`);const y=Mt(r.shape,o.shape,l,m,u,h,!0),g=U().getBool("WEBGL_PACK_DEPTHWISECONV")&&y.strideWidth<=2&&y.outChannels/y.inChannels===1,x=d?bu(d,g):null,b=[r,o],w=i!=null,k=a!=null,S=d==="leakyrelu";if(w&&b.push(i),k&&b.push(a),S){const E=n.makeTensorInfo([],"float32",Lo(p,"float32"));b.push(E),f.push(E)}let N;g?N=new WD(y,w,x,k,S):N=new VD(y,w,x,k,S);const $=[[y.padInfo.top,y.padInfo.left],[y.strideHeight,y.strideWidth],[y.dilationHeight,y.dilationWidth],[y.inHeight,y.inWidth]],T=n.runWebGLProgram(N,b,"float32",$);return f.forEach(E=>n.disposeIntermediateTensorInfo(E)),T}const cJ={kernelName:vd,backendName:"webgl",kernelFunc:uJ};class hJ{constructor(e,n,s,r){this.sliceDim=e,this.strides=n,this.paramsShape=r,this.variableNames=["x","indices"],this.outputShape=s;const o=Ke(s.length);let i=`
    int index;`;for(let a=0;a<this.sliceDim;a++)i+=`
          index = round(getIndices(coords[0], ${a}));
          out_of_bounds = out_of_bounds || index < 0;
          out_of_bounds = out_of_bounds || index >= ${this.paramsShape[a]};
          flattenIndex += index * ${this.strides[a]};`;this.userCode=`
         void main() {
          ${o} coords = getOutputCoords();
          int flattenIndex = 0;
          bool out_of_bounds = false;

          ${i}

          setOutput(out_of_bounds ? 0.0 : getX(flattenIndex, coords[1]));
        }
      `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dJ(t){const{inputs:e,backend:n}=t,{params:s,indices:r}=e,o=r.shape,i=o[o.length-1],a=H(s.shape),[l,u,c,h]=O1(s,r),d=oe({inputs:{x:r},backend:n,attrs:{shape:[u,i]}}),p=oe({inputs:{x:s},backend:n,attrs:{shape:[H(s.shape)/c,c]}});if(n.shouldExecuteOnCPU([s,r])||s.dtype==="string"){const g=n.readSync(r.dataId),x=n.bufferSync(s),b=S7(g,x,s.dtype,u,i,c,h,s.shape,a);return n.makeTensorInfo(l,s.dtype,b.values)}const f=new hJ(i,h,[u,c],s.shape),m=n.runWebGLProgram(f,[p,d],p.dtype),y=oe({inputs:{x:m},backend:n,attrs:{shape:l}});return n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(m),y}const pJ={kernelName:ux,backendName:"webgl",kernelFunc:dJ};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class fJ{constructor(e,n){this.variableNames=["A","indices"],this.outputShape=n,this.rank=n.length;const s=Ke(this.rank),r=mJ(e);this.userCode=`
      void main() {
        ${s} resRC = getOutputCoords();
        int index = int(getIndices(resRC.x, resRC.z));
        float inBounds = (index >= 0) && (index < ${e[2]}) ? 1.0 : 0.0;
        setOutput(inBounds * getA(${r}));
      }
    `}}function mJ(t,e){const n=["resRC.x","resRC.y","resRC.z","resRC.w"],s=[];for(let r=0;r<t.length;r++)r===2?s.push("index"):s.push(`${n[r]}`);return s.join()}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function HD(t){const{inputs:e,backend:n,attrs:s}=t,{x:r,indices:o}=e,{axis:i,batchDims:a}=s,l=$e(i,r.shape)[0];if(U().get("DEBUG")){const x=n.readSync(o.dataId),b=r.shape[l];for(let w=0;w<x.length;++w){const k=x[w];C(k<=b-1&&k>=0,()=>`GatherV2: the index value ${k} is not in [0, ${b-1}]`)}}const u=rb(r,o,l,a),c=H(o.shape),h=[],d=oe({inputs:{x:r},backend:n,attrs:{shape:[u.batchSize,u.outerSize,u.dimSize,u.sliceSize]}}),p=oe({inputs:{x:o},backend:n,attrs:{shape:[u.batchSize,c/u.batchSize]}});h.push(d),h.push(p);const f=[u.batchSize,u.outerSize,c/u.batchSize,u.sliceSize];if(n.shouldExecuteOnCPU([r,o])||r.dtype==="string"){const x=n.bufferSync(p),b=n.bufferSync(d),w=C7(b,x,f);return h.forEach(k=>n.disposeIntermediateTensorInfo(k)),n.makeTensorInfo(u.outputShape,w.dtype,w.values)}const m=new fJ(d.shape,f),y=n.runWebGLProgram(m,[d,p],d.dtype);h.push(y);const g=oe({inputs:{x:y},backend:n,attrs:{shape:u.outputShape}});return h.forEach(x=>n.disposeIntermediateTensorInfo(x)),g}const gJ={kernelName:Ep,backendName:"webgl",kernelFunc:HD};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const yJ="return float(a > b);",xJ=`
  return vec4(greaterThan(a, b));
`,bJ=Xt({opSnippet:yJ,packedOpSnippet:xJ,cpuKernelImpl:N7,dtype:"bool"}),wJ={kernelName:Dp,backendName:"webgl",kernelFunc:bJ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const vJ="return float(a >= b);",kJ=`
  return vec4(greaterThanEqual(a, b));
`,SJ=Xt({opSnippet:vJ,packedOpSnippet:kJ,dtype:"bool",cpuKernelImpl:$7}),CJ={kernelName:qu,backendName:"webgl",kernelFunc:SJ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function NJ(t){const{inputs:e,backend:n}=t,{input:s}=e;return GD(s,!0,n)}const $J={kernelName:cx,backendName:"webgl",kernelFunc:NJ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const IJ="return float(!isnan(x) && !isinf(x));",TJ=Oe({opSnippet:IJ,dtype:"bool"}),EJ={kernelName:Yu,backendName:"webgl",kernelFunc:TJ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const DJ="return float(isinf(x));",RJ=Oe({opSnippet:DJ,dtype:"bool"}),AJ={kernelName:Qu,backendName:"webgl",kernelFunc:RJ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const _J="return float(isnan(x));",OJ=Oe({opSnippet:_J,dtype:"bool"}),FJ={kernelName:Zu,backendName:"webgl",kernelFunc:OJ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const LJ="return float(a < b);",PJ=`
  return vec4(lessThan(a, b));
`,zJ=Xt({opSnippet:LJ,packedOpSnippet:PJ,cpuKernelImpl:I7,dtype:"bool"}),MJ={kernelName:Ap,backendName:"webgl",kernelFunc:zJ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const BJ="return float(a <= b);",VJ=`
  return vec4(lessThanEqual(a, b));
`,WJ=Xt({opSnippet:BJ,packedOpSnippet:VJ,cpuKernelImpl:T7,dtype:"bool"}),UJ={kernelName:_p,backendName:"webgl",kernelFunc:WJ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function GJ(t){const{backend:e,attrs:n}=t,{start:s,stop:r,num:o}=n,i=E7(s,r,o);return e.makeTensorInfo([i.length],"float32",i)}const HJ={kernelName:dx,backendName:"webgl",kernelFunc:GJ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const jJ=ll+`
  return x < 0.0 ? 0./0. : log(x);
`,KJ=`
  vec4 result = log(x);
  bvec4 isNaN = isnan(x);
  result.r = isNaN.r ? x.r : (x.r < 0.0 ? 0./0. : result.r);
  result.g = isNaN.g ? x.g : (x.g < 0.0 ? 0./0. : result.g);
  result.b = isNaN.b ? x.b : (x.b < 0.0 ? 0./0. : result.b);
  result.a = isNaN.a ? x.a : (x.a < 0.0 ? 0./0. : result.a);
  return result;
`,qJ=Oe({opSnippet:jJ,packedOpSnippet:KJ,cpuKernelImpl:D7}),XJ={kernelName:Ju,backendName:"webgl",kernelFunc:qJ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const YJ=ll+`
  return log(1.0 + x);
`,QJ=Oe({opSnippet:YJ}),ZJ={kernelName:ec,backendName:"webgl",kernelFunc:QJ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const JJ="return float(a >= 1.0 && b >= 1.0);",eee=`
  return vec4(
    vec4(greaterThanEqual(a, vec4(1.0))) *
    vec4(greaterThanEqual(b, vec4(1.0))));
`,tee=Xt({opSnippet:JJ,packedOpSnippet:eee,dtype:"bool"}),nee={kernelName:Op,backendName:"webgl",kernelFunc:tee};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const see="return float(!(x >= 1.0));",ree=Oe({opSnippet:see}),oee={kernelName:Fp,backendName:"webgl",kernelFunc:ree};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const iee="return float(a >= 1.0 || b >= 1.0);",aee=`
  return min(
    vec4(greaterThanEqual(a, vec4(1.0))) +
    vec4(greaterThanEqual(b, vec4(1.0))),
    vec4(1.0));
`,lee=Xt({opSnippet:iee,packedOpSnippet:aee,dtype:"bool"}),uee={kernelName:Lp,backendName:"webgl",kernelFunc:lee};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class cee{constructor(e,n,s,r,o){this.variableNames=["x"],this.outputShape=[];const i=n,a=e[3]-1;this.outputShape=e;let l;const u=`float(${s}) + float(${r}) * sum`;o===.5?l=`inversesqrt(${u})`:o===1?l=`1.0/(${u})`:l=`exp(log(${u}) * float(-${o}));`,this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int r = coords[1];
        int c = coords[2];
        int d = coords[3];
        float x = getX(b, r, c, d);
        float sum = 0.0;
        for (int j = -${i}; j <= ${i}; j++) {
          int idx = d + j;
          if (idx >= 0 && idx <=  ${a}) {
            float z = getX(b, r, c, idx);
            sum += z * z;
          }
        }
        float val = x * ${l};
        setOutput(val);
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class hee{constructor(e,n,s,r,o){this.variableNames=["x"],this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0;const i=n,a=e[3]-1;this.outputShape=e;let l;const u=`float(${s}) + float(${r}) * sum`;o===.5?l=`inversesqrt(${u})`:o===1?l=`1.0/(${u})`:l=`exp(log(${u}) * float(-${o}));`,this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords.x;
        int r = coords.y;
        int c = coords.z;
        int d = coords.w;

        bool hasNextCol = d < ${this.outputShape[3]};
        bool hasNextRow = c < ${this.outputShape[2]};

        vec4 sum = vec4(0.);
        vec4 xFragAtOutputCoords = getX(b, r, c, d);

        vec4 xAtOutputCoords = vec4(
          getChannel(xFragAtOutputCoords, vec2(c, d)),
          hasNextCol ?
            getChannel(xFragAtOutputCoords, vec2(c, d + 1)) : 0.0,
          hasNextRow ?
            getChannel(xFragAtOutputCoords , vec2(c + 1, d)) : 0.0,
          (hasNextRow && hasNextCol) ?
            getChannel(xFragAtOutputCoords, vec2(c + 1, d + 1)) : 0.0
        );

        int firstChannel = d - ${i};
        vec2 cache = vec2(0.);
        if(firstChannel >= 0){
          vec4 firstChannelFrag = getX(b, r, c, firstChannel);
          cache.x = getChannel(firstChannelFrag, vec2(c, firstChannel));
            if(hasNextRow){
              cache.y = getChannel(firstChannelFrag, vec2(c + 1, firstChannel));
            }
        }

        ivec2 depth = ivec2(d, d + 1);
        for (int j = - ${i}; j <= ${i}; j++) {
          ivec2 idx = depth + j;
          bvec2 aboveLowerBound = greaterThanEqual(idx, ivec2(0));
          bvec2 belowUpperBound = lessThanEqual(idx, ivec2(${a}));

          bool depthInRange = aboveLowerBound.x && belowUpperBound.x;
          bool depthPlusOneInRange = aboveLowerBound.y && belowUpperBound.y;

          if(depthInRange || depthPlusOneInRange){
            vec4 z = vec4(0.);
            vec4 xFragAtCurrentDepth;
            z.xz = cache.xy;
            if(depthPlusOneInRange && hasNextCol){
              xFragAtCurrentDepth = idx.y != d ?
                getX(b, r, c, idx.y) : xFragAtOutputCoords;
              z.y = getChannel(xFragAtCurrentDepth, vec2(c, idx.y));
              if(hasNextRow){
                z.w = getChannel(xFragAtCurrentDepth, vec2(c + 1, idx.y));
              }
            }
            cache.xy = z.yw;
            sum += z * z;
          }
        }
        vec4 result = xAtOutputCoords * ${l};
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const dee=t=>{const{inputs:e,backend:n,attrs:s}=t,{x:r}=e,{depthRadius:o,bias:i,alpha:a,beta:l}=s,u=U().getBool("WEBGL_PACK_NORMALIZATION")?new hee(r.shape,o,i,a,l):new cee(r.shape,o,i,a,l);return n.runWebGLProgram(u,[r],r.dtype)},pee={kernelName:Pp,backendName:"webgl",kernelFunc:dee};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class fee{constructor(e,n,s,r,o){this.variableNames=["inputImage","outputImage","dy"],this.outputShape=[],this.outputShape=e,this.depth=e[3],this.depthRadius=n,this.bias=s,this.alpha=r,this.beta=o,this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int r = coords[1];
        int c = coords[2];

        float result = 0.0;
        for (int d = 0; d < ${this.depth}; ++d) {
          int depthBegin = int(max(0.0, float(d - ${n})));
          int depthEnd = int(min(float(${this.depth}),
              float(d + ${n} + 1)));

          const int MIN_DEPTH_BEGIN = 0;
          const int MAX_DEPTH_END = ${this.depth};

          float norm = 0.0;
          for (int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k) {
            if (k < depthBegin){
              continue;
            }
            else if (k >= depthBegin && k < depthEnd) {
              norm += getInputImage(b, r, c, k) * getInputImage(b, r, c, k);
            }
            else {
              break;
            }
          }

          norm = float(${r}) * norm + float(${s});

          for(int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k){
            if (k < depthBegin){
              continue;
            }
            else if (k >= depthBegin && k < depthEnd){
              float dyi = -2.0 * float(${r})
                * float(${o})
                * getInputImage(b, r, c, k) * getOutputImage(b, r, c, d)
                / norm;
              if (k == d) {
                dyi += pow(norm, -1.0 * ${o});
              }
              if (k == coords[3]) {
                dyi *= getDy(b, r, c, d);
                result += dyi;
              }
            }
            else {
              break;
            }
          }
      }
      setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const mee=t=>{const{inputs:e,backend:n,attrs:s}=t,{x:r,y:o,dy:i}=e,{depthRadius:a,bias:l,alpha:u,beta:c}=s,h=new fee(r.shape,a,l,u,c);return n.runWebGLProgram(h,[r,o,i],r.dtype)},gee={kernelName:px,backendName:"webgl",kernelFunc:mee};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yee(t,e,n,s){const r=H(e),i=H(t.shape)/r,a=oe({inputs:{x:t},attrs:{shape:[i,r]},backend:s}),l=Vi(a,t.dtype,"max",s),u=oe({inputs:{x:l},attrs:{shape:n},backend:s});return s.disposeIntermediateTensorInfo(a),s.disposeIntermediateTensorInfo(l),u}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jD(t){const{inputs:e,backend:n,attrs:s}=t,{x:r}=e,{reductionIndices:o,keepDims:i}=s,a=r.shape.length,l=$e(o,r.shape);let u=l;const c=ut(u,a),h=c!=null,d=n.shouldExecuteOnCPU([r]);let p=r;if(h){if(d){const b=n.texData.get(p.dataId).values,w=new Array(a);for(let N=0;N<w.length;N++)w[N]=r.shape[c[N]];const k=Vb(b,r.shape,r.dtype,c,w);p=n.makeTensorInfo(w,r.dtype);const S=n.texData.get(p.dataId);S.values=k}else p=Jf(r,c,n);u=bt(u.length,a)}Kt("max",u,a);const[f,m]=Bt(p.shape,u);let y=f;i&&(y=xt(f,l));let g;if(d){const b=n.texData.get(p.dataId).values,w=R7(b,H(m),y,r.dtype);g=n.makeTensorInfo(y,r.dtype);const k=n.texData.get(g.dataId);k.values=w}else g=yee(p,m,y,n);return h&&n.disposeIntermediateTensorInfo(p),g}const xee={kernelName:zp,backendName:"webgl",kernelFunc:jD};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const bee=Wb+`
  return max(a, b);
`,wee=`
  vec4 result = vec4(max(a, b));
  bvec4 isNaNA = isnan(a);
  bvec4 isNaNB = isnan(b);
  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);
  `+Yc+`
  return result;
`,vee=Xt({opSnippet:bee,packedOpSnippet:wee,cpuKernelImpl:A7}),kee={kernelName:tc,backendName:"webgl",kernelFunc:vee};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function See(t){const{inputs:e,backend:n,attrs:s}=t,{x:r}=e;qc(r,"maxPool");const{filterSize:o,strides:i,pad:a,dimRoundingMode:l}=s,u=1;C(jt(i,u),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${i} and dilations '${u}'`);const c=Rs(r.shape,o,i,u,a,l);if(c.filterWidth===1&&c.filterHeight===1&&Ae(c.inShape,c.outShape))return Bn({inputs:{x:r},backend:n});const h=new wu(c,"max",!1);return n.runWebGLProgram(h,[r],r.dtype)}const Cee={kernelName:Mp,backendName:"webgl",kernelFunc:See};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Nee(t){const{inputs:e,backend:n,attrs:s}=t,{x:r}=e,{filterSize:o,strides:i,pad:a,dataFormat:l,dimRoundingMode:u}=s,c=[1,1,1],h=Vr(r.shape,o,i,c,a,u,l),d=new Gb(h,"max",!1);return n.runWebGLProgram(d,[r],r.dtype)}const $ee={kernelName:Bp,backendName:"webgl",kernelFunc:Nee};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Iee{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;const n=e.strideHeight,s=e.strideWidth,r=e.dilationHeight,o=e.effectiveFilterHeight,i=e.effectiveFilterWidth,a=o-1-e.padInfo.top,l=i-1-e.padInfo.left,u=o*i-1;this.userCode=`
      const ivec2 pads = ivec2(${a}, ${l});

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];

        ivec2 dyRCCorner = coords.yz - pads;
        int dyRCorner = dyRCCorner.x;
        int dyCCorner = dyRCCorner.y;

        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${o};
          wR += ${r}) {
          float dyR = float(dyRCorner + wR) / ${n}.0;

          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          for (int wC = 0; wC < ${i}; wC++) {
            float dyC = float(dyCCorner + wC) / ${s}.0;

            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            float dyValue = getDy(b, idyR, idyC, d);
            int maxPosValue = ${u} - int(getMaxPos(b, idyR, idyC, d));

            // Get the current value, check it against the value from the
            // position matrix.
            int curPosValue = wR * ${i} + wC;
            float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);

            dotProd += dyValue * mask;
          }
        }
        setOutput(dotProd);
      }
    `}}class Tee{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;const n=e.strideDepth,s=e.strideHeight,r=e.strideWidth,o=e.dilationDepth,i=e.dilationHeight,a=e.dilationWidth,l=e.effectiveFilterDepth,u=e.effectiveFilterHeight,c=e.effectiveFilterWidth,h=l-1-e.padInfo.front,d=u-1-e.padInfo.top,p=c-1-e.padInfo.left,f=l*u*c-1;this.userCode=`
      const ivec3 pads = ivec3(${h}, ${d}, ${p});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int ch = coords.u;

        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;
        int dyDCorner = dyCorner.x;
        int dyRCorner = dyCorner.y;
        int dyCCorner = dyCorner.z;

        // Convolve dy(?, ?, ?, ch) with pos mask(:, :, :, d) to get
        // dx(xD, xR, xC, ch).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;

        for (int wD = 0; wD < ${l};
           wD += ${o}) {
          float dyD = float(dyDCorner + wD) / ${n}.0;

          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {
            continue;
          }
          int idyD = int(dyD);

          for (int wR = 0; wR < ${u};
              wR += ${i}) {
            float dyR = float(dyRCorner + wR) / ${s}.0;

            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||
                fract(dyR) > 0.0) {
              continue;
            }
            int idyR = int(dyR);

            for (int wC = 0; wC < ${c};
                wC += ${a}) {
              float dyC = float(dyCCorner + wC) / ${r}.0;

              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                  fract(dyC) > 0.0) {
                continue;
              }
              int idyC = int(dyC);

              float dyValue = getDy(batch, idyD, idyR, idyC, ch);
              int maxPosValue = ${f} -
                  int(getMaxPos(batch, idyD, idyR, idyC, ch));

              // Get the current value, check it against the value from the
              // position matrix.
              int curPosValue =
                  wD * ${u} * ${c} +
                  wR * ${c} + wC;
              float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);

              dotProd += dyValue * mask;
            }
          }
        }
        setOutput(dotProd);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Eee(t){const{inputs:e,backend:n,attrs:s}=t,{dy:r,input:o}=e,i=o,{filterSize:a,strides:l,pad:u,dimRoundingMode:c}=s,h=[1,1,1],d=Vr(i.shape,a,l,h,u,c),p=new Gb(d,"max",!0),f=n.runWebGLProgram(p,[i],i.dtype),m=new Tee(d),y=n.runWebGLProgram(m,[r,f],i.dtype);return n.disposeIntermediateTensorInfo(f),y}const Dee={kernelName:mx,backendName:"webgl",kernelFunc:Eee};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ree(t){const{inputs:e,backend:n,attrs:s}=t,{dy:r,input:o,output:i}=e,a=o;qc([o,i],"maxPoolGrad");const{filterSize:l,strides:u,pad:c,dimRoundingMode:h}=s,d=Rs(a.shape,l,u,1,c,h),p=!0,f=new wu(d,"max",p),m=n.runWebGLProgram(f,[a],a.dtype),y=new Iee(d),g=n.runWebGLProgram(y,[r,m],a.dtype);return n.disposeIntermediateTensorInfo(m),g}const Aee={kernelName:fx,backendName:"webgl",kernelFunc:Ree};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _ee(t,e,n,s){let r=new wu(n,"max",!1);const o=s.runWebGLProgram(r,[t],"float32");r=new wu(n,"max",!0,!0,e);const i=s.runWebGLProgram(r,[t],"float32");return[o,i]}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Oee={kernelName:gx,backendName:"webgl",kernelFunc:({inputs:t,attrs:e,backend:n})=>{const{x:s}=t,{filterSize:r,strides:o,pad:i,includeBatchInIndex:a}=e,l=n;C(s.shape.length===4,()=>`Error in maxPool: input must be rank 4 but got rank ${s.shape.length}.`);const u=[1,1];C(jt(o,u),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${o} and dilations '${u}'`);const c=Rs(s.shape,r,o,u,i),[h,d]=_ee(s,a,c,l);return[h,d]}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Fee(t,e,n,s){const r=H(e),i=H(t.shape)/r,a=oe({inputs:{x:t},attrs:{shape:[i,r]},backend:s}),l=Vi(a,"float32","mean",s),u=oe({inputs:{x:l},attrs:{shape:n},backend:s});return s.disposeIntermediateTensorInfo(a),s.disposeIntermediateTensorInfo(l),u}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Lee={kernelName:Vp,backendName:"webgl",kernelFunc:({inputs:t,attrs:e,backend:n})=>{const{x:s}=t,{keepDims:r,axis:o}=e,i=n,a=s.shape.length,l=$e(o,s.shape);let u=l;const c=ut(u,a),h=c!=null,d=i.shouldExecuteOnCPU([s]),p=[];let f=s;if(h){if(d){const w=i.texData.get(f.dataId).values,k=new Array(a);for(let $=0;$<k.length;$++)k[$]=s.shape[c[$]];const S=Vb(w,s.shape,s.dtype,c,k);f=i.makeTensorInfo(k,s.dtype);const N=i.texData.get(f.dataId);N.values=S}else f=Jf(s,c,i);p.push(f),u=bt(u.length,a)}Kt("sum",u,a);const[m,y]=Bt(f.shape,u);let g=m;r&&(g=xt(m,l));const x=Fee(f,y,g,i);for(const b of p)i.disposeIntermediateTensorInfo(b);return x}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Pee(t){const{inputs:e,backend:n,attrs:s}=t,{x:r}=e,{axis:o,keepDims:i}=s,a=r.shape.length,l=$e(o,r.shape);let u=l;const c=ut(u,a);let h=r;c!=null&&(h=cn({inputs:{x:r},backend:n,attrs:{perm:c}}),u=bt(u.length,r.shape.length)),Kt("min",u,a);const[d,p]=Bt(h.shape,u),f=H(p),m=oe({inputs:{x:h},backend:n,attrs:{shape:[-1,f]}}),y=Vi(m,m.dtype,"min",n);let g;if(i){const x=xt(d,l);g=oe({inputs:{x:y},backend:n,attrs:{shape:x}})}else g=oe({inputs:{x:y},backend:n,attrs:{shape:d}});return n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(y),c!=null&&n.disposeIntermediateTensorInfo(h),g}const zee={kernelName:Wp,backendName:"webgl",kernelFunc:Pee};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Mee=Wb+`
  return min(a, b);
`,Bee=`
  vec4 result = vec4(min(a, b));
  bvec4 isNaNA = isnan(a);
  bvec4 isNaNB = isnan(b);
  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);
  `+Yc+`
  return result;
`,Vee=Xt({opSnippet:Mee,packedOpSnippet:Bee,cpuKernelImpl:_7}),Wee={kernelName:nc,backendName:"webgl",kernelFunc:Vee};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Uee{constructor(e,n,s){this.variableNames=["x"],this.outputShape=n.map((c,h)=>c[0]+e[h]+c[1]);const r=e.length,o=Ke(r),i=n.map(c=>c[0]).join(","),a=n.map((c,h)=>c[0]+e[h]).join(","),l=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,r),u=s==="reflect"?0:1;if(r===1){this.userCode=`
        int start = ${i};
        int end = ${a};

        void main() {
          int outC = getOutputCoords();
          if (outC < start) {
            outC = start * 2 - outC - ${u};
          } else if(outC >= end) {
            outC = (end - 1) * 2 - outC + ${u};
          }
          setOutput(getX(outC - start));
        }
      `;return}this.userCode=`
      ${o} start = ${o}(${i});
      ${o} end = ${o}(${a});

      void main() {
        ${o} outC = getOutputCoords();
        for (int i = 0; i < ${r}; i++) {
          if (outC[i] < start[i]) {
            outC[i] = start[i] * 2 - outC[i] - ${u};
          } else if(outC[i] >= end[i]) {
            outC[i] = (end[i] - 1) * 2 - outC[i] + ${u};
          }
        }
        ${o} coords = outC - start;
        setOutput(getX(${l}));
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Gee{constructor(e,n,s){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=n.map((f,m)=>f[0]+e[m]+f[1]);const r=e.length,o=Ke(r),i=n.map(f=>f[0]).join(","),a=n.map((f,m)=>f[0]+e[m]).join(","),l=ln("rc",r),u=ln("source",r),c=`${l[r-1]} < ${this.outputShape[r-1]}`,h=r===1?"source":`vec2(${u.slice(-2).join()})`,d=s==="reflect"?0:1;let p="";if(r===1){const f=`
        ${o} source = rc;
        if (source < start) {
          source = start * 2 - source - ${d};
        } else if (source >= end) {
          source = (end - 1) * 2 - source + ${d};
        }
        source -= start;
      `;p=`
        ${o} rc = outputLoc;
        ${f}
        result[0] = getChannel(getX(${u.join()}), ${h});
        ${l[r-1]} += 1;
        if(${c}) {
          ${f}
          result[1] = getChannel(getX(${u.join()}), ${h});
        }
      `}else{const f=`
        ${o} source = rc;
        ${o} lt = ${o}(lessThan(source, start));
        ${o} gte = ${o}(greaterThanEqual(source, end));
        ${o} orig = 1 - (lt + gte);
        source = orig * source +
                lt * (start * 2 - source - ${d}) +
                gte * ((end - 1) * 2 - source + ${d});
        source -= start;
      `;p=`
        ${o} rc = outputLoc;
        ${f}
        result[0] = getChannel(getX(${u.join()}), ${h});
        ${l[r-1]} += 1;
        if(${c}) {
          ${f}
          result[1] = getChannel(getX(${u.join()}), ${h});
        }
        rc = outputLoc;
        ${l[r-2]} += 1;
        if(${l[r-2]} < ${this.outputShape[r-2]}) {
          ${f}
          result[2] = getChannel(getX(${u.join()}), ${h});
          ${l[r-1]} += 1;
          if(${c}) {
            ${f}
            result[3] = getChannel(getX(${u.join()}), ${h});
          }
        }
      `}this.userCode=`
      const ${o} start = ${o}(${i});
      const ${o} end = ${o}(${a});

      void main() {
        ${o} outputLoc = getOutputCoords();
        vec4 result = vec4(0.);
        ${p}
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Hee=({inputs:t,backend:e,attrs:n})=>{const{x:s}=t,{paddings:r,mode:o}=n,i=U().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new Gee(s.shape,r,o):new Uee(s.shape,r,o);return e.runWebGLProgram(i,[s],s.dtype)},jee={kernelName:Up,backendName:"webgl",kernelFunc:Hee};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Kee=`if (b == 0.0) return NAN;
  return mod(a, b);`,qee=`
  vec4 result = mod(a, b);
  bvec4 isNaN = equal(b, vec4(0.0));
  `+Yc+`
  return result;
`,Xee=Xt({opSnippet:Kee,packedOpSnippet:qee}),Yee={kernelName:sc,backendName:"webgl",kernelFunc:Xee};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Qee{constructor(e,n,s){this.variableNames=["probs"],this.customUniforms=[{name:"seed",type:"float"}],this.outputShape=[e,s],this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];

        float r = random(seed);
        float cdf = 0.0;

        for (int i = 0; i < ${n-1}; i++) {
          cdf += getProbs(batch, i);

          if (r < cdf) {
            setOutput(float(i));
            return;
          }
        }

        // If no other event happened, last event happened.
        setOutput(float(${n-1}));
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Zee=`
if (a == b) {
  return 1.0;
};
return a / b;`,Jee=`
  // vec4 one = vec4(equal(a, b));
  // return one + (vec4(1.0) - one) * a / b;
  vec4 result = a / b;
  if(a.x == b.x) {
    result.x = 1.;
  }
  if(a.y == b.y) {
    result.y = 1.;
  }
  if(a.z == b.z) {
    result.z = 1.;
  }
  if(a.w == b.w) {
    result.w = 1.;
  }

  return result;
`,KD=Xt({opSnippet:Zee,packedOpSnippet:Jee,checkOutOfBounds:!0}),ete={kernelName:Vu,backendName:"webgl",kernelFunc:KD};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Lk="return a - b;",qD=Xt({opSnippet:Lk,packedOpSnippet:Lk,supportsComplex:!0,cpuKernelImpl:J7}),tte={kernelName:bc,backendName:"webgl",kernelFunc:qD};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function XD(t){const{inputs:e,backend:n,attrs:s}=t,{logits:r}=e,{dim:o}=s,i=$e([o],r.shape),a=jD({inputs:{x:r},backend:n,attrs:{reductionIndices:i,keepDims:!1}}),l=xt(a.shape,i),u=oe({inputs:{x:a},backend:n,attrs:{shape:l}}),c=qD({inputs:{a:r,b:u},backend:n}),h=UD({inputs:{x:c},backend:n}),d=em({inputs:{x:h},backend:n,attrs:{axis:i,keepDims:!1}}),p=oe({inputs:{x:d},backend:n,attrs:{shape:l}}),f=KD({inputs:{a:h,b:p},backend:n});return n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(p),f}const nte={kernelName:lf,backendName:"webgl",kernelFunc:XD};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ste(t){const{inputs:e,backend:n,attrs:s}=t,{logits:r}=e,{numSamples:o,seed:i,normalized:a}=s,l=a?r:XD({inputs:{logits:r},backend:n,attrs:{dim:r.shape.length-1}}),u=l.shape[0],c=l.shape[1],h=new Qee(u,c,o),d=[[i]],p=n.runWebGLProgram(h,[l],"int32",d);return a||n.disposeIntermediateTensorInfo(l),p}const rte={kernelName:yx,backendName:"webgl",kernelFunc:ste};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ote=_s+`
  return -x;
`,ite=`
  vec4 result = -x;
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`;function ate(t){const{inputs:e,backend:n}=t,{x:s}=e;if(n.shouldExecuteOnCPU([s])){const o=n.texData.get(s.dataId),[i,a]=F7(o.values,s.shape,s.dtype);return n.makeTensorInfo(a,s.dtype,i)}let r;return U().getBool("WEBGL_PACK_UNARY_OPERATIONS")?r=new io(s.shape,ite):r=new cr(s.shape,ote),n.runWebGLProgram(r,[s],s.dtype)}const lte={kernelName:Gp,backendName:"webgl",kernelFunc:ate};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ute=I1;function cte(t){jn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:e,backend:n,attrs:s}=t,{boxes:r,scores:o}=e,{maxOutputSize:i,iouThreshold:a,scoreThreshold:l}=s,u=n.readSync(r.dataId),c=n.readSync(o.dataId),{selectedIndices:h}=ute(u,c,i,a,l);return n.makeTensorInfo([h.length],"int32",new Int32Array(h))}const hte={kernelName:xx,backendName:"webgl",kernelFunc:cte};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const dte=T1;function pte(t){jn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:e,backend:n,attrs:s}=t,{boxes:r,scores:o}=e,{maxOutputSize:i,iouThreshold:a,scoreThreshold:l,padToMaxOutputSize:u}=s,c=n.readSync(r.dataId),h=n.readSync(o.dataId),{selectedIndices:d,validOutputs:p}=dte(c,h,i,a,l,u);return[n.makeTensorInfo([d.length],"int32",new Int32Array(d)),n.makeTensorInfo([],"int32",new Int32Array([p]))]}const fte={kernelName:bx,backendName:"webgl",kernelFunc:pte};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const mte=E1;function gte(t){jn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:e,backend:n,attrs:s}=t,{boxes:r,scores:o}=e,{maxOutputSize:i,iouThreshold:a,scoreThreshold:l,softNmsSigma:u}=s,c=n.readSync(r.dataId),h=n.readSync(o.dataId),d=i,p=a,f=l,m=u,{selectedIndices:y,selectedScores:g}=mte(c,h,d,p,f,m);return[n.makeTensorInfo([y.length],"int32",new Int32Array(y)),n.makeTensorInfo([g.length],"float32",new Float32Array(g))]}const yte={kernelName:wx,backendName:"webgl",kernelFunc:gte};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class xte{constructor(e,n,s,r){this.variableNames=["indices"],this.outputShape=[e,n],this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int index = round(getIndices(coords.x));
        setOutput(mix(float(${r}), float(${s}),
                      float(index == coords.y)));
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const bte=t=>{const{inputs:e,backend:n,attrs:s}=t,{indices:r}=e,{dtype:o,depth:i,onValue:a,offValue:l}=s,u=H(r.shape),c=new xte(u,i,a,l),h=oe({inputs:{x:r},backend:n,attrs:{shape:[u]}}),d=n.runWebGLProgram(c,[h],o);n.disposeIntermediateTensorInfo(h);const p=[...r.shape,i],f=oe({inputs:{x:d},backend:n,attrs:{shape:p}});return n.disposeIntermediateTensorInfo(d),f},wte={kernelName:Kp,backendName:"webgl",kernelFunc:bte};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qd(t){const{inputs:e,backend:n}=t,{x:s}=e;if(s.dtype==="complex64"){const r=Zc({inputs:{input:s},backend:n}),o=qd({inputs:{x:r},backend:n}),i=tm({inputs:{input:s},backend:n}),a=qd({inputs:{x:i},backend:n}),l=jo({inputs:{real:o,imag:a},backend:n});return n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(a),l}else return Jc({attrs:{shape:s.shape,dtype:s.dtype,value:s.dtype==="string"?"":0},backend:n})}const vte={kernelName:hf,backendName:"webgl",kernelFunc:qd};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function YD(t){const{inputs:e,backend:n}=t,{x:s}=e;if(s.dtype==="string")throw new Error("onesLike is not supported under string dtype");if(s.dtype==="complex64"){const r=Zc({inputs:{input:s},backend:n}),o=YD({inputs:{x:r},backend:n}),i=tm({inputs:{input:s},backend:n}),a=qd({inputs:{x:i},backend:n}),l=jo({inputs:{real:o,imag:a},backend:n});return n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(a),l}else return Jc({attrs:{shape:s.shape,dtype:s.dtype,value:1},backend:n})}const kte={kernelName:jp,backendName:"webgl",kernelFunc:YD};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ste(t){const{inputs:e,backend:n,attrs:s}=t,{axis:r}=s;if(e.length===1)return Wy({inputs:{input:e[0]},backend:n,attrs:{dim:r}});const o=e[0].shape,i=e[0].dtype;e.forEach(c=>{Vn(o,c.shape,"All tensors passed to stack must have matching shapes"),C(i===c.dtype,()=>"All tensors passed to stack must have matching dtypes")});const a=[],l=e.map(c=>{const h=Wy({inputs:{input:c},backend:n,attrs:{dim:r}});return a.push(h),h}),u=FD({inputs:l,backend:n,attrs:{axis:r}});return a.forEach(c=>n.disposeIntermediateTensorInfo(c)),u}const Cte={kernelName:qp,backendName:"webgl",kernelFunc:Ste};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Nte{constructor(e,n,s){this.variableNames=["x"],this.customUniforms=[{name:"value",type:"float"}],this.outputShape=n.map((u,c)=>u[0]+e[c]+u[1]);const r=e.length,o=Ke(r),i=n.map(u=>u[0]).join(","),a=n.map((u,c)=>u[0]+e[c]).join(","),l=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,r);if(r===1){this.userCode=`
        int start = ${i};
        int end = ${a};

        void main() {
          int outC = getOutputCoords();
          if (outC < start || outC >= end) {
            setOutput(value);
          } else {
            setOutput(getX(outC - start));
          }
        }
      `;return}this.userCode=`
      ${o} start = ${o}(${i});
      ${o} end = ${o}(${a});

      void main() {
        ${o} outC = getOutputCoords();
        if (any(lessThan(outC, start)) || any(greaterThanEqual(outC, end))) {
          setOutput(value);
        } else {
          ${o} coords = outC - start;
          setOutput(getX(${l}));
        }
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class $te{constructor(e,n,s){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"value",type:"float"}],this.outputShape=n.map((m,y)=>m[0]+e[y]+m[1]);const r=e.length,o=Ke(r),i=n.map(m=>m[0]).join(","),a=n.map((m,y)=>m[0]+e[y]).join(","),l=ln("rc",r),u=ln("source",r),c=`${l[r-1]} < ${this.outputShape[r-1]}`,h=r===1?"source":`vec2(${u.slice(-2).join()})`,d=[`${o} rc = outputLoc;`,`${l[r-1]} += 1;
       if(${c}) {
      `,r===1?"":`}
       rc = outputLoc;
       ${l[r-2]} += 1;
       if(${l[r-2]} < ${this.outputShape[r-2]}) {`,r===1?"":`  ${l[r-1]} += 1;
         if(${c}) {`],p=r===1?"rc < start || rc >= end":"any(lessThan(rc, start)) || any(greaterThanEqual(rc, end))";let f="";for(let m=0,y=r===1?2:4;m<y;m++)f+=`
        ${d[m]}
        if (${p}) {
          result[${m}] = float(value);
        } else {
          ${o} source = rc - start;
          result[${m}] = getChannel(getX(${u.join()}), ${h});
        }
      `;f+=r===1?"} ":"}}",this.userCode=`
      const ${o} start = ${o}(${i});
      const ${o} end = ${o}(${a});

      void main() {
        ${o} outputLoc = getOutputCoords();
        vec4 result = vec4(0.);
        ${f}
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const QD=t=>{const{inputs:e,backend:n,attrs:s}=t,{x:r}=e,{paddings:o,constantValue:i}=s;if(H(r.shape)===0){const u=o.map((c,h)=>c[0]+r.shape[h]+c[1]);return Jc({backend:n,attrs:{shape:u,value:i,dtype:r.dtype}})}const a=U().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new $te(r.shape,o,i):new Nte(r.shape,o,i),l=[[i]];return n.runWebGLProgram(a,[r],r.dtype,l)},Ite={kernelName:Xp,backendName:"webgl",kernelFunc:QD};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Tte=`
  if(a < 0.0 && floor(b) < b){
    return NAN;
  }
  if (b == 0.0) {
    return 1.0;
  }
  return (round(mod(b, 2.0)) != 1) ?
      pow(abs(a), b) : sign(a) * pow(abs(a), b);
`,Ete=`
  // isModRound1 has 1 for components with round(mod(b, 2.0)) == 1, 0 otherwise.
  vec4 isModRound1 = vec4(equal(round(mod(b, 2.0)), ivec4(1)));
  vec4 multiplier = sign(a) * isModRound1 + (vec4(1.0) - isModRound1);
  vec4 result = multiplier * pow(abs(a), b);

  // Ensure that a^0 = 1, including 0^0 = 1 as this correspond to TF and JS
  bvec4 isExpZero = equal(b, vec4(0.0));
  result.r = isExpZero.r ? 1.0 : result.r;
  result.g = isExpZero.g ? 1.0 : result.g;
  result.b = isExpZero.b ? 1.0 : result.b;
  result.a = isExpZero.a ? 1.0 : result.a;

  bvec4 isNaN1 = lessThan(a, vec4(0.0));
  bvec4 isNaN2 = lessThan(floor(b), b);
  bvec4 isNaN = bvec4(isNaN1.x && isNaN2.x, isNaN1.y && isNaN2.y, isNaN1.z && isNaN2.z, isNaN1.w && isNaN2.w);
  `+Yc+`
  return result;
`,Dte=Xt({opSnippet:Tte,packedOpSnippet:Ete}),Rte={kernelName:oc,backendName:"webgl",kernelFunc:Dte};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ate(t){const{inputs:e,backend:n,attrs:s}=t,{x:r}=e,{axis:o,keepDims:i}=s,a=r.shape.length,l=[],u=$e(o,r.shape);let c=u;const h=ut(c,a);let d=r;h!=null&&(d=cn({inputs:{x:r},backend:n,attrs:{perm:h}}),c=bt(c.length,a),l.push(d)),Kt("prod",c,a);let p;if(n.shouldExecuteOnCPU([d])){const f=n.texData.get(d.dataId).values,{outVals:m,outShape:y,outDtype:g}=P7(d.shape,d.dtype,f,c);p=n.makeTensorInfo(y,g,m)}else{const[f,m]=Bt(d.shape,c),y=H(m),g=oe({inputs:{x:d},backend:n,attrs:{shape:[-1,y]}}),x=Hx(r.dtype),b=Vi(g,x,"prod",n);p=oe({inputs:{x:b},backend:n,attrs:{shape:f}}),l.push(g),l.push(b)}if(i){l.push(p);const f=xt(p.shape,u);p=oe({inputs:{x:p},backend:n,attrs:{shape:f}})}return l.forEach(f=>n.disposeIntermediateTensorInfo(f)),p}const _te={kernelName:Qp,backendName:"webgl",kernelFunc:Ate};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ote(t){const{inputs:e,backend:n,attrs:s}=t,{paramsNestedSplits:r,paramsDenseValues:o,indices:i}=e,{outputRaggedRank:a}=s,l=r.map(g=>n.readSync(g.dataId)),u=r.map(g=>g.shape),c=n.readSync(o.dataId),h=n.readSync(i.dataId),[d,p,f]=z7(l,u,c,o.shape,o.dtype,h,i.shape,a),m=d.map(g=>n.makeTensorInfo([g.length],"int32",g)),y=n.makeTensorInfo(f,o.dtype,p);return m.concat([y])}const Fte={kernelName:vx,backendName:"webgl",kernelFunc:Ote};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Lte(t){const{inputs:e,backend:n}=t,{starts:s,limits:r,deltas:o}=e,i=n.readSync(s.dataId),a=n.readSync(r.dataId),l=n.readSync(o.dataId),[u,c]=M7(i,s.shape,s.dtype,a,r.shape,l,o.shape),h=n.makeTensorInfo([u.length],"int32",u),d=n.makeTensorInfo([c.length],s.dtype,c);return[h,d]}const Pte={kernelName:kx,backendName:"webgl",kernelFunc:Lte};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zte(t){const{inputs:e,backend:n,attrs:s}=t,{shape:r,values:o,defaultValue:i,rowPartitionTensors:a}=e,{rowPartitionTypes:l}=s,u=n.readSync(r.dataId),c=n.readSync(o.dataId),h=n.readSync(i.dataId),d=a.map(y=>n.readSync(y.dataId)),p=a.map(y=>y.shape),[f,m]=B7(u,r.shape,c,o.shape,o.dtype,h,i.shape,d,p,l);return n.makeTensorInfo(f,o.dtype,m)}const Mte={kernelName:Sx,backendName:"webgl",kernelFunc:zte};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ZD=t=>{const{backend:e,attrs:n}=t,{start:s,stop:r,step:o,dtype:i}=n,a=V7(s,r,o,i);return e.makeTensorInfo([a.length],i,a)},Bte={kernelName:Cx,backendName:"webgl",kernelFunc:ZD};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Vte="return 1.0 / x;",Wte=Oe({opSnippet:Vte}),Ute={kernelName:ic,backendName:"webgl",kernelFunc:Wte};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Gte=_s+`
  return (x < 0.0) ? 0.0 : x;
`,Hte=`
  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,jte=Oe({opSnippet:Gte,packedOpSnippet:Hte}),Kte={kernelName:ac,backendName:"webgl",kernelFunc:jte};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const qte=_s+`
  return (x < 0.0) ? 0.0 : min(6.0, x);
`,Xte=`
  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,Yte=Oe({opSnippet:qte,packedOpSnippet:Xte}),Qte={kernelName:lc,backendName:"webgl",kernelFunc:Yte};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Zte{constructor(e,n,s,r,o){this.variableNames=["A"],this.outputShape=[];const[i,a,l,u]=e;this.outputShape=[i,n,s,u];const c=[r&&n>1?a-1:a,r&&s>1?l-1:l],h=[r&&n>1?n-1:n,r&&s>1?s-1:s];let d;o?d="(vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC - vec2(0.5)":d="vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec2 effectiveInputOverOutputRatioRC = vec2(
          ${c[0]/h[0]},
          ${c[1]/h[1]});
      const vec2 inputShapeRC = vec2(${a}.0, ${l}.0);

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        ivec2 yRC = coords.yz;

        // Fractional source index.
        vec2 sourceFracIndexRC = ${d};

        // Compute the four integer indices.
        ivec2 sourceFloorRC = ivec2(max(sourceFracIndexRC, vec2(0.0)));
        ivec2 sourceCeilRC = ivec2(
          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));

        float topLeft = getA(b, sourceFloorRC.x, sourceFloorRC.y, d);
        float bottomLeft = getA(b, sourceCeilRC.x, sourceFloorRC.y, d);
        float topRight = getA(b, sourceFloorRC.x, sourceCeilRC.y, d);
        float bottomRight = getA(b, sourceCeilRC.x, sourceCeilRC.y, d);

        vec2 fracRC = sourceFracIndexRC - vec2(sourceFloorRC);

        float top = topLeft + (topRight - topLeft) * fracRC.y;
        float bottom = bottomLeft + (bottomRight - bottomLeft) * fracRC.y;
        float newValue = top + (bottom - top) * fracRC.x;

        setOutput(newValue);
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Jte{constructor(e,n,s,r,o){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];const[i,a,l,u]=e;this.outputShape=[i,n,s,u];const c=[r&&n>1?a-1:a,r&&s>1?l-1:l],h=[r&&n>1?n-1:n,r&&s>1?s-1:s];let d;o?d="(vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC - vec3(0.5)":d="vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec3 effectiveInputOverOutputRatioRC = vec3(
          ${c[0]/h[0]},
          ${c[1]/h[1]},
          ${c[1]/h[1]});
      const vec3 inputShapeRC = vec3(${a}.0, ${l}.0,
                                     ${l}.0);

      float getAValue(int b, int r, int c, int d) {
        return getChannel(getA(b, r, c, d), vec2(c, d));
      }

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        // Calculate values for next column in yRC.z.
        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);

        // Fractional source index.
        vec3 sourceFracIndexRC = ${d};

        // Compute the four integer indices.
        ivec3 sourceFloorRC = ivec3(max(sourceFracIndexRC, vec3(0.0)));
        ivec3 sourceCeilRC = ivec3(
          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));

        // Should we calculate next column and row elements in 2x2 packed cell.
        bool hasNextCol = d < ${u-1};
        bool hasNextRow = coords.z < ${s-1};

        // In parallel, construct four corners for all four components in
        // packed 2x2 cell.
        vec4 topLeft = vec4(
          getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d),
          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d + 1) : 0.0);

        vec4 bottomLeft = vec4(
          getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d),
          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d + 1) : 0.0);

        vec4 topRight = vec4(
          getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d),
          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d + 1) : 0.0);

        vec4 bottomRight = vec4(
          getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d),
          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d + 1) : 0.0);

        vec3 fracRC = sourceFracIndexRC - vec3(sourceFloorRC);

        vec4 top = mix(topLeft, topRight, fracRC.yyzz);
        vec4 bottom = mix(bottomLeft, bottomRight, fracRC.yyzz);
        vec4 newValue = mix(top, bottom, fracRC.x);

        setOutput(newValue);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ene(t){const{inputs:e,backend:n,attrs:s}=t,{images:r}=e,{alignCorners:o,halfPixelCenters:i,size:a}=s,[l,u]=a,c=U().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new Jte(r.shape,l,u,o,i):new Zte(r.shape,l,u,o,i);return n.runWebGLProgram(c,[r],"float32")}const tne={kernelName:ef,backendName:"webgl",kernelFunc:ene};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class nne{constructor(e,n,s){this.variableNames=["dy"],this.outputShape=[],this.outputShape=n;const[,r,o]=n,[,i,a]=e,l=[s&&i>1?r-1:r,s&&a>1?o-1:o],u=[s&&i>1?i-1:i,s&&a>1?a-1:a],c=l[0]/u[0],h=l[1]/u[1],d=1/c,p=1/h,f=Math.ceil(d)*2+2,m=Math.ceil(p)*2+2;this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        int r = coords[1];
        int c = coords[2];

        float accumulator = 0.0;

        const float heightScale = float(${c});
        const float widthScale = float(${h});

        const float invHeightScale = float(${d});
        const float invWidthScale = float(${p});

        const int winHeight = int(${f});
        const int winWidth = int(${m});

        // Compute bounds for where in dy we will look
        float startRLerp = floor(float(r) * invHeightScale);
        int startDyR = int(startRLerp - float(winHeight / 2));

        float startCLerp = floor(float(c) * invWidthScale);
        int startDyC = int(startCLerp - float(winWidth / 2));

        // Loop over dy
        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {
          int dyR = dyROffset + startDyR;

          // Guard against the window exceeding the bounds of dy
          if (dyR < 0 || dyR >= ${i}) {
            continue;
          }

          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {
            int dyC = dyCOffset + startDyC;

            // Guard against the window exceeding the bounds of dy
            if (dyC < 0 || dyC >= ${a}) {
              continue;
            }

            float dxR = float(dyR) * heightScale;
            int topDxRIndex = int(floor(dxR));
            int bottomDxRIndex = int(min(ceil(dxR), ${r-1}.0));
            float dxRLerp = dxR - float(topDxRIndex);
            float inverseDxRLerp = 1.0 - dxRLerp;

            float dxC = float(dyC) * widthScale;
            int leftDxCIndex = int(floor(dxC));
            int rightDxCIndex = int(min(ceil(dxC), ${o-1}.0));
            float dxCLerp = dxC - float(leftDxCIndex);
            float inverseDxCLerp = 1.0 - dxCLerp;

            if (r == topDxRIndex && c == leftDxCIndex) {
              // topLeft
              accumulator +=
                getDy(b, dyR, dyC, d) * inverseDxRLerp * inverseDxCLerp;
            }

            if (r == topDxRIndex && c == rightDxCIndex) {
              // topRight
              accumulator += getDy(b, dyR, dyC, d) * inverseDxRLerp * dxCLerp;
            }

            if (r == bottomDxRIndex && c == leftDxCIndex) {
              // bottomLeft
              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * inverseDxCLerp;
            }

            if (r == bottomDxRIndex && c == rightDxCIndex) {
              // bottomRight
              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * dxCLerp;
            }
          }
        }
        // End loop over dy

        setOutput(accumulator);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sne(t){const{inputs:e,backend:n,attrs:s}=t,{images:r,dy:o}=e,{alignCorners:i}=s,a=new nne(o.shape,r.shape,i);return n.runWebGLProgram(a,[o],o.dtype)}const rne={kernelName:Ix,backendName:"webgl",kernelFunc:sne};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class one{constructor(e,n,s,r,o){this.variableNames=["A"],this.outputShape=[];const[i,a,l,u]=e;this.outputShape=[i,n,s,u];const c=[r&&n>1?a-1:a,r&&s>1?l-1:l],h=[r&&n>1?n-1:n,r&&s>1?s-1:s],d=r?"0.5":"0.0";let p;o?p="max((vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC, vec2(0.0))":p="vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec2 effectiveInputOverOutputRatioRC = vec2(
          ${c[0]/h[0]},
          ${c[1]/h[1]});
      const vec2 inputShapeRC = vec2(${a}.0, ${l}.0);

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        ivec2 yRC = coords.yz;

        // Fractional source index.
        vec2 sourceFracIndexRC = ${p};

        // Compute the coordinators of nearest neighbor point.
        ivec2 sourceNearestRC = ivec2(
          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${d})));
        float newValue = getA(b, sourceNearestRC.x, sourceNearestRC.y, d);

        setOutput(newValue);
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class ine{constructor(e,n,s,r,o){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];const[i,a,l,u]=e;this.outputShape=[i,n,s,u];const c=[r&&n>1?a-1:a,r&&s>1?l-1:l],h=[r&&n>1?n-1:n,r&&s>1?s-1:s],d=r?"0.5":"0.0";let p;o?p="max((vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC, vec3(0.0))":p="vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec3 effectiveInputOverOutputRatioRC = vec3(
          ${c[0]/h[0]},
          ${c[1]/h[1]},
          ${c[1]/h[1]});
      const vec3 inputShapeRC = vec3(${a}.0, ${l}.0,
                                     ${l}.0);

      float getAValue(int b, int r, int c, int d) {
        return getChannel(getA(b, r, c, d), vec2(c, d));
      }

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        // Calculate values for next column in yRC.z.
        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);

        // Fractional source index.
        vec3 sourceFracIndexRC = ${p};

        // Compute the coordinators of nearest neighbor point.
        ivec3 sourceNearestRC = ivec3(
          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${d})));

        // Should we calculate next column and row elements in 2x2 packed cell.
        bool hasNextCol = d < ${u-1};
        bool hasNextRow = coords.z < ${s-1};

        vec4 newValue = vec4(
          getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d),
          hasNextCol ? getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d + 1) : 0.0);

        setOutput(newValue);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ane(t){const{inputs:e,backend:n,attrs:s}=t,{images:r}=e,{alignCorners:o,halfPixelCenters:i,size:a}=s,[l,u]=a,c=U().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new ine(r.shape,l,u,o,i):new one(r.shape,l,u,o,i);return n.runWebGLProgram(c,[r],r.dtype)}const lne={kernelName:Jp,backendName:"webgl",kernelFunc:ane};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class une{constructor(e,n,s){this.variableNames=["dy"],this.outputShape=[],this.outputShape=n;const[,r,o]=n,[,i,a]=e,l=[s&&i>1?r-1:r,s&&a>1?o-1:o],u=[s&&i>1?i-1:i,s&&a>1?a-1:a],c=l[0]/u[0],h=l[1]/u[1],d=1/c,p=1/h,f=Math.ceil(d)*2+2,m=Math.ceil(p)*2+2;this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        int r = coords[1];
        int c = coords[2];

        float accumulator = 0.0;

        const float heightScale = float(${c});
        const float widthScale = float(${h});

        const float invHeightScale = float(${d});
        const float invWidthScale = float(${p});

        const int winHeight = int(${f});
        const int winWidth = int(${m});

        // Compute bounds for where in dy we will look
        float startRLerp = floor(float(r) * invHeightScale);
        int startDyR = int(floor(startRLerp - float(winHeight / 2)));

        float startCLerp = floor(float(c) * invWidthScale);
        int startDyC = int(floor(startCLerp - float(winWidth / 2)));

        // Loop over dy
        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {
          int dyR = dyROffset + startDyR;

          // Guard against the window exceeding the bounds of dy
          if (dyR < 0 || dyR >= ${i}) {
            continue;
          }

          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {
            int dyC = dyCOffset + startDyC;

            // Guard against the window exceeding the bounds of dy
            if (dyC < 0 || dyC >= ${a}) {
              continue;
            }

            float sourceFracRow =
              float(${l[0]}) *
                (float(dyR) / float(${u[0]}));

            float sourceFracCol =
                float(${l[1]}) *
                  (float(dyC) / float(${u[1]}));

            int sourceNearestRow = int(min(
                float(int(${r}) - 1),
                ${s} ? float(round(sourceFracRow)) :
                                  float(floor(sourceFracRow))));

            int sourceNearestCol = int(min(
                float(int(${o}) - 1),
                ${s} ? float(round(sourceFracCol)) :
                                  float(floor(sourceFracCol))));

            if (r == sourceNearestRow && c == sourceNearestCol) {
              accumulator += getDy(b, dyR, dyC, d);
            }
          }
        }
        // End loop over dy

        setOutput(accumulator);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cne(t){const{inputs:e,backend:n,attrs:s}=t,{images:r,dy:o}=e,{alignCorners:i}=s,a=new une(o.shape,r.shape,i);return n.runWebGLProgram(a,[o],o.dtype)}const hne={kernelName:$x,backendName:"webgl",kernelFunc:cne};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class dne{constructor(e,n){this.variableNames=["x"];const s=e.length;if(s>4)throw new Error(`WebGL backend: Reverse of rank-${s} tensor is not yet supported`);if(this.outputShape=e,s===1){this.userCode=`
        void main() {
          int coord = getOutputCoords();
          setOutput(getX(${e[0]} - coord - 1));
        }
      `;return}const r=a=>n.indexOf(a)!==-1&&e[a]!==1?`${e[a]} - coords[${a}] - 1`:`coords[${a}]`,o=e.map((a,l)=>r(l)).join(","),i=Ke(s);this.userCode=`
      void main() {
        ${i} coords = getOutputCoords();
        setOutput(getX(${o}));
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class pne{constructor(e,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0;const s=e.length;if(s>4)throw new Error(`WebGL backend: Reverse of rank-${s} tensor is not yet supported`);this.outputShape=e;const r=ln("rc",s),o=`${r[s-1]} + 1 < ${this.outputShape[s-1]}`,i=`${r[s-2]} + 1 < ${this.outputShape[s-2]}`,a=Ke(s);s===1?this.userCode=`
        void main(){
          int rc = getOutputCoords();
          vec4 result = vec4(0.);
          result.r = getChannel(getX(${e[0]} - rc - 1),
            ${e[0]} - rc - 1);
          if(${o}){
              result.g = getChannel(getX(${e[0]} - (rc  + 1) - 1),
                ${e[0]} - (rc  + 1) - 1);
          }
          setOutput(result);
        }
      `:this.userCode=`
        void main() {
          ${a} rc = getOutputCoords();
          vec4 result = vec4(0.);
          result.r = ${l(r.slice())};
          if(${o}){
            result.g = ${u(r.slice())};
          }
          if(${i}) {
            result.b = ${c(r.slice())};
            if(${o}) {
              result.a = ${h(r.slice())};
            }
          }
          setOutput(result);
        }
    `;function l(f){return d(f)}function u(f){return f[s-1]="("+f[s-1]+" + 1)",d(f)}function c(f){return f[s-2]="("+f[s-2]+" + 1)",d(f)}function h(f){return f[s-1]="("+f[s-1]+" + 1)",f[s-2]="("+f[s-2]+" + 1)",d(f)}function d(f){const m=e.map((x,b)=>p(b,f)),y=m.join(","),g=m.slice(-2).join(",");return`getChannel(getX(${y}), vec2(${g}))`}function p(f,m){return n.indexOf(f)!==-1&&e[f]!==1?`${e[f]} - ${m[f]} - 1`:`${m[f]}`}}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fne(t){const{inputs:e,backend:n,attrs:s}=t,{x:r}=e,{dims:o}=s,i=r.shape.length,a=$e(o,r.shape);if(i===0)return Bn({inputs:{x:r},backend:n});const l=U().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new pne(r.shape,a):new dne(r.shape,a);return n.runWebGLProgram(l,[r],r.dtype)}const mne={kernelName:tf,backendName:"webgl",kernelFunc:fne};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class gne{constructor(e,n){this.variableNames=["Image"],this.outputShape=[],this.customUniforms=[{name:"params",type:"vec4"}];const s=e[1],r=e[2];this.outputShape=e;let o="";typeof n=="number"?o=`float outputValue = ${n.toFixed(2)};`:o=`
        vec3 fill = vec3(${n.join(",")});
        float outputValue = fill[coords[3]];`,this.userCode=`
        void main() {
          ivec4 coords = getOutputCoords();
          int x = coords[2];
          int y = coords[1];
          float coordXFloat = (float(x) - params[0]) * params[3] -
            (float(y) - params[1]) * params[2];
          float coordYFloat = (float(x) - params[0]) * params[2] +
            (float(y) - params[1]) * params[3];
          int coordX = int(round(coordXFloat + params[0]));
          int coordY = int(round(coordYFloat + params[1]));
          ${o}
          if(coordX >= 0 && coordX < ${r} && coordY >= 0 && coordY < ${s}) {
            outputValue = getImage(coords[0], coordY, coordX, coords[3]);
          }
          setOutput(outputValue);
        }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const yne={kernelName:Ux,backendName:"webgl",kernelFunc:({inputs:t,attrs:e,backend:n})=>{const{image:s}=t,{radians:r,fillValue:o,center:i}=e,a=n,l=new gne(s.shape,o),[u,c]=W1(i,s.shape[1],s.shape[2]),h=[[u,c,Math.sin(r),Math.cos(r)]];return a.runWebGLProgram(l,[s],s.dtype,h)}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const xne=`
  // OpenGL ES does not support round function.
  // The algorithm is based on banker's rounding.
  float base = floor(x);
  if ((x - base) < 0.5) {
    return floor(x);
  } else if ((x - base) > 0.5) {
    return ceil(x);
  } else {
    if (mod(base, 2.0) == 0.0) {
      return base;
    } else {
      return base + 1.0;
    }
  }
`,bne=Oe({opSnippet:xne}),wne={kernelName:uc,backendName:"webgl",kernelFunc:bne};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const vne="return inversesqrt(x);",kne=Oe({opSnippet:vne,cpuKernelImpl:W7}),Sne={kernelName:cc,backendName:"webgl",kernelFunc:kne};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class JD{constructor(e,n,s,r,o,i,a=!0){this.variableNames=["updates","indices","defaultValue"],this.outputShape=i;const l=Ke(o.length),u=Ke(i.length);let c="";s===1?c="i":s===2&&(c="i, j");const h=`getIndices(${c})`;let d="";r===1?d="i":r===2&&(d="i, coords[1]");const p=`getUpdates(${d})`,f=n>1?"strides[j]":"strides";this.userCode=`
        ${l} strides = ${l}(${o});

        void main() {
          ${u} coords = getOutputCoords();
          float sum = 0.0;
          bool found = false;
          for (int i = 0; i < ${e}; i++) {
            int flattenedIndex = 0;
            for (int j = 0; j < ${n}; j++) {
              int index = round(${h});
              flattenedIndex += index * ${f};
            }
            if (flattenedIndex == coords[0]) {
              sum += ${p};
              found = true;
            }
          }
          setOutput(mix(getDefaultValue(), sum, float(found)));
        }
      `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Cne(t){const{inputs:e,backend:n,attrs:s}=t,{indices:r,updates:o}=e,{shape:i}=s,{sliceRank:a,numUpdates:l,sliceSize:u,strides:c,outputSize:h}=Oc(o,r,i),d=[h/u,u];if(h===0)return n.makeTensorInfo(i,r.dtype);const p=oe({inputs:{x:r},backend:n,attrs:{shape:[l,a]}}),f=oe({inputs:{x:o},backend:n,attrs:{shape:[l,u]}}),m=n.makeTensorInfo([],"float32",new Float32Array([0])),y=new JD(l,a,p.shape.length,f.shape.length,c,d),g=n.runWebGLProgram(y,[f,p,m],f.dtype),x=oe({inputs:{x:g},backend:n,attrs:{shape:i}});return n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(g),n.disposeIntermediateTensorInfo(m),x}const Nne={kernelName:Tx,backendName:"webgl",kernelFunc:Cne};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class $ne{constructor(e,n,s,r){this.variableNames=["sortedSequence","values"],this.customUniforms=[{name:"numInputs",type:"int"}],this.outputShape=[e,s];const o="while (left < right) {",i=`for (int i = 0; i < ${Math.ceil(Math.log2(n+1))}; ++i) { if (left >= right) break;`,a=U().getNumber("WEBGL_VERSION")===2?o:i,l=r==="left"?"<":"<=";this.userCode=`
       int findBound(int batch, float value) {
         int left = 0;
         int right = numInputs;
         int mid;
         ${a}
           mid = (left + right) / 2;
           if (getSortedSequence(batch, mid) ${l} value) {
             left = mid + 1;
           } else {
             right = mid;
           }
         }
         return right;
       }

       void main() {
         ivec2 coords = getOutputCoords();
         int batch = coords[0];
         int valueIndex = coords[1];

         float value = getValues(batch, valueIndex);

         setOutput(float(findBound(batch, value)));
       }
     `}}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ine(t){const{inputs:e,backend:n,attrs:s}=t,{sortedSequence:r,values:o}=e,{side:i}=s,a=new $ne(r.shape[0],r.shape[1],o.shape[1],i),l=[[r.shape[1]]];return n.runWebGLProgram(a,[r,o],"int32",l)}const Tne={kernelName:Ex,backendName:"webgl",kernelFunc:Ine};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Ene{constructor(e,n,s){this.variableNames=["c","a","b"],this.outputShape=n;let r,o;if(s>4)throw Error(`Where for rank ${s} is not yet supported`);if(s===1)o="resRC",r="resRC";else{const a=["resRC.x","resRC.y","resRC.z","resRC.w"],l=[],u=[];for(let c=0;c<n.length;c++)u.push(`${a[c]}`),c<e&&l.push(`${a[c]}`);r=l.join(),o=u.join()}const i=Ke(s);this.userCode=`
      void main() {
        ${i} resRC = getOutputCoords();
        float cVal = getC(${r});
        if (cVal >= 1.0) {
          setOutput(getA(${o}));
        } else {
          setOutput(getB(${o}));
        }
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Dne(t){const{inputs:e,backend:n}=t,{condition:s,t:r,e:o}=e,i=new Ene(s.shape.length,r.shape,r.shape.length);return n.runWebGLProgram(i,[s,r,o],Pn(r.dtype,o.dtype))}const Rne={kernelName:nf,backendName:"webgl",kernelFunc:Dne};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ane=`
  // Stable and Attracting Fixed Point (0, 1) for Normalized Weights.
  // see: https://arxiv.org/abs/1706.02515
  float scaleAlpha = ${Pf};
  float scale = ${zf};
  return (x >= 0.0) ? scale * x : scaleAlpha * (exp(x) - 1.0);
`,_ne=Oe({opSnippet:Ane}),One={kernelName:hc,backendName:"webgl",kernelFunc:_ne};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Fne=ll+`
  return 1.0 / (1.0 + exp(-1.0 * x));
`,Lne=`
  vec4 result = 1.0 / (1.0 + exp(-1.0 * x));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,Pne=Oe({opSnippet:Fne,packedOpSnippet:Lne,cpuKernelImpl:G7}),zne={kernelName:mc,backendName:"webgl",kernelFunc:Pne};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Mne=`
  if (isnan(x)) { return 0.0; }
  return sign(x);
`,Bne=Oe({opSnippet:Mne}),Vne={kernelName:fc,backendName:"webgl",kernelFunc:Bne};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Wne=ll+`
  return sin(x);
`,Une=Oe({opSnippet:Wne}),Gne={kernelName:dc,backendName:"webgl",kernelFunc:Une};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Hne=`
  float e2x = exp(x);
  return (e2x - 1.0 / e2x) / 2.0;
`,jne=Oe({opSnippet:Hne}),Kne={kernelName:pc,backendName:"webgl",kernelFunc:jne};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const qne=`
  float epsilon = 1.1920928955078125e-7;
  float threshold = log(epsilon) + 2.0;

  bool too_large = x > -threshold;
  bool too_small = x < threshold;

  float result;
  float exp_x = exp(x);

  if (too_large){
    result = x;
  }
  else if (too_small){
    result = exp_x;
  }
  else{
    result = log(exp_x + 1.0);
  }
  return result;
`,Xne=Oe({opSnippet:qne}),Yne={kernelName:gc,backendName:"webgl",kernelFunc:Xne};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Qne=t=>{const{inputs:e,backend:n,attrs:s}=t,{x:r}=e,{blockShape:o,paddings:i}=s;C(r.shape.length<=4,()=>"spaceToBatchND for rank > 4 with a WebGL backend not implemented yet");const a=o.reduce((g,x)=>g*x),l=[[0,0]];l.push(...i);for(let g=1+o.length;g<r.shape.length;++g)l.push([0,0]);const u=[],c=QD({inputs:{x:r},backend:n,attrs:{paddings:l,constantValue:0}}),h=Fc(c.shape,o,a,!1),d=Lc(h.length,o.length,!1),p=Pc(c.shape,o,a,!1),f=oe({inputs:{x:c},backend:n,attrs:{shape:h}}),m=cn({inputs:{x:f},backend:n,attrs:{perm:d}}),y=oe({inputs:{x:m},backend:n,attrs:{shape:p}});return u.push(c),u.push(f),u.push(m),u.forEach(g=>n.disposeIntermediateTensorInfo(g)),y},Zne={kernelName:of,backendName:"webgl",kernelFunc:Qne};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Jne(t){const{inputs:e,backend:n}=t,{indices:s,values:r,denseShape:o,defaultValue:i}=e;if(o.shape.length!==1)throw new Error(`Dense shape must be a vector, saw:
         ${o.shape}`);if(s.shape.length!==2)throw new Error(`Indices must be a matrix, saw:
         ${s.shape}`);if(r.shape.length!==1)throw new Error(`Values must be a vector, saw:
         ${r.shape}`);if(i.shape.length!==0)throw new Error(`Default value must be a scalar, saw:
        ${i.shape}`);const a=n.readSync(s.dataId),l=n.readSync(r.dataId),u=n.readSync(o.dataId),c=n.readSync(i.dataId)[0],[h,d,p,f,m]=j7(a,s.shape,s.dtype,l,r.dtype,u,c);return[n.makeTensorInfo(d,s.dtype,h),n.makeTensorInfo([d[0]],r.dtype,p),n.makeTensorInfo([f.length],"bool",new Uint8Array(f.map(y=>Number(y)))),n.makeTensorInfo([m.length],s.dtype,new Int32Array(m))]}const ese={kernelName:Dx,backendName:"webgl",kernelFunc:Jne};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tse(t){const{inputs:e,backend:n}=t,{inputIndices:s,inputShape:r,newShape:o}=e;if(s.shape.length!==2)throw new Error(`Input indices should be a matrix but received shape ${s.shape}`);if(r.shape.length!==1)throw new Error(`Input shape should be a vector but received shape ${r.shape}`);if(o.shape.length!==1)throw new Error(`Target shape should be a vector but received shape ${o.shape}`);const i=Array.from(n.readSync(r.dataId)),a=n.readSync(s.dataId),l=Array.from(n.readSync(o.dataId)),[u,c,h]=K7(a,s.shape,s.dtype,i,l);return[n.makeTensorInfo(c,s.dtype,u),n.makeTensorInfo([h.length],o.dtype,new Int32Array(h))]}const nse={kernelName:Rx,backendName:"webgl",kernelFunc:tse};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sse(t){const{inputs:e,backend:n}=t,{data:s,indices:r,segmentIds:o}=e;if(s.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(r.shape.length!==1)throw new Error(`Indices should be a vector but received shape
              ${r.shape}`);if(o.shape.length!==1)throw new Error(`Segment ids should be a vector but received shape
              ${o.shape}`);const i=n.readSync(s.dataId),a=n.readSync(r.dataId),l=n.readSync(o.dataId),[u,c]=kD(i,s.shape,s.dtype,a,l,!0);return n.makeTensorInfo(c,s.dtype,u)}const rse={kernelName:Ax,backendName:"webgl",kernelFunc:sse};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ose(t){const{inputs:e,backend:n}=t,{data:s,indices:r,segmentIds:o}=e;if(s.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(r.shape.length!==1)throw new Error(`Indices should be a vector but received shape
             ${r.shape}`);if(o.shape.length!==1)throw new Error(`Segment ids should be a vector but received shape
             ${o.shape}`);const i=n.readSync(s.dataId),a=n.readSync(r.dataId),l=n.readSync(o.dataId),[u,c]=kD(i,s.shape,s.dtype,a,l);return n.makeTensorInfo(c,s.dtype,u)}const ise={kernelName:_x,backendName:"webgl",kernelFunc:ose};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ase(t){const{inputs:e,backend:n,attrs:s}=t,{sparseIndices:r,sparseValues:o,defaultValue:i}=e,{outputShape:a}=s,{sliceRank:l,numUpdates:u,sliceSize:c,strides:h,outputSize:d}=Oc(o,r,a),p=!1;if(o.dtype==="string"){const g=n.bufferSync(r),x=n.bufferSync(o),b=ko(n.readSync(i.dataId)[0]),w=U7(g,x,a,d,c,u,l,h,b,p);return n.makeTensorInfo(a,w.dtype,w.values)}const f=new JD(u,l,r.shape.length,o.shape.length,h,[d,1],p),m=n.runWebGLProgram(f,[o,r,i],o.dtype),y=oe({inputs:{x:m},backend:n,attrs:{shape:a}});return n.disposeIntermediateTensorInfo(m),y}const lse={kernelName:Ox,backendName:"webgl",kernelFunc:ase};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function use(t){const{inputs:e,backend:n,attrs:s}=t,{x:r}=e,{numOrSizeSplits:o,axis:i}=s,a=$e(i,r.shape)[0],l=sb(r,o,a),u=r.shape.length,c=new Array(u).fill(0),h=r.shape.slice();return l.map(d=>{const p=[...h];p[a]=d;const f=ul({inputs:{x:r},backend:n,attrs:{begin:c,size:p}});return c[a]+=d,f})}const cse={kernelName:af,backendName:"webgl",kernelFunc:use};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Pk="return sqrt(x);",hse=Oe({opSnippet:Pk,packedOpSnippet:Pk,cpuKernelImpl:q7}),dse={kernelName:yc,backendName:"webgl",kernelFunc:hse};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const pse="return x * x;",fse=Oe({opSnippet:pse}),mse={kernelName:Fx,backendName:"webgl",kernelFunc:fse};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const zk="return (a - b) * (a - b);",gse=Xt({opSnippet:zk,packedOpSnippet:zk}),yse={kernelName:xc,backendName:"webgl",kernelFunc:gse};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xse({inputs:t,attrs:e,backend:n}){const{x:s}=t,r=_s+`
    return x > 0.0 ? 1.0 : float(${e.alpha});
  `,o=new cr(s.shape,r);return n.runWebGLProgram(o,[s],s.dtype)}const bse={kernelName:Sc,backendName:"webgl",kernelFunc:xse};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class wse{constructor(e,n,s){this.variableNames=["x"],this.outputShape=s;const r=s.length,o=Ke(s.length),i=Ke(s.length);let a="";if(r===1)a="coords * strides + begin";else{let l=0;a=s.map((u,c)=>(l++,s.length===1?`coords * strides[${c}] + begin[${c}]`:`coords[${l-1}] * strides[${c}] + begin[${c}]`)).join(",")}this.userCode=`
      ${o} begin = ${o}(${e});
      ${o} strides = ${o}(${n});

      void main() {
        ${i} coords = getOutputCoords();
        setOutput(getX(${a}));
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vse(t){const{inputs:e,backend:n,attrs:s}=t,{x:r}=e,{begin:o,end:i,strides:a,beginMask:l,endMask:u,ellipsisMask:c,newAxisMask:h,shrinkAxisMask:d}=s,{finalShapeSparse:p,finalShape:f,isIdentity:m,sliceDim0:y,isSimpleSlice:g,begin:x,end:b,strides:w}=M1(r.shape,o,i,a,l,u,c,h,d);let k;if(m)k=oe({inputs:{x:r},backend:n,attrs:{shape:f}});else if(y||g){C(r.shape.length>=1,()=>`Input must have rank at least 1, got: ${r.shape.length}`);const N=L1(x,b,w),$=ul({inputs:{x:r},backend:n,attrs:{begin:x,size:N}});k=oe({inputs:{x:$},backend:n,attrs:{shape:f}}),n.disposeIntermediateTensorInfo($)}else if(n.shouldExecuteOnCPU([r])){const $=n.readSync(r.dataId),T=Ce(r.shape,r.dtype,$),E=X7(p,T,w,x);k=n.makeTensorInfo(f,r.dtype,E.values)}else{const $=new wse(x,w,p);k=n.runWebGLProgram($,[r],r.dtype)}const S=oe({inputs:{x:k},backend:n,attrs:{shape:f}});return n.disposeIntermediateTensorInfo(k),S}const kse={kernelName:Lx,backendName:"webgl",kernelFunc:vse};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Sse(t){const{inputs:e,backend:n,attrs:s}=t,{separator:r,nGramWidths:o,leftPad:i,rightPad:a,padWidth:l,preserveShortSequences:u}=s,{data:c,dataSplits:h}=e,d=n.readSync(c.dataId),p=n.readSync(h.dataId),[f,m]=Y7(d,p,r,o,i,a,l,u);return[n.makeTensorInfo([f.length],"string",f),n.makeTensorInfo(h.shape,"int32",m)]}const Cse={kernelName:Px,backendName:"webgl",kernelFunc:Sse};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Nse(t){const{inputs:e,backend:n,attrs:s}=t,{skipEmpty:r}=s,{input:o,delimiter:i}=e;if(o.dtype!=="string")throw new Error("Input must be of datatype string");if(o.shape.length!==1)throw new Error(`Input must be a vector, got shape: ${o.shape}`);if(i.shape.length!==0)throw new Error(`Delimiter must be a scalar, got shape: ${i.shape}`);const a=n.readSync(o.dataId),l=n.readSync(i.dataId)[0],[u,c,h]=Q7(a,l,r),d=c.length;return[n.makeTensorInfo([d,2],"int32",u),n.makeTensorInfo([d],"string",c),n.makeTensorInfo([2],"int32",new Int32Array(h))]}const $se={kernelName:zx,backendName:"webgl",kernelFunc:Nse};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ise(t){const{inputs:e,backend:n,attrs:s}=t,{numBuckets:r}=s,{input:o}=e;if(o.dtype!=="string")throw new Error("Input must be of datatype string");if(r<=0)throw new Error("Number of buckets must be at least 1");const i=n.readSync(o.dataId),a=Z7(i,r);return n.makeTensorInfo(o.shape,"int32",a)}const Tse={kernelName:Mx,backendName:"webgl",kernelFunc:Ise};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ese="return tan(x);",Dse=Oe({opSnippet:Ese}),Rse={kernelName:wc,backendName:"webgl",kernelFunc:Dse};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ase=`
  float e2x = exp(-2.0 * abs(x));
  return sign(x) * (1.0 - e2x) / (1.0 + e2x);
`,_se=Oe({opSnippet:Ase}),Ose={kernelName:vc,backendName:"webgl",kernelFunc:_se};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Fse{constructor(e,n){this.variableNames=["A"];const s=new Array(e.length);for(let i=0;i<s.length;i++)s[i]=e[i]*n[i];this.outputShape=s,this.rank=s.length;const r=Ke(this.rank),o=Lse(e);this.userCode=`
      void main() {
        ${r} resRC = getOutputCoords();
        setOutput(getA(${o}));
      }
    `}}function Lse(t){const e=t.length;if(e>5)throw Error(`Tile for rank ${e} is not yet supported`);if(e===1)return`imod(resRC, ${t[0]})`;const n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u"],s=[];for(let r=0;r<t.length;r++)s.push(`imod(${n[r]}, ${t[r]})`);return s.join()}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function eR(t){const{inputs:e,backend:n,attrs:s}=t,{x:r}=e,{reps:o}=s;if(r.dtype==="string"||r.shape.length>5){const l=n.readSync(r.dataId),u=r.dtype==="string"?l.map(d=>ko(d)):l,c=Ce(r.shape,r.dtype,u),h=e9(c,o);return n.makeTensorInfo(h.shape,h.dtype,h.values)}const i=new Fse(r.shape,o);return n.runWebGLProgram(i,[r],r.dtype)}const Pse={kernelName:kc,backendName:"webgl",kernelFunc:eR};class zse{constructor(e){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"negativeInf",type:"float"},{name:"dir",type:"int"},{name:"inc",type:"int"}],this.outputShape=e,this.userCode=`
       void main() {
         ivec2 coords = getOutputCoords();
         int batch = coords[0];
         int elemIdx = coords[1];

         // We compare elements pair-wise within a group of size 2 * inc.
         // The comparing rule for each group alternates between ascending
         // and descending. Within each group, we compare each pair at
         // positions i and i+inc. To decide whether an element at position i
         // is x0 or x1, we mod it by 2 * inc, if the result is smaller than
         // inc, it is in the first half of the group, we denote it as x0,
         // otherwise we denote it as x1.
         // For example, as shown in the Bitonic top K paper referenced above,
         // Figure5(a) shows that element[1] is in the
         // second half of the group when group size is 2, but it is in the
         // first half of the group when group size is 4.

         bool isFirstInPair = imod(elemIdx, 2 * inc) < inc;
         int i = isFirstInPair ? elemIdx : elemIdx - inc;

         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));
         int i1 = firstPass == 1 ? i + inc : int(getIndices(batch, i + inc));
         float x0 = i0 < n ? getX(batch, i0) : negativeInf;
         float x1 = i1 < n ? getX(batch, i1) : negativeInf;

         // Denotes which direction indices are in (ascending or descending).
         bool reverse = imod(elemIdx, 2 * dir) >= dir;
         bool isGreater = x0 > x1 || (x0 == x1 && i1 > i0);
         if (reverse == isGreater) { // Elements in opposite order of direction
           int iTemp = i0;
           i0 = i1;
           i1 = iTemp;
         }
         if (isFirstInPair) {
            setOutput(float(i0));
         } else {
            setOutput(float(i1));
         }
       }
     `}}class Mse{constructor(e){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"k",type:"int"}],this.outputShape=e,this.userCode=`
    void main() {
         // Takes max of indices (0, k), (1, k + 1), (2, k + 2) ...
         ivec2 coords = getOutputCoords();
         int batch = coords[0];
         int elemIdx = coords[1];

         // The output size is half of the previous size.
         // If the previous sequence is | | | | _ _ _ _  | | | |  _ _ _ _ (k=4),
         // we only need to output the indices at positions |, the indices at
         // positions _ can be thrown away, see Figure5(b) After Phase 2
         // (Merge phase) in the Bitonic Top K paper referenced above.
         // For example, the paper shows we only need to output the orange bars.
         // The output sequence should look like this | | | | | | | |.
         // Because the sequence is halved, to map the output index back
         // to the previous sequence to find the corresponding value,
         // we need to double the index. When we double the index,
         // we basically interpolate a position, so 2i looks like
         // | _ | _ | _ | _ | _ | _ | _. We move the | to the first k position
         // of each 2k positions by - elemIdx % k. E.g. for output at
         // index 4,5,6,7, we want to get the corresponding element at
         // original index 8,9,10,11, for output at index 8,9,10,11,
         // we want to get the corresponding element at original index
         // 16,17,18,19, so on and so forth.

         int i = elemIdx < k ? elemIdx : (elemIdx * 2 - imod(elemIdx, k));
         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));
         int i1 = firstPass == 1 ? i + k : int(getIndices(batch, i + k));

         float x0 = getX(batch, i0);
         float x1 = i1 < n ? getX(batch, i1) : x0;

         setOutput(x0 >= x1 ? float(i0) : float(i1));
       }
     `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Yo(t,e){e!==null&&t.disposeIntermediateTensorInfo(e)}function Mk(t){let e=1;for(;e<t;)e*=2;return e}function Bse(t){const{inputs:e,backend:n,attrs:s}=t,{x:r}=e,{k:o,sorted:i}=s,a=U().getNumber("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD"),l=U().getNumber("TOPK_K_CPU_HANDOFF_THRESHOLD"),u=r.shape,c=u[u.length-1];if(n.shouldExecuteOnCPU([r])||c<a||o>l){const E=n.readSync(r.dataId),[F,M]=t9(E,u,r.dtype,o,i);return[n.makeTensorInfo(F.shape,F.dtype,F.values),n.makeTensorInfo(M.shape,M.dtype,M.values)]}if(o===0)return u[u.length-1]=0,[n.makeTensorInfo(u,r.dtype,[]),n.makeTensorInfo(u,"int32",[])];if(c===1)return[r,Jc({attrs:{shape:u,dtype:"int32",value:0},backend:n})];const h=n.texData.get(r.dataId),d=h!==null&&h.isPacked,p=d?n.unpackTensor(r):r,m=H(u)/c,y=oe({inputs:{x:p},attrs:{shape:[m,c]},backend:n});d&&Yo(n,p);const g=Mk(o),x=Mk(c);let b=null;const w=()=>b===null?[y,y]:[y,b],k=(E,F,M)=>{const B=w(),V=new zse(M),G=[[c],[b===null?1:0],[Number.NEGATIVE_INFINITY],[E],[F]],q=b;b=n.runWebGLProgram(V,B,"int32",G),Yo(n,q)};for(let E=1;E<g;E*=2){const F=E*2;for(let M=E;M>=1;M/=2)k(F,M,[m,x])}for(let E=x;E>g;E/=2){const F=w(),M=new Mse([m,E/2]),V=[[c],[b===null?1:0],[g]],W=b;b=n.runWebGLProgram(M,F,"int32",V),Yo(n,W);const G=g/2,q=G*2;for(let _=G;_>=1;_/=2)k(q,_,b.shape)}let S=b;b=ul({inputs:{x:b},backend:n,attrs:{begin:0,size:[m,o]}}),Yo(n,S);let N=HD({inputs:{x:y,indices:b},backend:n,attrs:{axis:1,batchDims:1}});Yo(n,y);const $=u.slice(0,-1);$.push(o),S=b,b=oe({inputs:{x:b},attrs:{shape:$},backend:n}),Yo(n,S);const T=N;return N=oe({inputs:{x:N},attrs:{shape:$},backend:n}),Yo(n,T),[N,b]}const Vse={kernelName:Bx,backendName:"webgl",kernelFunc:Bse};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Wse{constructor(e,n,s,r,o,i){this.variableNames=["Image","Transforms"],this.outputShape=i;const a=s==="nearest"?1:2;let l;switch(r){case"constant":l=1;break;case"reflect":l=2;break;case"wrap":l=3;break;case"nearest":l=4;break;default:l=1;break}this.userCode=`
            float mapCoord(float outCoord, float len) {
              float inCoord = outCoord;
              if(${l} == 2) {
                if (inCoord < 0.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz2 = 2.0 * len;
                    if (inCoord < sz2) {
                      inCoord = sz2 * float(int(float(-inCoord / sz2))) +
                      inCoord;
                    }
                    inCoord = inCoord < -len ? inCoord + sz2 : -inCoord - 1.0;
                  }
                } else if (inCoord > len - 1.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz2 = 2.0 * len;
                    inCoord -= sz2 * float(int(float(inCoord / sz2)));
                    if (inCoord >= len) {
                      inCoord = sz2 - inCoord - 1.0;
                    }
                  }
                }
                return clamp(inCoord, 0.0, len - 1.0);
              } else if (${l} == 3) {
                if (inCoord < 0.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz = len - 1.0;
                    inCoord += len * (float(int(float(-inCoord / sz))) + 1.0);
                  }
                } else if (inCoord > len - 1.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz = len - 1.0;
                    inCoord -= len * float(int(float(inCoord / sz)));
                  }
                }
                return clamp(inCoord, 0.0, len - 1.0);
              } else if (${l} == 4) {
                return clamp(outCoord, 0.0, len - 1.0);
              } else {
                return outCoord;
              }
            }

            float readWithFillValue(int batch, int coordY, int coordX,
              int channel) {
              float outputValue;
              if (0 <= coordY && coordY < ${e} && 0 <= coordX && coordX < ${n}) {
                  outputValue = getImage(batch, coordY, coordX, channel);
              } else {
                outputValue = float(${o});
              }
              return outputValue;
            }

            void main() {
              ivec4 coords = getOutputCoords();
              float outputValue;
              int batch = coords[0];
              int x = coords[2];
              int y = coords[1];
              int channel = coords[3];
              float xf = float(x);
              float yf = float(y);
              float a1 = getTransforms(batch, 0);
              float a2 = getTransforms(batch, 1);
              float a3 = getTransforms(batch, 2);
              float b1 = getTransforms(batch, 3);
              float b2 = getTransforms(batch, 4);
              float b3 = getTransforms(batch, 5);
              float c1 = getTransforms(batch, 6);
              float c2 = getTransforms(batch, 7);
              float projection = c1 * xf + c2 * yf + 1.0;
              if (projection == 0.0) {
                outputValue = float(${o});
              } else {
                float inX = (a1 * xf + a2 * yf + a3) / projection;
                float inY = (b1 * xf + b2 * yf + b3) / projection;
                float mapX = mapCoord(inX, float(${n}));
                float mapY = mapCoord(inY, float(${e}));

                if (${a} == 1) {
                  int coordY = int(round(mapY));
                  int coordX = int(round(mapX));
                  outputValue = readWithFillValue(batch, coordY, coordX,
                    channel);
                } else {
                  float yFloor = floor(mapY);
                  float xFloor = floor(mapX);
                  float yCeil = yFloor + 1.0;
                  float xCeil = xFloor + 1.0;
                  float valueYFloor = (xCeil - mapX) *
                  readWithFillValue(batch, int(yFloor), int(xFloor), channel) +
                  (mapX - xFloor) *
                  readWithFillValue(batch, int(yFloor), int(xCeil), channel);
                  float valueYCeil = (xCeil - mapX) *
                  readWithFillValue(batch, int(yCeil), int(xFloor), channel) +
                  (mapX - xFloor) *
                  readWithFillValue(batch, int(yCeil), int(xCeil), channel);
                  outputValue = (yCeil - mapY) * valueYFloor +
                  (mapY - yFloor) * valueYCeil;
                }
              }
              setOutput(outputValue);
            }
        `}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Use(t){const{inputs:e,backend:n,attrs:s}=t,{image:r,transforms:o}=e,{interpolation:i,fillMode:a,fillValue:l,outputShape:u}=s,[c,h,d,p]=r.shape,[f,m]=u!=null?u:[h,d],y=[c,f,m,p],g=new Wse(h,d,i,a,l,y);return n.runWebGLProgram(g,[r,o],"float32")}const Gse={kernelName:Vx,backendName:"webgl",kernelFunc:Use};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Hse(t){const{inputs:e,attrs:n,backend:s}=t,{axis:r}=n,{x:o}=e;qc(o,"unique"),console.warn("WARNING: ","UI might be locked temporarily as data is being downloaded");const i=s.readSync(o.dataId),{outputValues:a,outputShape:l,indices:u}=n9(i,r,o.shape,o.dtype);return[s.makeTensorInfo(l,o.dtype,a),s.makeTensorInfo([u.length],"int32",u)]}const jse={kernelName:Wx,backendName:"webgl",kernelFunc:Hse};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Kse(t){const{inputs:e,backend:n,attrs:s}=t,{value:r}=e;let{axis:o}=s;o<0&&(o+=r.shape.length);const i=r,a=i.shape.length,l=r.shape[o],u=new Array(a-1);let c=0;for(let m=0;m<a;m++)m!==o&&(u[c++]=i.shape[m]);const h=[],d=new Array(a).fill(0),p=i.shape.slice();p[o]=1;const f=new Array(l);for(let m=0;m<f.length;m++){d[o]=m;const y=ul({inputs:{x:i},backend:n,attrs:{begin:d,size:p}}),g=oe({inputs:{x:y},backend:n,attrs:{shape:u}});f[m]=g,h.push(y)}return h.forEach(m=>n.disposeIntermediateTensorInfo(m)),f}const qse={kernelName:uf,backendName:"webgl",kernelFunc:Kse};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Xse{constructor(e,n){this.variableNames=["x","segmentIds"];const s=e.windowSize,r=e.batchSize,o=e.inSize,i=e.numSegments,a=i*Math.ceil(o/s);this.outputShape=[r,a];const l="0.0",u="sumValue",c=Math.floor(s/4)*4,h=s%4,d=`
        sumValue += dot(values, segFilter);
    `;let p="";o%s>0&&(p=`
        if (inIdx < 0 || inIdx >= ${o}) {
          return initializationValue;
        }
      `);let f="";o%s>0&&(f=`
        if (inIdx < 0 || inIdx >= ${o}) {
          return -1.0;
        }
      `),this.userCode=`
      const float initializationValue = ${l};

      float getValue(int batch, int inIdx) {
        ${p}
        return getX(batch, inIdx);
      }

      float getSegmentIdAtIndex(int inIdx) {
        ${f}
        return getSegmentIds(inIdx);
      }

      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = int(floor(float(outIdx) / float(
          ${i})) * float(${s}));
        int currentSeg = int(mod(float(outIdx), float(${i})));

        float sumValue = 0.0;

        for (int i = 0; i < ${c}; i += 4) {
          int inIdx = inOffset + i;
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            getValue(batch, inIdx + 3)
          );

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 3)) == currentSeg ? 1 : 0
          );

          ${d}
        }

        int inIdx = inOffset + ${c};
        if (${h===1}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            initializationValue,
            initializationValue,
            initializationValue
          );

          int inIdxSeg = int(getSegmentIdAtIndex(inIdx));

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            0,
            0,
            0
          );

          ${d}
        } else if (${h===2}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            initializationValue,
            initializationValue
          );

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,
              0,
              0
          );

          ${d}
        } else if (${h===3}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            initializationValue
          );

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,
            0
          );

          ${d}
        }
        setOutput(${u});
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Yse(t){const{inputs:e,backend:n,attrs:s}=t,{x:r,segmentIds:o}=e,{numSegments:i}=s,a=r.shape.length,l=[];let u=0;const c=ut([u],a);let h=r;c!=null&&(h=cn({inputs:{x:r},backend:n,attrs:{perm:c}}),l.push(h),u=bt(1,a)[0]);const d=zI(h.shape,u,i),p=H([h.shape[u]]),f=oe({inputs:{x:h},backend:n,attrs:{shape:[-1,p]}});l.push(f);const m=Hx(r.dtype),y=(w,k,S,N,$)=>{const T=w.shape[0],E=w.shape[1],F=PI(E,$),M={windowSize:F,inSize:E,batchSize:T,numSegments:$},B=new Xse(M,k),V=n.compileAndRun(B,[w,S],N);if(l.push(V),V.shape[1]===$)return V;const W=ZD({backend:n,attrs:{start:0,stop:$,step:1,dtype:"float32"}}),G=eR({inputs:{x:W},backend:n,attrs:{reps:[E/F]}});return l.push(W),l.push(G),y(V,k,G,N,$)},g=y(f,"unsortedSegmentSum",o,m,i),x=oe({inputs:{x:g},backend:n,attrs:{shape:d}});let b=x;if(c!=null){l.push(x);const w=Bo(c);b=cn({inputs:{x:b},backend:n,attrs:{perm:w}})}return l.forEach(w=>n.disposeIntermediateTensorInfo(w)),b}const Qse={kernelName:cf,backendName:"webgl",kernelFunc:Yse};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Zse=[K9,X9,Z9,tY,sY,iY,lY,cY,fY,gY,bY,kY,NY,EY,AY,OY,LY,BY,WY,GY,qY,tQ,sQ,oQ,hQ,pQ,yQ,D9,wQ,NQ,EQ,FQ,PQ,MQ,VQ,UQ,jQ,XQ,ZQ,eZ,nZ,rZ,aZ,uZ,pZ,mZ,xZ,vZ,SZ,IZ,RZ,FZ,zZ,VZ,WZ,GZ,jZ,qZ,YZ,ZZ,nJ,oJ,lJ,cJ,pJ,gJ,wJ,CJ,E9,$J,SQ,EJ,AJ,FJ,A9,MJ,UJ,HJ,XJ,ZJ,nee,oee,uee,pee,gee,xee,kee,Cee,$ee,Dee,Aee,Oee,Lee,zee,Wee,jee,Yee,rte,F9,lte,hte,fte,yte,aQ,wte,kte,Cte,Ite,Rte,O9,_te,Fte,Pte,Mte,Bte,lQ,ete,Ute,Kte,Qte,P9,tne,rne,lne,hne,mne,yne,wne,Sne,Nne,Tne,Rne,One,zne,Vne,Gne,Kne,JY,nte,Yne,Zne,ese,nse,rse,ise,lse,cse,dse,mse,yse,bse,kse,Cse,$se,Tse,tte,G9,Rse,Ose,Pse,Vse,Gse,H9,jse,qse,Qse,vte];for(const t of Zse)rN(t);/** @license See the LICENSE file. *//**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var Hb={exports:{}},nm={};/**
 * @license React
 * react-jsx-runtime.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var Jse=ps.exports,ere=Symbol.for("react.element"),tre=Symbol.for("react.fragment"),nre=Object.prototype.hasOwnProperty,sre=Jse.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,rre={key:!0,ref:!0,__self:!0,__source:!0};function tR(t,e,n){var s,r={},o=null,i=null;n!==void 0&&(o=""+n),e.key!==void 0&&(o=""+e.key),e.ref!==void 0&&(i=e.ref);for(s in e)nre.call(e,s)&&!rre.hasOwnProperty(s)&&(r[s]=e[s]);if(t&&t.defaultProps)for(s in e=t.defaultProps,e)r[s]===void 0&&(r[s]=e[s]);return{$$typeof:ere,type:t,key:o,ref:i,props:r,_owner:sre.current}}nm.Fragment=tre;nm.jsx=tR;nm.jsxs=tR;(function(t){t.exports=nm})(Hb);const ds=Hb.exports.jsx,ar=Hb.exports.jsxs,ore=t=>ar("div",{className:"wrapper",...t,children:[ds("div",{className:"spinner"}),ds("p",{children:t.children})]});class ire{constructor(){hl(this,"open",e=>{navigator.mediaDevices&&navigator.mediaDevices.getUserMedia?navigator.mediaDevices.getUserMedia({audio:!1,video:{facingMode:"environment"}}).then(n=>{e.srcObject=n}):alert("Can't open Webcam!")});hl(this,"close",e=>{e.srcObject?(e.srcObject.getTracks().forEach(n=>{n.stop()}),e.srcObject=null):alert("Please open Webcam first!")})}}const are=({imageRef:t,cameraRef:e})=>{const[n,s]=ps.exports.useState(null),r=ps.exports.useRef(null),o=new ire,i=()=>{const a=t.current.src;t.current.src="#",URL.revokeObjectURL(a),s(null),r.current.value="",t.current.style.display="none"};return ar("div",{className:"btn-container",children:[ds("input",{type:"file",accept:"image/*",style:{display:"none"},onChange:a=>{const l=URL.createObjectURL(a.target.files[0]);t.current.src=l,t.current.style.display="block",s("image")},ref:r}),ar("button",{onClick:()=>{n===null?r.current.click():n==="image"?i():alert(`Can't handle more than 1 stream
Currently streaming : ${n}`)},children:[n==="image"?"Close":"Open"," Image"]}),ar("button",{onClick:()=>{n===null||n==="image"?(n==="image"&&i(),o.open(e.current),e.current.style.display="block",s("camera")):n==="camera"?(o.close(e.current),e.current.style.display="none",s(null)):alert(`Can't handle more than 1 stream
Currently streaming : ${n}`)},children:[n==="camera"?"Close":"Open"," Webcam"]})]})},lre=(t,e)=>{const n=`${Math.max(Math.round(Math.max(t.canvas.width,t.canvas.height)/40),14)}px Arial`;t.font=n,t.textBaseline="top",e.forEach(s=>{const r=(s.score*100).toFixed(1);let[o,i,a,l]=s.box;t.strokeStyle=s.color,t.lineWidth=Math.max(Math.min(t.canvas.width,t.canvas.height)/200,2.5),t.strokeRect(i,o,l,a),t.fillStyle=s.color;const u=t.measureText(s.label+" - "+r+"%").width,c=parseInt(n,10),h=o-(c+t.lineWidth);t.fillRect(i-1,h<0?0:h,u+t.lineWidth,c+t.lineWidth),t.fillStyle="#ffffff",t.fillText(s.label+" - "+r+"%",i-1,h<0?0:h)})};class jb{constructor(){hl(this,"get",e=>this.palette[Math.floor(e)%this.n]);this.palette=["#FF3838","#FF9D97","#FF701F","#FFB21D","#CFD231","#48F90A","#92CC17","#3DDB86","#1A9334","#00D4BB","#2C99A8","#00C2FF","#344593","#6473FF","#0018EC","#8438FF","#520085","#CB38FF","#FF95C8","#FF37C7"],this.n=this.palette.length}}hl(jb,"hexToRgba",(e,n)=>{var s=/^#?([a-f\d]{2})([a-f\d]{2})([a-f\d]{2})$/i.exec(e);return s?[parseInt(s[1],16),parseInt(s[2],16),parseInt(s[3],16)]:null});const nR=["person","bicycle","car","motorcycle","airplane","bus","train","truck","boat","traffic light","fire hydrant","stop sign","parking meter","bench","bird","cat","dog","horse","sheep","cow","elephant","bear","zebra","giraffe","backpack","umbrella","handbag","tie","suitcase","frisbee","skis","snowboard","sports ball","kite","baseball bat","baseball glove","skateboard","surfboard","tennis racket","bottle","wine glass","cup","fork","knife","spoon","bowl","banana","apple","sandwich","orange","broccoli","carrot","hot dog","pizza","donut","cake","chair","couch","potted plant","bed","dining table","toilet","tv","laptop","mouse","remote","keyboard","cell phone","microwave","oven","toaster","sink","refrigerator","book","clock","vase","scissors","teddy bear","hair drier","toothbrush"],Bk=nR.length,ure=new jb,cre=(t,e,n)=>{let s,r;return[P(()=>{const i=SB(t),[a,l]=i.shape.slice(0,2),u=Math.max(l,a),c=i.pad([[0,u-a],[0,u-l],[0,0]]);return s=u/l,r=u/a,Us.resizeBilinear(c,[e,n]).div(255).expandDims(0)}),s,r]},sR=async(t,e,n,s=()=>{})=>{const[r,o]=e.inputShape.slice(1,3),[i,a,l]=e.outputShape[1].slice(1);cs().startScope();const[u,c,h]=cre(t,o,r),d=e.net.execute(u),p=P(()=>d[0].transpose([0,2,1]).squeeze()),f=P(()=>d[1].transpose([0,3,1,2]).squeeze()),m=P(()=>{const T=p.slice([0,2],[-1,1]),E=p.slice([0,3],[-1,1]),F=le(p.slice([0,0],[-1,1]),pe(T,2)),M=le(p.slice([0,1],[-1,1]),pe(E,2));return ft([M,F,Q(M,E),Q(F,T)],1).squeeze()}),[y,g]=P(()=>{const T=p.slice([0,4],[-1,Bk]).squeeze();return[T.max(1),T.argMax(1)]}),x=await Us.nonMaxSuppressionAsync(m,y,500,.45,.2),b=P(()=>ft([m.gather(x,0),y.gather(x,0).expandDims(1),g.gather(x,0).expandDims(1)],1)),w=P(()=>p.slice([0,4+Bk],[-1,l]).squeeze().gather(x,0).matMul(f.reshape([l,-1])).reshape([x.shape[0],i,a])),k=[];let S=kt([r,o,4]);for(let T=0;T<b.shape[0];T++){const E=b.slice([T,0],[1,6]);let[F,M,B,V,W,G]=E.dataSync();const q=ure.get(G),_=[Math.floor(F*h),Math.floor(M*c),Math.round((B-F)*h),Math.round((V-M)*c)],z=[Math.floor(F*i/r),Math.floor(M*a/o),Math.round((B-F)*i/r),Math.round((V-M)*a/o)],j=P(()=>w.slice([T,z[0]>=0?z[0]:0,z[1]>=0?z[1]:0],[1,z[0]+z[2]<=i?z[2]:i-z[0],z[1]+z[3]<=a?z[3]:a-z[1]]).squeeze().expandDims(-1)),X=Us.resizeBilinear(j,[_[2],_[3]]),Y=P(()=>X.pad([[_[0],r-(_[0]+_[2])],[_[1],o-(_[1]+_[3])],[0,0]]).less(.5));S=P(()=>{const J=S.where(Y,[...jb.hexToRgba(q),150]);return S.dispose(),J}),k.push({box:_,score:W,klass:G,label:nR[G],color:q}),Se([E,j,X,Y])}const N=new ImageData(new Uint8ClampedArray(await S.data()),r,o),$=n.getContext("2d");$.clearRect(0,0,$.canvas.width,$.canvas.height),$.putImageData(N,0,0),lre($,k),s(),cs().endScope()},hre=(t,e,n)=>{const s=async()=>{if(t.videoWidth===0&&t.srcObject===null){const r=n.getContext("2d");r.clearRect(0,0,r.canvas.width,r.canvas.height);return}sR(t,e,n,()=>{requestAnimationFrame(s)})};s()};const dre=()=>{const[t,e]=ps.exports.useState({loading:!0,progress:0}),[n,s]=ps.exports.useState({net:null,inputShape:[1,0,0,3]}),r=ps.exports.useRef(null),o=ps.exports.useRef(null),i=ps.exports.useRef(null),a="yolov8n-seg";return ps.exports.useEffect(()=>{YO().then(async()=>{const l=await eH(`${window.location.origin}/${a}_web_model/model.json`,{onProgress:h=>{e({loading:!0,progress:h})}}),u=An(l.inputs[0].shape),c=l.execute(u);e({loading:!1,progress:1}),s({net:l,inputShape:l.inputs[0].shape,outputShape:c.map(h=>h.shape)}),Se([c,u])})},[]),ar("div",{className:"App",children:[t.loading&&ar(ore,{children:["Loading model... ",(t.progress*100).toFixed(2),"%"]}),ar("div",{className:"header",children:[ds("h1",{children:"\u{1F4F7} YOLOv8 Live Segmentation App"}),ar("p",{children:["YOLOv8 live detection application on browser powered by ",ds("code",{children:"tensorflow.js"})]}),ar("p",{children:["Serving : ",ds("code",{className:"code",children:a})]})]}),ar("div",{className:"content",children:[ds("img",{src:"#",ref:r,onLoad:()=>sR(r.current,n,i.current)}),ds("video",{autoPlay:!0,muted:!0,ref:o,onPlay:()=>hre(o.current,n,i.current)}),ds("canvas",{width:n.inputShape[2],height:n.inputShape[1],ref:i})]}),ds(are,{imageRef:r,cameraRef:o})]})};const pre=YC(document.getElementById("root"));pre.render(ds(IR.StrictMode,{children:ds(dre,{})}));
